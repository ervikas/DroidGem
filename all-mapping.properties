#Tue Mar 29 11:18:55 SGT 2022
<android.net.http.RequestQueue\:\ void\ setProxyConfig()>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder\:\ boolean\ setProtocolMode(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.am.BatteryStatsService\:\ void\ noteStopWakelock(int,int,java.lang.String,java.lang.String,int)>=android.permission.UPDATE_DEVICE_STATS
<com.google.common.io.MultiReader\:\ void\ advance()>=android.permission.INTERNET
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ dispatchMediaKeyWithWakeLock(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree\:\ void\ callStarted()>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ boolean\ setRadio(int,boolean)>=android.permission.CHANGE_NETWORK_STATE
<com.android.server.statusbar.StatusBarManagerService\:\ void\ removeIcon(java.lang.String)>=android.permission.STATUS_BAR
<android.net.INetworkStatsService\:\ android.net.NetworkStats\ getDataLayerSnapshotForUid(int)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetooth\:\ boolean\ connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHandsfree\:\ boolean\ terminateScoUsingVirtualVoiceCall()>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.nfc.handover.HandoverManager\:\ void\ doHandoverUri(android.net.Uri[],android.nfc.NdefMessage)>=android.permission.BLUETOOTH
<com.android.browser.Controller\:\ boolean\ shouldOverrideUrlLoading(com.android.browser.Tab,android.webkit.WebView,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.vcard.VCardParserImpl_V40\:\ boolean\ parseItem()>=android.permission.READ_SYNC_SETTINGS
<android.net.IConnectivityManager$Stub$Proxy\:\ void\ setMobileDataEnabled(boolean)>=android.permission.CHANGE_NETWORK_STATE
<android.nfc.tech.MifareUltralight\:\ void\ writePage(int,byte[])>=android.permission.NFC
<android.filterpacks.base.ObjectSource\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.accounts.IAccountManager$Stub$Proxy\:\ void\ updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>=android.permission.MANAGE_ACCOUNTS
<com.android.common.widget.GroupingListAdapter\:\ void\ bindChildView(android.view.View,android.content.Context,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.musicfx.ActivityMusic\:\ void\ onResume()>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.settings.wifi.WifiStatusTest$3\:\ void\ onClick(android.view.View)>=android.permission.ACCESS_WIFI_STATE
<com.android.browser.DataController\:\ com.android.browser.DataController\ getInstance(android.content.Context)>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ sendNotification(int,java.lang.String,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,boolean,[byte)>=android.permission.BLUETOOTH
<com.android.server.net.NetworkPolicyManagerService\:\ void\ performSnooze(android.net.NetworkTemplate,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.widget.PasswordEntryKeyboardView\:\ boolean\ onLongPress(android.inputmethodservice.Keyboard$Key)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.content.IContentService$Stub$Proxy\:\ boolean\ getMasterSyncAutomatically()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.LocationManagerService\:\ boolean\ registerGnssStatusCallback(android.location.IGnssStatusListener,java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.deskclock.AlarmKlaxon\:\ void\ play(com.android.deskclock.Alarm)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ boolean\ updateMessageOnIccEf(int,int,byte[])>=android.permission.WAKE_LOCK
<android.content.ContentService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.telephony.MmsProvider\:\ android.net.Uri\ insert(android.net.Uri,android.content.ContentValues)>=android.permission.WRITE_SMS
<android.bluetooth.IBluetooth$Stub\:\ java.util.List\ getConnectedHealthDevices()>=android.permission.BLUETOOTH
<android.os.IPowerManager$Stub$Proxy\:\ void\ setStayOnSetting(int)>=android.permission.WRITE_SETTINGS
<com.android.bluetooth.pbap.BluetoothPbapVcardManager\:\ int\ composeAndSendCallLogVcards(int,javax.obex.Operation,int,int,boolean)>=android.permission.READ_CALL_LOG
<com.android.nfc.P2pEventListener\:\ void\ onP2pInRange()>=android.permission.VIBRATE
<com.android.gallery3d.ui.SlotView\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<android.filterpacks.base.ObjectSource\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.server.BluetoothService\:\ boolean\ notifyIncomingConnection(java.lang.String,boolean)>=android.permission.BLUETOOTH
<com.android.inputmethod.pinyin.SoftKeyboardView\:\ void\ tryVibrate()>=android.permission.VIBRATE
<android.hardware.location.ActivityRecognitionHardware\:\ boolean\ flush()>=android.permission.LOCATION_HARDWARE
<com.android.settings.bluetooth.BluetoothPairingDialog\:\ void\ createDisplayPasskeyOrPinDialog(com.android.settings.bluetooth.CachedBluetoothDeviceManager)>=android.permission.BLUETOOTH
<com.android.internal.widget.multiwaveview.MultiWaveView\:\ boolean\ onHoverEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.gallery3d.ui.PhotoView\:\ void\ access$1500(com.android.gallery3d.ui.PhotoView)>=android.permission.VIBRATE
<android.telephony.TelephonyManager\:\ java.lang.String\ getSubscriberId()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.audio.AudioService\:\ void\ setMode(int,android.os.IBinder,java.lang.String)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.hardware.location.ActivityRecognitionHardware\:\ boolean\ disableActivityEvent(java.lang.String,int)>=android.permission.LOCATION_HARDWARE
<android.speech.IRecognitionService$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.RECORD_AUDIO
<com.android.mms.transaction.MessagingNotification\:\ int\ getUndeliveredMessageCount(android.content.Context,long[])>=android.permission.READ_SMS
<android.bluetooth.IBluetoothHeadset\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.app.backup.IBackupManager$Stub\:\ java.lang.String\ selectBackupTransport(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler\:\ long\ getWritableEntityId()>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.contacts.LegacyApiSupport\:\ int\ updatePeople(long,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.text.StringLogger\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ notifyServiceStateChanged(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<com.android.internal.util.StateMachine$SmHandler$HaltingState\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.settings.Settings$UserDictionarySettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivity$36\:\ void\ onTextChanged(java.lang.CharSequence,int,int,int)>=android.permission.WRITE_SMS
<android.net.IConnectivityManager\:\ boolean\ isTetheringSupported()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ConversationList$1\:\ void\ onContentChanged(com.android.mms.ui.ConversationListAdapter)>=android.permission.READ_SMS
<com.android.server.am.ActivityManagerService\:\ void\ moveTaskToStack(int,int,boolean)>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.gallery3d.ui.EdgeView\:\ boolean\ onTouch(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.WifiManager\:\ boolean\ setWifiApConfiguration(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<com.android.mms.ui.SlideshowAttachmentView\:\ void\ setVideo(java.lang.String,android.net.Uri)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IPhoneSubInfo\:\ java.lang.String\ getVoiceMailAlphaTag()>=android.permission.READ_PHONE_STATE
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingInvitationState\:\ void\ enter()>=android.permission.GET_TASKS
<com.android.exchange.ExchangeService\:\ void\ sendMessageRequest(com.android.exchange.Request)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setLine1Number(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ onDownEvent(int,int,long,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)>=android.permission.WRITE_CONTACTS
<com.android.deskclock.AlarmPreference$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothPbap$Stub$Proxy\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.settings.Settings$AccountSyncSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ boolean\ isMulticastEnabled()>=android.permission.ACCESS_WIFI_STATE
<com.android.nfc.handover.BluetoothHeadsetHandover\:\ void\ start()>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getGroupIdLevel1ForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.accounts.AccountManagerService\:\ void\ addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,[java.lang.String,boolean,android.os.Bundle,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.exchange.adapter.AttachmentLoader\:\ void\ readChunked(java.io.InputStream,java.io.OutputStream,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.SearchActivity\:\ boolean\ onCreateOptionsMenu(android.view.Menu)>=android.permission.READ_CALENDAR
<com.android.email.activity.MessageViewFragmentBase\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.TelephonyRegistry\:\ void\ notifyCellInfo(java.util.List)>=android.permission.MODIFY_PHONE_STATE
<com.android.settings.SoundSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.settings.bluetooth.LocalBluetoothManager\:\ com.android.settings.bluetooth.LocalBluetoothManager\ getInstance(android.content.Context)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.app.HeavyWeightSwitcherActivity$1\:\ void\ onClick(android.view.View)>=android.permission.REORDER_TASKS
<com.google.common.io.Files\:\ boolean\ equal(java.io.File,java.io.File)>=android.permission.INTERNET
<com.android.browser.NavScreen$TabAdapter$1\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<android.bluetooth.BluetoothHeadset\:\ boolean\ createIncomingConnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.vcard.VCardParser_V30\:\ void\ parseOne(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<android.provider.ContactsContract$ProfileSyncState\:\ void\ set(android.content.ContentProviderClient,android.accounts.Account,byte[])>=android.permission.READ_SYNC_SETTINGS
<android.content.IContentService\:\ java.util.List\ getCurrentSyncs()>=android.permission.READ_SYNC_STATS
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onRoamingOff()>=android.permission.BROADCAST_STICKY
<android.filterpacks.base.InputStreamSource\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub\:\ boolean\ isMulticastEnabled()>=android.permission.ACCESS_WIFI_STATE
<com.android.contacts.vcard.NotificationImportExportListener\:\ void\ onImportProcessed(com.android.contacts.vcard.ImportRequest,int,int)>=android.permission.VIBRATE
<com.android.email.activity.MessageViewFragmentBase$Callback\:\ void\ onMessageNotExists()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.RIL\:\ void\ setTTYMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmDataConnection\:\ void\ onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ setBandMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ boolean\ copyMessageToIccEf(int,byte[],byte[])>=android.permission.WAKE_LOCK
<com.android.server.DeviceStorageMonitorService\:\ void\ checkMemory(boolean)>=android.permission.CLEAR_APP_CACHE
<com.android.camera.ui.EffectSettingPopup\:\ void\ onClick(android.view.View)>=android.permission.RECORD_AUDIO
<android.webkit.HTML5VideoViewProxy\:\ void\ onPrepared(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ updateServiceLocation()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.SimpleImageFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.contacts.list.PhoneFavoriteMergedAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.content.IContentService\:\ boolean\ isSyncActive(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.server.LocationManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.ACCESS_LOCATION_EXTRA_COMMANDS
<android.net.wifi.WifiStateMachine$DriverStartedState\:\ void\ enter()>=android.permission.WRITE_SETTINGS
<android.net.IConnectivityManager$Stub$Proxy\:\ java.lang.String[]\ getTetheredIfaces()>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.app.Gallery\:\ void\ initializeByIntent()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ pollStateDone()>=android.permission.SET_TIME_ZONE
<android.content.ContentService\:\ android.content.SyncManager\ getSyncManager()>=android.permission.WAKE_LOCK
<com.android.contacts.editor.BaseRawContactEditorView\:\ void\ setPhotoBitmap(android.graphics.Bitmap)>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.app.PhotoPage\:\ void\ onPause()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.wm.WindowManagerService\:\ android.view.WindowContentFrameStats\ getWindowContentFrameStats(android.os.IBinder)>=android.permission.FRAME_STATS
<com.android.camera.CameraScreenNail\:\ void\ draw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.email.activity.UIControllerTwoPane\:\ void\ onActivityCreated()>=android.permission.NFC
<android.net.wifi.IWifiManager\:\ boolean\ pingSupplicant()>=android.permission.ACCESS_WIFI_STATE
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.nfc.P2pLinkManager$SendTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.settings.CryptKeeper\:\ void\ setAirplaneModeIfNecessary()>=android.permission.WRITE_SETTINGS
<com.android.browser.TabControl\:\ com.android.browser.Tab\ createNewTab()>=android.permission.GET_ACCOUNTS
<com.android.server.MountService\:\ void\ unlockUserKey(int,int,[byte,[byte)>=android.permission.STORAGE_INTERNAL
<com.android.providers.media.MediaProvider\:\ android.os.ParcelFileDescriptor\ getThumb(com.android.providers.media.MediaProvider$DatabaseHelper,android.database.sqlite.SQLiteDatabase,java.lang.String,long,android.net.Uri)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker\:\ int\ getTriState(android.content.Context)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.DocumentaryFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ internalSwapCalls()>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhone\:\ void\ getPreferredNetworkType(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.TileImageView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.widget.WaveView\:\ void\ setGrabbedState(int)>=android.permission.WAKE_LOCK
<com.android.mms.data.Conversation\:\ void\ blockMarkAsRead(boolean)>=android.permission.WRITE_SMS
<com.android.bluetooth.map.BluetoothMapService$BluetoothMapBinder\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.webkit.WebIconDatabaseClassic\:\ void\ close()>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ proceedAfterWildChar(java.lang.String)>=android.permission.WAKE_LOCK
<android.net.sip.ISipService$Stub$Proxy\:\ void\ close(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumPage\:\ void\ onLongTap(int)>=android.permission.VIBRATE
<com.android.vcard.VCardComposer\:\ boolean\ init()>=android.permission.WRITE_CONTACTS
<android.net.wifi.WifiManager\:\ android.net.DhcpInfo\ getDhcpInfo()>=android.permission.ACCESS_WIFI_STATE
<com.android.gallery3d.ui.SlotView$SimpleListener\:\ void\ onSingleTapUp(int)>=android.permission.VIBRATE
<com.android.server.backup.Trampoline\:\ android.app.backup.IRestoreSession\ beginRestoreSession(java.lang.String,java.lang.String)>=android.permission.BACKUP
<com.android.email.activity.UIControllerOnePane\:\ void\ onActivityCreated()>=android.permission.NFC
<com.android.contacts.list.ProfileAndContactsLoader\:\ android.database.MatrixCursor\ loadProfile()>=android.permission.WRITE_CONTACTS
<android.accounts.IAccountManager\:\ void\ setPassword(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.contacts.list.JoinContactListFragment\:\ void\ setQueryString(java.lang.String,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.CropImage\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.RECORD_AUDIO
<com.android.server.NetworkManagementService\:\ void\ setUidMeteredNetworkWhitelist(int,boolean)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.settings.PrivacySettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$SoundSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<android.net.wifi.IWifiManager$Stub\:\ java.lang.String\ getConfigFile()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.RIL\:\ void\ setCLIR(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ performServiceRestartLocked(com.android.server.am.ServiceRecord)>=android.permission.WAKE_LOCK
<android.app.IActivityManager\:\ void\ updateConfiguration(android.content.res.Configuration)>=android.permission.WAKE_LOCK
<com.android.contacts.ContactLoader\:\ void\ deliverResult(com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ getIMSIForApp(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.emailcommon.service.AccountServiceProxy$1\:\ void\ run()>=android.permission.VIBRATE
<com.google.common.io.Resources$1\:\ java.io.InputStream\ getInput()>=android.permission.INTERNET
<com.android.contacts.activities.ConfirmAddDetailActivity\:\ void\ startPhotoQuery(long,android.net.Uri)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ queryTTYMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser\:\ void\ commit()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.EmailAddressListAdapter\:\ android.net.Uri\ getContactUri(int,android.database.Cursor,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ dispatchMediaKeyWithWakeLockToAudioService(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ void\ answerRingingCallInternal()>=android.permission.BLUETOOTH
<com.android.calendar.EventLoader$LoadEventsRequest\:\ void\ processRequest(com.android.calendar.EventLoader)>=android.permission.READ_CALENDAR
<com.android.internal.telephony.RIL\:\ void\ processResponse(android.os.Parcel)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ updateSpnDisplay()>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.opp.BluetoothOppObexSession\:\ void\ start(android.os.Handler)>=android.permission.WAKE_LOCK
<com.android.calendar.DayView\:\ void\ doDown(android.view.MotionEvent)>=android.permission.READ_CALENDAR
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy\:\ void\ sendMessageStatus(long,java.lang.String,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.TransactionService\:\ void\ acquireWakeLock()>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.String[]\ getLockTaskPackages(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.camera.CameraScreenNail$Listener\:\ void\ onPreviewTextureCopied()>=android.permission.RECORD_AUDIO
<com.android.internal.view.RotationPolicy$1\:\ void\ run()>=android.permission.WRITE_SETTINGS
<android.content.MutableContextWrapper\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<android.nfc.NfcActivityManager\:\ void\ setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>=android.permission.NFC
<com.android.calendar.event.EditEventView\:\ void\ updateView()>=android.permission.READ_CALENDAR
<android.net.IConnectivityManager$Stub\:\ android.net.NetworkInfo\ getNetworkInfo(int)>=android.permission.ACCESS_NETWORK_STATE
<android.net.IConnectivityManager$Stub$Proxy\:\ java.lang.String[]\ getTetherableIfaces()>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.HapticFeedback\:\ void\ vibrate()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhone\:\ void\ queryAvailableBandMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$VpnSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<android.filterpacks.videosrc.SurfaceTextureTarget\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.phone.PhoneUtils\:\ void\ setMute(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ init(android.content.Context,com.android.internal.telephony.PhoneNotifier)>=android.permission.WAKE_LOCK
<android.filterpacks.base.NullFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.music.IMediaPlaybackService\:\ void\ enqueue(long[],int)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService$2\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.am.BatteryStatsService\:\ void\ noteFullWifiLockAcquired(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.bluetooth.avrcp.AvrcpControllerService$BluetoothAvrcpControllerBinder\:\ android.bluetooth.BluetoothAvrcpPlayerSettings\ getPlayerSettings(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.provider.CalendarContract$CalendarAlerts\:\ long\ findNextAlarmTime(android.content.ContentResolver,long)>=android.permission.READ_CALENDAR
<com.android.nfc.snep.SnepServer\:\ void\ start()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth\:\ boolean\ changeApplicationBluetoothState(boolean,android.bluetooth.IBluetoothStateChangeCallback,android.os.IBinder)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ setTrust(java.lang.String,boolean)>=android.permission.BLUETOOTH
<com.android.providers.contacts.ProfileProvider\:\ void\ enforceWritePermission()>=android.permission.WRITE_PROFILE
<com.android.nfc.handover.ConfirmConnectActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.nfc.NfcService$NfcAdapterExtrasService\:\ int\ getCardEmulationRoute(java.lang.String)>=android.permission.NFC
<com.android.internal.telephony.cdma.RuimFileHandler\:\ void\ getEFLinearRecordSize(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiStopped(android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS
<android.content.pm.IPackageManager\:\ void\ freeStorage(long,android.content.IntentSender)>=android.permission.CLEAR_APP_CACHE
<com.android.internal.widget.multiwaveview.MultiWaveView\:\ void\ vibrate()>=android.permission.WAKE_LOCK
<android.speech.SpeechRecognizer\:\ void\ setRecognitionListener(android.speech.RecognitionListener)>=android.permission.RECORD_AUDIO
<com.android.settings.accounts.ManageAccountsSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.media.AudioService\:\ void\ broadcastScoConnectionState(int)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.IccCard\:\ void\ supplyPuk2(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager\:\ boolean\ requestRouteToHostAddress(int,byte[])>=android.permission.CHANGE_NETWORK_STATE
<com.android.server.wm.WindowManagerService\:\ void\ setAppTask(android.os.IBinder,int,int,android.graphics.Rect,android.content.res.Configuration,int,boolean)>=android.permission.MANAGE_APP_TOKENS
<com.android.phone.InCallScreen$7\:\ void\ onCancel(android.content.DialogInterface)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumPage\:\ void\ setContentPane(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ void\ finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>=android.permission.WAKE_LOCK
<com.android.calendar.month.SimpleWeekView\:\ boolean\ onHoverEvent(android.view.MotionEvent)>=android.permission.READ_CALENDAR
<com.android.server.appwidget.AppWidgetServiceImpl\:\ void\ deleteAppWidgetId(java.lang.String,int)>=android.permission.BIND_APPWIDGET
<android.app.NativeActivity\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<android.app.ContextImpl$ApplicationContentResolver\:\ void\ addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.inputmethod.latin.LatinIME\:\ void\ onStartInputView(android.view.inputmethod.EditorInfo,boolean)>=android.permission.WRITE_CONTACTS
<com.android.calendar.DayView\:\ void\ onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>=android.permission.READ_CALENDAR
<android.preference.VolumePreference$SeekBarVolumizer\:\ void\ onStopTrackingTouch(android.widget.SeekBar)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.GLRootView\:\ void\ onDrawFrameLocked(javax.microedition.khronos.opengles.GL10)>=android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.FlipFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.development.Connectivity\:\ void\ onStartScreenCycle()>=android.permission.WAKE_LOCK
<com.android.browser.Tab$3\:\ boolean\ onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)>=android.permission.GET_ACCOUNTS
<com.android.contacts.editor.LabeledEditorView\:\ void\ onFieldChanged(java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.FdnSetting\:\ void\ onPinEntered(com.android.phone.EditPinPreference,boolean)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.GestureRecognizer$Listener\:\ void\ onDown(float,float)>=android.permission.VIBRATE
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ android.net.NetworkInfo\ getNetworkInfo(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.activities.ActionBarAdapter$MyTabListener\:\ void\ onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.recent.RecentsPanelView\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.REORDER_TASKS
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$2\:\ void\ onPostExecute(java.lang.Object)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.server.pm.PackageManagerService\:\ boolean\ setInstallLocation(int)>=android.permission.WRITE_SECURE_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isInputMethodPermittedByAdmin(android.content.ComponentName,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.EditPinPreference$OnPinEnteredListener\:\ void\ onPinEntered(com.android.phone.EditPinPreference,boolean)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.BlackWhiteFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.policy.impl.GlobalActions$ToggleAction\:\ void\ onPress()>=android.permission.WRITE_SETTINGS
<com.android.contacts.vcard.VCardImportExportListener\:\ void\ onImportProcessed(com.android.contacts.vcard.ImportRequest,int,int)>=android.permission.VIBRATE
<android.net.IThrottleManager\:\ int\ getCliffLevel(java.lang.String,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.list.ProfileAndContactsLoader\:\ java.lang.Object\ loadInBackground()>=android.permission.WRITE_CONTACTS
<com.android.internal.app.ResolverActivity$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.contacts.CallDetailActivity\:\ com.android.contacts.PhoneCallDetails\ access$300(com.android.contacts.CallDetailActivity,android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ viewContact(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wm.WindowManagerService\:\ void\ setForcedDisplayDensityForUser(int,int,int)>=android.permission.WRITE_SECURE_SETTINGS
<android.media.AudioService$SettingsObserver\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.email.activity.MessageOrderManager$LoadMessageListTask\:\ void\ onCancelled(android.database.Cursor)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.NetworkManagementService\:\ void\ removeRoute(int,android.net.RouteInfo)>=android.permission.CONNECTIVITY_INTERNAL
<android.webkit.HTML5VideoFullScreen\:\ void\ pause()>=android.permission.WAKE_LOCK
<com.android.server.VibratorService\:\ void\ vibrate(int,java.lang.String,long,int,android.os.IBinder)>=android.permission.UPDATE_APP_OPS_STATS, android.permission.VIBRATE
<com.android.calendar.Event\:\ void\ loadEvents(android.content.Context,java.util.ArrayList,int,int,int,java.util.concurrent.atomic.AtomicInteger)>=android.permission.READ_CALENDAR
<com.android.server.net.NetworkPolicyManagerService\:\ android.net.NetworkQuotaInfo\ getNetworkQuotaInfoUnchecked(android.net.NetworkState)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IccSmsInterfaceManagerProxy\:\ boolean\ updateMessageOnIccEf(int,int,byte[])>=android.permission.WAKE_LOCK
<android.filterpacks.videosrc.SurfaceTextureSource\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.group.GroupBrowseListFragment\:\ void\ bindGroupList()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ resizeDockedStack(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.mms.data.WorkingMessage\:\ void\ asyncDeleteDraftMmsMessage(com.android.mms.data.Conversation)>=android.permission.WRITE_SMS
<com.android.server.power.PowerManagerService$BinderService\:\ void\ setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)>=android.permission.DEVICE_POWER
<android.test.mock.MockApplication\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<android.content.SyncManager$SyncHandler\:\ boolean\ dispatchSyncOperation(android.content.SyncOperation)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$13\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<android.webkit.WebIconDatabaseClassic$EventHandler\:\ void\ access$500(android.webkit.WebIconDatabaseClassic$EventHandler,android.os.Message)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<android.filterpacks.imageproc.AlphaBlendFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.filterpacks.videosrc.MediaSource\:\ void\ pauseVideo(boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine$WpsRunningState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BROADCAST_STICKY
<com.android.inputmethod.latin.ContactsDictionary\:\ void\ startDictionaryLoadingTaskLocked()>=android.permission.WRITE_CONTACTS
<com.android.systemui.statusbar.policy.ToggleSlider\:\ void\ onProgressChanged(android.widget.SeekBar,int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.calendar.EventInfoFragment\:\ void\ access$4100(com.android.calendar.EventInfoFragment)>=android.permission.WRITE_CALENDAR
<com.android.camera.LocationManager\:\ void\ recordLocation(boolean)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.VideoCamera\:\ void\ access$600(com.android.camera.VideoCamera)>=android.permission.RECORD_AUDIO
<com.android.contacts.list.CustomContactListFilterActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ cancelDiscovery()>=android.permission.BLUETOOTH_ADMIN
<com.android.mms.util.Recycler\:\ void\ deleteMessagesForThread(android.content.Context,long,int)>=android.permission.RECEIVE_SMS
<com.android.quicksearchbox.google.GoogleSuggestClient\:\ com.android.quicksearchbox.SourceResult\ queryInternal(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.AccountsChangedReceiver$DeleteRemovedAccounts\:\ void\ delete(android.content.ContentResolver,java.lang.String,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onRadioOffOrNotAvailable()>=android.permission.BROADCAST_STICKY
<com.android.contacts.editor.ContactEditorFragment\:\ boolean\ doJoinContactAction()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ selectDefaultContact()>=android.permission.READ_SYNC_SETTINGS
<android.media.AudioService$AudioHandler\:\ void\ persistRingerMode(int)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.gsm.GSMPhone\:\ com.android.internal.telephony.Connection\ dial(java.lang.String,com.android.internal.telephony.UUSInfo)>=android.permission.WAKE_LOCK
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ clearServices(int)>=android.permission.BLUETOOTH
<com.android.mms.transaction.SmsReceiverService\:\ int\ moveOutboxMessagesToFailedBox()>=android.permission.RECEIVE_SMS
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta\:\ android.content.ContentProviderOperation\ buildDiff()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.location.GpsNetInitiatedHandler\:\ void\ handleNiNotification(com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification)>=android.permission.VIBRATE
<com.android.server.sip.SipService$AutoRegistrationProcess\:\ void\ onError(int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.wifi.WifiServiceImpl\:\ int\ getVerboseLoggingLevel()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.sip.SipService$ConnectivityReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.view.inputmethod.InputMethodManager\:\ void\ showInputMethodAndSubtypeEnabler(java.lang.String)>=android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.Settings$DataUsageSummaryActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.net.wifi.WifiStateMachine$TetheredState\:\ boolean\ processMessage(android.os.Message)>=android.permission.ACCESS_NETWORK_STATE
<android.speech.IRecognitionService$Stub\:\ void\ startListening(android.content.Intent,android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isDeviceProvisioningConfigApplied()>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_USERS
<android.telephony.PhoneNumberUtils\:\ boolean\ isVoiceMailNumber(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.ConnectivityService\:\ android.net.Network\ getActiveNetwork()>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.app.AlbumPage$2\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<com.android.internal.policy.impl.GlobalActions$SilentModeToggleAction\:\ void\ onPress()>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.ITelephony\:\ void\ call(java.lang.String)>=android.permission.CALL_PHONE
<com.android.phone.PhoneUtils\:\ void\ turnOnSpeaker(android.content.Context,boolean,boolean)>=android.permission.BLUETOOTH
<com.android.calendar.agenda.AgendaWindowAdapter\:\ android.net.Uri\ buildQueryUri(int,int,java.lang.String)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ boolean\ processPendingRadioPowerOffAfterDataOff()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.connectivity.Tethering\:\ void\ showTetheredNotification(int)>=android.permission.VIBRATE
<com.android.camera.PanoramaActivity\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.RECORD_AUDIO
<com.android.settings.wifi.WifiSettings\:\ java.util.List\ constructAccessPoints()>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.Settings$LocalePickerActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockPatternView\:\ boolean\ onHoverEvent(android.view.MotionEvent)>=android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.LocalBluetoothProfileManager$StateChangedHandler\:\ void\ onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.email.activity.UIControllerBase$MessageOrderManagerCallback\:\ void\ onMessageNotFound()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.DataUsageSummary$12\:\ void\ onLimitChanged()>=android.permission.ACCESS_NETWORK_STATE
<android.view.ContextThemeWrapper\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.calendar.month.MonthByWeekAdapter\:\ void\ updateParams(java.util.HashMap)>=android.permission.READ_CALENDAR
<com.android.internal.telephony.IccSmsInterfaceManager\:\ boolean\ updateMessageOnIccEf(int,int,byte[])>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ queryTTYMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME\:\ void\ onCreate()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.SlideEditorActivity\:\ void\ showCurrentSlide()>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHeadsetService$6\:\ boolean\ acceptIncomingConnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.NetworkManagementService\:\ int\ removeRoutesFromLocalNetwork(java.util.List)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.browser.Tab\:\ void\ onNewPicture(android.webkit.WebView,android.graphics.Picture)>=android.permission.GET_ACCOUNTS
<com.android.exchange.EasOutboxService\:\ com.android.exchange.EasResponse\ executePostWithTimeout(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,int)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothDevice\:\ java.lang.String\ getAliasName()>=android.permission.BLUETOOTH
<com.android.contacts.activities.PeopleActivity\:\ void\ onContactListFilterChanged()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.input.InputManagerService\:\ long\ notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ToPackedGrayFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ onScreenTurnedOff(int)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME\:\ void\ loadSettings()>=android.permission.WRITE_CONTACTS
<com.android.settings.bluetooth.DockService\:\ void\ access$200(com.android.settings.bluetooth.DockService,android.bluetooth.BluetoothDevice,int,int)>=android.permission.BLUETOOTH
<com.android.server.am.BatteryStatsService\:\ void\ noteLongPartialWakelockStart(java.lang.String,java.lang.String,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.calendar.agenda.AgendaWindowAdapter\:\ void\ doQuery(com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>=android.permission.WRITE_CALENDAR
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ connectProfile(com.android.settings.bluetooth.LocalBluetoothProfile)>=android.permission.BLUETOOTH
<com.android.exchange.EasAccountService\:\ void\ sleep(long,boolean)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth\:\ boolean\ connectHeadset(java.lang.String)>=android.permission.BLUETOOTH
<com.android.mms.transaction.TransactionService\:\ void\ endMmsConnectivity()>=android.permission.BLUETOOTH
<com.android.mms.transaction.RetryScheduler\:\ void\ update(com.android.mms.transaction.Observable)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.CallerInfo\:\ com.android.internal.telephony.CallerInfo\ getCallerInfo(android.content.Context,java.lang.String)>=android.permission.WRITE_CONTACTS
<android.media.effect.effects.ContrastEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.server.wm.WindowManagerService$DragInputEventReceiver\:\ void\ onInputEvent(android.view.InputEvent)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ putRecoveryAction(int)>=android.permission.WRITE_SETTINGS
<com.android.contacts.list.ContactsIntentResolver\:\ com.android.contacts.list.ContactsRequest\ resolveIntent(android.content.Intent)>=android.permission.READ_PHONE_STATE
<com.android.phone.CdmaVoicePrivacyCheckBoxPreference\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.GestureRecognizer$MyDownUpListener\:\ void\ onUp(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.contacts.ContactsUtils\:\ android.content.Intent\ getCallIntent(java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.nfc.DeviceHost$DeviceHostListener\:\ void\ onSeEmvCardRemoval()>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setProfileName(android.content.ComponentName,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.calllog.CallLogAdapter\:\ void\ bindGroupView(android.view.View,android.content.Context,android.database.Cursor,int,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.accounts.ManageAccountsSettings\:\ void\ onStart()>=android.permission.GET_ACCOUNTS
<android.media.AudioService$ScoClient\:\ void\ binderDied()>=android.permission.BLUETOOTH
<android.net.wifi.WifiApConfigStore$ActiveState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardViewMediator$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiManager$MulticastLock\:\ void\ finalize()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.server.am.ActivityManagerService\:\ void\ killAppAtUsersRequest(com.android.server.am.ProcessRecord,android.app.Dialog)>=android.permission.WAKE_LOCK
<com.android.server.location.GpsLocationProvider\:\ void\ enableLocationTracking(boolean)>=android.permission.WAKE_LOCK
<com.android.browser.WebViewFactory\:\ android.webkit.WebView\ createSubWebView(boolean)>=android.permission.INTERNET
<com.android.exchange.EasAccountService\:\ com.android.exchange.EasResponse\ postAutodiscover(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,boolean)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ setDumpHeapDebugLimit(java.lang.String,int,long,java.lang.String)>=android.permission.SET_DEBUG_APP
<com.android.exchange.CalendarSyncAdapterService\:\ void\ access$000(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>=android.permission.READ_SYNC_SETTINGS
<android.net.sip.ISipService$Stub\:\ android.net.sip.ISipSession\ getPendingSession(java.lang.String)>=android.permission.USE_SIP
<android.net.wifi.WifiWatchdogStateMachine$ConnectedState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.exchange.EasAccountService\:\ com.android.exchange.EasResponse\ executePostWithTimeout(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,int,boolean)>=android.permission.WAKE_LOCK
<com.android.settings.WallpaperTypeSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothA2dp$Stub\:\ boolean\ connectSinkInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.wm.WindowManagerService\:\ boolean\ startViewServer(int)>=android.permission.DUMP
<com.android.server.am.ActivityManagerService\:\ void\ makeAppNotRespondingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ConversationList$DeleteThreadListener$1\:\ void\ run()>=android.permission.WRITE_SMS
<com.android.contacts.list.ContactListFilterController\:\ void\ checkFilterValidity(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.event.AttendeesView\:\ void\ addAttendees(java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.phone.InCallScreen\:\ boolean\ checkOtaspStateOnResume()>=android.permission.BLUETOOTH
<com.android.server.LocationManagerService\:\ java.lang.String\ checkPermissionsSafe(java.lang.String,java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter\:\ boolean\ onCustomRequest(int)>=android.permission.WRITE_CONTACTS
<android.content.ContentService\:\ void\ setIsSyncable(android.accounts.Account,java.lang.String,int)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.systemui.usb.UsbResolverActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityStack\:\ void\ activitySleptLocked(com.android.server.am.ActivityRecord)>=android.permission.WAKE_LOCK
<com.android.wallpaper.grass.GrassRS\:\ void\ access$300(com.android.wallpaper.grass.GrassRS)>=android.permission.ACCESS_COARSE_LOCATION
<android.server.BluetoothService\:\ boolean\ createBond(java.lang.String)>=android.permission.BLUETOOTH
<android.test.IsolatedContext$MockAccountManager\:\ java.lang.String\ getPassword(android.accounts.Account)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.providers.contacts.VoicemailContentTable\:\ int\ delete(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<android.view.IWindowManager$Stub\:\ void\ dismissKeyguard()>=android.permission.DISABLE_KEYGUARD
<com.android.settings.tts.TextToSpeechSettings\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.email.activity.UIControllerTwoPane$ActionBarControllerCallback\:\ void\ onAccountSelected(long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WRITE_SETTINGS
<com.android.mms.ui.SlideView\:\ void\ setVideo(java.lang.String,android.net.Uri)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothSocket\:\ void\ initSocketNative()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.SurfaceTextureScreenNail\:\ void\ draw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.server.NetworkManagementService\:\ void\ denyProtect(int)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.gallery3d.app.ActivityState\:\ void\ resume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.editor.PhotoEditorView$1\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.Phone\:\ void\ exitEmergencyCallbackMode()>=android.permission.WAKE_LOCK
<android.filterpacks.base.CallbackFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ onMaxPendingMessagesReached()>=android.permission.RECEIVE_SMS
<com.android.contacts.vcard.NfcImportVCardActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.AccessibilitySettings$ToggleSwitch\:\ void\ setChecked(boolean)>=android.permission.WRITE_SETTINGS
<com.android.calendar.SearchActivity$2\:\ void\ run()>=android.permission.READ_CALENDAR
<android.bluetooth.BluetoothAdapter\:\ int\ getScanMode()>=android.permission.BLUETOOTH
<com.android.server.InputMethodManagerService\:\ void\ clearLastInputMethodWindowForTransition(android.os.IBinder)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.filterpacks.imageproc.NegativeFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.IccRecords\:\ void\ onAllRecordsLoaded()>=android.permission.CHANGE_CONFIGURATION
<com.android.calendar.DeleteEventHelper$5\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_CALENDAR
<com.android.mms.transaction.SmsReceiverService\:\ void\ access$000(com.android.mms.transaction.SmsReceiverService,android.content.Intent,int)>=android.permission.RECEIVE_SMS
<com.android.browser.view.PieMenu$PieView$OnLayoutListener\:\ void\ onLayout(int,int,boolean)>=android.permission.GET_ACCOUNTS
<android.app.backup.IBackupManager\:\ void\ restoreAtInstall(java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.ManageCachePage$1\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.IAccountManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.GET_ACCOUNTS
<com.android.server.statusbar.StatusBarManagerService\:\ void\ onClearAllNotifications(int)>=android.permission.STATUS_BAR_SERVICE
<com.android.internal.telephony.PhoneBase\:\ void\ setTTYMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerBase\:\ void\ doAutoAdvance()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.PhoneBase\:\ void\ setBandMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.location.ILocationManager$Stub\:\ void\ clearTestProviderEnabled(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.server.wifi.WifiServiceImpl\:\ java.lang.String\ getCountryCode()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.providers.calendar.CalendarProvider2\:\ int\ deleteMatchingCalendars(java.lang.String,java.lang.String[])>=android.permission.READ_CALENDAR
<com.android.settings.accounts.AccountPreferenceBase\:\ void\ onStart()>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.SlideView\:\ void\ reset()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ImageStitcher\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState\:\ void\ chooseUpstreamType(boolean)>=android.permission.BLUETOOTH
<com.android.browser.AccountsChangedReceiver$DeleteRemovedAccounts\:\ void\ run()>=android.permission.GET_ACCOUNTS
<android.test.mock.MockApplication\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.server.NetworkScoreService\:\ boolean\ setActiveScorer(java.lang.String)>=android.permission.SCORE_NETWORKS
<com.android.providers.contacts.ContactsProvider2\:\ int\ deleteData(java.lang.String,java.lang.String[],boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wifi.WifiServiceImpl\:\ android.os.Messenger\ getWifiServiceMessenger()>=android.permission.ACCESS_WIFI_STATE, android.permission.CHANGE_WIFI_STATE
<android.net.wifi.IWifiManager\:\ void\ releaseMulticastLock()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.settings.SecuritySettings\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WRITE_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ requestBugreport(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.location.GpsLocationProvider\:\ void\ updateLocation(android.location.Location)>=android.permission.WAKE_LOCK
<com.android.gallery3d.data.ClusterAlbum\:\ long\ reload()>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.BitmapSource\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.input.InputManagerService\:\ void\ setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>=android.permission.SET_KEYBOARD_LAYOUT
<android.bluetooth.BluetoothHealth\:\ boolean\ registerAppConfiguration(java.lang.String,int,int,int,android.bluetooth.BluetoothHealthCallback)>=android.permission.BLUETOOTH
<com.android.internal.telephony.SubscriptionController\:\ int\ setIconTint(int,int)>=android.permission.MODIFY_PHONE_STATE
<com.android.bluetooth.avrcp.AvrcpControllerService$BluetoothAvrcpControllerBinder\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<android.nfc.INfcAdapter$Stub\:\ boolean\ disableNdefPush()>=android.permission.BLUETOOTH
<com.android.email.activity.ActionBarController\:\ void\ updateTitle()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ setPermittedInputMethods(android.content.ComponentName,java.util.List)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.provider.ContactsContract$Data\:\ android.net.Uri\ getContactLookupUri(android.content.ContentResolver,android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<android.net.IConnectivityManager\:\ java.lang.String[]\ getTetheredIfacePairs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.service.AttachmentDownloadService$DownloadSet\:\ void\ startDownload(android.content.Intent,com.android.email.service.AttachmentDownloadService$DownloadRequest)>=android.permission.READ_PHONE_STATE
<android.nfc.tech.Ndef\:\ android.nfc.NdefMessage\ getNdefMessage()>=android.permission.NFC
<com.android.mms.ui.ComposeMessageActivity\:\ void\ addImage(android.net.Uri,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cat.CatService\:\ void\ sendMenuSelection(int,boolean)>=android.permission.WAKE_LOCK
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener\:\ void\ onRemovePictureChosen()>=android.permission.READ_SYNC_SETTINGS
<com.android.exchange.EasSyncService\:\ com.android.exchange.EasResponse\ sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ void\ updateExternalMediaStatus(boolean,boolean)>=android.permission.GRANT_RUNTIME_PERMISSIONS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.REVOKE_RUNTIME_PERMISSIONS, android.permission.SET_PREFERRED_APPLICATIONS
<com.android.server.backup.Trampoline\:\ java.lang.String\ getDestinationString(java.lang.String)>=android.permission.BACKUP
<com.android.settings.DevelopmentSettings\:\ void\ access$100(com.android.settings.DevelopmentSettings)>=android.permission.READ_EXTERNAL_STORAGE
<com.android.providers.telephony.SmsProvider\:\ android.database.Cursor\ getSingleMessageFromIcc(java.lang.String)>=android.permission.RECEIVE_SMS
<android.bluetooth.BluetoothManager\:\ java.util.List\ getConnectedDevices(int)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ java.util.List\ getConnectedInputDevices()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.CrossProcessFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardScreenCallback\:\ void\ goToUnlockScreen()>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ registerClient(android.os.ParcelUuid,android.bluetooth.IBluetoothGattCallback)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setProfileEnabled(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.mms.ui.SlideshowPresenter$2\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.LockPatternKeyguardView$2\:\ void\ userActivity(android.view.View)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ManageSimMessages\:\ void\ startQuery()>=android.permission.RECEIVE_SMS
<com.android.internal.telephony.RIL\:\ void\ acknowledgeIncomingGsmSmsWithPdu(boolean,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteStopGps(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.internal.telephony.ServiceStateTracker\:\ void\ disableLocationUpdates()>=android.permission.WAKE_LOCK
<android.net.INetworkPolicyManager$Stub\:\ android.net.NetworkPolicy[]\ getNetworkPolicies()>=android.permission.READ_PHONE_STATE
<com.android.mms.ui.MmsThumbnailPresenter\:\ void\ presentFirstSlide(com.android.mms.ui.SlideViewInterface,com.android.mms.model.SlideModel)>=android.permission.READ_SYNC_SETTINGS
<android.nfc.tech.NdefFormatable\:\ void\ format(android.nfc.NdefMessage,boolean)>=android.permission.NFC
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ handlePollCalls(android.os.AsyncResult)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$2\:\ android.bluetooth.AtCommandResult\ headsetButtonPress()>=android.permission.BLUETOOTH
<com.android.contacts.detail.ContactDetailUpdatesFragment$1\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.recent.RecentTasksLoader$1\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.GET_TASKS
<com.android.contacts.editor.ContactEditorFragment\:\ void\ setPhoto(long,android.graphics.Bitmap,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.mms.transaction.NotificationPlayer\:\ void\ startSound(com.android.mms.transaction.NotificationPlayer$Command)>=android.permission.WAKE_LOCK
<com.android.calendar.AllInOneActivity\:\ boolean\ onNavigationItemSelected(int,long)>=android.permission.WRITE_CALENDAR
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ boolean\ isDiscovering()>=android.permission.BLUETOOTH
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ connectionParameterUpdate(int,java.lang.String,int)>=android.permission.BLUETOOTH
<android.accounts.IAccountManager\:\ boolean\ addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ hangup(com.android.internal.telephony.cdma.CdmaCall)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.CropFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getDeviceOwnerUserId()>=android.permission.MANAGE_USERS
<com.android.settings.DockSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneSubInfoProxy\:\ java.lang.String\ getIccSerialNumber()>=android.permission.READ_PHONE_STATE
<com.android.contacts.activities.ActionBarAdapter\:\ void\ initialize(android.os.Bundle,com.android.contacts.list.ContactsRequest)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ startMsgListQuery(int)>=android.permission.WRITE_SMS
<com.android.server.usb.UsbService\:\ void\ setUsbDataUnlocked(boolean)>=android.permission.MANAGE_USB
<com.android.phone.BluetoothAtPhonebook\:\ android.bluetooth.AtCommandResult\ processCpbrCommand()>=android.permission.READ_CALL_LOG
<android.media.RingtoneManager\:\ void\ stopPreviousRingtone()>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService$VpnCallback\:\ void\ override(java.util.List,java.util.List)>=android.permission.BROADCAST_STICKY
<com.android.email.Controller$LegacyListener\:\ void\ synchronizeMailboxStarted(long,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$AndroidSpellCheckerSession\:\ android.view.textservice.SuggestionsInfo\ onGetSuggestions(android.view.textservice.TextInfo,int)>=android.permission.WRITE_CONTACTS
<android.webkit.HTML5VideoFullScreen$1\:\ void\ surfaceDestroyed(android.view.SurfaceHolder)>=android.permission.WAKE_LOCK
<android.telephony.gsm.SmsManager\:\ boolean\ copyMessageToSim(byte[],byte[],int)>=android.permission.RECEIVE_SMS
<com.android.contacts.activities.ShowOrCreateActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.opp.BluetoothOppObexClientSession\:\ void\ start(android.os.Handler)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ restoreSavedNetworkSelection(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ void\ addOnPermissionsChangeListener(android.content.pm.IOnPermissionsChangeListener)>=android.permission.OBSERVE_GRANT_REVOKE_PERMISSIONS
<com.android.bluetooth.opp.BluetoothOppTransferHistory\:\ void\ access$000(com.android.bluetooth.opp.BluetoothOppTransferHistory)>=android.permission.BLUETOOTH
<android.accounts.AccountManager$2\:\ void\ startTask()>=android.permission.GET_ACCOUNTS
<android.content.ISyncStatusObserver$Stub$Proxy\:\ void\ onStatusChanged(int)>=android.permission.WAKE_LOCK
<com.android.server.AlarmManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.SET_TIME_ZONE
<com.android.development.Connectivity\:\ void\ access$1300(com.android.development.Connectivity)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumSetPage$1\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.editor.StructuredNameEditorView\:\ void\ onTypeSelectionChange(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.ExpandableBinaryDictionary\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread\:\ void\ queryPhotosForPreload()>=android.permission.WRITE_CONTACTS
<com.android.phone.PhoneInterfaceManager\:\ boolean\ isOffhookForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.camera.PanoramaActivity\:\ void\ onPreviewTextureCopied()>=android.permission.RECORD_AUDIO
<android.provider.CalendarContract$Instances\:\ android.database.Cursor\ query(android.content.ContentResolver,java.lang.String[],long,long)>=android.permission.READ_CALENDAR
<com.android.camera.VideoCamera\:\ void\ onStopVideoRecording()>=android.permission.RECORD_AUDIO
<com.android.server.NetworkManagementService\:\ boolean\ isClatdStarted(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.exchange.ExchangeService$ServiceCallbackWrapper\:\ void\ call(com.android.emailcommon.service.IEmailServiceCallback)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$InputMethodAndLanguageSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.phone.BluetoothHeadsetService$6\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.development.Connectivity\:\ void\ access$2000(com.android.development.Connectivity)>=android.permission.CHANGE_NETWORK_STATE
<com.android.providers.media.MediaScannerService\:\ android.net.Uri\ access$100(com.android.providers.media.MediaScannerService,java.lang.String,java.lang.String)>=android.permission.WRITE_SETTINGS
<android.net.IConnectivityManager\:\ boolean\ isNetworkSupported(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.gsm.SIMRecords\:\ void\ fetchSimRecords()>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ startAppProblemLocked(com.android.server.am.ProcessRecord)>=android.permission.WAKE_LOCK
<com.android.server.input.InputManagerService\:\ android.view.KeyEvent\ dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ android.preference.CheckBoxPreference\ createProfilePreference(com.android.settings.bluetooth.LocalBluetoothProfile)>=android.permission.BLUETOOTH
<com.android.server.wm.WindowManagerService\:\ void\ registerDockedStackListener(android.view.IDockedStackListener)>=android.permission.REGISTER_WINDOW_MANAGER_LISTENERS
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ cancelPostDial()>=android.permission.WAKE_LOCK
<com.android.server.WifiService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.calendar.agenda.AgendaFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_CALENDAR
<android.filterfw.core.FieldPort\:\ void\ transfer(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.filterpacks.base.InputStreamSource\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.exchange.EmailSyncAdapterService\:\ void\ access$000(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>=android.permission.READ_SYNC_SETTINGS
<android.media.MediaPlayer\:\ void\ stop()>=android.permission.WAKE_LOCK
<android.view.IApplicationToken\:\ boolean\ keyDispatchingTimedOut()>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree\:\ void\ onBluetoothDisabled()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ setPowerStateToDesired()>=android.permission.WAKE_LOCK
<android.filterpacks.videosrc.CameraSource\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.phone.PhoneInterfaceManager\:\ void\ setPolicyDataEnabled(boolean,int)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setPasswordMinimumNumeric(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.email.activity.MailboxFinder$ControllerResults\:\ void\ serviceCheckMailCallback(com.android.emailcommon.mail.MessagingException,long,long,int,long)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.NegativeFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.location.GpsLocationProvider\:\ void\ access$1000(com.android.server.location.GpsLocationProvider,int,android.net.NetworkInfo)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask\:\ java.lang.Boolean\ doInBackground(java.lang.Void[])>=android.permission.WRITE_CONTACTS
<android.app.ExpandableListActivity\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.server.TelephonyRegistry\:\ void\ notifyDataConnectionFailed(java.lang.String,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.mms.ui.ComposeMessageActivity$17\:\ void\ run()>=android.permission.READ_SMS
<android.net.wifi.WifiManager\:\ boolean\ isWifiApEnabled()>=android.permission.ACCESS_WIFI_STATE
<com.android.contacts.calllog.ClearCallLogDialog$1$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WRITE_CALL_LOG
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ powerOffRadioSafely(com.android.internal.telephony.DataConnectionTracker)>=android.permission.WAKE_LOCK
<com.android.server.StatusBarManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.EXPAND_STATUS_BAR
<android.accounts.AccountManagerService\:\ boolean\ addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.AUTHENTICATE_ACCOUNTS
<android.filterpacks.base.FrameSource\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.contacts.calllog.CallLogListItemHelper\:\ java.lang.CharSequence\ getCallActionDescription(com.android.contacts.PhoneCallDetails)>=android.permission.READ_PHONE_STATE
<com.android.server.am.ActivityManagerService\:\ java.util.List\ getRecentTasks(int,int)>=android.permission.GET_TASKS
<com.android.server.pm.ShutdownThread\:\ void\ run()>=android.permission.WAKE_LOCK
<android.content.SyncManager\:\ void\ sendSyncAlarmMessage()>=android.permission.WAKE_LOCK
<com.android.server.dreams.DreamManagerService$BinderService\:\ android.content.ComponentName[]\ getDreamComponents()>=android.permission.READ_DREAM_STATE
<android.filterpacks.imageproc.ContrastFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ setBandMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.exchange.EasAccountService\:\ com.android.exchange.provider.GalResult\ searchGal(android.content.Context,long,java.lang.String,int)>=android.permission.WAKE_LOCK
<android.filterpacks.videosrc.SurfaceTextureTarget\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.nfc.DeviceHost$DeviceHostListener\:\ void\ onLlcpLinkDeactivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>=android.permission.BLUETOOTH
<android.view.VolumePanel\:\ void\ onRemoteVolumeUpdateIfShown()>=android.permission.VIBRATE
<com.android.systemui.SearchPanelView\:\ void\ access$300(com.android.systemui.SearchPanelView)>=android.permission.VIBRATE
<android.os.IVibratorService$Stub$Proxy\:\ void\ cancelVibrate(android.os.IBinder)>=android.permission.VIBRATE
<android.location.LocationManager\:\ void\ removeUpdates(android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.gallery3d.ui.PhotoView\:\ boolean\ swipeImages(float,float)>=android.permission.VIBRATE
<android.service.dreams.DreamService\:\ void\ onWakeUp()>=android.permission.BROADCAST_STICKY
<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper\:\ int\ postEnroll(android.os.IBinder)>=android.permission.MANAGE_FINGERPRINT
<android.bluetooth.IBluetoothHeadset\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.voicedialer.VoiceDialerActivity$1\:\ void\ onServiceConnected(int,android.bluetooth.BluetoothProfile)>=android.permission.BLUETOOTH
<com.android.server.net.NetworkStatsService$5\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ registerSettingsContentObservers()>=android.permission.WRITE_SETTINGS
<android.net.sip.SipAudioCall$1\:\ void\ onCallEstablished(android.net.sip.SipSession,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ addImage(android.net.Uri,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.ITelephony$Stub\:\ boolean\ endCall()>=android.permission.CALL_PHONE
<android.filterpacks.imageproc.SaturateFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityStack\:\ void\ moveHomeToFrontFromLaunchLocked(int)>=android.permission.WAKE_LOCK
<com.android.development.PackageSummary$1\:\ void\ onClick(android.view.View)>=android.permission.RESTART_PACKAGES
<android.bluetooth.IBluetooth$Stub\:\ boolean\ setRemoteAlias(java.lang.String,java.lang.String)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.CropView\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.BluetoothHandsfree\:\ void\ connectHeadset(android.bluetooth.HeadsetBase,int)>=android.permission.BLUETOOTH
<com.android.videoeditor.VideoEditorActivity$23\:\ void\ onStop()>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothAdapter\:\ android.bluetooth.le.BluetoothLeAdvertiser\ getBluetoothLeAdvertiser()>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHeadsetService$6\:\ boolean\ isAudioConnected(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ boolean\ setPropertyBoolean(java.lang.String,boolean)>=android.permission.BLUETOOTH
<com.android.emailcommon.utility.EmailAsyncTask$1\:\ void\ onSuccess(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.speech.tts.TextToSpeech\:\ java.util.Set\ getVoices()>=android.permission.BROADCAST_STICKY
<com.android.camera.VideoCamera\:\ void\ initializeVideoSnapshot()>=android.permission.RECORD_AUDIO
<com.android.bluetooth.opp.BluetoothOppTransferHistory\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.BLUETOOTH
<com.android.phone.DataUsageListener\:\ void\ updatePolicy()>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.SepiaFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.email.activity.MessageList$1\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy\:\ void\ loadAttachmentStatus(long,long,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.calllog.CallLogFragment\:\ void\ startCallsQuery()>=android.permission.READ_CALL_LOG
<com.android.settings.accounts.ManageAccountsSettings\:\ void\ onSyncStateUpdated()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ requestIsimAuthentication(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.exchange.ExchangeService\:\ void\ access$400(com.android.exchange.ExchangeService,long,boolean)>=android.permission.WAKE_LOCK
<com.android.server.pm.ShutdownThread\:\ void\ access$000(android.content.Context)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ dialRecipient()>=android.permission.CALL_PHONE
<com.android.soundrecorder.SoundRecorder\:\ void\ updateUi()>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageViewFragment\:\ void\ onMarkAsUnread()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.util.Recycler$SmsRecycler\:\ boolean\ anyThreadOverLimit(android.content.Context)>=android.permission.RECEIVE_SMS
<com.android.quicksearchbox.google.AbstractGoogleSource\:\ com.android.quicksearchbox.SourceResult\ queryExternal(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.music.MediaPlaybackActivity\:\ void\ startPlayback()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ void\ dispatchPdus(byte[][])>=android.permission.WAKE_LOCK
<com.android.mail.providers.UIProvider\:\ void\ incrementRecipientsTimesContacted(android.content.Context,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.PeopleActivity\:\ void\ updateViewConfiguration(boolean)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothHeadset\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<android.media.effect.effects.RotateEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.settings.AirplaneModeEnabler\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WRITE_SETTINGS
<com.android.phone.BluetoothHandsfree$14\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.backup.Trampoline\:\ android.content.Intent\ getDataManagementIntent(java.lang.String)>=android.permission.BACKUP
<com.android.exchange.ExchangeService\:\ void\ acquireWakeLock(long)>=android.permission.WAKE_LOCK
<com.android.wallpaper.walkaround.WalkAroundWallpaper$WalkAroundEngine\:\ void\ onSurfaceCreated(android.view.SurfaceHolder)>=android.permission.CAMERA
<android.filterpacks.imageproc.BrightnessFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.mms.transaction.Transaction\:\ byte[]\ getPdu(java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<android.content.MutableContextWrapper\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.mms.util.ItemLoadedCallback\:\ void\ onItemLoaded(java.lang.Object,java.lang.Throwable)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.inputmethod.SpellCheckersSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ java.util.List\ getConnectedHealthDevices()>=android.permission.BLUETOOTH
<com.android.gallery3d.util.JobLimiter$JobWrapper\:\ java.lang.Object\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<com.android.exchange.adapter.ItemOperationsParser\:\ void\ parseProperties()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.service.EmailServiceUtils\:\ com.android.emailcommon.service.IEmailService\ getService(android.content.Context,java.lang.String,com.android.emailcommon.service.IEmailServiceCallback)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ explicitCallTransfer()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.PanProfile\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.widget.PasswordEntryKeyboardView\:\ boolean\ onModifiedTouchEvent(android.view.MotionEvent,boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.filterpacks.imageproc.AutoFixFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.list.PhoneNumberPickerFragment\:\ void\ prepareEmptyView()>=android.permission.READ_SYNC_STATS
<android.filterpacks.imageproc.FlipFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.AppOpsService\:\ void\ setUidMode(int,int,int)>=android.permission.UPDATE_APP_OPS_STATS
<android.accounts.AccountManagerService\:\ void\ updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>=android.permission.MANAGE_ACCOUNTS
<com.android.contacts.vcard.ImportVCardActivity\:\ android.app.Dialog\ onCreateDialog(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.location.ComprehensiveCountryDetector\:\ void\ access$200(com.android.server.location.ComprehensiveCountryDetector)>=android.permission.ACCESS_COARSE_LOCATION
<android.server.BluetoothEventLoop\:\ void\ onDeviceCreated(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.NsdService\:\ void\ sendNsdStateChangeBroadcast(boolean)>=android.permission.BROADCAST_STICKY
<com.android.settings.BrightnessPreference\:\ void\ onDialogClosed(boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ setLockScreenShown(boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.Phone\:\ void\ setPreferredNetworkType(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getOrganizationColor(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ handleCallWaitingInfo(com.android.internal.telephony.cdma.CdmaCallWaitingNotification)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.ExpandableDictionary\:\ void\ loadDictionary()>=android.permission.WRITE_CONTACTS
<com.android.settings.Settings$AccountSyncSettingsInAddAccountActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<android.net.ThrottleManager\:\ long\ getResetTime(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.AccountManagerService\:\ void\ setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.mms.transaction.SimFullReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.VIBRATE
<com.android.internal.telephony.IccSmsInterfaceManager\:\ void\ enforceReceiveAndSend(java.lang.String)>=android.permission.RECEIVE_SMS
<com.android.calendar.alerts.AlertActivity\:\ void\ dismissFiredAlarms()>=android.permission.WRITE_CALENDAR
<com.android.contacts.vcard.VCardService\:\ void\ handleExportRequest(com.android.contacts.vcard.ExportRequest,com.android.contacts.vcard.VCardImportExportListener)>=android.permission.VIBRATE
<com.android.server.wm.WindowManagerService\:\ void\ exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>=android.permission.DISABLE_KEYGUARD
<com.android.settings.bluetooth.BluetoothDeviceFilter$TransferFilter\:\ boolean\ matches(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.email.activity.UIControllerTwoPane$RefreshTask\:\ void\ onSuccess(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.test.mock.MockContentResolver\:\ void\ addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.server.hdmi.HdmiControlService$BinderService\:\ android.hardware.hdmi.HdmiDeviceInfo\ getActiveSource()>=android.permission.HDMI_CEC
<com.android.mms.ui.ConversationList\:\ void\ confirmDeleteThread(long,android.content.AsyncQueryHandler)>=android.permission.READ_SMS
<com.android.phone.BluetoothHandsfree$10\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<android.accounts.AccountManager\:\ android.accounts.AccountManagerFuture\ getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.phone.PhoneUtils\:\ void\ access$100(com.android.internal.telephony.Phone,boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy\:\ java.util.List\ getAllMessagesFromIccEf()>=android.permission.WAKE_LOCK
<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper\:\ void\ resetTimeout([byte)>=android.permission.RESET_FINGERPRINT_LOCKOUT
<com.android.email.activity.MessageOrderManager$LoadMessageListTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.DevelopmentSettings$ConfirmEnforceFragment$2\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.READ_EXTERNAL_STORAGE
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask\:\ void\ onPostExecute(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.BluetoothCallback\:\ void\ onBluetoothStateChanged(int)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothGatt\:\ void\ close()>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ void\ moveTaskToFront(int,int,android.os.Bundle)>=android.permission.BROADCAST_STICKY, android.permission.REORDER_TASKS
<com.android.settings.bluetooth.RequestPermissionActivity\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH
<com.android.mms.util.AddressUtils\:\ java.lang.String\ getFrom(android.content.Context,android.net.Uri)>=android.permission.READ_SMS
<android.nfc.INfcAdapterExtras\:\ int\ getCardEmulationRoute(java.lang.String)>=android.permission.NFC
<com.android.quicksearchbox.util.SingleThreadNamedTaskExecutor$Worker\:\ void\ run()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ onStart()>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<android.filterpacks.imageproc.ContrastFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.os.Vibrator\:\ void\ vibrate(long[],int)>=android.permission.VIBRATE
<com.android.server.WallpaperManagerService$MyPackageMonitor\:\ void\ onPackageRemoved(java.lang.String,int)>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.ExpandableDictionary\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsMessageSender\:\ boolean\ sendMessage(long)>=android.permission.SEND_SMS
<android.bluetooth.IBluetoothPbap\:\ int\ getState()>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String[]\ getMergedSubscriberIds(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.media.IAudioService\:\ void\ setBluetoothScoOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.phone.BluetoothHandsfree$22\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ void\ removeServiceRecord(int)>=android.permission.BLUETOOTH
<android.filterpacks.base.RetargetFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.nfc.tech.MifareUltralight\:\ int\ getTimeout()>=android.permission.NFC
<android.filterpacks.base.FrameBranch\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.inputmethod.UserDictionaryList\:\ void\ createUserDictSettings(android.preference.PreferenceGroup)>=android.permission.READ_USER_DICTIONARY
<com.android.server.ConnectivityService\:\ int\ access$200(com.android.server.ConnectivityService,com.android.server.ConnectivityService$FeatureUser,boolean)>=android.permission.BLUETOOTH
<com.android.email.activity.setup.AccountSetupActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_PHONE_STATE
<android.provider.CalendarContract$CalendarAlerts\:\ android.net.Uri\ insert(android.content.ContentResolver,long,long,long,long,int)>=android.permission.WRITE_CALENDAR
<com.android.server.InputMethodManagerService\:\ void\ setInputMethod(android.os.IBinder,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.WRITE_SECURE_SETTINGS
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ dispose()>=android.permission.WAKE_LOCK
<com.android.calendar.CalendarController\:\ void\ launchDeleteEventAndFinish(android.app.Activity,long,long,long,int)>=android.permission.READ_CALENDAR
<com.android.settings.DataUsageSummary\:\ boolean\ hasWifiRadio(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<java.net.URLConnection\:\ void\ connect()>=android.permission.INTERNET
<android.nfc.tech.NfcB\:\ byte[]\ transceive(byte[])>=android.permission.NFC
<com.google.android.mms.pdu.PduPersister\:\ void\ updateHeaders(android.net.Uri,com.google.android.mms.pdu.SendReq)>=android.permission.READ_SMS
<android.accounts.AccountManager$3\:\ void\ startTask()>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.ISms\:\ boolean\ disableCellBroadcast(int)>=android.permission.RECEIVE_SMS
<android.bluetooth.IBluetoothPbap$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.UserDictionary\:\ void\ loadDictionary()>=android.permission.WRITE_CONTACTS
<com.android.server.am.ActivityStack\:\ void\ completePauseLocked()>=android.permission.WAKE_LOCK
<com.android.server.pm.ShutdownThread\:\ void\ shutdownInner(android.content.Context,boolean)>=android.permission.WAKE_LOCK
<com.android.settings.AccessibilitySettings$ToggleAccessibilityServicePreferenceFragment$2\:\ boolean\ onBeforeCheckedChanged(com.android.settings.AccessibilitySettings$ToggleSwitch,boolean)>=android.permission.WRITE_SETTINGS
<android.accounts.IAccountManager$Stub$Proxy\:\ void\ getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>=android.permission.USE_CREDENTIALS
<com.android.settings.ApplicationSettings$1\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WRITE_SETTINGS
<com.android.settings.bluetooth.LocalBluetoothProfileManager\:\ void\ <init>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ setPin(java.lang.String,byte[])>=android.permission.BLUETOOTH_ADMIN
<android.bluetooth.AtParser\:\ android.bluetooth.AtCommandResult\ process(java.lang.String)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothDevice\:\ boolean\ getTrustState()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ boolean\ setScanMode(int,int)>=android.permission.BLUETOOTH
<android.os.IHardwareService$Stub$Proxy\:\ void\ setFlashlightEnabled(boolean)>=android.permission.FLASHLIGHT
<android.filterpacks.base.GLTextureSource\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.media.AudioService$SetModeDeathHandler\:\ void\ binderDied()>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiSettings\:\ void\ forget()>=android.permission.ACCESS_WIFI_STATE
<com.android.gallery3d.ui.PhotoView\:\ void\ switchToHitPicture(int,int)>=android.permission.VIBRATE
<com.android.vcard.VCardEntry\:\ java.util.ArrayList\ constructInsertOperations(android.content.ContentResolver,java.util.ArrayList)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.sip.SipService\:\ void\ updateWakeLocks()>=android.permission.WAKE_LOCK
<android.app.ListActivity\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.contacts.list.LegacyPostalAddressListAdapter\:\ void\ bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.PhotoView\:\ boolean\ onTouch(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.mms.ui.ComposeMessageActivity$1\:\ void\ run()>=android.permission.WRITE_SMS
<com.android.providers.downloads.DownloadThread\:\ int\ getFinalStatusForHttpError(com.android.providers.downloads.DownloadThread$State)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.TextServicesManagerService$TextServicesMonitor\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<android.media.IAudioService$Stub\:\ void\ startBluetoothSco(android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.car.CarRadioService\:\ boolean\ setPreset(android.car.hardware.radio.CarRadioPreset)>=android.car.permission.CAR_RADIO
<com.android.nfc.nxp.NativeNfcManager\:\ void\ notifySeFieldActivated()>=android.permission.BLUETOOTH
<android.filterfw.core.Filter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.Phone\:\ void\ getEnhancedVoicePrivacy(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.exchange.adapter.ContactsSyncAdapter\:\ boolean\ sendLocalChanges(com.android.exchange.adapter.Serializer)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.opp.BluetoothOppService\:\ void\ removeBatch(com.android.bluetooth.opp.BluetoothOppBatch)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ dispose()>=android.permission.WAKE_LOCK
<android.telephony.TelephonyManager\:\ java.lang.String\ getVoiceMailAlphaTag()>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothA2dp\:\ java.util.List\ getDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.settings.tts.TextToSpeechSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.contacts.editor.SelectAccountDialogFragment$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.READ_SYNC_SETTINGS
<android.os.IPowerManager$Stub$Proxy\:\ void\ releaseWakeLock(android.os.IBinder,int)>=android.permission.WAKE_LOCK
<com.android.email.service.MailService\:\ void\ access$400(com.android.email.service.MailService,android.app.AlarmManager)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.UpdateLockService\:\ void\ releaseUpdateLock(android.os.IBinder)>=android.permission.UPDATE_LOCK
<com.android.gallery3d.app.PhotoDataAdapter\:\ void\ access$2300(com.android.gallery3d.app.PhotoDataAdapter)>=android.permission.VIBRATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.util.List\ getKeepUninstalledPackages(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.inputmethod.latin.Utils$UsabilityStudyLogUtils$2\:\ void\ run()>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.bluetooth.opp.BluetoothOppService\:\ void\ deleteShare(int)>=android.permission.BLUETOOTH
<com.android.calendar.alerts.AlertService$NotificationMgrWrapper\:\ void\ notify(java.lang.String,int,com.android.calendar.alerts.AlertService$NotificationWrapper)>=android.permission.VIBRATE
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ disconnectHeadset(java.lang.String)>=android.permission.BLUETOOTH
<android.server.BluetoothA2dpService\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.calendar.event.EditEventHelper\:\ boolean\ saveReminders(java.util.ArrayList,long,java.util.ArrayList,java.util.ArrayList,boolean)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.RIL\:\ void\ exitEmergencyCallbackMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumPage\:\ void\ access$900(com.android.gallery3d.app.AlbumPage,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.CallerInfoCache\:\ void\ refreshCacheEntry()>=android.permission.WRITE_CONTACTS
<com.android.server.BackupManagerService$PerformRestoreTask\:\ void\ restoreNextAgent()>=android.permission.WAKE_LOCK
<com.android.contacts.group.GroupBrowseListAdapter\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<com.android.server.WiredAccessoryObserver\:\ void\ updateState(java.lang.String,java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ notifyDataConnection(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.gallery3d.ui.ScrollBarView\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothDevice\:\ boolean\ setTrust(boolean)>=android.permission.BLUETOOTH
<android.nfc.tech.BasicTagTechnology\:\ void\ connect()>=android.permission.NFC
<com.android.settings.net.DataUsageMeteredSettings\:\ void\ updateNetworks(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.net.NetworkStatsService\:\ void\ dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ getStorageEncryption(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.CallCard\:\ void\ updatePhotoForCallState(com.android.internal.telephony.Call)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.pm.PackageManagerService\:\ boolean\ shouldShowRequestPermissionRationale(java.lang.String,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ setMute(boolean)>=android.permission.WAKE_LOCK
<com.android.settings.accounts.AccountSyncSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.service.PopImapSyncAdapterService\:\ void\ access$000(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.LocationSettings\:\ void\ onStart()>=android.permission.BLUETOOTH
<com.android.internal.telephony.DataConnection$DcActiveState\:\ boolean\ processMessage(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub\:\ boolean\ activeServiceSupportsAssist()>=android.permission.ACCESS_VOICE_INTERACTION_SERVICE
<android.bluetooth.IBluetoothPbap\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<android.bluetooth.BluetoothDeviceProfileState$IncomingHid\:\ void\ enter()>=android.permission.BLUETOOTH
<android.net.VpnService\:\ void\ onRevoke()>=android.permission.BROADCAST_STICKY
<com.android.inputmethod.accessibility.AccessibilityEntityProvider\:\ boolean\ performAction(int,int,android.os.Bundle)>=android.permission.WRITE_CONTACTS
<com.android.settings.Settings$WifiSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.browser.ActivityController\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<android.filterpacks.numeric.SinWaveFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.exchange.adapter.AttachmentLoader\:\ void\ loadAttachment()>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneUtils\:\ boolean\ hangup(com.android.internal.telephony.Call)>=android.permission.WAKE_LOCK
<android.content.ContentResolver\:\ void\ addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>=android.permission.WRITE_SYNC_SETTINGS
<android.filterpacks.imageproc.LomoishFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.location.ILocationManager$Stub$Proxy\:\ boolean\ sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>=android.permission.ACCESS_LOCATION_EXTRA_COMMANDS
<com.android.server.backup.Trampoline\:\ void\ acknowledgeFullBackupOrRestore(int,boolean,java.lang.String,java.lang.String,android.app.backup.IFullBackupRestoreObserver)>=android.permission.BACKUP
<android.filterpacks.base.NullFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.content.IContentService\:\ boolean\ getMasterSyncAutomatically()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.NetworkManagementService\:\ void\ shutdown()>=android.permission.SHUTDOWN
<com.android.bluetooth.pbap.BluetoothPbapService\:\ void\ startRfcommSocketListener()>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiEnabler\:\ void\ setSwitch(android.widget.Switch)>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.BluetoothHandsfree$5\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.internal.telephony.UiccSmsController\:\ boolean\ disableCellBroadcastForSubscriber(int,int,int)>=android.permission.RECEIVE_SMS
<android.webkit.HTML5VideoFullScreen\:\ void\ onPrepared(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.PushReceiver\:\ boolean\ isDuplicateNotification(android.content.Context,com.google.android.mms.pdu.NotificationInd)>=android.permission.READ_SMS
<com.android.inputmethod.latin.LatinIME\:\ void\ initSuggest()>=android.permission.WRITE_CONTACTS
<com.android.providers.downloads.DownloadInfo\:\ void\ startIfReady(long,com.android.providers.downloads.StorageManager)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.content.ContentService\:\ boolean\ getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy\:\ boolean\ dispatchHoverEvent(android.view.MotionEvent,com.android.inputmethod.keyboard.PointerTracker)>=android.permission.WRITE_CONTACTS
<android.filterpacks.imageproc.ImageEncoder\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.phone.CallNotifier\:\ void\ onCustomRingQueryComplete()>=android.permission.WAKE_LOCK
<android.filterfw.core.GraphRunner\:\ void\ run()>=android.permission.RECORD_AUDIO
<com.android.bluetooth.pbapclient.PbapClientService$BluetoothPbapClientBinder\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.wifi.WifiServiceImpl\:\ boolean\ disableNetwork(int)>=android.permission.CHANGE_WIFI_STATE
<com.android.email.Controller\:\ com.android.emailcommon.service.IEmailService\ access$100(com.android.email.Controller,long)>=android.permission.READ_PHONE_STATE
<android.content.SyncManager$SyncAlarmIntentReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.TransactionService\:\ void\ releaseWakeLock()>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ void\ startLegacyVpn(com.android.internal.net.VpnProfile)>=android.permission.ACCESS_NETWORK_STATE, android.permission.CONTROL_VPN
<android.bluetooth.BluetoothAdapter\:\ boolean\ getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)>=android.permission.BLUETOOTH, android.permission.BROADCAST_STICKY
<com.android.internal.telephony.RIL\:\ void\ setCallWaiting(boolean,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.CropRectFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.filterpacks.base.FrameSource\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.net.INetworkPolicyManager\:\ boolean\ isNetworkMetered(android.net.NetworkState)>=android.permission.READ_PHONE_STATE
<com.android.server.WifiService\:\ java.util.List\ getScanResults()>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.DevelopmentSettings\:\ void\ resetDangerousOptions()>=android.permission.WAKE_LOCK
<android.accounts.AccountManagerService\:\ void\ invalidateAuthToken(java.lang.String,java.lang.String)>=android.permission.MANAGE_ACCOUNTS
<android.provider.BrowserContract$Bookmarks\:\ android.net.Uri\ buildFolderUri(long)>=android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment\:\ void\ createContact(com.android.contacts.model.AccountWithDataSet)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.wifi.AdvancedWifiSettings\:\ void\ updateSleepPolicySummary(android.preference.Preference,java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ keyguardDoneDrawing()>=android.permission.WAKE_LOCK
<com.android.mms.ui.DeliveryReportActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.RECEIVE_SMS
<com.android.server.wm.WindowManagerService\:\ void\ readForcedDisplaySizeLocked()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ notifyServiceStateChangedP(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler\:\ void\ updateAutoSelectionCB()>=android.permission.WRITE_SETTINGS
<com.android.server.NetworkManagementService\:\ void\ clearPermission([int)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.exchange.adapter.AbstractSyncAdapter\:\ boolean\ sendLocalChanges(com.android.exchange.adapter.Serializer)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ notifyLidSwitchChanged(long,boolean)>=android.permission.WAKE_LOCK
<com.android.phone.DTMFTwelveKeyDialer\:\ void\ onDialerOpen(boolean)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ boolean\ notifyIncomingConnection(java.lang.String,boolean)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setPasswordMinimumNonLetter(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.policy.impl.LockScreen\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.internal.telephony.Phone\:\ void\ setCdmaRoamingPreference(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.SimpleImageFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiManager\:\ android.net.wifi.WifiManager$Channel\ initialize(android.content.Context,android.os.Looper,android.net.wifi.WifiManager$ChannelListener)>=android.permission.ACCESS_WIFI_STATE
<com.android.providers.downloads.DownloadThread\:\ void\ notifyDownloadCompleted(int,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.exchange.ExchangeService\:\ void\ releaseWakeLock(long)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ void\ sendP2pDiscoveryChangedBroadcast(boolean)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.ITelephonyRegistry$Stub\:\ void\ notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.LinkCapabilities,int,boolean)>=android.permission.BROADCAST_STICKY
<android.server.BluetoothService\:\ void\ finishDisable()>=android.permission.BLUETOOTH
<com.android.music.MediaPlaybackService\:\ void\ gotoNext(boolean)>=android.permission.WAKE_LOCK
<com.google.common.io.CharStreams$2\:\ java.lang.Object\ getInput()>=android.permission.INTERNET
<com.android.server.NetworkManagementService\:\ void\ addLegacyRouteForNetId(int,android.net.RouteInfo,int)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.emailcommon.service.IEmailService\:\ void\ deleteAccountPIMData(long)>=android.permission.WAKE_LOCK
<com.android.calendar.month.MonthByWeekFragment\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_CALENDAR
<com.android.settings.widget.SettingsAppWidgetProvider\:\ void\ onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>=android.permission.BLUETOOTH
<com.android.emailcommon.service.EmailServiceProxy$4\:\ void\ run()>=android.permission.READ_CALENDAR
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ setTTYMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.interactions.PhoneNumberInteraction\:\ void\ onLoadComplete(android.content.Loader,android.database.Cursor)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.DataConnectionTracker\:\ boolean\ onTrySetupData(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.nfc.handover.HandoverManager\:\ android.nfc.NdefRecord\ createBluetoothOobDataRecord()>=android.permission.BLUETOOTH
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ topAppWindowChanged(boolean)>=android.permission.VIBRATE
<com.android.phone.DTMFTwelveKeyDialer\:\ void\ clearInCallScreenReference()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ <init>=android.permission.BLUETOOTH
<com.android.exchange.EasSyncService\:\ java.lang.String\ acknowledgeProvision(com.android.exchange.EasSyncService,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ void\ systemReady(com.android.server.StatusBarManagerService)>=android.permission.WRITE_SETTINGS
<com.android.internal.location.GpsNetInitiatedHandler\:\ void\ setNiNotification(com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification)>=android.permission.VIBRATE
<android.nfc.tech.MifareClassic\:\ byte[]\ transceive(byte[])>=android.permission.NFC
<com.android.calendar.month.MonthListView$1\:\ void\ run()>=android.permission.READ_CALENDAR
<com.android.settings.Settings$PrivacySettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.camera.ui.InLineSettingItem$Listener\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<com.android.settings.inputmethod.InputMethodAndLanguageSettings\:\ void\ saveInputMethodSelectorVisibility(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.contacts.calllog.CallLogQueryHandler\:\ void\ fetchVoicemailOnly()>=android.permission.READ_CALL_LOG
<android.bluetooth.IBluetoothA2dp\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy\:\ java.util.List\ getAdnRecordsInEf(int)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardScreenCallback\:\ void\ reportFailedUnlockAttempt()>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.app.StateManager\:\ void\ onBackPressed()>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetooth$Stub\:\ boolean\ setPasskey(java.lang.String,int)>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$2\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WAKE_LOCK
<android.hardware.location.ContextHubService\:\ I[]\ getContextHubHandles()>=android.permission.LOCATION_HARDWARE
<com.android.server.pm.PackageManagerService\:\ int[]\ getPackageGids(java.lang.String)>=android.permission.READ_EXTERNAL_STORAGE
<com.android.internal.telephony.ITelephony$Stub$Proxy\:\ boolean\ isSimPinEnabled()>=android.permission.READ_PHONE_STATE
<android.filterpacks.imageproc.FillLightFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ editMessageItem(com.android.mms.ui.MessageItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.alerts.AlertService\:\ void\ postNotification(com.android.calendar.alerts.AlertService$NotificationInfo,java.lang.String,android.content.Context,boolean,com.android.calendar.alerts.AlertService$NotificationPrefs,com.android.calendar.alerts.NotificationMgr,int)>=android.permission.READ_CALENDAR
<com.android.server.net.NetworkPolicyManagerService\:\ void\ updateNetworkEnabledLocked()>=android.permission.READ_PHONE_STATE
<android.net.wifi.WifiStateMachine$DriverStartingState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.AppWidgetService\:\ void\ systemReady(boolean)>=android.permission.RECEIVE_BOOT_COMPLETED
<com.android.contacts.ContactsActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.PrivilegedSmsReceiver\:\ void\ finishStartingService(android.app.Service,int)>=android.permission.WAKE_LOCK
<com.android.mms.util.Recycler$MmsRecycler\:\ boolean\ anyThreadOverLimit(android.content.Context)>=android.permission.READ_SMS
<com.android.exchange.ExchangeService\:\ void\ stopAccountSyncs(long)>=android.permission.WAKE_LOCK
<com.android.server.input.InputManagerService$Callbacks\:\ long\ interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>=android.permission.GET_ACCOUNTS
<com.android.phone.PhoneInterfaceManager\:\ boolean\ isRadioOn(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.net.NetworkPolicyManagerService\:\ android.net.NetworkQuotaInfo\ getNetworkQuotaInfo(android.net.NetworkState)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ void\ registerProcessObserver(android.app.IProcessObserver)>=android.permission.SET_ACTIVITY_WATCHER
<com.android.server.am.ActivityManagerService\:\ void\ signalPersistentProcesses(int)>=android.permission.SIGNAL_PERSISTENT_PROCESSES
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ reassociate()>=android.permission.CHANGE_WIFI_STATE
<com.android.settings.fuelgauge.PowerUsageSummary\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ void\ enableLocationUpdates()>=android.permission.CONTROL_LOCATION_UPDATES
<android.filterpacks.imageproc.DrawOverlayFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.contacts.editor.ContactEditorFragment\:\ void\ bindEditorsForNewContact(com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountType)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ boolean\ disableCellBroadcastRange(int,int)>=android.permission.WAKE_LOCK
<com.android.browser.provider.BrowserProvider2$DatabaseHelper\:\ void\ onCreate(android.database.sqlite.SQLiteDatabase)>=android.permission.READ_SYNC_SETTINGS
<android.accounts.AccountAuthenticatorActivity\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ setCdmaSubscription(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ onItemClick(int,long)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager\:\ void\ clearBlacklist()>=android.permission.CHANGE_WIFI_STATE
<android.net.IConnectivityManager$Stub\:\ int\ stopUsingNetworkFeature(int,java.lang.String)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothGattServer\:\ void\ close()>=android.permission.BLUETOOTH
<android.media.MediaScannerConnection\:\ void\ disconnect()>=android.permission.BROADCAST_STICKY
<com.android.phone.InCallScreen\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.email.activity.ActionBarController\:\ void\ access$200(com.android.email.activity.ActionBarController)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.CommandsInterface\:\ void\ acknowledgeLastIncomingGsmSms(boolean,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.SpecialCharSequenceMgr\:\ void\ showIMEIPanel(android.content.Context,boolean,android.telephony.TelephonyManager)>=android.permission.READ_PHONE_STATE
<com.android.browser.homepages.HomeProvider\:\ android.webkit.WebResourceResponse\ shouldInterceptRequest(android.content.Context,java.lang.String)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.emailcommon.service.IAccountService\:\ void\ reconcileAccounts(java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<android.server.BluetoothBondState\:\ void\ setProfilePriorities(java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.contacts.activities.PeopleActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.pm.PackageManagerService\:\ void\ setComponentEnabledSetting(android.content.ComponentName,int,int,int)>=android.permission.CHANGE_COMPONENT_ENABLED_STATE, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ <init>=android.permission.CHANGE_CONFIGURATION
<com.android.gallery3d.app.AlbumPage$2\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.SlideshowActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.WRITE_SMS
<com.android.inputmethod.latin.spellcheck.DictionaryPool\:\ com.android.inputmethod.latin.spellcheck.DictAndProximity\ takeOrGetNull()>=android.permission.WRITE_CONTACTS
<com.android.server.ThrottleService$DataRecorder\:\ boolean\ setNextPeriod(java.util.Calendar,java.util.Calendar)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ enableEnhancedVoicePrivacy(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth\:\ boolean\ registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)>=android.permission.BLUETOOTH
<com.android.internal.telephony.SubscriptionController\:\ int\ addSubInfoRecord(java.lang.String,int)>=android.permission.MODIFY_PHONE_STATE
<android.media.AudioManager\:\ void\ reloadAudioSettings()>=android.permission.WRITE_SETTINGS
<android.filterpacks.base.GLTextureTarget\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.browser.provider.BrowserProvider2\:\ int\ updateHistoryInTransaction(android.content.ContentValues,java.lang.String,java.lang.String[])>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.exchange.EasSyncService\:\ boolean\ sendSettings()>=android.permission.WAKE_LOCK
<android.provider.Browser\:\ void\ clearSearches(android.content.ContentResolver)>=android.permission.GET_ACCOUNTS
<com.android.mms.transaction.SmsMessageSender\:\ void\ <init>=android.permission.RECEIVE_SMS
<com.android.phone.RespondViaSmsManager$RespondViaSmsItemClickListener\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.BLUETOOTH
<com.android.providers.contacts.VoicemailStatusTable\:\ int\ delete(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<android.accounts.AccountManager\:\ void\ setUserData(android.accounts.Account,java.lang.String,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ android.content.ComponentName\ getDeviceOwnerComponent(boolean)>=android.permission.MANAGE_USERS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isAffiliatedUser()>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.Settings$InputMethodAndLanguageSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker\:\ void\ setImageViewResources(android.content.Context,android.widget.RemoteViews)>=android.permission.BLUETOOTH
<com.android.mms.data.WorkingMessage\:\ void\ asyncDeleteDraftSmsMessage(com.android.mms.data.Conversation)>=android.permission.RECEIVE_SMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ choosePrivateKeyAlias(int,android.net.Uri,java.lang.String,android.os.IBinder)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.gallery3d.app.PhotoPage\:\ boolean\ onItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.service.EmailBroadcastProcessorService\:\ void\ onHandleIntent(android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.browser.ActivityController\:\ void\ onSaveInstanceState(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.pan.PanService$BluetoothPanBinder\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ void\ moveTaskBackwards(int)>=android.permission.REORDER_TASKS
<com.android.mms.data.Contact$ContactsCache\:\ void\ updateContact(com.android.mms.data.Contact)>=android.permission.WRITE_CONTACTS
<com.android.email.activity.UIControllerOnePane\:\ void\ onActivityResume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ boolean\ syncBluetoothState()>=android.permission.BLUETOOTH
<com.android.bluetooth.pbap.BluetoothPbapObexServer\:\ int\ pullVcardEntry(byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.Operation,java.lang.String,java.lang.String)>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.cdma.CdmaServiceStateTracker$2\:\ void\ onChange(boolean)>=android.permission.SET_TIME_ZONE
<android.net.ConnectivityManager\:\ boolean\ isTetheringSupported()>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.IAccountManager$Stub$Proxy\:\ android.accounts.Account[]\ getAccounts(java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.phone.PhoneInterfaceManager\:\ void\ access$100(com.android.phone.PhoneInterfaceManager)>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.UserHistoryDictionary\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.phone.OutgoingCallBroadcaster$OutgoingCallReceiver\:\ void\ doReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothEventManager$DeviceFoundHandler\:\ void\ onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.email.activity.MessageListFragment$MessageOpenTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.InCallScreen\:\ void\ access$400(com.android.phone.InCallScreen,android.os.AsyncResult)>=android.permission.BLUETOOTH
<com.android.vcard.VCardEntryCommitter\:\ void\ onEntryCreated(com.android.vcard.VCardEntry)>=android.permission.READ_SYNC_SETTINGS
<android.net.sip.SipAudioCall\:\ void\ releaseWifiHighPerfLock()>=android.permission.WAKE_LOCK
<com.android.contacts.activities.PeopleActivity\:\ void\ setupContactDetailFragment(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.tts.TtsEngineSettingsFragment\:\ void\ updateDefaultLocalePref(java.util.ArrayList)>=android.permission.WRITE_SETTINGS
<android.view.WindowManagerPolicy\:\ int\ checkAddPermission(android.view.WindowManager$LayoutParams)>=android.permission.SYSTEM_ALERT_WINDOW
<com.android.exchange.adapter.CalendarSyncAdapter\:\ boolean\ sendLocalChanges(com.android.exchange.adapter.Serializer)>=android.permission.READ_CALENDAR
<android.provider.Telephony$Threads\:\ long\ getOrCreateThreadId(android.content.Context,java.util.Set)>=android.permission.READ_SMS
<android.media.AsyncPlayer\:\ void\ access$200(android.media.AsyncPlayer,android.media.AsyncPlayer$Command)>=android.permission.WAKE_LOCK
<android.net.INetworkPolicyManager$Stub\:\ void\ setRestrictBackground(boolean)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfo\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_PHONE_STATE
<com.android.settings.SecuritySettings\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_SETTINGS
<android.media.AsyncPlayer\:\ void\ stop()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.PhotoPage\:\ void\ updateCurrentPhoto(com.android.gallery3d.data.MediaItem)>=android.permission.NFC
<com.android.email.Controller$ServiceCallback\:\ void\ syncMailboxStatus(long,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.media.RingtonePickerActivity\:\ void\ run()>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth\:\ java.lang.String[]\ listBonds()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onDataStallAlarm(int)>=android.permission.WAKE_LOCK
<com.android.mms.ui.SlideViewInterface\:\ void\ stopVideo()>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ onBackPressed()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.CrossProcessFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.WallpaperManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.SET_WALLPAPER_HINTS
<com.android.gallery3d.util.ThreadPool$Job\:\ java.lang.Object\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<android.net.ThrottleManager\:\ long\ getByteCount(java.lang.String,int,int,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.test.SimulatedCommands\:\ void\ onRadioAvailable()>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ endInCallScreenSession(boolean)>=android.permission.BLUETOOTH
<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.settings.widget.SettingsAppWidgetProvider\:\ void\ updateButtons(android.widget.RemoteViews,android.content.Context)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothDevice\:\ boolean\ setPin(byte[])>=android.permission.BLUETOOTH_ADMIN
<com.android.settings.wifi.WifiStatusTest\:\ void\ access$100(com.android.settings.wifi.WifiStatusTest,android.net.NetworkInfo)>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ notifyServiceStateChangedP(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<com.android.phone.CallNotifier\:\ void\ onDisconnect(android.os.AsyncResult)>=android.permission.BLUETOOTH
<android.location.ILocationManager\:\ android.os.Bundle\ getProviderInfo(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<android.net.ConnectivityManager\:\ void\ setMobileDataEnabled(boolean)>=android.permission.CHANGE_NETWORK_STATE
<com.android.phone.CallCard\:\ void\ updateCallStateWidgets(com.android.internal.telephony.Call)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardScreenCallback\:\ void\ goToLockScreen()>=android.permission.GET_ACCOUNTS
<android.bluetooth.BluetoothAdapter\:\ android.bluetooth.BluetoothServerSocket\ listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)>=android.permission.BLUETOOTH
<com.android.browser.WebStorageSizeManager\:\ void\ onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)>=android.permission.VIBRATE
<com.android.phone.sip.SipSettings$3\:\ void\ run()>=android.permission.USE_SIP
<com.android.internal.telephony.ITelephony$Stub\:\ boolean\ isSimPinEnabled()>=android.permission.READ_PHONE_STATE
<com.android.server.WifiService\:\ boolean\ isMulticastEnabled()>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.BluetoothHandsfree\:\ com.android.phone.BluetoothHandsfree\ init(android.content.Context,com.android.internal.telephony.CallManager)>=android.permission.BLUETOOTH
<com.android.email.view.RigidWebView\:\ void\ <init>=android.permission.INTERNET
<android.os.SystemVibrator\:\ void\ cancel()>=android.permission.VIBRATE
<com.android.server.wifi.WifiServiceImpl\:\ boolean\ enableNetwork(int,boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.browser.Controller\:\ void\ onSaveInstanceState(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ updateNetworkRulesLocked()>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.MessageViewFragmentBase$ReloadMessageTask\:\ void\ onSuccess(com.android.emailcommon.provider.EmailContent$Message)>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.event.EditEventFragment$QueryHandler\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.WRITE_CALENDAR
<com.android.server.WifiService\:\ boolean\ releaseWifiLock(android.os.IBinder)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ boolean\ isAllowedProviderSafe(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.BLUETOOTH
<com.android.calendar.agenda.AgendaListView\:\ void\ deleteSelectedEvent()>=android.permission.READ_CALENDAR
<com.android.settings.AppWidgetPickActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.ExpandableBinaryDictionary\:\ boolean\ isValidWord(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.browser.TabControl\:\ void\ restoreState(android.os.Bundle,long,boolean,boolean)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ rejectCall()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.RuimFileHandler\:\ void\ loadEFTransparent(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub$Proxy\:\ int\ getScanMode()>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setDeviceOwnerLockScreenInfo(android.content.ComponentName,java.lang.CharSequence)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.BluetoothHandsfree$8\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.settings.IccLockSettings\:\ void\ tryChangePin()>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ void\ access$2200(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,boolean)>=android.permission.BROADCAST_STICKY
<android.bluetooth.BluetoothGatt\:\ boolean\ writeDescriptor(android.bluetooth.BluetoothGattDescriptor)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.TileImageView\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<com.google.common.io.Files\:\ long\ getChecksum(java.io.File,java.util.zip.Checksum)>=android.permission.INTERNET
<android.media.AudioService\:\ void\ dispatchMediaKeyEventUnderWakelock(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<android.media.effect.effects.DocumentaryEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.settings.accounts.SyncSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<android.app.NativeActivity\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.gallery3d.app.AbstractGalleryActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getPasswordMinimumNumeric(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.media.effect.effects.PosterizeEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.settings.inputmethod.InputMethodPreference\:\ void\ setChecked(boolean,boolean)>=android.permission.WRITE_SETTINGS
<android.media.IAudioService$Stub$Proxy\:\ void\ reloadAudioSettings()>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$StorageUseActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.server.pm.ShutdownThread\:\ void\ shutdown(android.content.Context,boolean)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME\:\ void\ onTextInput(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$23\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.wm.WindowManagerService\:\ void\ updateResizingWindows(com.android.server.wm.WindowState)>=android.permission.WAKE_LOCK
<com.android.contacts.ContactSaveService\:\ void\ buildJoinContactDiff(java.util.ArrayList,long,long)>=android.permission.READ_SYNC_SETTINGS
<android.location.ILocationManager\:\ void\ setTestProviderEnabled(java.lang.String,boolean)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.settings.bluetooth.DevicePickerFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.preferences.WebsiteSettingsFragment$SiteAdapter$UpdateFromBookmarksDbTask\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.server.DockObserver\:\ void\ onUEvent(android.os.UEventObserver$UEvent)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ boolean\ requestRouteToHost(int,int)>=android.permission.CHANGE_NETWORK_STATE
<android.app.ActivityManagerNative\:\ boolean\ handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>=android.permission.WAKE_LOCK
<com.android.contacts.ContactSaveService\:\ void\ onHandleIntent(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.data.WorkingMessage\:\ void\ discard()>=android.permission.RECEIVE_SMS
<android.hardware.location.ActivityRecognitionHardware\:\ boolean\ enableActivityEvent(java.lang.String,int,long)>=android.permission.LOCATION_HARDWARE
<com.android.server.WifiService\:\ void\ enforceMulticastChangePermission()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.contacts.quickcontact.QuickContactActivity\:\ void\ access$700(com.android.contacts.quickcontact.QuickContactActivity,com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.event.EditEventFragment\:\ void\ onDestroy()>=android.permission.READ_CALENDAR
<com.android.server.NetworkManagementService\:\ void\ setGlobalAlert(long)>=android.permission.CONNECTIVITY_INTERNAL
<android.view.WindowManagerPolicy\:\ void\ screenTurningOn(android.view.WindowManagerPolicy$ScreenOnListener)>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ onClick(android.view.View)>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ int\ getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)>=android.permission.BLUETOOTH
<com.android.settings.DisplaySettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.contacts.model.EntityDeltaList\:\ java.util.ArrayList\ buildDiff()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.UIControllerOnePane\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.videosink.MediaEncoderFilter\:\ void\ startRecording(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ boolean\ onTrySetupData(java.lang.String)>=android.permission.BROADCAST_STICKY
<android.media.effect.SizeChangeEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.Utils\:\ void\ showConnectingError(android.content.Context,java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiBatchedScanStartedFromSource(android.os.WorkSource,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.server.TelephonyRegistry\:\ void\ broadcastDataConnectionFailed(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<android.accounts.IAccountManager$Stub$Proxy\:\ void\ setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.settings.DataUsageSummary\:\ void\ setPolicyWarningBytes(long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ android.os.Bundle\ getApplicationRestrictions(android.content.ComponentName,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.filterpacks.imageproc.PosterizeFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.phone.CallFeaturesSetting\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.browser.UiController\:\ void\ setActiveTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<com.android.camera.Camera\:\ void\ onCreate(android.os.Bundle)>=android.permission.RECORD_AUDIO
<com.android.browser.BreadCrumbView\:\ void\ pop(boolean)>=android.permission.GET_ACCOUNTS
<com.android.server.sip.SipService\:\ void\ notifyProfileRemoved(android.net.sip.SipProfile)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ getPreferredNetworkType(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.development.AccountsTester\:\ void\ onStart()>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.gsm.GsmCall\:\ void\ hangup()>=android.permission.WAKE_LOCK
<com.android.browser.provider.BrowserProvider2\:\ int\ updateBookmarksInTransaction(android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.mms.ui.ConversationList\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.WRITE_SMS
<com.android.phone.BluetoothHandsfree$23\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.ControllerOverlay$Listener\:\ void\ onReplay()>=android.permission.WAKE_LOCK
<android.filterpacks.text.StringSource\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.list.AccountFilterActivity$MyLoaderCallbacks\:\ void\ onLoadFinished(android.content.Loader,java.util.List)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.PhotoDataAdapter$ScreenNailJob\:\ com.android.gallery3d.ui.ScreenNail\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.wallpaper.WallpaperManagerService\:\ boolean\ setLockWallpaperCallback(android.app.IWallpaperManagerCallback)>=android.permission.INTERNAL_SYSTEM_WINDOW
<com.android.vcard.VCardEntry$WebsiteData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothA2dp$Stub\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothSocket$SdpHelper\:\ int\ doSdp()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.ManageCachePage\:\ void\ initializeData(android.os.Bundle)>=android.permission.VIBRATE
<com.android.internal.telephony.Phone\:\ void\ invokeOemRilRequestRaw(byte[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.DatabaseModifier\:\ long\ insert(java.lang.String,java.lang.String,android.content.ContentValues)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.server.ConnectivityService\:\ android.net.NetworkInfo\ getNetworkInfoForUid(android.net.Network,int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.recent.RecentsHorizontalScrollView$2\:\ void\ onClick(android.view.View)>=android.permission.VIBRATE
<com.android.calendar.event.EditEventFragment\:\ void\ saveReminders()>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ sendBurstDtmf(java.lang.String,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.TelephonyRegistry\:\ void\ broadcastDataConnectionStateChanged(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.LinkCapabilities,boolean)>=android.permission.BROADCAST_STICKY
<android.app.DownloadManager\:\ long\ enqueue(android.app.DownloadManager$Request)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.app.ActivityGroup\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.commands.monkey.Monkey\:\ boolean\ getSystemInterfaces()>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.SlotView$MyGestureListener\:\ boolean\ onSingleTapUp(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.quicksearchbox.google.GoogleSource\:\ com.android.quicksearchbox.SourceResult\ queryInternal(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.net.NetworkStatsService\:\ void\ access$600(com.android.server.net.NetworkStatsService)>=android.permission.WAKE_LOCK
<com.android.server.power.PowerManagerService$BinderService\:\ void\ rebootSafeMode(boolean,boolean)>=android.permission.REBOOT
<com.android.contacts.list.EmailAddressPickerFragment\:\ void\ finish()>=android.permission.READ_SYNC_SETTINGS
<com.android.exchange.CalendarSyncEnabler\:\ java.lang.String\ enableEasCalendarSyncInternalForTest()>=android.permission.GET_ACCOUNTS
<com.android.internal.widget.LockPatternView\:\ com.android.internal.widget.LockPatternView$Cell\ detectAndAddHit(float,float)>=android.permission.WAKE_LOCK
<com.android.email.Controller$Result\:\ void\ serviceCheckMailCallback(com.android.emailcommon.mail.MessagingException,long,long,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.PostalAddressPickerFragment\:\ void\ setSearchMode(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.emailcommon.service.EmailServiceProxy$3\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.providers.calendar.CalendarProvider2\:\ int\ deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[],boolean)>=android.permission.READ_CALENDAR
<android.filterpacks.imageproc.SepiaFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.IccFileHandler\:\ void\ updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.media.effect.effects.BitmapOverlayEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.calendar.event.AttendeesView$PresenceQueryHandler\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<android.content.SyncManager$SyncHandler\:\ void\ runSyncFinishedOrCanceledLocked(android.content.SyncResult,android.content.SyncManager$ActiveSyncContext)>=android.permission.WAKE_LOCK
<com.android.providers.downloads.DownloadInfo\:\ int\ checkCanUseNetwork()>=android.permission.ACCESS_NETWORK_STATE
<android.server.BluetoothService\:\ boolean\ unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ copyMedia(long)>=android.permission.WRITE_SMS
<android.net.wifi.WifiManager\:\ boolean\ pingSupplicant()>=android.permission.ACCESS_WIFI_STATE
<android.net.VpnService\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1\:\ void\ onResult(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.ComposeMessageActivity\:\ void\ confirmDeleteThread(long)>=android.permission.READ_SMS
<com.android.internal.telephony.PhoneSubInfo\:\ java.lang.String\ getIccSerialNumber()>=android.permission.READ_PHONE_STATE
<com.android.browser.SnapshotTab\:\ void\ putInBackground()>=android.permission.GET_ACCOUNTS
<com.android.phone.CallNotifier\:\ void\ silenceRinger()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.CropView$FaceHighlightView\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.AccessibilitySettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.app.IActivityManager\:\ void\ killAllBackgroundProcesses()>=android.permission.KILL_BACKGROUND_PROCESSES
<com.android.browser.search.SearchEngine\:\ android.database.Cursor\ getSuggestions(android.content.Context,java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.DevelopmentSettings\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth\:\ boolean\ setDeviceOutOfBandData(java.lang.String,byte[],byte[])>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.RIL\:\ void\ supplyIccPinForApp(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.MoviePlayer\:\ void\ access$1000(com.android.gallery3d.app.MoviePlayer)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumPage$2\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ClassZeroActivity\:\ android.net.Uri\ storeMessage(android.telephony.SmsMessage)>=android.permission.RECEIVE_SMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setRequiredStrongAuthTimeout(android.content.ComponentName,long,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.calendar.EmailAddressAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageCompose$QuickResponseChecker\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<android.media.IAudioService$Stub$Proxy\:\ void\ dispatchMediaKeyEvent(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService\:\ void\ setRepeatMode(int)>=android.permission.WAKE_LOCK
<com.google.common.io.CharStreams\:\ long\ copy(com.google.common.io.InputSupplier,java.lang.Appendable)>=android.permission.INTERNET
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ notifyIncomingConnection(java.lang.String,boolean)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.AutoFixFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ fixTimeZone(java.lang.String)>=android.permission.SET_TIME_ZONE
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ boolean\ enableCellBroadcast(int)>=android.permission.WAKE_LOCK
<com.android.contacts.activities.ConfirmAddDetailActivity$PersistTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.AllInOneActivity$QueryHandler\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.DockService$4\:\ void\ onDismiss(android.content.DialogInterface)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.GLRootView$IdleRunner\:\ void\ run()>=android.permission.RECORD_AUDIO
<com.android.server.statusbar.StatusBarManagerService\:\ void\ remTile(android.content.ComponentName)>=android.permission.STATUS_BAR
<com.android.phone.BluetoothHandsfree$4\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.CommandsInterface\:\ void\ reportStkServiceIsRunning(android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiApConfigStore$InactiveState\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.providers.contacts.VoicemailContentProvider\:\ com.android.providers.contacts.VoicemailContentProvider$UriData\ checkPermissionsAndCreateUriData(android.net.Uri)>=com.android.voicemail.permission.ADD_VOICEMAIL
<android.provider.Settings$System\:\ boolean\ putString(android.content.ContentResolver,java.lang.String,java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.systemui.usb.UsbStorageActivity\:\ void\ access$900(com.android.systemui.usb.UsbStorageActivity)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<android.content.IContentService$Stub\:\ java.util.List\ getCurrentSyncs()>=android.permission.READ_SYNC_STATS
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter\:\ void\ onPressKey(int)>=android.permission.WRITE_CONTACTS
<com.android.server.location.GpsLocationProvider\:\ void\ reportAGpsStatus(int,int,int)>=android.permission.BLUETOOTH
<android.accounts.AccountManagerService\:\ void\ getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>=android.permission.GET_ACCOUNTS
<com.android.browser.Controller$5\:\ java.lang.String[]\ doInBackground(java.lang.Void[])>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.email.activity.UIControllerBase\:\ void\ onMessageNotExists()>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.SnapshotTab\:\ void\ removeFromTree()>=android.permission.GET_ACCOUNTS
<com.android.music.IMediaPlaybackService$Stub$Proxy\:\ void\ openFile(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$TextToSpeechSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.server.am.ActivityManagerService\:\ boolean\ unlockUser(int,[byte,[byte,android.os.IProgressListener)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.server.BluetoothService\:\ boolean\ disconnectInputDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.provider.Downloads\:\ void\ removeAllDownloadsByPackage(android.content.Context,java.lang.String,java.lang.String)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.net.wifi.IWifiManager$Stub$Proxy\:\ int\ getWifiEnabledState()>=android.permission.ACCESS_WIFI_STATE
<android.net.ConnectivityManager\:\ android.net.NetworkInfo\ getNetworkInfo(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.statusbar.StatusBarManagerService\:\ void\ onNotificationClick(java.lang.String)>=android.permission.STATUS_BAR_SERVICE
<android.net.wifi.IWifiManager$Stub\:\ boolean\ pingSupplicant()>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.accounts.ManageAccountsSettings\:\ void\ onPrepareOptionsMenu(android.view.Menu)>=android.permission.READ_SYNC_STATS
<com.android.wallpaper.grass.GrassView\:\ void\ surfaceChanged(android.view.SurfaceHolder,int,int,int)>=android.permission.ACCESS_COARSE_LOCATION
<android.app.ActivityManagerNative\:\ void\ moveTaskBackwards(int)>=android.permission.REORDER_TASKS
<android.net.wifi.WifiManager\:\ boolean\ startScan()>=android.permission.CHANGE_WIFI_STATE
<com.android.nfc.NfcService\:\ void\ onCardEmulationAidSelected(byte[])>=android.permission.BLUETOOTH
<com.android.internal.widget.multiwaveview.GlowPadView\:\ void\ doFinish()>=android.permission.BLUETOOTH
<com.android.email.activity.MessageCompose$6\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.music.AudioPreview$PreviewPlayer\:\ void\ start()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ requestIsimAuthentication(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.DeviceStorageMonitorService\:\ void\ sendFullNotification()>=android.permission.BROADCAST_STICKY
<com.android.settings.Settings$KeyboardLayoutPickerActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.email.service.MailService\:\ void\ restoreSyncReports(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl\:\ boolean\ isActiveNetworkMetered(android.net.ConnectivityManager)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ void\ notifyAndAcknowledgeLastIncomingSms(boolean,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ notifyServiceStateChangedP(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<com.android.settings.Settings$DevelopmentSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.sap.SapService$SapBinder\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<com.android.settings.Settings$ManageAccountsSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<android.net.IConnectivityManager$Stub$Proxy\:\ boolean\ setRadios(boolean)>=android.permission.CHANGE_NETWORK_STATE
<com.android.browser.WebViewController\:\ boolean\ switchToTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_SYNC_SETTINGS
<android.os.storage.IMountService\:\ void\ unmountVolume(java.lang.String,boolean,boolean)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.settings.Settings$ApplicationSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.server.VibratorService\:\ void\ onInputDeviceRemoved(int)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ setSystemUiVisibility(int,int)>=android.permission.VIBRATE
<com.android.systemui.screenshot.SaveImageInBackgroundTask\:\ void\ onPostExecute(java.lang.Object)>=android.permission.VIBRATE
<com.android.settings.Settings$CryptKeeperSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.music.MediaPlaybackService\:\ void\ onCreate()>=android.permission.WAKE_LOCK
<com.android.calendar.agenda.AgendaFragment\:\ void\ handleEvent(com.android.calendar.CalendarController$EventInfo)>=android.permission.WRITE_CALENDAR
<com.android.server.connectivity.Vpn\:\ void\ startLegacyVpn(com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>=android.permission.BROADCAST_STICKY
<com.android.server.ConnectivityService\:\ void\ setGlobalProxy(android.net.ProxyProperties)>=android.permission.WRITE_SETTINGS
<com.android.contacts.list.ContactEntryListAdapter\:\ android.net.Uri\ getContactUri(int,android.database.Cursor,int,int)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ disconnect()>=android.permission.CHANGE_WIFI_STATE
<android.server.BluetoothEventLoop\:\ void\ onCreateDeviceResult(java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.server.wm.WindowManagerService\:\ void\ setAnimationScales([float)>=android.permission.SET_ANIMATION_SCALE
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ boolean\ access$400(com.android.internal.telephony.gsm.SimSmsInterfaceManager,com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[])>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$24\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.server.BatteryService$2\:\ void\ onUEvent(android.os.UEventObserver$UEvent)>=android.permission.BLUETOOTH
<android.server.BluetoothA2dpService\:\ boolean\ isDisconnectSinkFeasible(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.ManageCachePage$4\:\ void\ onSingleTapUp(int)>=android.permission.VIBRATE
<android.inputmethodservice.KeyboardView\:\ void\ showPreview(int)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.server.RecognitionManagerService\:\ void\ setCurRecognizer(android.content.ComponentName)>=android.permission.WRITE_SETTINGS
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ unregisterServer(int)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ getBluetoothContactSharingDisabledForUser(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.net.wifi.WifiManager\:\ boolean\ setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>=android.permission.CHANGE_WIFI_STATE
<android.filterpacks.imageproc.ContrastFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper\:\ boolean\ hasEnrolledFingerprints(int,java.lang.String)>=android.permission.USE_FINGERPRINT
<android.net.IThrottleManager\:\ long\ getResetTime(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.webkit.WebViewClassic\:\ void\ onDraw(android.graphics.Canvas)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ supplyIccPukForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.activity.ContactStatusLoader\:\ com.android.email.activity.ContactStatusLoader$Result\ loadInBackground()>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$AndroidSpellCheckerSession\:\ android.view.textservice.SuggestionsInfo[]\ onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>=android.permission.WRITE_CONTACTS
<com.android.systemui.statusbar.CommandQueue$Callbacks\:\ void\ addNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>=android.permission.VIBRATE
<com.android.server.WifiService\:\ android.net.wifi.WifiInfo\ getConnectionInfo()>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.bluetooth.BluetoothEventManager$ScanningStateChangedHandler\:\ void\ onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.TelephonyRegistry\:\ void\ notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.LinkCapabilities,int,boolean)>=android.permission.BROADCAST_STICKY
<com.android.inputmethod.latin.ExpandableBinaryDictionary\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccProvider\:\ int\ update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.CommandsInterface\:\ void\ getIMSI(android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiWatchdogStateMachine$NotConnectedState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.google.android.mms.pdu.PduPersister\:\ com.google.android.mms.pdu.GenericPdu\ load(android.net.Uri)>=android.permission.WRITE_SMS
<android.nfc.INfcTag$Stub$Proxy\:\ int\ setTimeout(int,int)>=android.permission.NFC
<android.net.ConnectivityManager\:\ void\ registerNetworkCallback(android.net.NetworkRequest,android.app.PendingIntent)>=android.permission.ACCESS_NETWORK_STATE, android.permission.ACCESS_WIFI_STATE
<com.android.settings.Settings$StorageSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<android.bluetooth.BluetoothHeadset\:\ boolean\ startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.mms.data.WorkingMessage\:\ void\ sendSmsWorker(java.lang.String,java.lang.String,long)>=android.permission.RECEIVE_SMS
<com.android.server.tv.TvInputManagerService$BinderService\:\ java.util.List\ getHardwareList()>=android.permission.TV_INPUT_HARDWARE
<com.android.phone.BluetoothHandsfree$17\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ onActivityStart()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader\:\ com.android.contacts.list.CustomContactListFilterActivity$AccountSet\ loadInBackground()>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.filterfw.core.FilterGraph\:\ void\ closeFilters(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.email.Controller$LegacyListener\:\ void\ checkMailFinished(android.content.Context,long,long,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.connectivity.MetricsLoggerService$MetricsLoggerImpl\:\ void\ unregister(android.app.PendingIntent)>=android.permission.DUMP
<android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.music.MediaPlaybackService$MultiPlayer$1\:\ void\ onCompletion(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH_ADMIN
<android.os.PowerManager$WakeLock$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumPage$2\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<android.accounts.AccountManager$7\:\ void\ doWork()>=android.permission.MANAGE_ACCOUNTS
<com.android.server.ThrottleService\:\ void\ shutdown()>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.SubscriptionController\:\ java.lang.String\ getSubscriptionProperty(int,java.lang.String,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.email.activity.MessageViewFragmentBase$1\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.location.GpsLocationProvider\:\ void\ updateNetworkState(int,android.net.NetworkInfo)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.RuimRecords\:\ void\ onAllRecordsLoaded()>=android.permission.BROADCAST_STICKY
<com.android.gallery3d.app.PhotoDataAdapter\:\ void\ updateCurrentIndex(int)>=android.permission.VIBRATE
<com.android.nfc.NfcService$TagService\:\ int\ ndefMakeReadOnly(int)>=android.permission.NFC
<android.media.effect.effects.BrightnessEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<android.media.AudioService\:\ boolean\ checkAudioSettingsPermission(java.lang.String)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.server.BluetoothInputProfileHandler\:\ boolean\ setInputDevicePriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<com.android.camera.CameraScreenNail\:\ void\ directDraw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.calendar.AllInOneActivity\:\ void\ onBackPressed()>=android.permission.WRITE_CALENDAR
<android.media.effect.effects.SepiaEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ void\ setGlobalProxy(android.net.ProxyProperties)>=android.permission.WRITE_SETTINGS
<com.android.camera.ActivityBase$MyAppBridge\:\ void\ access$100(com.android.camera.ActivityBase$MyAppBridge,int)>=android.permission.VIBRATE
<android.bluetooth.IBluetooth$Stub\:\ int\ addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)>=android.permission.BLUETOOTH
<android.view.WindowManagerPolicy$WindowManagerFuncs\:\ void\ reevaluateStatusBarVisibility()>=android.permission.WAKE_LOCK
<com.android.nfc.NfcService$NfcAdapterService\:\ void\ setNdefPushCallback(android.nfc.INdefPushCallback)>=android.permission.NFC
<com.android.mms.data.Conversation$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SMS
<com.android.server.wm.Session\:\ int\ addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)>=android.permission.SYSTEM_ALERT_WINDOW
<com.android.settings.Settings$BluetoothSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<android.server.BluetoothService\:\ android.os.ParcelFileDescriptor\ getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.email.activity.MailboxListFragment$FindParentMailboxTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothGatt\:\ boolean\ connect()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ java.util.List\ getConnectedInputDevices()>=android.permission.BLUETOOTH
<com.android.settings.DreamSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<android.provider.ContactsContract$SyncState\:\ void\ set(android.content.ContentProviderClient,android.accounts.Account,byte[])>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wm.WindowManagerService$PolicyThread\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ onSimStateChanged(com.android.internal.telephony.IccCard$State)>=android.permission.WAKE_LOCK
<android.accounts.AccountManager\:\ java.lang.String\ getUserData(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<android.server.BluetoothService\:\ int\ getRemoteClass(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getGroupIdLevel1(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.contacts.list.ContactListFilterControllerImpl\:\ void\ setContactListFilter(com.android.contacts.list.ContactListFilter,boolean,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.AccountUnlockScreen$1\:\ void\ run()>=android.permission.GET_ACCOUNTS
<java.net.URL\:\ java.net.URLConnection\ openConnection()>=android.permission.INTERNET
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ setName(java.lang.String)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.ConnectivityService\:\ void\ access$900(com.android.server.ConnectivityService,android.net.NetworkInfo)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.usage.UsageStatsService$BinderService\:\ void\ onCarrierPrivilegedAppsChanged()>=android.permission.BIND_CARRIER_SERVICES
<android.app.Activity\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.providers.downloads.SystemFacade\:\ void\ postNotification(long,android.app.Notification)>=android.permission.VIBRATE
<android.accounts.AccountManager$6\:\ android.accounts.AccountManagerFuture\ start()>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.MessageListItem$2\:\ void\ onPduLoaded(com.android.mms.ui.MessageItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ getPreferredNetworkType(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ notifyDataConnection(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.contacts.activities.DialtactsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ setProhibitMode(boolean)>=android.permission.HDMI_CEC
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ResolveInfo\ resolveIntent(android.content.Intent,java.lang.String,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.list.ContactEntryListFragment\:\ void\ finish()>=android.permission.READ_SYNC_SETTINGS
<android.app.ListActivity\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ getPreferredNetworkType(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageInstallerService\:\ android.content.pm.ParceledListSlice\ getAllSessions(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.BootReceiver\:\ void\ access$100(com.android.server.BootReceiver,android.content.Context)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.filterpacks.imageproc.BlendFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.google.common.io.Files\:\ void\ copy(java.io.File,java.io.File)>=android.permission.INTERNET
<com.android.settings.wifi.WpsDialog$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_WIFI_STATE
<com.android.nfc.P2pEventManager\:\ void\ onP2pInRange()>=android.permission.VIBRATE
<com.android.server.wm.WindowManagerService\:\ void\ unsetAppFreezingScreenLocked(com.android.server.wm.AppWindowToken,boolean,boolean)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.SendTransaction\:\ byte[]\ sendPdu(byte[])>=android.permission.CHANGE_NETWORK_STATE
<com.android.gallery3d.ui.UndoBarView\:\ boolean\ onTouch(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ unregisterForSuppServiceNotification(android.os.Handler)>=android.permission.WAKE_LOCK
<android.content.ContentResolver\:\ boolean\ getSyncAutomatically(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.wifi.WifiSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.server.net.NetworkPolicyManagerService\:\ void\ updateNotificationsLocked()>=android.permission.READ_PHONE_STATE
<android.nfc.NfcAdapter\:\ boolean\ disableNdefPush()>=android.permission.BLUETOOTH
<android.preference.VolumePreference\:\ void\ onSampleStarting(android.preference.VolumePreference$SeekBarVolumizer)>=android.permission.WAKE_LOCK
<android.accounts.AccountManagerService\:\ java.lang.String\ peekAuthToken(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.contacts.activities.JoinContactActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.Utils\:\ void\ showError(android.content.Context,java.lang.String,int)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothHeadset\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.voicedialer.VoiceDialerActivity\:\ int\ playSound(int)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnabledState\:\ void\ exit()>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ void\ sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.settings.bluetooth.BluetoothSettings$1\:\ void\ updateDeviceName()>=android.permission.BLUETOOTH
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker\:\ void\ setCurrentState(android.content.Context,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.NotificationTransaction\:\ void\ <init>=android.permission.WRITE_SMS
<com.android.settings.AccessibilitySettings$SettingsPackageMonitor\:\ void\ onSomePackagesChanged()>=android.permission.WRITE_SETTINGS
<com.android.settings.bluetooth.BluetoothEnabler\:\ void\ <init>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.TileImageView\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.DataUsageSummary\:\ void\ setMobileDataEnabled(boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.pbapclient.PbapClientService$BluetoothPbapClientBinder\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ int\ setAllowedCarriers(int,java.util.List)>=android.permission.MODIFY_PHONE_STATE
<android.nfc.tech.MifareUltralight\:\ void\ reconnect()>=android.permission.NFC
<android.server.BluetoothEventLoop\:\ void\ onDiscoverServicesResult(java.lang.String,boolean)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.SlideshowDataAdapter$ReloadTask\:\ java.lang.Void\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.backup.Trampoline\:\ boolean\ isAppEligibleForBackup(java.lang.String)>=android.permission.BACKUP
<com.android.phone.BluetoothHeadsetService$6\:\ boolean\ stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.service.dreams.DreamService\:\ boolean\ dispatchKeyEvent(android.view.KeyEvent)>=android.permission.BROADCAST_STICKY
<com.android.settings.wifi.WifiSettings\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.ACCESS_WIFI_STATE
<com.android.camera.VideoCamera\:\ void\ startVideoRecording()>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ notifyServiceStateChanged(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<android.webkit.HTML5VideoInline\:\ void\ reset()>=android.permission.WAKE_LOCK
<com.android.mms.util.Recycler$MmsRecycler\:\ void\ deleteOldMessagesInSameThreadAsMessage(android.content.Context,android.net.Uri)>=android.permission.WRITE_SMS
<com.android.settings.inputmethod.InputMethodPreference$6\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_SETTINGS
<android.bluetooth.AtCommandHandler\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.gallery3d.ui.PhotoView\:\ boolean\ slideToNextPicture()>=android.permission.VIBRATE
<android.accounts.IAccountManager$Stub\:\ void\ updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>=android.permission.MANAGE_ACCOUNTS
<com.android.settings.DataUsageSummary$AppDetailsFragment\:\ void\ onStop()>=android.permission.READ_PHONE_STATE
<com.android.server.hdmi.HdmiControlService$BinderService\:\ java.util.List\ getDeviceList()>=android.permission.HDMI_CEC
<com.android.contacts.activities.GroupDetailActivity\:\ boolean\ onPrepareOptionsMenu(android.view.Menu)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ void\ setVpnPackageAuthorization(java.lang.String,int,boolean)>=android.permission.CONTROL_VPN, android.permission.INTERACT_ACROSS_USERS_FULL
<android.provider.Telephony$Mms\:\ android.database.Cursor\ query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>=android.permission.READ_SMS
<com.android.internal.telephony.CommandsInterface\:\ void\ conference(android.os.Message)>=android.permission.WAKE_LOCK
<android.provider.Telephony$Mms\:\ android.database.Cursor\ query(android.content.ContentResolver,java.lang.String[])>=android.permission.READ_SMS
<android.server.BluetoothService\:\ boolean\ setScanMode(int,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ initSstIcc()>=android.permission.WRITE_SETTINGS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ onStart()>=android.permission.WRITE_SMS
<com.android.server.NetworkManagementService\:\ void\ startClatd(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<android.content.ContentService\:\ void\ setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.mms.transaction.NotificationTransaction\:\ byte[]\ sendPdu(long,byte[],java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<android.nfc.tech.MifareClassic\:\ void\ increment(int,int)>=android.permission.NFC
<android.filterpacks.base.NullFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.sip.SipPhone$SipConnection$1\:\ void\ onCallBusy(android.net.sip.SipAudioCall)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ restartRadio()>=android.permission.WAKE_LOCK
<android.content.SyncManager$4\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.DownUpDetector$DownUpListener\:\ void\ onUp(android.view.MotionEvent)>=android.permission.VIBRATE
<android.media.AudioManager\:\ boolean\ isWiredHeadsetOn()>=android.permission.MODIFY_AUDIO_SETTINGS
<android.inputmethodservice.InputMethodService\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.inputmethod.latin.LatinIME\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.WRITE_CONTACTS
<android.filterpacks.numeric.SinWaveFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ToPackedGrayFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ getCdmaSubscriptionSource(android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<android.server.BluetoothPanProfileHandler\:\ void\ setBluetoothTethering(boolean)>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHandsfree$24\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.deskclock.SetAlarm$2\:\ void\ onClick(android.view.View)>=android.permission.WRITE_SETTINGS
<android.inputmethodservice.InputMethodService\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<android.os.IHardwareService$Stub\:\ void\ setFlashlightEnabled(boolean)>=android.permission.FLASHLIGHT
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ void\ stopScanning()>=android.permission.BLUETOOTH
<com.android.server.MountService\:\ int\ encryptStorage(int,java.lang.String)>=android.permission.CRYPT_KEEPER
<com.android.email.GroupMessagingListener\:\ void\ checkMailFinished(android.content.Context,long,long,long)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetooth\:\ boolean\ createBond(java.lang.String)>=android.permission.BLUETOOTH
<android.nfc.tech.MifareClassic\:\ void\ restore(int)>=android.permission.NFC
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ResolveInfo\ getLastChosenActivity(android.content.Intent,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.camera.VideoCamera\:\ void\ access$200(com.android.camera.VideoCamera)>=android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.BitmapOverlayFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteFullWifiLockAcquiredFromSource(android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS
<com.android.server.LocationManagerService$ProximityListener\:\ void\ onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.ManageCachePage\:\ void\ onClick(android.view.View)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.NotificationManagerService\:\ void\ enqueueNotificationInternal(java.lang.String,int,int,java.lang.String,int,android.app.Notification,int[])>=android.permission.VIBRATE
<android.os.Vibrator\:\ void\ cancel()>=android.permission.VIBRATE
<com.android.internal.telephony.RIL\:\ void\ acceptCall(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ android.content.pm.PackageInfo\ getPackageInfo(java.lang.String,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.bluetooth.HeadsetProfile\:\ boolean\ isPreferred(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.calendar.month.MonthByWeekAdapter\:\ void\ onDayTapped(android.text.format.Time)>=android.permission.WRITE_CALENDAR
<com.android.quicksearchbox.google.AbstractGoogleSource\:\ com.android.quicksearchbox.SourceResult\ getSuggestionsExternal(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.location.ILocationManager\:\ boolean\ isProviderEnabled(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumSetPage$1\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<android.service.voice.VoiceInteractionService\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.exchange.adapter.Search$SearchParser\:\ boolean\ parse()>=android.permission.READ_CALENDAR
<com.android.browser.NavTabScroller$2\:\ void\ onAnimationEnd(android.animation.Animator)>=android.permission.GET_ACCOUNTS
<com.android.browser.WallpaperHandler\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.SET_WALLPAPER
<com.android.phone.BluetoothHandsfree\:\ boolean\ startVoiceRecognition()>=android.permission.BLUETOOTH
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ startOneTouchRecord(int,[byte)>=android.permission.HDMI_CEC
<com.android.internal.telephony.PhoneProxy\:\ void\ enableEnhancedVoicePrivacy(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.camera.ActivityBase\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.RECORD_AUDIO
<com.android.contacts.list.ShortcutIntentBuilder$ContactLoadingAsyncTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WRITE_CONTACTS
<com.android.mms.data.Contact\:\ android.net.Uri\ getPhoneUri()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.GrainFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ discoverServices(int,java.lang.String)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothHeadset\:\ boolean\ disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.sip.SipSessionGroup\:\ void\ processDialogTerminated(javax.sip.DialogTerminatedEvent)>=android.permission.WAKE_LOCK
<com.android.email.service.MailService\:\ void\ setupSyncReportsLocked(long,android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.app.ResolverActivity$1\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<java.net.NetworkInterface\:\ void\ <init>=android.permission.INTERNET
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ access$2900(com.android.mms.ui.ComposeMessageActivity,long)>=android.permission.WRITE_SMS
<com.android.contacts.editor.Editor\:\ void\ onFieldChanged(java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ cancelPendingUssd(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.widget.multiwaveview.MultiWaveView\:\ boolean\ trySwitchToFirstTouchState(float,float)>=android.permission.VIBRATE
<android.bluetooth.IBluetooth\:\ boolean\ setPasskey(java.lang.String,int)>=android.permission.BLUETOOTH_ADMIN
<android.net.DhcpStateMachine$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothHealth\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ boolean\ resetMagnification(boolean)>=android.permission.INTERACT_ACROSS_USERS
<com.android.phone.InCallScreen$12\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH
<com.android.server.WifiService\:\ int\ getWifiEnabledState()>=android.permission.ACCESS_WIFI_STATE
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ boolean\ isAudioConnected(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.audio.AudioService\:\ void\ setVolumePolicy(android.media.VolumePolicy)>=android.permission.STATUS_BAR_SERVICE
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ updateContent(int,boolean)>=android.permission.BLUETOOTH
<com.android.contacts.dialpad.DialpadImageButton$OnPressedListener\:\ void\ onPressed(android.view.View,boolean)>=android.permission.VIBRATE
<com.android.gallery3d.ui.CropView$FaceHighlightView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.net.sip.SipManager\:\ android.net.sip.SipAudioCall\ makeAudioCall(java.lang.String,java.lang.String,android.net.sip.SipAudioCall$Listener,int)>=android.permission.USE_SIP
<com.android.providers.contacts.VoicemailPermissions\:\ boolean\ callerHasOwnVoicemailAccess()>=com.android.voicemail.permission.ADD_VOICEMAIL
<android.net.IConnectivityManager$Stub\:\ void\ setNetworkPreference(int)>=android.permission.BLUETOOTH
<android.net.IConnectivityManager$Stub$Proxy\:\ int\ getLastTetherError(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.telephony.gsm.SmsManager\:\ java.util.ArrayList\ getAllMessagesFromSim()>=android.permission.RECEIVE_SMS
<android.media.effect.effects.BrightnessEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.server.statusbar.StatusBarManagerService\:\ void\ handleSystemNavigationKey(int)>=android.permission.EXPAND_STATUS_BAR
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ setPairingConfirmation(java.lang.String,boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ setFilter(com.android.contacts.list.ContactListFilter)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.group.GroupEditorFragment$2\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.BluetoothManagerService\:\ void\ registerStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.Phone$DataState)>=android.permission.BROADCAST_STICKY
<android.media.effect.effects.AutoFixEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.settings.tts.TextToSpeechSettings\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WRITE_SETTINGS
<android.app.Activity\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.settings.bluetooth.DockService\:\ com.android.settings.bluetooth.CachedBluetoothDevice\ getCachedBluetoothDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.email.service.MailService\:\ void\ access$000(com.android.email.service.MailService,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.sip.SipSessionGroup$SipSessionImpl$KeepAliveProcess\:\ void\ onError(android.net.sip.ISipSession,int,java.lang.String)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothA2dp\:\ boolean\ allowIncomingConnect(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.browser.NavigationBarBase\:\ void\ onAction(java.lang.String,java.lang.String,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.server.pm.PackageManagerService\:\ android.content.pm.VerifierDeviceIdentity\ getVerifierDeviceIdentity()>=android.permission.PACKAGE_VERIFICATION_AGENT
<com.android.mms.transaction.MessagingNotification\:\ void\ notifyDownloadFailed(android.content.Context,long)>=android.permission.VIBRATE
<com.android.contacts.dialpad.DialpadFragment\:\ void\ keyPressed(int)>=android.permission.VIBRATE
<com.android.phone.Ringer\:\ void\ ring()>=android.permission.VIBRATE
<com.android.server.am.ActivityManagerService\:\ void\ processStartTimedOutLocked(com.android.server.am.ProcessRecord)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ createAndAddWindows()>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.WifiStateTracker\:\ boolean\ teardown()>=android.permission.CHANGE_WIFI_STATE
<android.provider.Settings$System\:\ android.net.Uri\ getUriFor(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.Call\:\ void\ hangup()>=android.permission.WAKE_LOCK
<com.android.settings.Settings$VpnSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.bluetooth.opp.BluetoothOppTransferActivity\:\ void\ updateProgressbar()>=android.permission.BLUETOOTH
<android.nfc.INfcTag$Stub\:\ int\ ndefMakeReadOnly(int)>=android.permission.NFC
<com.android.internal.policy.impl.KeyguardViewBase\:\ void\ handleMediaKeyEvent(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.phone.PhoneStatusBar$23\:\ void\ run()>=android.permission.VIBRATE
<com.android.calendar.month.SimpleDayPickerFragment\:\ void\ <init>=android.permission.WRITE_CALENDAR
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ setAndBroadcastNetworkSetTimeZone(java.lang.String)>=android.permission.SET_TIME_ZONE
<com.android.calendar.DayView$CalendarGestureListener\:\ boolean\ onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>=android.permission.WRITE_CALENDAR
<com.android.server.am.UsageStatsService$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.providers.contacts.VoicemailPermissions\:\ boolean\ packageHasFullAccess(java.lang.String)>=com.android.voicemail.permission.ADD_VOICEMAIL
<android.net.VpnService\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<android.content.ISyncAdapter$Stub\:\ void\ initialize(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.JoinContactActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ prepareEmptyView()>=android.permission.READ_SYNC_STATS
<com.android.server.RecognitionManagerService$MyPackageMonitor\:\ void\ onPackageRemoved(java.lang.String,int)>=android.permission.WRITE_SETTINGS
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<android.accounts.IAccountManager$Stub$Proxy\:\ void\ editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>=android.permission.MANAGE_ACCOUNTS
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler\:\ void\ startKeyRepeatTimer(com.android.inputmethod.keyboard.PointerTracker)>=android.permission.WRITE_CONTACTS
<android.os.storage.IMountService$Stub\:\ int[]\ getStorageUsers(java.lang.String)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.internal.telephony.ITelephony$Stub\:\ java.util.List\ getAllCellInfo()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.calendar.agenda.AgendaListView$3\:\ void\ run()>=android.permission.WRITE_CALENDAR
<com.android.phone.BluetoothAtPhonebook\:\ com.android.phone.BluetoothAtPhonebook$PhonebookResult\ access$500(com.android.phone.BluetoothAtPhonebook,java.lang.String,boolean)>=android.permission.READ_CALL_LOG
<android.filterpacks.base.FrameSource\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.provider.ContactsContract$SyncState\:\ android.util.Pair\ getWithUri(android.content.ContentProviderClient,android.accounts.Account)>=android.permission.WRITE_CONTACTS
<com.android.launcher2.AppsCustomizePagedView\:\ boolean\ beginDragging(android.view.View)>=android.permission.VIBRATE
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ void\ setBluetoothStateInt(int)>=android.permission.BLUETOOTH
<com.android.browser.UrlHandler$RLZTask\:\ void\ onPostExecute(java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onDataStallAlarm(int)>=android.permission.WAKE_LOCK
<com.android.phone.CallNotifier$EmergencyTonePlayerVibrator\:\ void\ access$200(com.android.phone.CallNotifier$EmergencyTonePlayerVibrator)>=android.permission.VIBRATE
<android.bluetooth.IBluetooth\:\ boolean\ fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ int\ compareTo(java.lang.Object)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cat.CommandParamsFactory\:\ boolean\ processGetInkey(com.android.internal.telephony.cat.CommandDetails,java.util.List)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onRoamingOff()>=android.permission.BROADCAST_STICKY
<android.net.http.RequestQueue$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.providers.contacts.ContactsProvider2$PipeMonitor\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ boolean\ shutdown(int)>=android.permission.SHUTDOWN
<android.net.wifi.IWifiManager$Stub$Proxy\:\ boolean\ disableNetwork(int)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setSystemUpdatePolicy(android.content.ComponentName,android.app.admin.SystemUpdatePolicy)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.view.VolumePanel\:\ void\ onVolumeChanged(int,int)>=android.permission.VIBRATE
<com.android.vcard.VCardEntry$ImData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.soundrecorder.SoundRecorder\:\ void\ access$000(com.android.soundrecorder.SoundRecorder)>=android.permission.WAKE_LOCK
<com.android.bluetooth.a2dpsink.A2dpSinkService$BluetoothA2dpSinkBinder\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<com.android.mms.data.WorkingMessage$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.RECEIVE_SMS
<com.android.server.ConnectivityService\:\ void\ enforceTetherChangePermission()>=android.permission.CHANGE_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ void\ unhandledBack()>=android.permission.FORCE_BACK
<com.android.calendar.AllInOneActivity\:\ void\ initFragments(long,int,android.os.Bundle)>=android.permission.WRITE_CALENDAR
<com.android.contacts.activities.ContactDetailActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.IntentHandler$1\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AndroidBeamSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.internal.util.State\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ void\ sendConnectedBroadcastDelayed(android.net.NetworkInfo,int)>=android.permission.BROADCAST_STICKY
<com.android.server.wifi.WifiServiceImpl\:\ android.net.Network\ getCurrentNetwork()>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.ManageConferenceUtils\:\ void\ updateManageConferencePanel(java.util.List)>=android.permission.WRITE_CONTACTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ getDoNotAskCredentialsOnBoot()>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.QUERY_DO_NOT_ASK_CREDENTIALS_ON_BOOT
<android.nfc.INfcTag$Stub\:\ int\ getTimeout(int)>=android.permission.NFC
<android.app.ActivityManager\:\ java.util.List\ getRunningAppProcesses()>=android.permission.GET_TASKS
<com.android.soundrecorder.SoundRecorder\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ boolean\ findAccessibilityNodeInfosByText(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>=android.permission.INTERACT_ACROSS_USERS
<com.android.server.am.BatteryStatsService\:\ void\ notePhoneOff()>=android.permission.UPDATE_DEVICE_STATS
<android.accounts.AccountManagerService\:\ void\ editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>=android.permission.MANAGE_ACCOUNTS
<com.android.providers.contacts.ContactsProvider2\:\ long\ insertSettings(android.net.Uri,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageCompose$6\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<android.webkit.WebSettingsClassic\:\ void\ setBlockNetworkLoads(boolean)>=android.permission.INTERNET
<com.android.server.LocationManagerService$Receiver\:\ boolean\ callStatusChangedLocked(java.lang.String,int,android.os.Bundle)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.SubscriptionController\:\ int\ setDisplayNameUsingSrc(java.lang.String,int,long)>=android.permission.MODIFY_PHONE_STATE
<com.android.camera.ui.IndicatorControlWheel\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ configHciSnoopLog(boolean)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ boolean\ access$300(com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean,boolean,int)>=android.permission.WAKE_LOCK
<com.android.mms.util.Recycler$MmsRecycler\:\ void\ deleteOldMessagesByThreadId(android.content.Context,long)>=android.permission.RECEIVE_SMS
<com.android.contacts.activities.PeopleActivity\:\ void\ setQueryTextToFragment(java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$ManageAccountsSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.internal.widget.LockPatternView$OnPatternListener\:\ void\ onPatternCellAdded(java.util.List)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ uninstallCaCerts(android.content.ComponentName,[java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_CA_CERTIFICATES
<android.preference.VolumePreference$SeekBarVolumizer\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.bluetooth.opp.BluetoothOppIncomingFileConfirmActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.emailcommon.service.IEmailService\:\ void\ updateFolderList(long)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.AccountFilterActivity$MyLoaderCallbacks\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.music.MediaPlaybackService$ServiceStub\:\ void\ setShuffleMode(int)>=android.permission.WAKE_LOCK
<com.android.bluetooth.avrcp.AvrcpControllerService$BluetoothAvrcpControllerBinder\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.emailcommon.service.IEmailService$Stub\:\ void\ loadAttachment(long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.String\ getAlwaysOnVpnPackage(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.google.common.io.Files\:\ java.lang.Object\ readBytes(java.io.File,com.google.common.io.ByteProcessor)>=android.permission.INTERNET
<com.android.commands.am.Am\:\ void\ runKill()>=android.permission.RESTART_PACKAGES
<com.android.internal.telephony.ISms$Stub\:\ boolean\ disableCellBroadcast(int)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ void\ handleDisconnect(android.net.NetworkInfo)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.CryptKeeper\:\ void\ passwordEntryInit()>=android.permission.WAKE_LOCK
<android.accounts.AccountManagerService\:\ void\ checkAuthenticateAccountsPermission(android.accounts.Account)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.providers.contacts.CallLogProvider\:\ android.net.Uri\ insert(android.net.Uri,android.content.ContentValues)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.mms.ui.ClassZeroActivity\:\ android.net.Uri\ replaceMessage(android.telephony.SmsMessage)>=android.permission.RECEIVE_SMS
<android.bluetooth.BluetoothPbap\:\ boolean\ disconnect()>=android.permission.BLUETOOTH_ADMIN
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge\:\ boolean\ performAction(int,int,android.os.Bundle)>=android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PeopleActivity\:\ void\ onProviderStatusChange()>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.SupplicantStateTracker$DormantState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.sip.SipService\:\ android.net.sip.ISipSession\ getPendingSession(java.lang.String)>=android.permission.USE_SIP
<android.bluetooth.IBluetoothHeadset$Stub\:\ boolean\ createIncomingConnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.google.common.io.ByteStreams\:\ long\ length(com.google.common.io.InputSupplier)>=android.permission.INTERNET
<com.android.music.IMediaPlaybackService$Stub\:\ void\ setShuffleMode(int)>=android.permission.WAKE_LOCK
<com.android.browser.SnapshotTab\:\ void\ deleteThumbnail()>=android.permission.GET_ACCOUNTS
<com.android.music.MediaPlaybackService$MultiPlayer\:\ void\ start()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneSubInfoProxy\:\ java.lang.String\ getMsisdn()>=android.permission.READ_PHONE_STATE
<com.android.server.wm.WindowManagerService\:\ void\ resumeRotationLocked()>=android.permission.WAKE_LOCK
<com.android.contacts.editor.LabeledEditorView$1\:\ void\ onItemSelected(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.WebViewFactory\:\ android.webkit.WebView\ createWebView(boolean)>=android.permission.INTERNET
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy\:\ void\ startLongPressTimer(com.android.inputmethod.keyboard.PointerTracker)>=android.permission.WRITE_CONTACTS
<com.android.settings.DefaultRingtonePreference\:\ void\ onSaveRingtone(android.net.Uri)>=android.permission.WRITE_SETTINGS
<com.android.commands.monkey.MonkeyNetworkMonitor\:\ void\ register(android.app.IActivityManager)>=android.permission.WAKE_LOCK
<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$RefreshCalendars\:\ void\ run()>=android.permission.READ_CALENDAR
<android.provider.Browser\:\ android.database.Cursor\ getAllVisitedUrls(android.content.ContentResolver)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.phone.BluetoothHandsfree\:\ android.bluetooth.AtCommandResult\ access$6000(com.android.phone.BluetoothHandsfree)>=android.permission.BLUETOOTH
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$2\:\ java.lang.Exception\ doInBackground(java.lang.Void[])>=android.permission.WAKE_LOCK
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.WRITE_CALENDAR
<android.net.ConnectivityManager\:\ void\ reportNetworkConnectivity(android.net.Network,boolean)>=android.permission.ACCESS_NETWORK_STATE, android.permission.INTERNET
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader\:\ java.lang.Object\ loadInBackground()>=android.permission.READ_SYNC_SETTINGS
<android.speech.tts.TextToSpeech\:\ int\ playEarcon(java.lang.String,int,java.util.HashMap)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ setNotification(int)>=android.permission.VIBRATE
<com.android.settings.AccessibilitySettings$ToggleAccessibilityServicePreferenceFragment\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ saveCdmaSubscriptionSource(int)>=android.permission.WRITE_SETTINGS
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ int\ getState()>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ boolean\ bindBackupAgent(java.lang.String,int,int)>=android.permission.CONFIRM_FULL_BACKUP, android.permission.START_ANY_ACTIVITY, android.permission.START_TASKS_FROM_RECENTS
<com.android.contacts.activities.ContactEditorAccountsChangedActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser\:\ void\ changeParser(com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations)>=android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ isDrmRingtoneWithRights(long)>=android.permission.WRITE_SMS
<com.android.server.power.PowerManagerService$BinderService\:\ void\ acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.emailcommon.service.EmailServiceProxy$12\:\ void\ run()>=android.permission.WAKE_LOCK
<android.nfc.tech.NfcF\:\ int\ getTimeout()>=android.permission.NFC
<android.content.SyncManager\:\ void\ scheduleLocalSync(android.accounts.Account,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setSecurityLoggingEnabled(android.content.ComponentName,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.String\ getWifiMacAddress(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker\:\ void\ toggleState(android.content.Context)>=android.permission.BLUETOOTH
<com.android.bluetooth.pbap.BluetoothPbapService\:\ void\ startObexServerSession()>=android.permission.READ_CALL_LOG
<com.android.contacts.list.DefaultContactListAdapter\:\ android.net.Uri\ getFirstContactUri()>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.MessageSender\:\ boolean\ sendMessage(long)>=android.permission.SEND_SMS
<com.android.inputmethod.latin.UserHistoryDictionary\:\ void\ blockingReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.systemui.media.NotificationPlayer\:\ void\ stop()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cat.CommandParamsFactory\:\ boolean\ processSetupCall(com.android.internal.telephony.cat.CommandDetails,java.util.List)>=android.permission.WAKE_LOCK
<com.android.settings.SecuritySettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.contacts.group.GroupEditorFragment$3\:\ android.content.CursorLoader\ onCreateLoader(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.exchange.adapter.ContactsSyncAdapter\:\ void\ dirtyContactsWithinDirtyGroups()>=android.permission.READ_SYNC_SETTINGS
<android.media.AudioService\:\ void\ startVoiceBasedInteractions(boolean)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.CropImage\:\ boolean\ setAsWallpaper(com.android.gallery3d.util.ThreadPool$JobContext,android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<android.net.IConnectivityManager$Stub\:\ java.lang.String[]\ getTetherableIfaces()>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.ui.CropView\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<android.test.IsolatedContext$MockAccountManager\:\ android.accounts.AccountManagerFuture\ updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.server.am.ActivityManagerService\:\ android.content.Intent\ registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.settings.DataUsageSummary\:\ void\ setDataRoaming(boolean)>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.SubtypeSwitcher\:\ void\ updateSubtype(android.view.inputmethod.InputMethodSubtype)>=android.permission.WRITE_CONTACTS
<android.nfc.INfcTag$Stub$Proxy\:\ void\ resetTimeouts()>=android.permission.NFC
<com.android.server.LocationManagerService\:\ void\ access$800(com.android.server.LocationManagerService)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ boolean\ dispatchHoverEvent(android.view.MotionEvent)>=android.permission.WAKE_LOCK
<android.nfc.tech.MifareClassic\:\ byte[]\ readBlock(int)>=android.permission.NFC
<android.media.AudioService$AudioServiceBroadcastReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ void\ handleConnectionFailure(android.net.NetworkInfo)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.BluetoothAtPhonebook$2\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.internal.widget.PasswordEntryKeyboardView\:\ boolean\ openPopupIfRequired(android.view.MotionEvent)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ void\ answerRingingCallForSubscriber(int)>=android.permission.MODIFY_PHONE_STATE
<com.android.contacts.socialwidget.SocialWidgetProvider$1\:\ void\ onLoadComplete(android.content.Loader,com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.BatteryStatsService\:\ void\ noteBleScanStopped(android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS
<android.content.ContextWrapper\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.phone.IccNetworkDepersonalizationPanel$3\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.Suggest\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.email.RefreshManager\:\ boolean\ loadMoreMessages(long,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.dialpad.DialpadFragment\:\ boolean\ isVoicemailAvailable()>=android.permission.READ_PHONE_STATE
<android.net.wifi.WifiApConfigStore$DefaultState\:\ void\ enter()>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothHeadset\:\ boolean\ connectHeadsetInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.accounts.AccountManager$Future2Task\:\ void\ startTask()>=android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WirelessSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.nfc.handover.HandoverManager$HandoverPowerManager\:\ boolean\ enableBluetooth()>=android.permission.BLUETOOTH_ADMIN
<android.test.IsolatedContext\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ setInputDevicePriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ android.os.ParcelFileDescriptor\ getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.SlotView\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<android.speech.tts.PlaybackQueueItem\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.mms.ui.Presenter\:\ void\ present(com.android.mms.util.ItemLoadedCallback)>=android.permission.READ_SYNC_SETTINGS
<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl\:\ android.content.Entity\ getEntityAndIncrementCursor(android.database.Cursor)>=android.permission.READ_CALENDAR
<com.android.internal.telephony.CommandsInterface\:\ void\ getCurrentCalls(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageListFragment\:\ void\ onListItemClick(android.widget.ListView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.BlendFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.quickcontact.QuickContactActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.media.MediaPlayer\:\ void\ start()>=android.permission.WAKE_LOCK
<com.android.settings.PrivacySettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<android.os.storage.IMountService\:\ void\ setUsbMassStorageEnabled(boolean)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ changeApplicationBluetoothState(boolean,android.bluetooth.IBluetoothStateChangeCallback,android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.systemui.statusbar.tablet.TabletStatusBar\:\ void\ start()>=android.permission.BLUETOOTH
<com.android.common.widget.GroupingListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.media.AudioManager\:\ void\ setMode(int)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<android.content.ContextWrapper\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.wallpaper.walkaround.WalkAroundWallpaper\:\ void\ access$200(com.android.wallpaper.walkaround.WalkAroundWallpaper)>=android.permission.CAMERA
<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer\:\ void\ next()>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ cancelBondProcess(java.lang.String)>=android.permission.BLUETOOTH
<android.media.effect.effects.FisheyeEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<android.filterpacks.base.RetargetFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.net.ThrottleManager\:\ long\ getCliffThreshold(java.lang.String,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.transaction.ReadRecTransaction\:\ void\ process()>=android.permission.BLUETOOTH
<android.test.IsolatedContext\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ int\ getProfileConnectionState(int)>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ void\ call(java.lang.String)>=android.permission.CALL_PHONE
<com.android.server.TelephonyRegistry\:\ void\ notifyPreciseCallState(int,int,int)>=android.permission.MODIFY_PHONE_STATE
<android.filterpacks.imageproc.SepiaFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneApp\:\ void\ clearOtaState()>=android.permission.BLUETOOTH
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ performDisableActions(int)>=android.permission.VIBRATE
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ handleShow()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccProvider\:\ int\ delete(android.net.Uri,java.lang.String,java.lang.String[])>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.GsmConnection\:\ boolean\ update(com.android.internal.telephony.DriverCall)>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService\:\ void\ onConnectivityChanged(android.net.NetworkInfo)>=android.permission.WAKE_LOCK
<com.android.mms.ui.SlideshowEditActivity$SlideListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.util.IState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ boolean\ attemptAutoPair(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.net.NetworkPolicyManagerService$6\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.data.Conversation\:\ android.net.Uri\ getUri()>=android.permission.WRITE_SMS
<com.android.exchange.ContactsSyncAdapterService$SyncAdapterImpl\:\ void\ onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.app.IBatteryStats$Stub$Proxy\:\ long\ getAwakeTimePlugged()>=android.permission.BATTERY_STATS
<com.android.settings.Settings$DeviceAdminSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.internal.telephony.IccPhoneBookInterfaceManager\:\ boolean\ updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.calendar.DayView\:\ void\ appendEventAccessibilityString(java.lang.StringBuilder,com.android.calendar.Event)>=android.permission.READ_CALENDAR
<android.net.IConnectivityManager$Stub\:\ boolean\ requestRouteToHost(int,int)>=android.permission.CHANGE_NETWORK_STATE
<com.android.server.net.NetworkPolicyManagerService\:\ void\ access$700(com.android.server.net.NetworkPolicyManagerService)>=android.permission.READ_PHONE_STATE
<com.android.inputmethod.keyboard.KeyboardSwitcher\:\ void\ onPressKey(int)>=android.permission.WRITE_CONTACTS
<com.android.settings.SecuritySettings\:\ void\ setNonMarketAppsAllowed(boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ access$800(com.android.server.net.NetworkPolicyManagerService,android.net.NetworkTemplate,int)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ removeBond(java.lang.String)>=android.permission.BLUETOOTH_ADMIN
<com.android.vcard.VCardParserImpl_V21\:\ void\ parseItems()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.wifi.WifiSettings$2\:\ void\ onClick(android.view.View)>=android.permission.ACCESS_WIFI_STATE
<com.android.server.ThrottleService$MyHandler\:\ void\ onPollAlarm()>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.sap.SapService$SapBinder\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker\:\ void\ onActualStateChange(android.content.Context,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.WifiStateMachine\:\ boolean\ isWifiTethered(java.util.ArrayList)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView\:\ void\ setGrabbedState(int)>=android.permission.VIBRATE
<com.android.contacts.editor.ContactEditorFragment\:\ boolean\ isContactWritable()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ java.util.List\ getTasks(int,int)>=android.permission.GET_TASKS, android.permission.REAL_GET_TASKS
<com.android.internal.telephony.gsm.SIMRecords\:\ void\ getSpnFsm(boolean,android.os.AsyncResult)>=android.permission.WAKE_LOCK
<android.hardware.SerialManager\:\ android.hardware.SerialPort\ openSerialPort(java.lang.String,int)>=android.permission.SERIAL_PORT
<com.android.browser.Tab\:\ void\ setController(com.android.browser.WebViewController)>=android.permission.GET_ACCOUNTS
<com.android.settings.DataUsageSummary\:\ boolean\ isMobileDataEnabled()>=android.permission.ACCESS_NETWORK_STATE
<android.hardware.fingerprint.FingerprintManager\:\ boolean\ hasEnrolledFingerprints()>=android.permission.USE_FINGERPRINT
<com.android.internal.telephony.IccCard\:\ void\ changeIccLockPassword(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.AppOpsService\:\ int\ checkOperation(int,int,java.lang.String)>=android.permission.UPDATE_APP_OPS_STATS
<com.android.soundrecorder.Recorder\:\ void\ onCompletion(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteChangeWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>=android.permission.UPDATE_DEVICE_STATS
<com.android.email.activity.setup.MailboxSettings$2\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.BackupManagerService$PerformFullRestoreTask\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageViewFragment\:\ void\ onMoveToMailboxSelected(long,long[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.detail.ContactDetailLayoutController\:\ void\ showEmptyState()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ android.content.pm.ParceledListSlice\ getGrantedUriPermissions(java.lang.String,int)>=android.permission.GET_APP_GRANTED_URI_PERMISSIONS
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ addStatusBarWindow()>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.setup.AccountSetupNames$2\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter\:\ void\ onCallBusy(android.net.sip.SipAudioCall)>=android.permission.WAKE_LOCK
<com.android.server.wm.InputMonitor\:\ android.view.KeyEvent\ dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>=android.permission.WAKE_LOCK
<com.android.server.net.NetworkStatsService$4\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.email.activity.NfcHandler\:\ com.android.email.activity.NfcHandler\ register(com.android.email.activity.UIControllerBase,android.app.Activity)>=android.permission.NFC
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ cancelPostDial()>=android.permission.WAKE_LOCK
<com.android.browser.PieControl\:\ void\ access$000(com.android.browser.PieControl)>=android.permission.GET_ACCOUNTS
<com.android.browser.Controller\:\ void\ closeCurrentTab(boolean)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ gotoIdleAndNotifyDataConnection(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.settings.Settings$DevelopmentSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.nfc.NfcService$EnableDisableTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.calendar.month.SimpleWeeksAdapter\:\ void\ updateParams(java.util.HashMap)>=android.permission.READ_CALENDAR
<com.android.contacts.group.GroupDetailFragment$3\:\ android.content.Loader\ onCreateLoader(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.BluetoothHandsfree$15\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothDevice\:\ boolean\ setPin([byte)>=android.permission.BLUETOOTH_ADMIN
<android.speech.tts.TextToSpeech\:\ int\ synthesizeToFile(java.lang.CharSequence,android.os.Bundle,java.io.File,java.lang.String)>=android.permission.BROADCAST_STICKY
<android.hardware.location.ActivityRecognitionHardware\:\ java.lang.String[]\ getSupportedActivities()>=android.permission.LOCATION_HARDWARE
<com.android.nfc.handover.HandoverManager$HandoverTransfer\:\ void\ updateFileProgress(float)>=android.permission.VIBRATE
<com.android.internal.telephony.cdma.RuimRecords\:\ void\ onReady()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onSetInternalDataEnabled(boolean)>=android.permission.BROADCAST_STICKY
<android.net.wifi.WifiStateMachine$DriverFailedState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ setCdmaSubscription(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.content.SyncManager\:\ void\ maybeRescheduleSync(android.content.SyncResult,android.content.SyncOperation)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$VpnSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.accounts.AccountManager$10\:\ android.accounts.AccountManagerFuture\ start()>=android.permission.GET_ACCOUNTS
<android.nfc.tech.NfcF\:\ void\ reconnect()>=android.permission.NFC
<com.android.settings.Settings$BluetoothSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ access$000(com.android.internal.telephony.cdma.CdmaServiceStateTracker)>=android.permission.BROADCAST_STICKY
<android.bluetooth.BluetoothInputDevice\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager$Stub\:\ void\ stopWifi()>=android.permission.CHANGE_WIFI_STATE
<android.net.wifi.WifiManager\:\ boolean\ initializeMulticastFiltering()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.internal.widget.SlidingTab\:\ void\ cancelGrab()>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewMediator$1\:\ void\ onUserChanged(int)>=android.permission.GET_ACCOUNTS
<com.android.browser.provider.BrowserProvider2\:\ int\ updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>=android.permission.GET_ACCOUNTS
<com.android.mms.transaction.PrivilegedSmsReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.contacts.list.CustomContactListFilterActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.DockObserver\:\ void\ systemReady()>=android.permission.WAKE_LOCK
<android.nfc.INfcTag$Stub$Proxy\:\ int\ getTimeout(int)>=android.permission.NFC
<android.speech.tts.TextToSpeech\:\ void\ shutdown()>=android.permission.BROADCAST_STICKY
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setAffiliationIds(android.content.ComponentName,java.util.List)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.bluetooth.IBluetooth$Stub\:\ java.lang.String\ getRemoteName(java.lang.String)>=android.permission.BLUETOOTH
<android.content.SyncManager\:\ void\ access$1100(android.content.SyncManager,android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.SMSDispatcher$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.app.IActivityManager\:\ void\ moveTaskBackwards(int)>=android.permission.REORDER_TASKS
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ com.android.systemui.statusbar.StatusBarIconView\ addNotificationViews(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>=android.permission.VIBRATE
<android.bluetooth.IBluetoothA2dp$Stub\:\ boolean\ resumeSink(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.accounts.SyncSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.SIMFileHandler\:\ void\ loadEFImgLinearFixed(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.calendar.EventLoader$LoadEventDaysRequest\:\ void\ processRequest(com.android.calendar.EventLoader)>=android.permission.READ_CALENDAR
<com.android.gallery3d.app.PickerActivity\:\ void\ onPause()>=android.permission.RECORD_AUDIO
<com.android.internal.policy.impl.PhoneWindowManager$19\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.wifi.WifiServiceImpl\:\ java.util.List\ getScanResults(java.lang.String)>=android.permission.ACCESS_WIFI_STATE, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.PEERS_MAC_ADDRESS, android.permission.SCORE_NETWORKS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ startWifi()>=android.permission.CHANGE_WIFI_STATE
<com.android.internal.telephony.ITelephony\:\ java.util.List\ getAllCellInfo()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.RIL\:\ void\ getLastPdpFailCause(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.browser.NavScreen\:\ void\ onCloseTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<com.android.contacts.vcard.ImportVCardActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.media.RingtonePlayer$Client\:\ void\ binderDied()>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ pokeWakelock(int)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ int\ access$100(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int,int)>=android.permission.WAKE_LOCK
<com.android.email.Controller$2\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothAdapter\:\ int\ getConnectionState()>=android.permission.BLUETOOTH
<com.android.mms.transaction.SendTransaction\:\ byte[]\ sendPdu(long,byte[],java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<android.filterpacks.numeric.SinWaveFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ int\ getRemoteType(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.Settings$LocationSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.phone.CdmaSystemSelectListPreference$MyHandler\:\ void\ handleSetCdmaRoamingPreference(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageViewFragment\:\ void\ onDelete()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.NetworkScoreService\:\ void\ disableScoring()>=android.permission.SCORE_NETWORKS
<com.android.music.MediaPlaybackService$ServiceStub\:\ void\ pause()>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ void\ getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>=android.permission.GET_PACKAGE_SIZE, android.permission.GRANT_RUNTIME_PERMISSIONS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.REVOKE_RUNTIME_PERMISSIONS, android.permission.SET_PREFERRED_APPLICATIONS
<com.android.server.display.DisplayManagerService$BinderService\:\ void\ renameWifiDisplay(java.lang.String,java.lang.String)>=android.permission.CONFIGURE_WIFI_DISPLAY
<com.android.server.statusbar.StatusBarManagerService\:\ void\ onNotificationExpansionChanged(java.lang.String,boolean,boolean)>=android.permission.STATUS_BAR_SERVICE
<com.android.browser.Controller\:\ void\ onReceivedTitle(com.android.browser.Tab,java.lang.String)>=android.permission.GET_ACCOUNTS
<android.os.storage.IMountService$Stub\:\ void\ setUsbMassStorageEnabled(boolean)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.server.appwidget.AppWidgetServiceImpl\:\ android.appwidget.AppWidgetProviderInfo\ getAppWidgetInfo(java.lang.String,int)>=android.permission.BIND_APPWIDGET
<com.android.mms.data.WorkingMessage\:\ android.net.Uri\ createDraftMmsMessage(com.google.android.mms.pdu.PduPersister,com.google.android.mms.pdu.SendReq,com.android.mms.model.SlideshowModel,android.net.Uri)>=android.permission.WRITE_SMS
<com.android.server.content.ContentService\:\ boolean\ isSyncPendingAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.READ_SYNC_STATS
<com.android.mms.data.WorkingMessage$MessageStatusListener\:\ void\ onMaxPendingMessagesReached()>=android.permission.RECEIVE_SMS
<com.android.gallery3d.app.MoviePlayer\:\ void\ onReplay()>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ void\ stopInterfaceForwarding(java.lang.String,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.providers.settings.SettingsBackupAgent\:\ void\ restoreSettings(byte[],int,android.net.Uri)>=android.permission.WRITE_SETTINGS
<com.android.settings.CryptKeeper\:\ void\ access$600(com.android.settings.CryptKeeper)>=android.permission.WAKE_LOCK
<com.android.settings.DataUsageSummary$LimitEditorFragment$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ boolean\ dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)>=android.permission.SET_ACTIVITY_WATCHER
<com.android.internal.telephony.CommandsInterface\:\ void\ sendDtmf(char,android.os.Message)>=android.permission.WAKE_LOCK
<org.apache.http.impl.client.DefaultHttpClient\:\ org.apache.http.HttpResponse\ execute(org.apache.http.client.methods.HttpUriRequest)>=android.permission.INTERNET
<com.android.email.Controller$15\:\ void\ loadAttachmentStatus(long,long,int,int)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.base.OutputStreamTarget\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera$1\:\ void\ run()>=android.permission.RECORD_AUDIO
<android.media.IAudioService$Stub$Proxy\:\ void\ stopBluetoothSco(android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ getSmscAddress(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$DeviceAdminSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.PhoneProxy\:\ void\ getSmscAddress(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ void\ installPackageAsUser(java.lang.String,android.content.pm.IPackageInstallObserver2,int,java.lang.String,int)>=android.permission.GRANT_RUNTIME_PERMISSIONS, android.permission.INSTALL_GRANT_RUNTIME_PERMISSIONS, android.permission.INSTALL_PACKAGES, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.REVOKE_RUNTIME_PERMISSIONS, android.permission.SET_PREFERRED_APPLICATIONS
<com.android.server.location.GpsLocationProvider\:\ void\ reportNiNotification(int,int,int,int,int,java.lang.String,java.lang.String,int,int,java.lang.String)>=android.permission.VIBRATE
<com.android.settings.tts.TextToSpeechSettings\:\ void\ onVoiceDataIntegrityCheckDone(android.content.Intent)>=android.permission.WRITE_SETTINGS
<android.service.voice.VoiceInteractionService\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ systemReady()>=android.permission.WAKE_LOCK
<com.android.mms.ui.QuickContactDivot\:\ void\ assignContactFromEmail(java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.CommandsInterface\:\ void\ setCdmaBroadcastConfig(int[],android.os.Message)>=android.permission.WAKE_LOCK
<android.location.ILocationManager$Stub$Proxy\:\ void\ clearTestProviderStatus(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<android.server.BluetoothService\:\ int\ getScanMode()>=android.permission.BLUETOOTH
<com.android.internal.telephony.UiccSmsController\:\ boolean\ disableCellBroadcastRangeForSubscriber(int,int,int,int)>=android.permission.RECEIVE_SMS
<android.bluetooth.BluetoothGatt\:\ boolean\ readRemoteRssi()>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhone\:\ void\ setCdmaSubscription(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.ThrottleService\:\ long\ getCliffThreshold(java.lang.String,int)>=android.permission.ACCESS_NETWORK_STATE
<android.server.BluetoothDeviceProperties\:\ java.util.Map\ addProperties(java.lang.String,java.lang.String[])>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.StraightenFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.display.DisplayManagerService$BinderService\:\ void\ connectWifiDisplay(java.lang.String)>=android.permission.CONFIGURE_WIFI_DISPLAY
<android.os.storage.IMountService$Stub$Proxy\:\ void\ shutdown(android.os.storage.IMountShutdownObserver)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<android.location.ILocationManager$Stub\:\ android.location.Location\ getLastKnownLocation(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.email.activity.setup.MailboxSettings$LoadMailboxTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.RedEyeFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.suggestions.SuggestionsView\:\ void\ addToDictionary(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.voicedialer.RecognizerEngine\:\ void\ setupGrammar()>=android.permission.WRITE_CONTACTS
<com.android.mms.transaction.SmsReceiverService\:\ void\ handleSmsReceived(android.content.Intent,int)>=android.permission.WAKE_LOCK
<com.android.settings.Utils\:\ java.lang.String\ getWifiIpAddresses(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.AccountManager\:\ android.accounts.AccountManagerFuture\ editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.phone.BluetoothHandsfree$26\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ operationComplete()>=android.permission.WAKE_LOCK
<com.android.vcard.VCardParserImpl_V21\:\ void\ handleNest()>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ getCallWaiting(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.BackupManagerService$PerformRestoreTask\:\ void\ finalizeRestore()>=android.permission.WAKE_LOCK
<com.android.contacts.detail.ContactLoaderFragment\:\ android.net.Uri\ getPreAuthorizedUri(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wifi.WifiServiceImpl\:\ void\ setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>=android.permission.CHANGE_WIFI_STATE, android.permission.TETHER_PRIVILEGED
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ cancelPairingUserInput(java.lang.String)>=android.permission.BLUETOOTH
<com.android.exchange.ExchangeService$2\:\ android.os.Bundle\ autoDiscover(java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.WifiService\:\ void\ setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.calendar.month.MonthByWeekFragment$2\:\ void\ run()>=android.permission.WRITE_CALENDAR
<com.android.browser.PreloadRequestReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$3\:\ void\ keyguardDone(boolean)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ createBondOutOfBand(java.lang.String,byte[],byte[])>=android.permission.BLUETOOTH
<com.android.settings.AccessibilitySettings$ToggleAccessibilityServicePreferenceFragment\:\ void\ onPreferenceToggled(java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ java.lang.String\ getName()>=android.permission.BLUETOOTH
<com.android.internal.widget.SlidingTab\:\ void\ vibrate(long)>=android.permission.WAKE_LOCK
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler\:\ int\ getPhotoPickSize()>=android.permission.WRITE_CONTACTS
<com.android.server.am.ProcessStatsService\:\ B[]\ getCurrentStats(java.util.List)>=android.permission.PACKAGE_USAGE_STATS
<com.android.email.activity.UIControllerOnePane\:\ void\ onMessageSetUnread()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.ITelephony$Stub\:\ void\ call(java.lang.String)>=android.permission.CALL_PHONE
<com.android.phone.DTMFTwelveKeyDialer\:\ void\ onDialerClose(boolean)>=android.permission.BLUETOOTH
<com.android.exchange.ExchangeService$2\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ handleKeyguardDone(boolean)>=android.permission.WAKE_LOCK
<com.android.providers.downloads.StorageManager\:\ void\ verifySpace(int,java.lang.String,long)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.mms.ui.SlideView\:\ void\ startAudio()>=android.permission.WAKE_LOCK
<android.view.IWindowManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.contacts.group.GroupEditorFragment\:\ boolean\ isGroupMembershipEditable()>=android.permission.READ_SYNC_SETTINGS
<android.content.ISyncAdapter$Stub$Proxy\:\ void\ initialize(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.PhoneCallDetailsHelper\:\ void\ setCallDetailsHeader(android.widget.TextView,com.android.contacts.PhoneCallDetails)>=android.permission.READ_PHONE_STATE
<com.android.phone.FdnSetting\:\ void\ updatePINChangeState(boolean)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothPermissionActivity\:\ void\ showConnectionDialog()>=android.permission.BLUETOOTH
<android.webkit.HTML5VideoViewProxy$VideoPlayer\:\ void\ onPrepared()>=android.permission.WAKE_LOCK
<com.android.server.NsdService$NsdStateMachine$DefaultState\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.LockScreen$SlidingTabMethods\:\ void\ onTrigger(android.view.View,int)>=android.permission.WAKE_LOCK
<android.app.backup.BackupAgentHelper\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<android.hardware.ISerialManager$Stub$Proxy\:\ android.os.ParcelFileDescriptor\ openSerialPort(java.lang.String)>=android.permission.SERIAL_PORT
<com.android.inputmethod.latin.AutoCorrection\:\ boolean\ allowsToBeAutoCorrected(java.util.concurrent.ConcurrentHashMap,java.lang.CharSequence,boolean)>=android.permission.WRITE_CONTACTS
<android.media.IRingtonePlayer$Stub$Proxy\:\ void\ stop(android.os.IBinder)>=android.permission.WAKE_LOCK
<com.android.email.Controller$LegacyListener\:\ void\ synchronizeMailboxFinished(long,long,int,int,java.util.ArrayList)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.PhoneNumberListAdapter\:\ android.net.Uri\ getContactUri(int,android.database.Cursor,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.emailcommon.service.IAccountService$Stub\:\ void\ notifyLoginFailed(long)>=android.permission.VIBRATE
<com.android.internal.telephony.IccSmsInterfaceManagerProxy\:\ void\ sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>=android.permission.SEND_SMS
<android.media.AudioManager\:\ void\ setSpeakerphoneOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.server.am.ActivityManagerService\:\ java.util.List\ getRunningExternalApplications()>=android.permission.GET_TASKS, android.permission.REAL_GET_TASKS
<com.android.internal.widget.SlidingTab\:\ void\ onVisibilityChanged(android.view.View,int)>=android.permission.GET_ACCOUNTS
<com.android.server.sip.SipService\:\ void\ setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener,java.lang.String)>=android.permission.USE_SIP
<com.android.internal.telephony.CommandsInterface\:\ void\ setCdmaBroadcastActivation(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothPbap$Stub$Proxy\:\ int\ getState()>=android.permission.BLUETOOTH
<com.android.systemui.statusbar.phone.PhoneStatusBar$19$1$3\:\ void\ run()>=android.permission.VIBRATE
<com.android.server.wm.WindowManagerService$WMThread\:\ void\ run()>=android.permission.GET_ACCOUNTS
<com.android.server.LocationManagerService\:\ java.util.List\ _getProvidersLocked(android.location.Criteria,boolean)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.contacts.vcard.NotificationImportExportListener\:\ void\ onImportFinished(com.android.contacts.vcard.ImportRequest,int,android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.location.ComprehensiveCountryDetector\:\ void\ stop()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.accounts.AccountSyncSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.BluetoothManagerService\:\ java.lang.String\ getName()>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ android.os.Bundle\ getUserRestrictions(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.nfc.tech.NfcA\:\ byte[]\ transceive(byte[],boolean)>=android.permission.NFC
<android.accounts.IAccountManager\:\ android.accounts.Account[]\ getAccounts(java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.app.PhotoDataAdapter$ScreenNailJob\:\ java.lang.Object\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.widget.LockPatternView\:\ void\ notifyPatternDetected()>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService$2\:\ void\ onSomePackagesChanged()>=android.permission.WRITE_SETTINGS
<com.android.server.ConnectivityService\:\ void\ stopTethering(int)>=android.permission.TETHER_PRIVILEGED
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneDisambiguationDialogFragment\:\ android.app.Dialog\ onCreateDialog(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.calendar.CalendarProvider2\:\ long\ handleInsertException(long,android.content.ContentValues,boolean)>=android.permission.READ_CALENDAR
<com.android.server.location.LocationProviderInterface\:\ void\ updateLocation(android.location.Location)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ isForwardable(long)>=android.permission.WRITE_SMS
<com.android.mms.ui.ManageSimMessages\:\ void\ onNewIntent(android.content.Intent)>=android.permission.RECEIVE_SMS
<com.android.settings.CryptKeeper\:\ void\ onStart()>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine$InitialState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.phone.InCallScreen\:\ void\ onMuteClick()>=android.permission.MODIFY_AUDIO_SETTINGS
<android.bluetooth.IBluetooth\:\ boolean\ getTrustState(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isManagedProfile(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.location.ILocationManager$Stub$Proxy\:\ void\ requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.SlideshowDataAdapter\:\ com.android.gallery3d.data.MediaItem\ loadItem()>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.FetchUrlMimeType\:\ void\ run()>=android.permission.WRITE_EXTERNAL_STORAGE
<android.net.wifi.IWifiManager$Stub$Proxy\:\ boolean\ removeNetwork(int)>=android.permission.CHANGE_WIFI_STATE
<com.android.exchange.ExchangeService$2\:\ void\ stopSync(long)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.CharSequence\ getShortSupportMessage(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.util.StateMachine$SmHandler\:\ void\ performTransitions()>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ queryFacilityLockForApp(java.lang.String,java.lang.String,int,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.media.AudioService\:\ void\ onSetA2dpConnectionState(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<com.android.phone.AccelerometerListener\:\ void\ access$000(com.android.phone.AccelerometerListener,double,double,double)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothA2dp\:\ boolean\ resumeSink(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker\:\ int\ getTriState(android.content.Context)>=android.permission.BLUETOOTH
<com.android.server.NetworkManagementService\:\ void\ addVpnUidRanges(int,[android.net.UidRange)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.calendar.event.EditEventFragment\:\ void\ setModelIfDone(int)>=android.permission.READ_CALENDAR
<android.test.mock.MockApplication\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.mms.transaction.TransactionService$ConnectivityBroadcastReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.phone.sip.SipSettings$1\:\ void\ run()>=android.permission.USE_SIP
<com.android.providers.contacts.VoicemailContentProvider\:\ com.android.providers.contacts.VoicemailContentProvider$UriData\ checkPermissionsAndCreateUriDataForReadOperation(android.net.Uri)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.providers.media.MediaScannerService\:\ void\ scan(java.lang.String[],java.lang.String)>=android.permission.WAKE_LOCK
<com.android.browser.Controller\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.development.Connectivity\:\ void\ onStopDelayedCycle()>=android.permission.WAKE_LOCK
<com.android.phone.EmergencyDialer\:\ void\ onClick(android.view.View)>=android.permission.VIBRATE
<com.android.calendar.AllInOneActivity\:\ boolean\ onQueryTextSubmit(java.lang.String)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.cdma.RuimRecords\:\ void\ onRecordLoaded()>=android.permission.BROADCAST_STICKY
<com.android.server.am.ServiceRecord$1\:\ void\ run()>=android.permission.VIBRATE
<android.net.IConnectivityManager$Stub$Proxy\:\ void\ setNetworkPreference(int)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothPan\:\ void\ setBluetoothTethering(boolean)>=android.permission.BLUETOOTH
<com.android.server.ThrottleService\:\ void\ dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothA2dp\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.SettingsPreferenceFragment\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.settings.DevelopmentSettings\:\ void\ setPermissionEnforced(android.content.Context,java.lang.String,boolean)>=android.permission.READ_EXTERNAL_STORAGE
<android.widget.VideoView\:\ void\ access$2000(android.widget.VideoView)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ setFacilityLockForApp(java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.Suggest\:\ com.android.inputmethod.latin.SuggestedWords\ getSuggestedWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo,int)>=android.permission.WRITE_CONTACTS
<com.android.email.activity.MessageViewFragment$Callback\:\ void\ onBeforeMessageGone()>=android.permission.ACCESS_NETWORK_STATE
<com.android.nfc.NfcService$TagService\:\ int[]\ getTechList(int)>=android.permission.NFC
<com.android.server.pm.PackageInstallerService\:\ void\ registerCallback(android.content.pm.IPackageInstallerCallback,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.Settings$ManageAccountsSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.calendar.alerts.AlertActivity\:\ void\ dismissAlarm(long)>=android.permission.WRITE_CALENDAR
<com.android.contacts.model.EntityModifier\:\ void\ parseExtras(android.content.Context,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDelta,android.os.Bundle)>=android.permission.WRITE_CONTACTS
<com.android.settings.widget.ChartDataUsageView$3\:\ void\ onSweep(com.android.settings.widget.ChartSweepView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.SupplicantStateTracker$InactiveState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.commands.monkey.MonkeyRotationEvent\:\ int\ injectEvent(android.view.IWindowManager,android.app.IActivityManager,int)>=android.permission.WRITE_SETTINGS
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker\:\ void\ setImageViewResources(android.content.Context,android.widget.RemoteViews)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.MovieActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.WAKE_LOCK
<com.android.settings.accounts.AccountSyncSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.DrawRectFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.app.IWallpaperManager$Stub$Proxy\:\ android.os.ParcelFileDescriptor\ setWallpaper(java.lang.String)>=android.permission.SET_WALLPAPER
<com.android.settings.inputmethod.UserDictionaryLocalePicker\:\ void\ onListItemClick(android.widget.ListView,android.view.View,int,long)>=android.permission.CHANGE_CONFIGURATION
<com.android.bluetooth.pbap.BluetoothPbapService\:\ void\ onDestroy()>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$ScoSocketConnectThread\:\ void\ failedScoConnect()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothPbap$Stub$Proxy\:\ void\ disconnect()>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ queryTTYMode(android.os.Message)>=android.permission.WAKE_LOCK
<android.accounts.AccountManagerService\:\ void\ getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>=android.permission.USE_CREDENTIALS
<com.android.settings.users.UserDetailsSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.camera.PanoramaActivity\:\ void\ onPause()>=android.permission.RECORD_AUDIO
<com.android.email.activity.UIControllerTwoPane$RefreshTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.app.IBatteryStats$Stub\:\ byte[]\ getStatistics()>=android.permission.BLUETOOTH
<android.server.BluetoothPanProfileHandler\:\ boolean\ disconnectPanDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.calllog.CallLogQueryHandler\:\ void\ fetchCalls(int,int,boolean,boolean)>=android.permission.READ_CALL_LOG
<com.android.email.activity.setup.DebugFragment\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.READ_PHONE_STATE
<android.server.BluetoothEventLoop\:\ void\ onPropertyChanged(java.lang.String[])>=android.permission.BLUETOOTH
<com.android.providers.downloads.DownloadThread\:\ org.apache.http.HttpResponse\ sendRequest(com.android.providers.downloads.DownloadThread$State,android.net.http.AndroidHttpClient,org.apache.http.client.methods.HttpGet)>=android.permission.ACCESS_NETWORK_STATE
<android.provider.VoicemailContract$Status\:\ android.net.Uri\ buildSourceUri(java.lang.String)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.server.am.ActivityManagerService\:\ void\ stopSystemLockTaskMode()>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ActivityInfo\ getReceiverInfo(android.content.ComponentName,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.mms.transaction.TransactionService\:\ int\ onStartCommand(android.content.Intent,int,int)>=android.permission.BLUETOOTH
<android.filterpacks.base.FrameBranch\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.MccTable\:\ void\ setWifiCountryCodeFromMcc(android.content.Context,int)>=android.permission.WRITE_SETTINGS
<android.widget.VideoView\:\ void\ pause()>=android.permission.WAKE_LOCK
<android.media.IAudioService$Stub\:\ void\ stopBluetoothSco(android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.exchange.CalendarSyncAdapterService\:\ void\ performSync(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothService\:\ boolean\ cancelDiscovery()>=android.permission.BLUETOOTH_ADMIN
<com.android.mms.transaction.SmsReceiverService\:\ void\ access$400(com.android.mms.transaction.SmsReceiverService)>=android.permission.RECEIVE_SMS
<com.android.gallery3d.app.MovieActivity\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.calendar.DayView\:\ int\ getEventAccessLevel(android.content.Context,com.android.calendar.Event)>=android.permission.READ_CALENDAR
<com.android.server.WifiService\:\ void\ enforceAccessPermission()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.PowerManagerService$4\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.ITelephony$Stub$Proxy\:\ boolean\ endCall()>=android.permission.CALL_PHONE
<com.android.settings.wifi.WifiSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.contacts.editor.LabeledEditorView\:\ void\ notifyEditorListener()>=android.permission.READ_SYNC_SETTINGS
<android.app.ActivityManagerNative\:\ void\ handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ void\ _loadProvidersLocked()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.DuotoneFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.music.MediaPlaybackService$ServiceStub\:\ void\ setRepeatMode(int)>=android.permission.WAKE_LOCK
<com.android.settings.MasterClear\:\ android.view.View\ onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.phone.sip.SipSharedPreferences\:\ void\ setReceivingCallsEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ applyNewState(com.android.internal.telephony.ApnContext,boolean,boolean)>=android.permission.BROADCAST_STICKY
<android.os.IVibratorService\:\ void\ cancelVibrate(android.os.IBinder)>=android.permission.VIBRATE
<android.bluetooth.IBluetooth$Stub\:\ int\ getInputDevicePriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.phone.PhoneApp\:\ void\ updateBluetoothIndication(boolean)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.contacts.calllog.CallLogAdapter\:\ void\ bindChildView(android.view.View,android.content.Context,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ access$5700(com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setPermissionPolicy(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.service.voice.VoiceInteractionService\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<android.bluetooth.IBluetoothA2dp$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.RedEyeFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiWatchdogStateMachine$NotConnectedState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.contacts.list.PhoneNumberPickerFragment\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.uiautomator.core.UiDevice\:\ void\ unfreezeRotation()>=android.permission.WRITE_SETTINGS
<com.android.gallery3d.ui.PhotoView$Picture\:\ void\ draw(com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)>=android.permission.RECORD_AUDIO
<com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener\:\ void\ onUseAsPrimaryChosen()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.Controller$3\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.NetworkManagementService\:\ void\ removeInterfaceAlert(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<android.accounts.AccountManager\:\ android.accounts.AccountManagerFuture\ addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.latin.LatinIME\:\ void\ handleCharacterWhileInBatchEdit(int,int,int,int,android.view.inputmethod.InputConnection)>=android.permission.WRITE_CONTACTS
<com.android.common.widget.GroupingListAdapter\:\ void\ bindStandAloneView(android.view.View,android.content.Context,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothService\:\ void\ handlePanDeviceStateChange(android.bluetooth.BluetoothDevice,java.lang.String,int,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.net.NetworkPolicyManagerService\:\ void\ access$1100(com.android.server.net.NetworkPolicyManagerService)>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.accessibility.AccessibilityEntityProvider\:\ void\ simulateKeyPress(com.android.inputmethod.keyboard.Key)>=android.permission.WRITE_CONTACTS
<android.nfc.tech.NfcB\:\ void\ close()>=android.permission.NFC
<android.server.BluetoothService\:\ boolean\ setPropertyInteger(java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.contacts.dialpad.DialpadFragment\:\ void\ configureScreenFromIntent(android.content.Intent)>=android.permission.READ_PHONE_STATE
<android.content.Context\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.providers.contacts.ContactsProvider2\:\ void\ cleanupPhotoStore()>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.calendar.CalendarProviderBroadcastReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.phone.OtaUtils\:\ void\ otaShowProgramFailureNotice(int)>=android.permission.BLUETOOTH
<android.accounts.AccountManagerService\:\ void\ setUserData(android.accounts.Account,java.lang.String,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setCrossProfileContactsSearchDisabled(android.content.ComponentName,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.widget.IndexerListAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.connectivity.MetricsLoggerService$MetricsLoggerImpl\:\ long\ logEvents([android.net.ConnectivityMetricsEvent)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.browser.view.PieMenu\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService\:\ void\ moveAppWindowsLocked(java.util.List,int)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DockService\:\ void\ access$700(com.android.settings.bluetooth.DockService,android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<android.nfc.tech.IsoDep\:\ void\ reconnect()>=android.permission.NFC
<com.android.server.am.BatteryStatsService\:\ void\ noteFlashlightOff(int)>=android.permission.UPDATE_DEVICE_STATS
<android.net.DnsPinger\:\ java.util.List\ getDnsList()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.list.ContactListFilterControllerImpl\:\ void\ checkFilterValidity(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ int\ stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>=android.permission.BROADCAST_STICKY, android.permission.SET_DEBUG_APP, android.permission.START_ANY_ACTIVITY, android.permission.START_TASKS_FROM_RECENTS
<com.android.internal.telephony.CommandsInterface\:\ void\ setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ access$1300(com.android.phone.InCallScreen)>=android.permission.BLUETOOTH
<android.view.IWindowSession$Stub\:\ int\ addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)>=android.permission.SYSTEM_ALERT_WINDOW
<com.android.server.wm.WindowManagerService\:\ void\ performLayoutAndPlaceSurfacesLockedInner(boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaLteUiccFileHandler\:\ void\ loadEFLinearFixed(int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ getEnhancedVoicePrivacy(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.CropImage\:\ void\ onPause()>=android.permission.RECORD_AUDIO
<com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl\:\ void\ processCommand(java.util.EventObject)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothPbap$Stub\:\ int\ getState()>=android.permission.BLUETOOTH
<com.android.server.ThrottleService$MyHandler\:\ void\ onRebootRecovery()>=android.permission.READ_PHONE_STATE
<com.android.providers.contacts.DbModifierWithNotification\:\ void\ notifyVoicemailChangeOnInsert(android.net.Uri,java.util.Set)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.internal.telephony.ITelephony\:\ boolean\ enableDataConnectivity()>=android.permission.CHANGE_NETWORK_STATE
<android.bluetooth.IBluetoothHeadset$Stub\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.list.DefaultContactListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.server.search.SearchManagerService$MyPackageMonitor\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.launcher2.AppsCustomizePagedView\:\ void\ beginDraggingApplication(android.view.View)>=android.permission.VIBRATE
<android.net.wifi.WifiManager\:\ android.net.wifi.WifiInfo\ getConnectionInfo()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy\:\ java.lang.String\ getVoiceMailNumber()>=android.permission.READ_PHONE_STATE
<com.android.phone.EmergencyCallHelper\:\ void\ startEmergencyCallFromAirplaneModeSequence(java.lang.String)>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ boolean\ isRadioOnForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.contacts.vcard.SelectAccountActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityStack\:\ com.android.server.am.ActivityRecord\ activityIdleInternal(android.os.IBinder,boolean,android.content.res.Configuration)>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.CallLogFragment\:\ void\ fetchCalls()>=android.permission.READ_CALL_LOG
<com.android.nfc.P2pLinkManager\:\ void\ prepareMessageToSend()>=android.permission.GET_TASKS
<com.android.gallery3d.app.Gallery\:\ void\ onCreate(android.os.Bundle)>=android.permission.RECORD_AUDIO
<com.android.camera.Camera\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.camera.VideoCamera\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.RECORD_AUDIO
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ android.view.View\ createLockScreen()>=android.permission.WAKE_LOCK
<com.android.contacts.group.GroupDetailFragment$2\:\ android.content.CursorLoader\ onCreateLoader(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageViewFragment\:\ void\ onSaveAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ boolean\ setAndPersistDeviceName(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.server.tv.TvInputManagerService$BinderService\:\ void\ unblockContent(android.os.IBinder,java.lang.String,int)>=android.permission.MODIFY_PARENTAL_CONTROLS
<com.android.contacts.group.GroupDetailFragment\:\ void\ access$400(com.android.contacts.group.GroupDetailFragment,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ void\ acknowledgeLastIncomingSms(boolean,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.deskclock.AlarmAlert\:\ void\ snooze()>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.DrawRectFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.Settings$PowerUsageSummaryActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth\:\ boolean\ enableNoAutoConnect()>=android.permission.BLUETOOTH_ADMIN
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy\:\ boolean\ onTransitionKey(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.Key,android.view.MotionEvent)>=android.permission.WRITE_CONTACTS
<com.android.internal.policy.impl.KeyguardViewMediator$3\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageViewFragmentBase$1\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$DockSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.CropView\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ enableLocationUpdates()>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothA2dp\:\ boolean\ isA2dpPlaying(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.inputmethod.latin.ContactsBinaryDictionary\:\ boolean\ isValidWord(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setCameraDisabled(android.content.ComponentName,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.voicedialer.VoiceDialerActivity$CommandRecognizerClient\:\ void\ onMicrophoneStart(java.io.InputStream)>=android.permission.VIBRATE
<android.provider.CalendarContract$Reminders\:\ android.database.Cursor\ query(android.content.ContentResolver,long,java.lang.String[])>=android.permission.READ_CALENDAR
<com.android.internal.policy.impl.SimPukUnlockScreen\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.server.wallpaper.WallpaperManagerService\:\ void\ setWallpaperComponent(android.content.ComponentName)>=android.permission.SET_WALLPAPER_COMPONENT
<android.nfc.NfcActivityManager\:\ void\ setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback)>=android.permission.NFC
<android.bluetooth.BluetoothA2dp\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.server.input.InputManagerService$Callbacks\:\ android.view.KeyEvent\ dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService\:\ void\ pause()>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.BaseStatusBar$NotificationClicker\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<com.android.browser.GoogleAccountLogin\:\ void\ run()>=android.permission.GET_ACCOUNTS
<android.app.backup.IBackupManager$Stub$Proxy\:\ void\ setAutoRestore(boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ adjustUserActivityLocked()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumSetPage\:\ void\ resume()>=android.permission.ACCESS_NETWORK_STATE
<android.nfc.INfcAdapterExtras$Stub$Proxy\:\ android.os.Bundle\ transceive(java.lang.String,byte[])>=android.permission.NFC
<android.media.AudioService\:\ void\ startBluetoothSco(android.os.IBinder)>=android.permission.BLUETOOTH
<android.provider.BrowserContract$SyncState\:\ android.content.ContentProviderOperation\ newSetOperation(android.accounts.Account,byte[])>=android.permission.GET_ACCOUNTS
<com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo\:\ void\ <init>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.InputMethodManagerService\:\ android.view.inputmethod.InputMethodSubtype\ getLastInputMethodSubtype()>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.activities.PeopleActivity\:\ boolean\ onPrepareOptionsMenu(android.view.Menu)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.event.EditEventView\:\ void\ updateHomeTime()>=android.permission.READ_CALENDAR
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiRssiChanged(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.common.contacts.DataUsageStatUpdater\:\ boolean\ updateWithPhoneNumber(java.util.Collection)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.CallerInfoCache$CacheAsyncTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WRITE_CONTACTS
<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.phone.InCallTouchUi\:\ void\ onTrigger(android.view.View,int)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.A2dpProfile\:\ int\ getConnectionStatus(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ enable()>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.sip.SipPhone$SipConnection$1\:\ void\ onChanged(android.net.sip.SipAudioCall)>=android.permission.WAKE_LOCK
<com.android.contacts.detail.ContactDetailLayoutController\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.InCallScreen\:\ void\ addVoiceMailNumberPanel()>=android.permission.BLUETOOTH
<com.android.music.AudioPreview\:\ void\ access$700(com.android.music.AudioPreview)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.DocumentaryFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub\:\ int\ getWifiApEnabledState()>=android.permission.ACCESS_WIFI_STATE
<android.bluetooth.BluetoothHealth\:\ boolean\ isEnabled()>=android.permission.BLUETOOTH
<com.android.internal.telephony.IccFileHandler\:\ void\ loadEFLinearFixed(int,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager\:\ void\ setNetworkPreference(int)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothAdapter\:\ boolean\ setScanMode(int,int)>=android.permission.BLUETOOTH
<com.android.providers.userdictionary.DictionaryBackupAgent\:\ void\ onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>=android.permission.READ_USER_DICTIONARY
<android.net.wifi.IWifiManager\:\ void\ stopWifi()>=android.permission.CHANGE_WIFI_STATE
<com.android.exchange.EasAccountService\:\ boolean\ sendSettings()>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerTwoPane\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.AllInOneActivity\:\ void\ createButtonsSpinner(int,boolean)>=android.permission.READ_CALENDAR
<com.android.internal.widget.SlidingTab\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.WAKE_LOCK
<com.android.server.input.InputManagerService\:\ void\ registerPointerSpeedSettingObserver()>=android.permission.WRITE_SETTINGS
<com.android.systemui.SearchPanelView\:\ void\ access$200(com.android.systemui.SearchPanelView)>=android.permission.VIBRATE
<android.content.IContentService$Stub\:\ android.content.SyncStatusInfo\ getSyncStatus(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.phone.EnableFdnScreen\:\ void\ enableFdn()>=android.permission.WAKE_LOCK
<com.android.bluetooth.a2dpsink.A2dpSinkService$BluetoothA2dpSinkBinder\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ setRadioPower(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.browser.SuggestionsAdapter$SuggestFilter\:\ android.widget.Filter$FilterResults\ performFiltering(java.lang.CharSequence)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.DreamSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.app.IActivityManager\:\ void\ startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$AccessibilitySettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.email.MessagingController$13\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.music.MediaPlaybackService\:\ void\ setQueuePosition(int)>=android.permission.WAKE_LOCK
<android.test.IsolatedContext$MockAccountManager\:\ android.accounts.AccountManagerFuture\ getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.StraightenFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ I[]\ supplyPukReportResult(java.lang.String,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy\:\ void\ listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>=android.permission.ACCESS_COARSE_LOCATION
<android.service.voice.VoiceInteractionService\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.google.common.io.Files\:\ void\ copy(java.io.File,java.io.OutputStream)>=android.permission.INTERNET
<com.android.phone.ManageConferenceUtils$2\:\ void\ onClick(android.view.View)>=android.permission.ACCESS_WIFI_STATE
<android.content.ContentResolver\:\ boolean\ isSyncActive(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<android.server.BluetoothService\:\ boolean\ setName(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.input.InputManagerService\:\ void\ registerShowTouchesSettingObserver()>=android.permission.WRITE_SETTINGS
<com.android.server.net.NetworkStatsService\:\ void\ performPollLocked(int)>=android.permission.ACCESS_NETWORK_STATE
<android.app.ContextImpl\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.server.net.NetworkPolicyManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.SuggestionsAdapter$CombinedCursor\:\ void\ runQuery(java.lang.CharSequence)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<android.net.wifi.WifiStateMachine\:\ void\ setCountryCode(java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetooth\:\ boolean\ setScanMode(int,int)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ setRssi(short)>=android.permission.BLUETOOTH
<com.android.nfc.handover.HandoverManager\:\ android.nfc.NdefMessage\ createHandoverRequestMessage()>=android.permission.BLUETOOTH
<android.media.effect.effects.SharpenEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ int\ getAdapterConnectionState()>=android.permission.BLUETOOTH
<com.android.contacts.list.DefaultContactListAdapter\:\ android.net.Uri\ getContactUri(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.DreamSettings$Enabler\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.WRITE_SETTINGS
<com.android.calendar.event.EditEventView\:\ void\ onCancel(android.content.DialogInterface)>=android.permission.WRITE_CALENDAR
<com.android.settings.bluetooth.BluetoothDevicePreference\:\ void\ onClicked()>=android.permission.BLUETOOTH
<com.android.settings.Settings$LocationSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.mms.util.DraftCache\:\ void\ rebuildCache()>=android.permission.READ_SMS
<com.android.calendar.month.SimpleWeeksAdapter\:\ void\ onDayTapped(android.text.format.Time)>=android.permission.WRITE_CALENDAR
<com.android.deskclock.AlarmReceiver\:\ void\ access$000(com.android.deskclock.AlarmReceiver,android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.internal.widget.PasswordEntryKeyboardHelper\:\ void\ setKeyboardMode(int)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.contacts.list.PhoneNumberPickerFragment\:\ boolean\ isSyncActive()>=android.permission.READ_SYNC_STATS
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ com.android.systemui.statusbar.phone.PhoneStatusBarView\ makeStatusBarView()>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.ui.SurfaceTargetFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.ISms\:\ boolean\ updateMessageOnIccEf(int,int,byte[])>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ boolean\ setPreferredNetworkType(int,int)>=android.permission.MODIFY_PHONE_STATE
<android.accounts.AccountManager$4\:\ void\ startTask()>=android.permission.GET_ACCOUNTS
<com.android.music.MediaPlaybackService$CompatMediaPlayer\:\ void\ postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.music.IMediaPlaybackService$Stub$Proxy\:\ void\ enqueue(long[],int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ setCallForward(int,int,int,java.lang.String,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker$1\:\ void\ onPostExecute(java.lang.Object)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.AlbumPage\:\ void\ pickPhoto(int)>=android.permission.ACCESS_NETWORK_STATE
<android.content.pm.IPackageManager\:\ void\ getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>=android.permission.GET_PACKAGE_SIZE
<com.android.providers.calendar.CalendarProvider2\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>=android.permission.READ_CALENDAR
<android.provider.CalendarContract$Instances\:\ android.database.Cursor\ query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String)>=android.permission.READ_CALENDAR
<com.android.emailcommon.utility.EmailAsyncTask$1\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.AccountManager$9\:\ android.accounts.AccountManagerFuture\ start()>=android.permission.GET_ACCOUNTS
<android.app.ApplicationPackageManager\:\ int[]\ getPackageGids(java.lang.String)>=android.permission.READ_EXTERNAL_STORAGE
<android.preference.VolumePreference$SeekBarVolumizer\:\ void\ initSeekBar(android.widget.SeekBar,android.net.Uri)>=android.permission.WAKE_LOCK
<android.os.SystemVibrator\:\ void\ vibrate(long[],int)>=android.permission.VIBRATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getProfileWithMinimumFailedPasswordsForWipe(int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.service.dreams.DreamService\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.server.accessibility.AccessibilityManagerService$4\:\ void\ onChange(boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ handleEnterEmergencyCallbackMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.RuimFileHandler\:\ void\ loadEFLinearFixedAll(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.DataUsageSummary\:\ boolean\ hasReadyMobileRadio(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<com.android.uiautomator.core.UiDevice\:\ void\ setRotationRight()>=android.permission.WRITE_SETTINGS
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ access$5800(com.android.mms.ui.ComposeMessageActivity,java.lang.String,android.net.Uri,boolean)>=android.permission.READ_SYNC_SETTINGS
<android.app.ActivityManagerNative\:\ void\ setAlwaysFinish(boolean)>=android.permission.WRITE_SETTINGS
<android.server.BluetoothService\:\ java.util.List\ getPanDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ boolean\ removeBond(java.lang.String)>=android.permission.BLUETOOTH_ADMIN
<com.android.emailcommon.service.EmailServiceProxy\:\ void\ <init>=android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactPickerFragment\:\ void\ onStart()>=android.permission.WRITE_SETTINGS
<com.android.server.TelephonyRegistry\:\ void\ notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>=android.permission.MODIFY_PHONE_STATE
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker\:\ void\ onActualStateChange(android.content.Context,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.NotificationTransaction\:\ byte[]\ sendPdu(byte[])>=android.permission.CHANGE_NETWORK_STATE
<com.android.server.wifi.WifiServiceImpl\:\ void\ setCountryCode(java.lang.String,boolean)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.camera.Camera\:\ void\ onResume()>=android.permission.RECORD_AUDIO
<com.android.systemui.statusbar.DelegateViewHelper\:\ boolean\ onInterceptTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.server.ConnectivityService\:\ com.android.internal.net.VpnInfo[]\ getAllVpnInfo()>=android.permission.ACCESS_NETWORK_STATE, android.permission.CONNECTIVITY_INTERNAL
<com.android.browser.Controller\:\ void\ access$100(com.android.browser.Controller,android.os.Bundle,android.content.Intent,long,boolean)>=android.permission.GET_ACCOUNTS
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ portSelect(int,android.hardware.hdmi.IHdmiControlCallback)>=android.permission.HDMI_CEC
<com.android.contacts.list.ContactEntryListFragment\:\ void\ onStart()>=android.permission.WRITE_SETTINGS
<com.android.phone.SipCallOptionHandler$1\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHandsfree$IncomingScoAcceptThread\:\ void\ <init>=android.permission.BLUETOOTH
<android.server.BluetoothInputProfileHandler\:\ void\ handleInputDeviceStateChange(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<com.android.phone.BluetoothHeadsetService\:\ void\ onStart(android.content.Intent,int)>=android.permission.BLUETOOTH
<com.android.music.MediaPlaybackService\:\ int\ removeTrack(long)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccSmsInterfaceManager\:\ void\ sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.settings.Settings\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.browser.BaseUi\:\ boolean\ onBackKey()>=android.permission.GET_ACCOUNTS
<android.server.BluetoothService\:\ boolean\ createBondOutOfBand(java.lang.String,byte[],byte[])>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.UserDictionary\:\ boolean\ isValidWord(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.browser.UiController\:\ boolean\ switchToTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<com.android.settings.Settings$StorageSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.settings.SettingsPreferenceFragment\:\ void\ onStart()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.PhotoDataAdapter\:\ void\ moveTo(int)>=android.permission.VIBRATE
<com.android.inputmethod.latin.suggestions.SuggestionsView\:\ void\ onClick(android.view.View)>=android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsActivity\:\ void\ onAttachFragment(android.app.Fragment)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.BackupManagerService$PerformClearTask\:\ void\ run()>=android.permission.WAKE_LOCK
<android.provider.Browser\:\ void\ updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)>=android.permission.GET_ACCOUNTS
<com.android.nfc.NfcService\:\ void\ onLlcpLinkActivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>=android.permission.BLUETOOTH
<android.accounts.AccountAuthenticatorActivity\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ access$1900(com.android.internal.policy.impl.KeyguardViewMediator,boolean)>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService$SipSessionGroupExt\:\ void\ openToReceiveCalls()>=android.permission.WAKE_LOCK
<com.android.browser.PieControl$TabAdapter$1\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<com.android.phone.InCallScreen\:\ com.android.phone.InCallScreen$SyncWithPhoneStateStatus\ syncWithPhoneState()>=android.permission.BLUETOOTH
<com.android.systemui.usb.UsbPermissionActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothHeadset$Stub\:\ boolean\ connectHeadsetInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.net.NetworkPolicyManagerService\:\ android.net.NetworkPolicy[]\ getNetworkPolicies()>=android.permission.READ_PHONE_STATE
<com.android.development.AccountsTester$3\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.GET_ACCOUNTS
<com.android.calendar.event.AttendeesView\:\ void\ addAttendees(java.util.HashMap)>=android.permission.WRITE_CONTACTS
<com.android.providers.settings.SettingsHelper\:\ void\ setLocaleData(byte[],int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccCard\:\ void\ supplyPuk(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.hardware.Camera\:\ android.hardware.Camera\ open()>=android.permission.CAMERA
<com.android.internal.os.storage.ExternalStorageFormatter\:\ void\ onCreate()>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub$Proxy\:\ boolean\ isNetworkSupported(int)>=android.permission.ACCESS_NETWORK_STATE
<android.server.BluetoothService\:\ java.lang.String\ getAddress()>=android.permission.BLUETOOTH
<android.media.IRingtonePlayer$Stub$Proxy\:\ void\ stopAsync()>=android.permission.WAKE_LOCK
<com.android.calendar.alerts.AlertService\:\ void\ processMessage(android.os.Message)>=android.permission.WRITE_CALENDAR
<android.location.LocationManager\:\ void\ clearTestProviderEnabled(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.internal.policy.impl.GlobalActions$SinglePressAction\:\ boolean\ onLongPress()>=android.permission.WAKE_LOCK
<android.net.wifi.WifiManager\:\ boolean\ isWifiEnabled()>=android.permission.ACCESS_WIFI_STATE
<android.filterpacks.ui.SurfaceRenderFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.PhoneBase\:\ void\ invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>=android.permission.WAKE_LOCK
<android.accounts.IAccountManager$Stub\:\ android.accounts.Account[]\ getAccounts(java.lang.String)>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)>=android.permission.BLUETOOTH
<android.nfc.INfcTag$Stub\:\ int\ close(int)>=android.permission.NFC
<android.net.IConnectivityManager$Stub$Proxy\:\ boolean\ setRadio(int,boolean)>=android.permission.CHANGE_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ handleRadioAvailable()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.CropFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.providers.downloads.DownloadInfo\:\ android.net.Uri\ getAllDownloadsUri()>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.contacts.group.GroupEditorFragment$4\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.AlbumSetPage$1\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$DataUsageSummaryActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<android.net.NetworkPolicyManager\:\ void\ setRestrictBackground(boolean)>=android.permission.READ_PHONE_STATE
<com.android.browser.Tab\:\ boolean\ createSubWindow()>=android.permission.INTERNET
<com.android.server.am.ActivityManagerService\:\ int\ startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,boolean,int)>=android.permission.SET_DEBUG_APP
<com.android.server.MountService\:\ java.lang.String\ getField(java.lang.String)>=android.permission.STORAGE_INTERNAL
<com.android.settings.Settings$TextToSpeechSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.server.DevicePolicyManagerService\:\ void\ resetGlobalProxyLocked()>=android.permission.WRITE_SETTINGS
<android.speech.tts.TextToSpeech\:\ int\ stop()>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ rejectCall()>=android.permission.WAKE_LOCK
<com.android.mms.util.Recycler\:\ void\ deleteOldMessages(android.content.Context)>=android.permission.RECEIVE_SMS
<com.android.browser.homepages.RequestHandler\:\ void\ doHandleRequest()>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.server.NetworkManagementService\:\ void\ removeNetwork(int)>=android.permission.CONNECTIVITY_INTERNAL
<android.webkit.WebIconDatabaseClassic$EventHandler\:\ void\ postMessage(android.os.Message)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ notifyAndAcknowledgeLastIncomingSms(boolean,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.filterfw.core.AsyncRunner$AsyncRunnerTask\:\ void\ onPostExecute(java.lang.Object)>=android.permission.WAKE_LOCK
<android.test.SyncBaseInstrumentation\:\ void\ cancelSyncsandDisableAutoSync()>=android.permission.WRITE_SYNC_SETTINGS
<com.android.providers.downloads.DownloadProvider\:\ void\ checkInsertPermissions(android.content.ContentValues)>=android.permission.INTERNET
<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.camera.VideoCamera\:\ void\ checkQualityAndStartPreview()>=android.permission.RECORD_AUDIO
<android.test.IsolatedContext$MockAccountManager\:\ android.accounts.AccountManagerFuture\ addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<android.webkit.WebViewClassic\:\ void\ onSizeChanged(int,int,int,int)>=android.permission.WAKE_LOCK
<com.android.voicedialer.VoiceDialerActivity\:\ void\ releaseWakeLock()>=android.permission.WAKE_LOCK
<com.android.internal.app.IBatteryStats$Stub\:\ void\ setBatteryState(int,int,int,int,int,int)>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiSettingsForSetupWizardXL\:\ void\ onBackButtonPressed()>=android.permission.ACCESS_WIFI_STATE
<android.nfc.tech.BasicTagTechnology\:\ byte[]\ transceive(byte[],boolean)>=android.permission.NFC
<android.filterpacks.imageproc.StraightenFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker\:\ void\ toggleState(android.content.Context)>=android.permission.BLUETOOTH
<com.android.bluetooth.opp.BluetoothOppReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.ResizeFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.policy.impl.AccountUnlockScreen\:\ android.accounts.Account\ findIntendedAccount(java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.server.appwidget.AppWidgetServiceImpl\:\ void\ notifyAppWidgetViewDataChanged(java.lang.String,[int,int)>=android.permission.BIND_APPWIDGET
<com.android.internal.telephony.IPhoneSubInfo\:\ java.lang.String\ getDeviceSvn()>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.ISms\:\ boolean\ enableCellBroadcast(int)>=android.permission.RECEIVE_SMS
<com.android.phone.InCallScreen\:\ void\ updateManageConferencePanelIfNecessary()>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager$Stub\:\ boolean\ releaseWifiLock(android.os.IBinder)>=android.permission.WAKE_LOCK
<com.android.server.appwidget.AppWidgetServiceImpl\:\ void\ setBindAppWidgetPermission(java.lang.String,int,boolean)>=android.permission.MODIFY_APPWIDGET_BIND_PERMISSIONS
<com.android.nfc.DeviceHost$DeviceHostListener\:\ void\ onCardEmulationDeselected()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ setName(java.lang.String)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.MoviePlayer\:\ void\ onPlayPause()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.ManageCachePage$1\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.deskclock.AlarmKlaxon\:\ void\ stop()>=android.permission.WAKE_LOCK
<com.android.calendar.month.MonthByWeekFragment\:\ void\ onScroll(android.widget.AbsListView,int,int,int)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.IPhoneSubInfo$Stub\:\ java.lang.String\ getLine1AlphaTag()>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.SMSDispatcher\:\ int\ dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>=android.permission.WAKE_LOCK
<android.net.INetworkStatsService$Stub$Proxy\:\ android.net.NetworkStats\ getDataLayerSnapshotForUid(int)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.HeadsetBase\:\ void\ finalize()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cat.CommandParamsFactory\:\ boolean\ processSelectItem(com.android.internal.telephony.cat.CommandDetails,java.util.List)>=android.permission.WAKE_LOCK
<com.android.server.power.PowerManagerService$BinderService\:\ void\ reboot(boolean,java.lang.String,boolean)>=android.permission.REBOOT, android.permission.RECOVERY
<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder\:\ boolean\ getReport(android.bluetooth.BluetoothDevice,byte,byte,int)>=android.permission.BLUETOOTH_ADMIN
<com.android.inputmethod.latin.LatinIME\:\ void\ pickSuggestionManually(int,java.lang.CharSequence,int,int)>=android.permission.WRITE_CONTACTS
<android.bluetooth.IBluetooth\:\ boolean\ disable(boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.email.activity.UIControllerTwoPane\:\ void\ switchAccount(long,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.screenshot.GlobalScreenshot\:\ void\ takeScreenshot(java.lang.Runnable,boolean,boolean)>=android.permission.VIBRATE
<com.android.contacts.vcard.ExportProcessor\:\ void\ doCancelNotification()>=android.permission.VIBRATE
<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper\:\ void\ enroll(android.os.IBinder,[byte,int,android.hardware.fingerprint.IFingerprintServiceReceiver,int,java.lang.String)>=android.permission.MANAGE_FINGERPRINT
<android.filterpacks.videosrc.SurfaceTextureTarget\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.GlobalActions$3\:\ boolean\ onLongPress()>=android.permission.WAKE_LOCK
<com.android.settings.Settings$DateTimeSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.calendar.alerts.AlertReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ImageStitcher\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.PrivacySettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ supplyIccPin(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ setSelectedContactUri(android.net.Uri,boolean,boolean,boolean,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.usb.UsbStorageActivity$8\:\ void\ run()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.phone.PhoneInterfaceManager\:\ int\ getCdmaEriIconIndexForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.bluetooth.IBluetoothHeadset\:\ int\ getBatteryUsageHint(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.app.TabActivity\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.ex.variablespeed.MediaPlayerProxy\:\ void\ start()>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub\:\ android.os.ParcelUuid[]\ getRemoteUuids(java.lang.String)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.FillLightFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.contacts.interactions.ImportExportDialogFragment\:\ boolean\ handleImportRequest(int)>=android.permission.READ_SYNC_SETTINGS
<android.net.INetworkPolicyManager\:\ void\ setRestrictBackground(boolean)>=android.permission.READ_PHONE_STATE
<com.android.phone.CallNotifier\:\ void\ access$1000(com.android.phone.CallNotifier)>=android.permission.BLUETOOTH
<com.android.phone.InCallScreen\:\ void\ requestCloseOtaFailureNotice(long)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.GLRoot\:\ void\ setContentPane(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.app.PhotoPage\:\ void\ updateShareURI(com.android.gallery3d.data.Path)>=android.permission.NFC
<com.android.phone.InCallScreen\:\ void\ onNewIntent(android.content.Intent)>=android.permission.BLUETOOTH
<com.android.server.RecoverySystemService$BinderService\:\ void\ rebootRecoveryWithCommand(java.lang.String)>=android.permission.RECOVERY
<android.bluetooth.IBluetooth$Stub\:\ boolean\ unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.server.location.GpsLocationProvider\:\ void\ disable()>=android.permission.WAKE_LOCK
<android.server.BluetoothA2dpService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<android.net.VpnService\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<android.filterpacks.imageproc.TintFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.camera.ui.OtherSettingsPopup$Listener\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<android.test.IsolatedContext$MockAccountManager\:\ android.accounts.AccountManagerFuture\ removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.phone.PhoneInterfaceManager\:\ void\ disableLocationUpdates()>=android.permission.CONTROL_LOCATION_UPDATES
<com.android.mms.ui.ManageSimMessages\:\ void\ onCreate(android.os.Bundle)>=android.permission.RECEIVE_SMS
<android.widget.VideoView$6\:\ void\ surfaceDestroyed(android.view.SurfaceHolder)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothAdapter\:\ android.bluetooth.BluetoothServerSocket\ listenUsingInsecureRfcommOn(int)>=android.permission.BLUETOOTH
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ android.os.ParcelFileDescriptor\ createSocketChannel(int,java.lang.String,android.os.ParcelUuid,int,int)>=android.permission.BLUETOOTH
<com.android.phone.InCallControlState\:\ void\ update()>=android.permission.BLUETOOTH
<com.android.server.LocationManagerService\:\ void\ access$2000(com.android.server.LocationManagerService,android.location.Location,boolean)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.uiautomator.core.InteractionController\:\ void\ setRotationRight()>=android.permission.WRITE_SETTINGS
<com.android.settings.wifi.WifiApEnabler$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ setUserRotationMode(int,int)>=android.permission.WRITE_SETTINGS
<com.android.exchange.EasOutboxService\:\ int\ sendMessage(java.io.File,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String[]\ getIsimImpu()>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.backup.Trampoline\:\ java.lang.String\ selectBackupTransport(java.lang.String)>=android.permission.BACKUP
<com.android.inputmethod.latin.Dictionary\:\ boolean\ isValidWord(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.settings.deviceinfo.Memory\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.server.VibratorService\:\ void\ access$300(com.android.server.VibratorService)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.DocumentaryFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.tv.TvInputManagerService$ServiceCallback\:\ void\ addHdmiInput(int,android.media.tv.TvInputInfo)>=android.permission.TV_INPUT_HARDWARE
<com.android.server.accessibility.AccessibilityManagerService$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<android.bluetooth.BluetoothHealth\:\ boolean\ unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<android.service.dreams.DreamService\:\ boolean\ dispatchTrackballEvent(android.view.MotionEvent)>=android.permission.BROADCAST_STICKY
<com.android.server.BatteryService$1\:\ void\ onUEvent(android.os.UEventObserver$UEvent)>=android.permission.BLUETOOTH
<com.android.email.activity.UIControllerOnePane\:\ void\ installMessageViewFragment(com.android.email.activity.MessageViewFragment)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.provider.BrowserProvider2\:\ boolean\ isValidParent(java.lang.String,java.lang.String,long)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.contacts.calllog.CallLogFragment\:\ void\ onResume()>=android.permission.READ_CALL_LOG
<com.android.settings.deviceinfo.Memory\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ notifyDataConnectionFailed(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setOrganizationColorForUser(int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_USERS
<com.android.internal.telephony.PhoneProxy\:\ void\ setPreferredNetworkType(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.tablet.TabletStatusBar\:\ void\ addStatusBarWindow()>=android.permission.BLUETOOTH
<android.filterfw.core.Filter\:\ void\ initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumDataLoader$ReloadTask\:\ void\ run()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ void\ setPackageScreenCompatMode(java.lang.String,int)>=android.permission.SET_SCREEN_COMPATIBILITY
<com.android.phone.PhoneApp\:\ void\ initForNewRadioTechnology()>=android.permission.BLUETOOTH
<com.android.vcard.VCardComposer\:\ boolean\ initWithRawContactsEntityUri(android.net.Uri)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.RIL\:\ void\ changeIccPin(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ void\ access$500(com.android.server.LocationManagerService)>=android.permission.WAKE_LOCK
<com.android.settings.wifi.WifiSettings\:\ void\ access$000(com.android.settings.wifi.WifiSettings,android.content.Context,android.content.Intent)>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ switchWaitingOrHoldingAndActive()>=android.permission.WAKE_LOCK
<com.android.phone.SipCallOptionHandler\:\ boolean\ access$100(com.android.phone.SipCallOptionHandler)>=android.permission.ACCESS_NETWORK_STATE
<com.android.launcher2.Folder\:\ boolean\ onLongClick(android.view.View)>=android.permission.VIBRATE
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.LockSettingsService\:\ void\ systemReady()>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE, android.permission.READ_CONTACTS
<com.android.contacts.editor.ContactEditorFragment$JoinSuggestedContactDialogFragment$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.READ_SYNC_SETTINGS
<android.hardware.ISerialManager$Stub\:\ android.os.ParcelFileDescriptor\ openSerialPort(java.lang.String)>=android.permission.SERIAL_PORT
<com.android.mms.transaction.MessagingNotification\:\ void\ notifyFailed(android.content.Context,boolean,long,boolean)>=android.permission.VIBRATE
<com.google.common.io.ByteStreams$4\:\ java.lang.Object\ getInput()>=android.permission.INTERNET
<com.android.internal.telephony.CommandsInterface\:\ void\ setNetworkSelectionModeManual(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.filterpacks.base.GLTextureSource\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.systemui.screenshot.GlobalScreenshot\:\ void\ saveScreenshotInWorkerThread(java.lang.Runnable)>=android.permission.VIBRATE
<com.android.server.ThrottleService\:\ java.lang.String\ getHelpUri()>=android.permission.ACCESS_NETWORK_STATE
<android.app.IActivityManager\:\ boolean\ handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DockService\:\ void\ handleUndocked(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.LocalBluetoothManager\:\ void\ <init>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ access$1100(com.android.internal.policy.impl.KeyguardViewMediator,int)>=android.permission.WAKE_LOCK
<android.provider.Contacts$People\:\ android.net.Uri\ addToMyContactsGroup(android.content.ContentResolver,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ android.telephony.ServiceState\ getServiceStateForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.internal.telephony.RIL\:\ void\ getCdmaBroadcastConfig(android.os.Message)>=android.permission.WAKE_LOCK
<android.app.Activity\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.CharSequence\ getShortSupportMessageForUser(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.calendar.CalendarController\:\ void\ launchDeleteEvent(long,long,long)>=android.permission.READ_CALENDAR
<android.filterpacks.videosink.MediaEncoderFilter\:\ void\ updateMediaRecorderParams()>=android.permission.RECORD_AUDIO
<android.content.SyncManager\:\ boolean\ readDataConnectionState()>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.BookmarkUtils\:\ android.net.Uri\ getBookmarksUri(android.content.Context)>=android.permission.GET_ACCOUNTS
<com.android.systemui.recent.RecentsCallback\:\ void\ dismiss()>=android.permission.VIBRATE
<com.android.server.wm.WindowManagerService\:\ void\ bulkSetParameters(int,int)>=android.permission.WAKE_LOCK
<com.android.calendar.month.MonthByWeekFragment\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_CALENDAR
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ boolean\ acceptIncomingConnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ int\ getBondState(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ disableLocationUpdates()>=android.permission.WAKE_LOCK
<android.location.LocationManager\:\ void\ setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.settings.RadioInfo\:\ void\ access$4000(com.android.settings.RadioInfo)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cat.RilMessageDecoder$StateStart\:\ void\ exit()>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ boolean\ isTetheringOn()>=android.permission.BLUETOOTH
<com.google.common.io.CharStreams\:\ java.lang.String\ readFirstLine(com.google.common.io.InputSupplier)>=android.permission.INTERNET
<com.android.contacts.list.AccountFilterActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.NetworkManagementService\:\ void\ removeIdleTimer(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.phone.sip.SipEditor\:\ void\ unregisterProfile(java.lang.String)>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ java.lang.String\ getRemoteAlias(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.net.NetworkPolicyManagerService\:\ boolean\ isTemplateRelevant(android.net.NetworkTemplate)>=android.permission.READ_PHONE_STATE
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.internal.telephony.WapPushOverSms\:\ int\ dispatchWapPdu(byte[])>=android.permission.WAKE_LOCK
<com.android.browser.BrowserSettings\:\ void\ initialize(android.content.Context)>=android.permission.WRITE_CONTACTS
<com.android.server.sip.SipService$IntervalMeasurementProcess\:\ void\ onResponse(boolean)>=android.permission.WAKE_LOCK
<com.android.settings.DevelopmentSettings\:\ void\ writePointerLocationOptions()>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.ITelephony\:\ java.util.List\ getNeighboringCellInfo()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.sip.SipPhone\:\ com.android.internal.telephony.Connection\ dialInternal(java.lang.String)>=android.permission.USE_SIP
<com.android.phone.Ringer\:\ void\ stopRing()>=android.permission.BLUETOOTH
<android.net.wifi.SupplicantStateTracker$ScanState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.exchange.EasSyncService\:\ com.android.exchange.EasResponse\ sendHttpClientPost(java.lang.String,byte[])>=android.permission.WAKE_LOCK
<android.nfc.INfcAdapter$Stub\:\ void\ setNdefPushCallback(android.nfc.INdefPushCallback)>=android.permission.NFC
<android.filterpacks.base.CallbackFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ java.util.List\ getHealthDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<android.accounts.IAccountManager$Stub\:\ java.lang.String\ peekAuthToken(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.nfc.NfcService$EnableDisableTask\:\ boolean\ enableInternal()>=android.permission.BLUETOOTH
<com.android.email.service.MailService\:\ boolean\ syncOneAccount(com.android.email.Controller,long,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ deactivateDataCall(int,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub$Proxy\:\ boolean\ requestRouteToHostAddress(int,byte[])>=android.permission.CHANGE_NETWORK_STATE
<com.android.browser.Controller\:\ void\ releaseWakeLock()>=android.permission.WAKE_LOCK
<com.android.settings.Settings$RunningServicesActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.UiccSmsController\:\ boolean\ enableCellBroadcastRangeForSubscriber(int,int,int,int)>=android.permission.RECEIVE_SMS
<com.android.vpndialogs.ManageDialog\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.phone.ManageConferenceUtils\:\ void\ updateManageConferenceRow(int,com.android.internal.telephony.Connection,boolean)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ reRegisterNetwork(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.list.JoinContactListFragment\:\ void\ onClose()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ setTTYMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.activity.setup.AccountSettingsFragment\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageViewFragmentBase$LoadBodyTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ setDeviceOutOfBandData(java.lang.String,byte[],byte[])>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.cat.IconLoader\:\ void\ startLoadingIcon(int)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ android.net.NetworkRequest\ requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int)>=android.permission.ACCESS_NETWORK_STATE, android.permission.CHANGE_NETWORK_STATE, android.permission.CONNECTIVITY_INTERNAL, android.permission.CONNECTIVITY_USE_RESTRICTED_NETWORKS
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ onPhantomUpEvent(int,int,long)>=android.permission.WRITE_CONTACTS
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ disable(int)>=android.permission.VIBRATE
<com.android.browser.Tab$3\:\ void\ onCloseWindow(android.webkit.WebView)>=android.permission.GET_ACCOUNTS
<com.android.browser.SnapshotTab$LoadData\:\ void\ onPostExecute(java.lang.Object)>=android.permission.WAKE_LOCK
<android.app.IWallpaperManager$Stub\:\ android.os.ParcelFileDescriptor\ setWallpaper(java.lang.String)>=android.permission.SET_WALLPAPER
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ pokeWakelock()>=android.permission.WAKE_LOCK
<android.location.LocationManager\:\ void\ requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.phone.BluetoothHeadsetService$6\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<com.android.server.pm.PackageManagerService\:\ void\ setPackageStoppedState(java.lang.String,boolean,int)>=android.permission.CHANGE_COMPONENT_ENABLED_STATE, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.mms.transaction.PushReceiver\:\ boolean\ access$100(android.content.Context,com.google.android.mms.pdu.NotificationInd)>=android.permission.READ_SMS
<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper\:\ void\ remove(android.os.IBinder,int,int,int,android.hardware.fingerprint.IFingerprintServiceReceiver)>=android.permission.MANAGE_FINGERPRINT
<com.android.email.MessagingController\:\ void\ access$400(com.android.email.MessagingController,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.setup.DebugFragment\:\ android.view.View\ onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>=android.permission.READ_PHONE_STATE
<android.telephony.gsm.SmsManager\:\ void\ sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.READ_EXTERNAL_STORAGE, android.permission.SEND_SMS
<com.android.settings.inputmethod.InputMethodAndLanguageSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.NetworkManagementService\:\ void\ disableIpv6(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.phone.BluetoothAtPhonebook$3\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<android.bluetooth.BluetoothHealth\:\ boolean\ disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<android.filterpacks.videosrc.MediaSource\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ConversationList\:\ void\ openThread(long)>=android.permission.WRITE_SMS
<com.android.phone.BluetoothHandsfree$8\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.PhotoView\:\ void\ hideUndoBar()>=android.permission.VIBRATE
<android.net.wifi.SupplicantStateTracker$DisconnectedState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.settings.inputmethod.KeyboardLayoutPickerFragment\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.mms.transaction.MessagingNotification\:\ com.android.mms.transaction.MessagingNotification$NotificationInfo\ getNewMessageNotificationInfo(android.content.Context,boolean,java.lang.String,java.lang.String,java.lang.String,long,long,android.graphics.Bitmap,com.android.mms.data.Contact,int)>=android.permission.WRITE_SMS
<com.android.server.InputMethodManagerService\:\ java.util.List\ getEnabledInputMethodSubtypeList(java.lang.String,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.calendar.event.EditEventFragment\:\ android.view.View\ onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>=android.permission.READ_CALENDAR
<com.android.server.am.ActivityManagerService\:\ void\ setPackageAskScreenCompat(java.lang.String,boolean)>=android.permission.SET_SCREEN_COMPATIBILITY
<com.android.mms.ui.ConversationListAdapter\:\ void\ bindView(android.view.View,android.content.Context,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<android.content.IContentService\:\ void\ addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.browser.Controller\:\ void\ doStart(android.os.Bundle,android.content.Intent)>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.ImageEncoder\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.nfc.NfcService$NfcAdapterService\:\ boolean\ enableNdefPush()>=android.permission.BLUETOOTH
<com.android.calendar.event.EditEventHelper$EditDoneRunnable\:\ void\ run()>=android.permission.WRITE_CALENDAR
<com.android.phone.CallFeaturesSetting\:\ void\ handleTTYChange(android.preference.Preference,java.lang.Object)>=android.permission.WRITE_SETTINGS
<com.android.phone.CallNotifier\:\ com.android.phone.CallNotifier\ init(com.android.phone.PhoneApp,com.android.internal.telephony.Phone,com.android.phone.Ringer,com.android.phone.BluetoothHandsfree,com.android.phone.CallLogAsync)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.server.BootReceiver\:\ void\ removeOldUpdatePackages(android.content.Context)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.search.OpenSearchSearchEngine\:\ boolean\ isNetworkConnected(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ void\ systemReady(java.lang.Runnable)>=android.permission.WAKE_LOCK
<com.android.mms.ui.DeliveryReportActivity\:\ java.util.List\ getMmsReportItems()>=android.permission.READ_SMS
<com.android.exchange.adapter.EmailSyncAdapter\:\ boolean\ parse(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageListFragment\:\ void\ access$2200(com.android.email.activity.MessageListFragment)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.WifiService\:\ void\ stopWifi()>=android.permission.CHANGE_WIFI_STATE
<com.android.phone.PhoneInterfaceManager\:\ void\ setDataEnabled(int,boolean)>=android.permission.MODIFY_PHONE_STATE
<android.net.wifi.IWifiManager$Stub$Proxy\:\ boolean\ releaseWifiLock(android.os.IBinder)>=android.permission.WAKE_LOCK
<android.app.ActivityManagerNative\:\ boolean\ bindBackupAgent(android.content.pm.ApplicationInfo,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ disableSingleLocationUpdate()>=android.permission.WAKE_LOCK
<com.android.systemui.media.RingtonePlayer\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.VIBRATE
<com.android.mms.ui.SlideshowPresenter\:\ void\ presentSlide(com.android.mms.ui.SlideViewInterface,com.android.mms.model.SlideModel)>=android.permission.WAKE_LOCK
<com.android.settings.AccessibilitySettings$ToggleAccessibilityServicePreferenceFragment\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.contacts.list.PhoneFavoriteFragment$ContactTileAdapterListener\:\ void\ onCallNumberDirectly(java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.internal.os.BatteryStatsImpl\:\ void\ setOnBatteryLocked(boolean,int,int)>=android.permission.BLUETOOTH
<com.android.systemui.usb.UsbResolverActivity\:\ void\ onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)>=android.permission.BLUETOOTH
<android.filterpacks.videosrc.SurfaceTextureSource\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onCleanUpAllConnections(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory$3$1\:\ void\ run()>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.RIL\:\ void\ supplyIccPuk2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothDevice\:\ android.bluetooth.BluetoothClass\ getBluetoothClass()>=android.permission.BLUETOOTH
<android.os.storage.IMountService$Stub\:\ void\ unmountVolume(java.lang.String,boolean,boolean)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.gallery3d.app.AlbumPage\:\ void\ onSingleTapUp(int)>=android.permission.VIBRATE
<com.android.commands.am.Am\:\ void\ runKillAll()>=android.permission.KILL_BACKGROUND_PROCESSES
<com.android.server.content.ContentService\:\ boolean\ getMasterSyncAutomaticallyAsUser(int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.READ_SYNC_SETTINGS
<android.location.LocationManager\:\ boolean\ addNmeaListener(android.location.OnNmeaMessageListener,android.os.Handler)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.settings.inputmethod.UserDictionaryAddWordContents\:\ void\ apply(android.content.Context)>=android.permission.WRITE_USER_DICTIONARY
<com.android.internal.telephony.cat.CommandParamsFactory\:\ boolean\ processSetUpIdleModeText(com.android.internal.telephony.cat.CommandDetails,java.util.List)>=android.permission.WAKE_LOCK
<android.speech.tts.TextToSpeech\:\ java.util.Set\ getAvailableLanguages()>=android.permission.BROADCAST_STICKY
<com.android.vcard.VCardParserImpl_V40\:\ boolean\ parseOneVCard()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.InputMethodManagerService\:\ boolean\ setInputMethodEnabled(java.lang.String,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.WRITE_SECURE_SETTINGS
<com.android.gallery3d.ui.SlideshowView\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ void\ onDevicePreferenceClick(com.android.settings.bluetooth.BluetoothDevicePreference)>=android.permission.BLUETOOTH
<android.os.IVibratorService$Stub\:\ void\ vibratePattern(long[],int,android.os.IBinder)>=android.permission.VIBRATE
<com.android.browser.NavigationBarBase\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<android.media.AudioManager\:\ void\ startBluetoothSco()>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.settings.DevelopmentSettings$ConfirmEnforceFragment$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.READ_EXTERNAL_STORAGE
<android.media.AudioService\:\ void\ dispatchMediaKeyEvent(android.view.KeyEvent,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy\:\ java.lang.String\ getMsisdn()>=android.permission.READ_PHONE_STATE
<com.android.contacts.activities.AttachPhotoActivity\:\ void\ saveContact(com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.widget.LockPatternView\:\ void\ handleActionUp(android.view.MotionEvent)>=android.permission.WAKE_LOCK
<android.filterpacks.base.GLTextureTarget\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.accounts.IAccountManager\:\ void\ hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.ImageCombineFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ boolean\ isVisualVoicemailEnabled(java.lang.String,android.telecom.PhoneAccountHandle)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.wm.WindowManagerService\:\ void\ setForcedDisplaySize(int,int)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ boolean\ handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ android.os.Bundle\ getCellLocation(java.lang.String)>=android.permission.ACCESS_FINE_LOCATION, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.WifiService\:\ void\ access$1000(com.android.server.WifiService,boolean)>=android.permission.WRITE_SETTINGS
<com.android.providers.downloads.DownloadService\:\ boolean\ scanFile(com.android.providers.downloads.DownloadInfo,boolean,boolean)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.settings.Settings$ManageAccountsSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.email.Controller\:\ com.android.emailcommon.service.IEmailService\ getExchangeEmailService()>=android.permission.READ_PHONE_STATE
<android.app.ActivityGroup\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.internal.telephony.ISms$Stub$Proxy\:\ boolean\ copyMessageToIccEf(int,byte[],byte[])>=android.permission.WAKE_LOCK
<com.android.settings.OwnerInfoSettings$1\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.ContactsBinaryDictionary\:\ void\ loadDictionary()>=android.permission.WRITE_CONTACTS
<com.android.server.content.ContentService\:\ void\ sync(android.content.SyncRequest)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.policy.impl.AccountUnlockScreen\:\ boolean\ dispatchKeyEvent(android.view.KeyEvent)>=android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler\:\ int\ getWritableEntityIndex()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ addRestrictBackgroundWhitelistedUid(int)>=android.permission.MANAGE_NETWORK_POLICY
<com.android.car.ICarImpl\:\ android.os.IBinder\ getCarService(java.lang.String)>=android.car.permission.CAR_CAMERA, android.car.permission.CAR_HVAC, android.car.permission.CAR_MOCK_VEHICLE_HAL, android.car.permission.CAR_NAVIGATION_MANAGER, android.car.permission.CAR_PROJECTION, android.car.permission.CAR_RADIO
<android.net.ConnectivityManager\:\ android.net.NetworkQuotaInfo\ getActiveNetworkQuotaInfo()>=android.permission.ACCESS_NETWORK_STATE
<android.media.IAudioService\:\ void\ setSpeakerphoneOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.emailcommon.utility.EmailAsyncTask$InnerTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.camera.VideoCamera\:\ void\ onReviewCancelClicked(android.view.View)>=android.permission.RECORD_AUDIO
<com.android.common.contacts.BaseEmailAddressAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.DataConnection$DcDisconnectingState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.nfc.INfcTag\:\ android.nfc.NdefMessage\ ndefRead(int)>=android.permission.NFC
<com.android.server.am.UsageStatsService$2\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.LatinIME$UIHandler\:\ void\ postUpdateSuggestions()>=android.permission.WRITE_CONTACTS
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ void\ show()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager\:\ java.util.List\ getAllMessagesFromIccEf()>=android.permission.WAKE_LOCK
<com.android.mms.ui.MessageListItem\:\ void\ access$500(com.android.mms.ui.MessageListItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.recent.RecentsPanelView\:\ void\ handleOnClick(android.view.View)>=android.permission.REORDER_TASKS
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getIsimIst()>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.internal.telephony.cat.CommandParamsFactory\:\ boolean\ processBIPClient(com.android.internal.telephony.cat.CommandDetails,java.util.List)>=android.permission.WAKE_LOCK
<com.android.phone.RespondViaSmsManager$RespondViaSmsCancelListener\:\ void\ onCancel(android.content.DialogInterface)>=android.permission.BLUETOOTH
<com.android.commands.uiautomator.EventsCommand$1\:\ void\ disconnect()>=android.permission.WRITE_SETTINGS
<com.android.bluetooth.opp.BluetoothOppRfcommListener$1\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.email.MessagingListener\:\ void\ loadAttachmentFailed(long,long,long,com.android.emailcommon.mail.MessagingException,boolean)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.WifiStateMachine$DriverStoppedState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ iccIOForApp(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ com.android.internal.telephony.Connection\ checkMtFindNewRinging(com.android.internal.telephony.DriverCall,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccFileHandler\:\ void\ loadEFImgLinearFixed(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.ContactsActivity\:\ boolean\ onSearchRequested()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ boolean\ startBinderTracking()>=android.permission.SET_ACTIVITY_WATCHER
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ getDataCallList(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityRecord\:\ boolean\ keyDispatchingTimedOut()>=android.permission.WAKE_LOCK
<com.android.bluetooth.opp.BluetoothOppTransfer\:\ void\ startConnectSession()>=android.permission.BLUETOOTH
<com.android.settings.Settings$AccountSyncSettingsInAddAccountActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.systemui.statusbar.policy.LocationController\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.VIBRATE
<com.android.exchange.adapter.AbstractSyncParser\:\ void\ commit()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ finishHeavyWeightApp()>=android.permission.FORCE_STOP_PACKAGES
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ onActivityResume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.providers.downloads.DownloadThread\:\ void\ processResponseHeaders(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,org.apache.http.HttpResponse)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ android.content.Intent\ createIntent(android.content.Context,long)>=android.permission.WRITE_SMS
<com.android.internal.telephony.UiccSmsController\:\ void\ sendTextForSubscriberWithSelfPermissions(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean)>=android.permission.READ_EXTERNAL_STORAGE, android.permission.SEND_SMS, android.permission.SEND_SMS_NO_CONFIRMATION
<android.speech.tts.TextToSpeech\:\ int\ setLanguage(java.util.Locale)>=android.permission.BROADCAST_STICKY
<com.android.settings.Settings$AdvancedWifiSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.email.service.MailService$5\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.ITelephonyRegistry$Stub\:\ void\ notifyServiceState(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<com.android.email.activity.UIControllerBase\:\ void\ showAccountSpecificWarning(long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.net.NetworkStatsService\:\ void\ bootstrapStatsLocked()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.util.List\ getPermittedInputMethods(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods\:\ void\ onTrigger(android.view.View,int)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub\:\ void\ reassociate()>=android.permission.CHANGE_WIFI_STATE
<com.android.server.audio.AudioService\:\ void\ setRingerModeInternal(int,java.lang.String)>=android.permission.STATUS_BAR_SERVICE
<com.android.phone.SimContacts$ImportAllSimContactsThread\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothHealth\:\ boolean\ connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.browser.AddBookmarkPage\:\ void\ setupTopCrumb()>=android.permission.GET_ACCOUNTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>=android.permission.BIND_DEVICE_ADMIN, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.vcard.VCardService\:\ void\ handleCancelRequest(com.android.contacts.vcard.CancelRequest,com.android.contacts.vcard.VCardImportExportListener)>=android.permission.VIBRATE
<android.bluetooth.IBluetoothHeadset\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<android.net.IConnectivityManager\:\ boolean\ setRadios(boolean)>=android.permission.CHANGE_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ packageHasActiveAdmins(java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.nfc.tech.MifareClassic\:\ void\ reconnect()>=android.permission.NFC
<com.android.phone.ClearMissedCallsService\:\ void\ onHandleIntent(android.content.Intent)>=android.permission.WRITE_CALL_LOG
<com.android.bluetooth.pbap.BluetoothPbapVcardManager\:\ int\ getPhonebookSize(int)>=android.permission.READ_CALL_LOG
<com.android.settings.Settings$AdvancedWifiSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.systemui.usb.UsbResolverActivity\:\ void\ onStop()>=android.permission.WAKE_LOCK
<com.android.server.net.NetworkPolicyManagerService\:\ int\ getRestrictBackgroundByCaller()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ManageSimMessages$2\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.RECEIVE_SMS
<com.android.contacts.list.PostalAddressListAdapter\:\ void\ bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wm.WindowManagerService\:\ void\ reevaluateStatusBarVisibility()>=android.permission.WAKE_LOCK
<com.android.phone.PhoneApp$MediaButtonBroadcastReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.nfc.NfcService$NfcAdapterService\:\ boolean\ disableNdefPush()>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ enableLocationUpdates()>=android.permission.WAKE_LOCK
<com.android.systemui.SystemUIService\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.VIBRATE
<com.android.server.net.NetworkStatsService\:\ void\ updateIfaces()>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ com.android.server.wm.WindowManagerService\ main(android.content.Context,com.android.server.PowerManagerService,boolean,boolean,boolean)>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ changeApplicationBluetoothState(boolean,android.bluetooth.IBluetoothStateChangeCallback,android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ invokeOemRilRequestRaw(byte[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.accounts.AccountManagerService\:\ void\ addSharedAccountsFromParentUser(int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.accounts.IAccountManager$Stub\:\ void\ invalidateAuthToken(java.lang.String,java.lang.String)>=android.permission.MANAGE_ACCOUNTS
<com.android.camera.VideoCamera\:\ void\ onError(android.media.MediaRecorder,int,int)>=android.permission.RECORD_AUDIO
<com.android.gallery3d.app.Gallery\:\ void\ startDefaultPage()>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.event.EditEventView\:\ void\ <init>=android.permission.READ_CALENDAR
<android.nfc.tech.NfcV\:\ void\ close()>=android.permission.NFC
<com.android.server.ConnectivityService\:\ void\ access$3200(com.android.server.ConnectivityService,android.net.ProxyProperties)>=android.permission.BROADCAST_STICKY
<android.media.AudioService\:\ void\ setWiredDeviceConnectionState(int,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService$1\:\ void\ released()>=android.permission.WAKE_LOCK
<android.net.INetworkPolicyManager$Stub\:\ boolean\ isNetworkMetered(android.net.NetworkState)>=android.permission.READ_PHONE_STATE
<com.android.exchange.ExchangeService$CalendarObserver\:\ void\ <init>=android.permission.READ_CALENDAR
<com.android.contacts.ContactSaveService\:\ void\ removeMembersFromGroup(android.content.ContentResolver,long[],long)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.AttachPhotoActivity\:\ void\ access$000(com.android.contacts.activities.AttachPhotoActivity,com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageViewFragment\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.editor.EventFieldEditorView\:\ void\ onTypeSelectionChange(int)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager$Stub\:\ void\ startWifi()>=android.permission.CHANGE_WIFI_STATE
<android.bluetooth.BluetoothDevice\:\ boolean\ cancelBondProcess()>=android.permission.BLUETOOTH
<com.google.common.io.ByteStreams\:\ long\ copy(com.google.common.io.InputSupplier,java.io.OutputStream)>=android.permission.INTERNET
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onDataConnectionDetached()>=android.permission.BROADCAST_STICKY
<com.android.browser.DownloadTouchIcon\:\ java.lang.Void\ doInBackground(java.lang.String[])>=android.permission.GET_ACCOUNTS
<com.android.calendar.Utils\:\ java.lang.String\ getTimeZone(android.content.Context,java.lang.Runnable)>=android.permission.READ_CALENDAR
<com.android.settings.bluetooth.LocalBluetoothProfileManager\:\ void\ setBluetoothStateOn()>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothAdapter\:\ int\ getProfileConnectionState(int)>=android.permission.BLUETOOTH
<android.preference.VolumePreference\:\ void\ onActivityStop()>=android.permission.WAKE_LOCK
<com.android.mms.transaction.SmsReceiverService\:\ void\ access$100(com.android.mms.transaction.SmsReceiverService,android.content.Intent,int)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ImageEncoder\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothA2dp$Stub$Proxy\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.phone.sip.SipEditor\:\ void\ access$600(com.android.phone.sip.SipEditor,android.net.sip.SipProfile)>=android.permission.USE_SIP
<android.webkit.HTML5VideoViewProxy\:\ void\ pauseAndDispatch()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmMmiCode\:\ void\ sendUssd(java.lang.String)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.RedEyeFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.quicksearchbox.util.JavaNetHttpHelper\:\ java.lang.String\ post(com.android.quicksearchbox.util.HttpHelper$PostRequest)>=android.permission.INTERNET
<android.filterpacks.imageproc.SharpenFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.cdma.CdmaLteUiccFileHandler\:\ void\ loadEFImgLinearFixed(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ boolean\ enableWBS()>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.settings.Settings$StorageSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.ToRGBAFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.media.effect.effects.SaturateEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.providers.downloads.DownloadInfo$Reader\:\ void\ readRequestHeaders(com.android.providers.downloads.DownloadInfo)>=android.permission.WRITE_EXTERNAL_STORAGE
<java.net.MulticastSocket\:\ void\ <init>=android.permission.INTERNET
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pNotSupportedState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardScreenCallback\:\ void\ pokeWakelock(int)>=android.permission.WAKE_LOCK
<android.net.wifi.SupplicantStateTracker$UninitializedState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.providers.media.RingtonePickerActivity\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.DrawOverlayFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiManager\:\ boolean\ disconnect()>=android.permission.CHANGE_WIFI_STATE
<com.android.contacts.list.LegacyPhoneNumberListAdapter\:\ android.net.Uri\ getPhoneUri(int)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.WifiManager\:\ boolean\ isPreferredNetworkOffloadSupported()>=android.permission.ACCESS_WIFI_STATE
<com.android.exchange.adapter.EmailSyncAdapter\:\ void\ <init>=android.permission.READ_CALENDAR
<com.android.browser.BrowserActivity\:\ void\ onResume()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhone\:\ void\ notifyServiceStateChanged(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<android.filterpacks.imageproc.ResizeFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.app.backup.IBackupManager$Stub\:\ void\ clearBackupData(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.wm.DragState\:\ void\ endDragLw()>=android.permission.WAKE_LOCK
<com.android.contacts.activities.JoinContactActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ setPreferredNetworkType(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ android.app.IActivityManager$ContentProviderHolder\ getContentProviderExternal(java.lang.String,int,android.os.IBinder)>=android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY
<com.android.inputmethod.latin.ContactsBinaryDictionary\:\ void\ asyncReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.app.ManageCachePage\:\ void\ onSingleTapUp(int)>=android.permission.VIBRATE
<com.android.server.LocationManagerService\:\ void\ updateProviderListenersLocked(java.lang.String,boolean)>=android.permission.WAKE_LOCK
<com.android.contacts.list.PostalAddressPickerFragment\:\ void\ onClose()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.SaturateFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.common.widget.CompositeCursorAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.media.IAudioService$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.internal.app.AlertActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)>=android.permission.BLUETOOTH
<android.accounts.AccountManager\:\ void\ setPassword(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.server.pm.PackageManagerService\:\ int\ access$3300(com.android.server.pm.PackageManagerService,java.lang.String,boolean,boolean,int)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.UserBinaryDictionary\:\ void\ syncReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<android.accounts.AccountManager\:\ android.accounts.AccountManagerFuture\ getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<android.app.INotificationManager$Stub\:\ void\ enqueueNotification(java.lang.String,int,android.app.Notification,int[])>=android.permission.VIBRATE
<com.android.server.pm.ShutdownThread$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ toggleSpeaker()>=android.permission.BLUETOOTH
<com.android.server.NetworkManagementService\:\ void\ attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.nfc.NfcService$NfcAdapterExtrasService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.NFC
<android.app.IActivityManager\:\ java.util.List\ getRecentTasks(int,int)>=android.permission.GET_TASKS
<com.android.providers.contacts.DatabaseModifier\:\ int\ delete(java.lang.String,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.server.location.LocationProviderInterface\:\ void\ updateNetworkState(int,android.net.NetworkInfo)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$DebugThread\:\ void\ run()>=android.permission.BLUETOOTH
<android.location.LocationManager\:\ void\ requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.gallery3d.gadget.LocalPhotoSource\:\ android.graphics.Bitmap\ getImage(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.SecurityPolicy\:\ void\ onAdminEnabled(boolean)>=android.permission.WAKE_LOCK
<com.android.mms.data.Conversation\:\ void\ dumpThreadsTable(android.content.Context)>=android.permission.READ_SMS
<com.android.server.LockSettingsService\:\ boolean\ getSeparateProfileChallengeEnabled(int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE, android.permission.READ_CONTACTS
<com.android.nfc.P2pEventManager\:\ void\ onP2pHandoverNotSupported()>=android.permission.VIBRATE
<com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady\:\ void\ enter()>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothPan\:\ boolean\ isTetheringOn()>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>=android.permission.WAKE_LOCK
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<com.android.bluetooth.opp.BluetoothOppManager\:\ void\ enableBluetooth()>=android.permission.BLUETOOTH_ADMIN
<com.android.server.WifiService\:\ boolean\ testAndClearWifiSavedState()>=android.permission.WRITE_SETTINGS
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ boolean\ interceptMediaKey(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.server.pm.ShortcutService\:\ void\ onApplicationActive(java.lang.String,int)>=android.permission.RESET_SHORTCUT_MANAGER_THROTTLING
<com.android.internal.telephony.cdma.RuimRecords\:\ void\ setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.browser.Tab\:\ void\ <init>=android.permission.GET_ACCOUNTS
<com.android.server.MountService\:\ long\ benchmark(java.lang.String)>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isLockTaskPermitted(java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.wallpaper.walkaround.WalkAroundWallpaper$WalkAroundEngine\:\ void\ onVisibilityChanged(boolean)>=android.permission.CAMERA
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getUserProvisioningState()>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.ContactsListActivity\:\ android.net.Uri\ getSelectedUri(int)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onDataSetupComplete(android.os.AsyncResult)>=android.permission.BROADCAST_STICKY
<com.android.server.pm.PackageManagerService\:\ java.lang.String[]\ setPackagesSuspendedAsUser([java.lang.String,boolean,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_USERS
<android.content.IContentService$Stub$Proxy\:\ boolean\ isSyncActive(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.contacts.activities.ContactEditorActivity\:\ void\ onNewIntent(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.service.AttachmentDownloadService$DownloadSet\:\ void\ onWatchdogAlarm()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.accounts.AuthenticatorHelper\:\ void\ onAccountsUpdated(android.content.Context,android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.Phone\:\ void\ dispose()>=android.permission.WAKE_LOCK
<com.android.internal.widget.multiwaveview.GlowPadView\:\ void\ dispatchTriggerEvent(int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.CallTracker\:\ void\ pollCallsWhenSafe()>=android.permission.WAKE_LOCK
<com.android.server.print.PrintManagerService$PrintManagerImpl\:\ android.os.Bundle\ print(java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int)>=com.android.printspooler.permission.ACCESS_ALL_PRINT_JOBS
<com.android.server.am.ActivityManagerService\:\ void\ resumeAppSwitches()>=android.permission.STOP_APP_SWITCHES
<com.android.server.WifiService\:\ void\ handleWifiToggled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.am.BatteryStatsService\:\ void\ noteBluetoothOn()>=android.permission.BLUETOOTH
<com.android.bluetooth.opp.BluetoothOppUtility\:\ com.android.bluetooth.opp.BluetoothOppTransferInfo\ queryRecord(android.content.Context,android.net.Uri)>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiSettings\:\ void\ pauseWifiScan()>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.PhoneApp\:\ void\ handleOtaspEvent(android.os.Message)>=android.permission.BLUETOOTH
<android.content.SyncManager$SyncHandler\:\ void\ installHandleTooManyDeletesNotification(android.accounts.Account,java.lang.String,long)>=android.permission.VIBRATE
<android.filterpacks.text.StringLogger\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.ContactsActivity\:\ boolean\ onPrepareOptionsMenu(android.view.Menu)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.SearchActivity\:\ void\ initFragments(long,java.lang.String)>=android.permission.WRITE_CALENDAR
<com.android.server.wm.WindowManagerService\:\ void\ resumeKeyDispatching(android.os.IBinder)>=android.permission.MANAGE_APP_TOKENS
<com.android.gallery3d.ui.EdgeView\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.setup.AccountSetupAccountType\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_PHONE_STATE
<com.android.server.am.ActivityManagerService\:\ int\ stopUser(int,boolean,android.app.IStopUserCallback)>=android.permission.BROADCAST_STICKY, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.TetherSettings\:\ void\ access$100(com.android.settings.TetherSettings,java.lang.String[],java.lang.String[],java.lang.String[])>=android.permission.BLUETOOTH
<android.net.wifi.SupplicantStateTracker$DisconnectedState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<android.view.IApplicationToken$Stub$Proxy\:\ void\ windowsVisible()>=android.permission.WAKE_LOCK
<com.android.contacts.ContactLoader$Result\:\ long\ getFirstWritableRawContactId(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.ImageCombineFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.content.IContentService$Stub\:\ java.util.List\ getPeriodicSyncs(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.DataUsageSummary\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ boolean\ sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ boolean\ isNetworkSupported(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.statusbar.StatusBarManagerService\:\ void\ addTile(android.content.ComponentName)>=android.permission.STATUS_BAR
<com.android.server.LocationManagerService$2\:\ void\ onPackageRemoved(java.lang.String,int)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.PhoneBase\:\ void\ notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.Phone$DataState)>=android.permission.BROADCAST_STICKY
<android.filterpacks.videosrc.CameraSource\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.SoundSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ addNetworkPolicyLocked(android.net.NetworkPolicy)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.ISms$Stub\:\ boolean\ copyMessageToIccEf(int,byte[],byte[])>=android.permission.WAKE_LOCK
<com.android.calendar.DayView\:\ void\ <init>=android.permission.READ_CALENDAR
<com.android.phone.BluetoothHandsfree$2\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.gallery3d.app.MovieActivity\:\ void\ onDestroy()>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$26\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.music.MediaPlaybackActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.WRITE_SETTINGS
<com.android.contacts.ContactLoader\:\ void\ loadInvitableAccountTypes(com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.detail.ContactDetailFragment\:\ void\ configureQuickFix()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.InputMethodManagerService$InputMethodSettings\:\ void\ putEnabledInputMethodsStr(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.gallery3d.app.ManageCachePage\:\ void\ onCreate(android.os.Bundle,android.os.Bundle)>=android.permission.VIBRATE
<com.android.settings.MasterClear\:\ void\ loadAccountList()>=android.permission.GET_ACCOUNTS
<com.android.settings.PrivacySettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.server.power.PowerManagerService$BinderService\:\ void\ goToSleep(long,int,int)>=android.permission.DEVICE_POWER
<com.android.server.accessibility.AccessibilityManagerService\:\ int\ addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection,int)>=android.permission.INTERACT_ACROSS_USERS
<com.android.bluetooth.opp.BluetoothOppLauncherActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothInputDevice\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.SepiaFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.contacts.group.GroupEditorFragment\:\ void\ setupEditorForAccount()>=android.permission.READ_SYNC_SETTINGS
<android.media.IAudioService\:\ int\ setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask\:\ void\ onPostExecute(java.lang.Boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.MenuExecutor\:\ void\ onMenuClicked(int,com.android.gallery3d.ui.MenuExecutor$ProgressListener,boolean,boolean)>=android.permission.VIBRATE
<com.android.email.GroupMessagingListener\:\ void\ loadAttachmentFailed(long,long,long,com.android.emailcommon.mail.MessagingException,boolean)>=android.permission.READ_SYNC_SETTINGS
<android.media.effect.effects.BlackWhiteEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask\:\ com.android.contacts.PhoneCallDetails[]\ doInBackground(java.lang.Void[])>=android.permission.READ_SYNC_SETTINGS
<com.android.server.sip.SipService\:\ android.net.sip.SipProfile[]\ getListOfProfiles()>=android.permission.USE_SIP
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ access$000(com.android.internal.telephony.gsm.GsmServiceStateTracker)>=android.permission.BROADCAST_STICKY
<com.android.exchange.ExchangeService\:\ void\ startServiceThread(com.android.exchange.AbstractSyncService)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumPage\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.nfc.handover.HandoverManager$HandoverTransfer\:\ void\ cancel()>=android.permission.VIBRATE
<android.server.BluetoothService\:\ int\ getProfileConnectionState(int)>=android.permission.BLUETOOTH
<android.content.pm.IPackageManager\:\ void\ freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>=android.permission.CLEAR_APP_CACHE
<com.android.mms.ui.ComposeMessageActivity\:\ android.content.Intent\ createIntent(android.content.Context,long)>=android.permission.WRITE_SMS
<android.content.SyncManager\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.WAKE_LOCK
<com.android.browser.Controller\:\ void\ start(android.content.Intent)>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.VignetteFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.wm.WindowManagerService$1\:\ void\ acquired()>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageViewFragmentBase$ReloadMessageTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.text.StringSource\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener\:\ void\ onRequest(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker\:\ int\ getActualState(android.content.Context)>=android.permission.BLUETOOTH
<com.android.browser.provider.BrowserProvider\:\ int\ delete(android.net.Uri,java.lang.String,java.lang.String[])>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.providers.calendar.CalendarReceiver\:\ void\ access$000(com.android.providers.calendar.CalendarReceiver,android.content.ContentResolver)>=android.permission.WRITE_CALENDAR
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ stopMultiAdvertising(int)>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.vcard.VCardImportExportListener\:\ void\ onImportParsed(com.android.contacts.vcard.ImportRequest,int,com.android.vcard.VCardEntry,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.SubSettings\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.exchange.ExchangeService$CalendarObserver$1\:\ void\ run()>=android.permission.WAKE_LOCK
<android.telephony.TelephonyManager\:\ java.lang.String\ getLine1AlphaTag()>=android.permission.READ_PHONE_STATE
<com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.telephony.TelephonyManager\:\ java.lang.String\ getVoiceMailNumber()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cat.IconLoader\:\ void\ readIconData()>=android.permission.WAKE_LOCK
<com.android.server.display.DisplayManagerService$BinderService\:\ int\ createVirtualDisplay(android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int)>=android.permission.CAPTURE_SECURE_VIDEO_OUTPUT, android.permission.CAPTURE_VIDEO_OUTPUT
<com.android.exchange.EmailSyncAdapterService$SyncAdapterImpl\:\ void\ onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.vcard.VCardParser_V40\:\ void\ parseOne(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.BlackWhiteFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.tablet.TabletStatusBarView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy\:\ boolean\ updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.contacts.vcard.NfcImportVCardActivity\:\ void\ onImportFinished(com.android.contacts.vcard.ImportRequest,int,android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.contacts.LegacyApiSupport\:\ long\ findFirstDataId(long,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment\:\ void\ setData(com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.opp.TestTcpSessionNotifier\:\ void\ <init>=android.permission.INTERNET
<android.nfc.tech.NfcF\:\ void\ close()>=android.permission.NFC
<com.android.browser.Controller\:\ com.android.browser.Tab\ showPreloadedTab(com.android.browser.IntentHandler$UrlData)>=android.permission.GET_ACCOUNTS
<com.android.contacts.activities.AttachPhotoActivity$2\:\ void\ onLoadComplete(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.keyboard.LatinKeyboardView\:\ boolean\ access$000(com.android.inputmethod.keyboard.LatinKeyboardView,com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>=android.permission.WRITE_CONTACTS
<com.android.server.ConnectivityService$FeatureUser\:\ void\ binderDied()>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.LatinIME\:\ void\ onUpdateSelection(int,int,int,int,int,int)>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.ui.AlbumSetSlidingWindow\:\ com.android.gallery3d.ui.BitmapTexture\ getLoadingTexture()>=android.permission.ACCESS_NETWORK_STATE
<android.app.IAlarmManager$Stub$Proxy\:\ void\ setTimeZone(java.lang.String)>=android.permission.SET_TIME_ZONE
<android.app.TabActivity\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.settings.fuelgauge.PowerUsageSummary\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.BLUETOOTH
<com.android.internal.telephony.ISms$Stub$Proxy\:\ void\ sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.internal.telephony.RIL\:\ void\ setPreferredVoicePrivacy(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.PushReceiver\:\ long\ access$000(android.content.Context,com.google.android.mms.pdu.GenericPdu,int)>=android.permission.READ_SMS
<com.android.email.Email\:\ void\ onCreate()>=android.permission.READ_PHONE_STATE
<android.server.BluetoothA2dpService\:\ void\ onBluetoothEnable()>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ boolean\ setPropertyString(java.lang.String,java.lang.String)>=android.permission.BLUETOOTH
<android.app.INotificationManager\:\ void\ enqueueNotification(java.lang.String,int,android.app.Notification,int[])>=android.permission.VIBRATE
<com.android.server.TextServicesManagerService\:\ void\ setCurrentSpellChecker(java.lang.String,java.lang.String)>=android.permission.WRITE_SECURE_SETTINGS
<com.android.contacts.list.PhoneNumberListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.BootReceiver$1\:\ void\ run()>=android.permission.WRITE_EXTERNAL_STORAGE
<android.os.PowerManager$WakeLock\:\ void\ acquire(long)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ getCallForwardingOption(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.backup.Trampoline\:\ void\ backupNow()>=android.permission.BACKUP
<com.android.exchange.ExchangeService\:\ void\ startManualSync(long,int,com.android.exchange.Request)>=android.permission.READ_SYNC_SETTINGS
<android.media.AudioService\:\ void\ readPersistedSettings()>=android.permission.WRITE_SETTINGS
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ setHdmiRecordListener(android.hardware.hdmi.IHdmiRecordListener)>=android.permission.HDMI_CEC
<com.android.vcard.VCardEntry\:\ void\ iterateOneList(java.util.List,com.android.vcard.VCardEntry$EntryElementIterator)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.calllog.CallLogAdapter$QueryThread\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.UIControllerBase\:\ boolean\ onBackPressed(boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.provider.BrowserProvider2\:\ boolean\ setParentValues(long,android.content.ContentValues)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.mms.ui.ConversationList$DeleteThreadListener\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.READ_SMS
<com.android.internal.telephony.cdma.CdmaLteUiccRecords\:\ void\ setVoiceMessageWaiting(int,int)>=android.permission.WAKE_LOCK
<com.android.mms.widget.MmsWidgetService$MmsFactory\:\ int\ queryUnreadCount()>=android.permission.READ_SMS
<android.bluetooth.IBluetoothPbap$Stub\:\ android.bluetooth.BluetoothDevice\ getClient()>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ enableSystemApp(android.content.ComponentName,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.bluetooth.le.BluetoothLeAdvertiser\:\ void\ startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ getSmscAddress(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.camera.Camera\:\ void\ initializeFirstTime()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.Settings$DockSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.phone.EmergencyCallHelper\:\ void\ placeEmergencyCall()>=android.permission.BLUETOOTH
<com.android.phone.InCallTouchUi\:\ void\ showAudioModePopup()>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiAPITest\:\ boolean\ onPreferenceClick(android.preference.Preference)>=android.permission.CHANGE_WIFI_STATE
<com.android.phone.BluetoothAtPhonebook\:\ com.android.phone.BluetoothAtPhonebook$PhonebookResult\ getPhonebookResult(java.lang.String,boolean)>=android.permission.READ_CALL_LOG
<com.android.systemui.usb.StorageNotification$2\:\ void\ run()>=android.permission.VIBRATE
<android.net.wifi.IWifiManager\:\ boolean\ removeNetwork(int)>=android.permission.CHANGE_WIFI_STATE
<android.net.nsd.NsdManager\:\ void\ setEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ forceRemoveActiveAdmin(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.EmergencyCallHelper\:\ void\ cleanup()>=android.permission.BLUETOOTH
<com.android.mms.data.Contact$ContactsCache\:\ com.android.mms.data.Contact\ getContactInfoForEmailAddress(java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.calendar.alerts.AlertActivity\:\ void\ access$400(com.android.calendar.alerts.AlertActivity,long)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ setAndBroadcastNetworkSetTimeZone(java.lang.String)>=android.permission.SET_TIME_ZONE
<android.content.SyncManager$3\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ android.net.NetworkState[]\ getAllNetworkState()>=android.permission.ACCESS_NETWORK_STATE, android.permission.CONNECTIVITY_INTERNAL
<android.app.AliasActivity\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.settings.accounts.AccountSyncSettings\:\ void\ updateAccountCheckboxes(android.accounts.Account[])>=android.permission.READ_SYNC_SETTINGS
<com.android.server.location.ComprehensiveCountryDetector\:\ void\ removePhoneStateListener()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.inputmethod.latin.ExpandableDictionary\:\ boolean\ isValidWord(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.mms.util.Recycler$MmsRecycler\:\ void\ deleteOldMessages(android.content.Context)>=android.permission.RECEIVE_SMS
<com.android.systemui.statusbar.phone.PhoneStatusBar$22\:\ void\ run()>=android.permission.VIBRATE
<com.android.providers.contacts.ContactsProvider2\:\ android.database.Cursor\ query(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>=android.permission.WRITE_CONTACTS
<com.android.music.MediaPlaybackService$CompatMediaPlayer\:\ void\ access$300(android.media.MediaPlayer,boolean)>=android.permission.WAKE_LOCK
<com.android.browser.UiController\:\ void\ handleNewIntent(android.content.Intent)>=android.permission.GET_ACCOUNTS
<com.android.server.WifiService\:\ void\ enforceChangePermission()>=android.permission.CHANGE_WIFI_STATE
<android.view.IWindowSession$Stub$Proxy\:\ int\ add(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>=android.permission.SYSTEM_ALERT_WINDOW
<com.android.providers.media.MediaProvider\:\ android.os.ParcelFileDescriptor\ access$1200(com.android.providers.media.MediaProvider,com.android.providers.media.MediaProvider$ThumbData)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.mms.util.Recycler\:\ boolean\ anyThreadOverLimit(android.content.Context)>=android.permission.RECEIVE_SMS
<com.android.settings.Settings$ApplicationSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.RequestPermissionActivity\:\ boolean\ parseIntent()>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ void\ registerNetworkFactory(android.os.Messenger,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.server.wm.WindowManagerService\:\ void\ reenableKeyguard(android.os.IBinder)>=android.permission.DISABLE_KEYGUARD
<android.speech.IRecognitionService$Stub$Proxy\:\ void\ startListening(android.content.Intent,android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<com.android.internal.os.BatteryStatsImpl\:\ int\ getCurrentBluetoothPingCount()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.SlideshowPage$1\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ switchHoldingAndActive()>=android.permission.WAKE_LOCK
<com.android.server.WifiService\:\ android.os.Messenger\ getWifiServiceMessenger()>=android.permission.ACCESS_WIFI_STATE
<com.android.exchange.ExchangeService$1$2\:\ void\ call(com.android.emailcommon.service.IEmailServiceCallback)>=android.permission.READ_SYNC_SETTINGS
<com.android.launcher2.Workspace\:\ boolean\ onInterceptTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.phone.NotificationMgr\:\ void\ showNetworkSelection(java.lang.String)>=android.permission.VIBRATE
<android.nfc.INfcTag$Stub\:\ int\ reconnect(int)>=android.permission.NFC
<android.provider.BrowserContract$SyncState\:\ android.util.Pair\ getWithUri(android.content.ContentProviderClient,android.accounts.Account)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<android.view.IWindowSession$Stub\:\ boolean\ performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>=android.permission.WAKE_LOCK
<android.filterpacks.videosink.MediaEncoderFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$2\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.PhotoDataAdapter$DataListener\:\ void\ onPhotoChanged(int,com.android.gallery3d.data.Path)>=android.permission.NFC
<android.filterpacks.imageproc.DrawRectFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.emailcommon.service.AccountServiceProxy$3\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.mms.ui.ConversationListItem\:\ void\ bind(android.content.Context,com.android.mms.data.Conversation)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.HeadsetProfile$HeadsetServiceListener\:\ void\ onServiceConnected(int,android.bluetooth.BluetoothProfile)>=android.permission.BLUETOOTH
<com.android.contacts.widget.LayoutSuppressingQuickContactBadge\:\ void\ assignContactFromEmail(java.lang.String,boolean)>=android.permission.WRITE_CONTACTS
<com.android.exchange.EasSyncService\:\ com.android.exchange.EasResponse\ executePostWithTimeout(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,int,boolean)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$25\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.email.activity.MessageFileView$LoadFilenameTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.videosrc.CameraSource\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.A2dpProfile\:\ int\ getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.accounts.AccountManager$5\:\ void\ doWork()>=android.permission.USE_CREDENTIALS
<com.android.settings.DataUsageSummary$DataUsageAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.a2dpsink.A2dpSinkService$BluetoothA2dpSinkBinder\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.ISms$Stub\:\ void\ sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<android.nfc.tech.NfcA\:\ void\ connect()>=android.permission.NFC
<com.android.quicksearchbox.SuggestionCursorProvider\:\ com.android.quicksearchbox.SuggestionCursor\ getSuggestions(java.lang.String,int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.quickcontact.QuickContactActivity\:\ void\ bindData(com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ acquireWakeLock()>=android.permission.WAKE_LOCK
<com.android.systemui.screenshot.GlobalScreenshot$2\:\ void\ onAnimationEnd(android.animation.Animator)>=android.permission.VIBRATE
<com.android.server.webkit.WebViewUpdateService$BinderService\:\ void\ enableFallbackLogic(boolean)>=android.permission.WRITE_SECURE_SETTINGS
<com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.UserHistoryDictionary\:\ boolean\ reloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.server.pm.PackageManagerService\:\ void\ resetApplicationPreferences(int)>=android.permission.SET_PREFERRED_APPLICATIONS
<com.android.contacts.group.GroupEditorFragment$2\:\ android.content.CursorLoader\ onCreateLoader(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.webkit.HTML5VideoViewProxy$VideoPlayer\:\ void\ setBaseLayer(int)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService$MultiPlayer\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.settings.Settings$BluetoothSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<android.app.ListActivity\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.email.service.AttachmentDownloadService\:\ void\ watchdogAlarm()>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothHeadset$Stub\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<android.filterpacks.base.OutputStreamTarget\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.pm.PackageManagerService\:\ int\ getComponentEnabledSetting(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.inputmethod.latin.UserBinaryDictionary\:\ boolean\ isValidWord(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ android.view.View\ createUnlockScreenFor(com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode)>=android.permission.WAKE_LOCK
<com.android.camera.SwitchAnimManager\:\ boolean\ drawAnimation(com.android.gallery3d.ui.GLCanvas,int,int,int,int,com.android.camera.CameraScreenNail,com.android.gallery3d.ui.RawTexture)>=android.permission.RECORD_AUDIO
<com.android.settings.accounts.AccountSyncSettings$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.GET_ACCOUNTS
<com.android.providers.contacts.CallLogProvider\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>=android.permission.READ_CALL_LOG
<com.android.contacts.list.CustomContactListFilterActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ sendBurstDtmf(java.lang.String,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.browser.NavScreen\:\ void\ openNewTab()>=android.permission.GET_ACCOUNTS
<com.android.providers.telephony.SmsProvider\:\ android.net.Uri\ insert(android.net.Uri,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ start()>=android.permission.BLUETOOTH
<com.android.exchange.EasAccountService\:\ com.android.exchange.EasResponse\ sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity)>=android.permission.WAKE_LOCK
<android.net.DhcpStateMachine$WaitBeforeStartState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.camera.ui.IndicatorButton$Listener\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<com.android.vcard.VCardParser_V30\:\ void\ parse(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothAdapter\:\ boolean\ setName(java.lang.String)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<android.net.IConnectivityManager$Stub\:\ java.lang.String[]\ getTetheredIfaces()>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.BrowserHistoryPage$ClearHistoryTask\:\ void\ run()>=android.permission.GET_ACCOUNTS
<android.content.IContentService$Stub$Proxy\:\ void\ addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>=android.permission.WRITE_SYNC_SETTINGS
<android.bluetooth.IBluetoothHeadset$Stub\:\ int\ getBatteryUsageHint(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.calendar.alerts.AlertReceiver\:\ void\ finishStartingService(android.app.Service,int)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub\:\ void\ addToBlacklist(java.lang.String)>=android.permission.CHANGE_WIFI_STATE
<android.media.effect.FilterGraphEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.server.accounts.AccountManagerService\:\ android.accounts.Account[]\ getAccountsForPackage(java.lang.String,int,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.mms.data.Conversation\:\ void\ startQueryHaveLockedMessages(android.content.AsyncQueryHandler,long,int)>=android.permission.READ_SMS
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ rejectCall(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ setDiscoverableTimeout(int)>=android.permission.BLUETOOTH
<com.android.phone.DataUsageListener\:\ void\ resume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.PhoneUtils\:\ void\ sendEmptyFlash(com.android.internal.telephony.Phone)>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHeadsetService$6\:\ int\ getBatteryUsageHint(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.TileImageView\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.IPhoneSubInfo\:\ java.lang.String\ getVoiceMailNumber()>=android.permission.READ_PHONE_STATE
<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder\:\ boolean\ connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.gsm.SIMRecords\:\ void\ onRecordLoaded()>=android.permission.CHANGE_CONFIGURATION
<com.android.server.am.BatteryStatsService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.calendar.CalendarProvider2\:\ long\ getOriginalId(java.lang.String,java.lang.String)>=android.permission.READ_CALENDAR
<com.android.internal.telephony.gsm.UsimDataDownloadHandler\:\ void\ acknowledgeSmsWithError(int)>=android.permission.WAKE_LOCK
<com.android.mms.util.Recycler\:\ android.database.Cursor\ getAllThreads(android.content.Context)>=android.permission.RECEIVE_SMS
<com.android.contacts.CallDetailActivity$6\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WRITE_CALL_LOG
<com.android.contacts.list.PhoneFavoriteFragment$Listener\:\ void\ onCallNumberDirectly(java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.exchange.EasSyncService\:\ android.os.Bundle\ tryAutodiscover(java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<android.app.backup.BackupAgentHelper\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.internal.telephony.gsm.GsmMmiCode\:\ java.lang.CharSequence\ makeCFQueryResultMessage(com.android.internal.telephony.CallForwardInfo,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ hangupForegroundResumeBackground(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ getImeiForSlot(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.bluetooth.IBluetoothA2dp$Stub$Proxy\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ allowIncomingProfileConnect(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.providers.calendar.CalendarProvider2\:\ int\ deleteMatchingColors(java.lang.String,java.lang.String[])>=android.permission.READ_CALENDAR
<com.android.email.activity.MessageViewFragmentBase$ReloadMessageTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.BluetoothHandsfree$24\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ getIMEISV(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.test.SimulatedCommands\:\ void\ shutdown()>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ int\ startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>=android.permission.SET_DEBUG_APP
<com.android.internal.telephony.CommandsInterface\:\ void\ stopDtmf(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.PowerManagerService\:\ void\ setStayOnSetting(int)>=android.permission.WRITE_SETTINGS
<com.android.settings.wifi.WifiSettings\:\ void\ updateConnectionState(android.net.NetworkInfo$DetailedState)>=android.permission.ACCESS_WIFI_STATE
<android.app.Application\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.vcard.VCardParser_V21\:\ void\ parseOne(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothPan\:\ java.util.List\ getDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.providers.telephony.SmsProvider\:\ int\ delete(android.net.Uri,java.lang.String,java.lang.String[])>=android.permission.RECEIVE_SMS
<com.android.server.am.ActivityManagerService\:\ void\ goingToSleep()>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth\:\ boolean\ setPin(java.lang.String,byte[])>=android.permission.BLUETOOTH_ADMIN
<com.android.server.wm.WindowManagerService\:\ android.content.res.Configuration\ computeNewConfiguration()>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ java.util.List\ getEnabledInputMethodList()>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.am.BatteryStatsService\:\ void\ noteDeviceIdleMode(int,java.lang.String,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.contacts.activities.PeopleActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.music.MediaPlaybackService\:\ void\ setNextTrack()>=android.permission.WAKE_LOCK
<com.google.common.io.MultiInputStream\:\ int\ read()>=android.permission.INTERNET
<com.android.email.activity.MailboxFinder$ControllerResults\:\ void\ updateMailboxCallback(com.android.emailcommon.mail.MessagingException,long,long,int,int,java.util.ArrayList)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ boolean\ startVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.bluetooth.pbap.BluetoothPbapService$2\:\ int\ getState()>=android.permission.BLUETOOTH
<com.android.contacts.vcard.ExportProcessor\:\ void\ run()>=android.permission.WRITE_CONTACTS
<com.android.contacts.group.GroupBrowseListFragment\:\ void\ requestSelectionToScreen()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.model.AccountTypeManagerImpl\:\ com.android.contacts.model.AccountTypeManager\ getInstance(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.NetworkScoreService\:\ boolean\ updateScores([android.net.ScoredNetwork)>=android.permission.SCORE_NETWORKS
<android.accounts.AccountManager\:\ java.lang.String\ peekAuthToken(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.contacts.list.CustomContactListFilterActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneApp\:\ void\ requestWakeState(com.android.phone.PhoneApp$WakeState)>=android.permission.WAKE_LOCK
<com.android.systemui.media.RingtonePlayer$1\:\ void\ playAsync(android.net.Uri,boolean,int)>=android.permission.WAKE_LOCK
<android.filterpacks.text.ToUpperCase\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.Settings$WifiP2pSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.phone.DataUsage\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.base.GLTextureTarget\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.backup.Trampoline\:\ void\ dataChanged(java.lang.String)>=android.permission.BACKUP
<com.android.gallery3d.app.ManageCachePage\:\ void\ onStateResult(int,int,android.content.Intent)>=android.permission.VIBRATE
<android.app.ActivityManager\:\ void\ restartPackage(java.lang.String)>=android.permission.KILL_BACKGROUND_PROCESSES
<com.android.inputmethod.latin.ContactsDictionary\:\ boolean\ reloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.server.am.ActivityManagerService$ServiceRestarter\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ releaseWakeLockIfDone()>=android.permission.WAKE_LOCK
<com.android.mms.ui.MessageUtils\:\ void\ handleReadReport(android.content.Context,java.util.Collection,int,java.lang.Runnable)>=android.permission.READ_SMS
<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub\:\ boolean\ isSessionRunning()>=android.permission.ACCESS_VOICE_INTERACTION_SERVICE
<com.android.browser.Tab$4\:\ void\ onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>=android.permission.GET_ACCOUNTS
<com.android.settings.Settings$LocalePickerActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.exchange.adapter.AbstractSyncAdapter\:\ boolean\ parse(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ acquireMulticastLock(android.os.IBinder,java.lang.String)>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.settings.fuelgauge.PowerUsageSummary\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.browser.Bookmarks\:\ android.database.Cursor\ queryCombinedForUrl(android.content.ContentResolver,java.lang.String,java.lang.String)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy\:\ void\ <init>=android.permission.BLUETOOTH
<android.webkit.HTML5VideoView\:\ void\ stopPlayback()>=android.permission.WAKE_LOCK
<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback\:\ void\ onError(int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.email.activity.setup.AccountSetupExchangeFragment\:\ void\ saveSettingsAfterEdit()>=android.permission.WAKE_LOCK
<com.android.settings.Settings$ApplicationSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.deskclock.SetAlarm\:\ void\ revert()>=android.permission.WRITE_SETTINGS
<android.app.ActivityGroup\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.internal.telephony.PhoneSubInfo\:\ java.lang.String\ getLine1Number()>=android.permission.READ_PHONE_STATE
<com.android.contacts.activities.PhotoSelectionActivity\:\ void\ access$000(com.android.contacts.activities.PhotoSelectionActivity)>=android.permission.WRITE_CONTACTS
<com.android.server.pm.PackageManagerService\:\ void\ freeStorage(java.lang.String,long,android.content.IntentSender)>=android.permission.CLEAR_APP_CACHE
<com.android.phone.SipCallOptionHandler\:\ void\ access$300(com.android.phone.SipCallOptionHandler,android.net.sip.SipProfile)>=android.permission.USE_SIP
<com.android.server.ConnectivityService\:\ java.lang.String\ getMobileProvisioningUrl()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.calendar.CalendarViewAdapter\:\ java.lang.String\ buildWeekNum()>=android.permission.READ_CALENDAR
<com.android.emailcommon.service.IEmailService$Stub$Proxy\:\ void\ sendMeetingResponse(long,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.IccSmsInterfaceManager\:\ boolean\ disableCellBroadcastRange(int,int)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHeadsetService$6\:\ boolean\ startVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth\:\ android.os.ParcelFileDescriptor\ getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ sendUSSD(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker\:\ void\ setImageViewResources(android.content.Context,android.widget.RemoteViews)>=android.permission.BLUETOOTH
<com.android.contacts.editor.ContactEditorFragment\:\ boolean\ hasPendingChanges()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.accessibility.AccessibilityManagerService\:\ int\ addClient(android.view.accessibility.IAccessibilityManagerClient,int)>=android.permission.INTERACT_ACROSS_USERS
<com.android.bluetooth.opp.BluetoothOppService\:\ void\ access$000(com.android.bluetooth.opp.BluetoothOppService)>=android.permission.BLUETOOTH
<android.nfc.tech.Ndef\:\ void\ writeNdefMessage(android.nfc.NdefMessage)>=android.permission.NFC
<com.android.bluetooth.opp.BluetoothOppNotification\:\ void\ updateCompletedNotification()>=android.permission.VIBRATE
<com.android.server.wifi.WifiServiceImpl\:\ int\ getFrequencyBand()>=android.permission.ACCESS_WIFI_STATE
<com.android.contacts.list.PhoneNumberPickerFragment\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ explicitCallTransfer(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ access$1200(com.android.internal.policy.impl.KeyguardViewMediator)>=android.permission.WAKE_LOCK
<android.server.BluetoothBondState\:\ void\ initBondState()>=android.permission.BLUETOOTH
<com.android.calendar.alerts.AlertService\:\ void\ doTimeChanged()>=android.permission.WRITE_CALENDAR
<com.android.settings.Settings$WirelessSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<android.bluetooth.BluetoothPbap\:\ android.bluetooth.BluetoothDevice\ getClient()>=android.permission.BLUETOOTH
<com.android.email.activity.UIControllerBase\:\ void\ switchAccount(long,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.CropFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.widget.SlidingTab$OnTriggerListener\:\ void\ onTrigger(android.view.View,int)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewBase\:\ void\ show()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothPermissionActivity\:\ void\ onNegative()>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothDevice\:\ android.bluetooth.BluetoothSocket\ createRfcommSocketToServiceRecord(java.util.UUID)>=android.permission.BLUETOOTH
<com.android.phone.CallNotifier\:\ void\ onRingbackTone(android.os.AsyncResult)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.contacts.activities.ContactDetailActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.group.GroupEditorFragment$4\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Display\:\ void\ onClick(android.view.View)>=android.permission.CHANGE_CONFIGURATION
<com.android.server.NetworkManagementService\:\ android.net.InterfaceConfiguration\ getInterfaceConfig(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.IccPhoneBookInterfaceManager\:\ boolean\ updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.bluetooth.map.BluetoothMapService$BluetoothMapBinder\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.bluetooth.opp.BluetoothOppObexClientSession$ClientThread\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.nfc.NfcService$TagService\:\ int\ reconnect(int)>=android.permission.NFC
<android.filterpacks.videosrc.SurfaceTextureTarget\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.browser.NavigationBarPhone\:\ void\ onAction(java.lang.String,java.lang.String,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PasswordUnlockScreen\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ notifyDataConnection(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.phone.PhoneUtils$4\:\ void\ onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>=android.permission.WRITE_CONTACTS
<com.android.email.service.PopImapAuthenticatorService$PopImapAuthenticator\:\ android.os.Bundle\ addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ServiceInfo\ getServiceInfo(android.content.ComponentName,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.providers.downloads.DownloadService$1\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.contacts.activities.PeopleActivity\:\ void\ onSelectedTabChanged()>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ int\ getCdmaEriIconModeForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.net.INetworkStatsService$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ void\ access$2400(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>=android.permission.BROADCAST_STICKY
<android.app.NativeActivity\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.inputmethod.latin.UserHistoryDictionary\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<android.media.IRingtonePlayer$Stub$Proxy\:\ void\ play(android.os.IBinder,android.net.Uri,int)>=android.permission.WAKE_LOCK
<com.android.calendar.month.SimpleWeekView\:\ void\ onDraw(android.graphics.Canvas)>=android.permission.READ_CALENDAR
<com.android.email.service.PopImapSyncAdapterService\:\ void\ performSync(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.util.Recycler\:\ void\ deleteOldMessagesByThreadId(android.content.Context,long)>=android.permission.RECEIVE_SMS
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ revertToNitzTime()>=android.permission.BROADCAST_STICKY
<android.net.wifi.WifiManager\:\ int\ addNetwork(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<android.net.wifi.IWifiManager\:\ void\ acquireMulticastLock(android.os.IBinder,java.lang.String)>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.phone.Use2GOnlyCheckBoxPreference\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ notifyAppStopped(android.os.IBinder)>=android.permission.MANAGE_APP_TOKENS
<android.nfc.INfcAdapter\:\ boolean\ disableNdefPush()>=android.permission.BLUETOOTH
<android.webkit.HTML5VideoInline\:\ void\ pauseAndDispatch(android.webkit.HTML5VideoViewProxy)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothDeviceProfileState\:\ void\ processIncomingConnectCommand(int)>=android.permission.BLUETOOTH
<android.filterpacks.base.ObjectSource\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.speech.tts.TextToSpeech\:\ android.speech.tts.Voice\ getDefaultVoice()>=android.permission.BROADCAST_STICKY
<com.android.internal.policy.impl.PatternUnlockScreen\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.internal.telephony.ISms\:\ void\ sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>=android.permission.SEND_SMS
<com.android.calendar.EventLoader$LoadRequest\:\ void\ processRequest(com.android.calendar.EventLoader)>=android.permission.READ_CALENDAR
<android.view.WindowManagerPolicy\:\ void\ exitKeyguardSecurely(android.view.WindowManagerPolicy$OnKeyguardExitResult)>=android.permission.WAKE_LOCK
<android.content.ContentResolver\:\ void\ setIsSyncable(android.accounts.Account,java.lang.String,int)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.server.LocationManagerService\:\ void\ removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.contacts.ContactSaveService$Listener\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onCleanUpAllConnections(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.gallery3d.app.SlideshowPage$1\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ setPreferredNetworkType(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumSetPage\:\ void\ pickAlbum(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ManageSimMessages\:\ void\ init()>=android.permission.RECEIVE_SMS
<com.android.launcher2.PagedViewWithDraggableItems\:\ void\ handleTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<android.bluetooth.IBluetooth$Stub\:\ int\ getProfileConnectionState(int)>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHandsfree$25\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.settings.ApplicationSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.content.SyncManager$8\:\ void\ onServiceChanged(java.lang.Object,boolean)>=android.permission.WAKE_LOCK
<android.nfc.NfcAdapter$1\:\ void\ onPaused(android.app.Activity)>=android.permission.NFC
<android.content.ContentService\:\ int\ getIsSyncable(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.statusbar.phone.PhoneStatusBar$9\:\ void\ run()>=android.permission.VIBRATE
<com.android.mms.transaction.NotificationTransaction\:\ void\ sendNotifyRespInd(int)>=android.permission.CHANGE_NETWORK_STATE
<android.nfc.INfcTag$Stub$Proxy\:\ int\ formatNdef(int,byte[])>=android.permission.NFC
<com.android.server.LockSettingsService\:\ void\ setString(java.lang.String,java.lang.String,int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.inputmethod.keyboard.internal.KeyboardState\:\ void\ onPressShift()>=android.permission.WRITE_CONTACTS
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ animateCollapse(int)>=android.permission.VIBRATE
<com.android.server.StatusBarManagerService\:\ void\ expand()>=android.permission.EXPAND_STATUS_BAR
<com.android.gallery3d.app.MovieActivity\:\ void\ onResume()>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ void\ sendThisDeviceChangedBroadcast()>=android.permission.BROADCAST_STICKY
<android.security.KeyChain\:\ java.security.PrivateKey\ getPrivateKey(android.content.Context,java.lang.String)>=android.permission.BROADCAST_STICKY
<android.accounts.IAccountManager$Stub$Proxy\:\ void\ addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>=android.permission.MANAGE_ACCOUNTS
<android.server.BluetoothA2dpService\:\ boolean\ isSinkDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.phone.NotificationMgr\:\ void\ updateNetworkSelection(int)>=android.permission.VIBRATE
<com.android.settings.Settings$SpellCheckersSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<android.net.sip.SipAudioCall$1\:\ void\ onCallBusy(android.net.sip.SipSession)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ access$3700(com.android.mms.ui.ComposeMessageActivity,long)>=android.permission.WRITE_SMS
<com.android.gallery3d.ui.PhotoView\:\ void\ access$100(com.android.gallery3d.ui.PhotoView)>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ hangupConnectionByIndex(com.android.internal.telephony.gsm.GsmCall,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ getIMEISV(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.util.List\ getPermittedInputMethodsForCurrentUser()>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.BluetoothHandsfree$16\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.server.NetworkManagementService\:\ void\ addInterfaceToLocalNetwork(java.lang.String,java.util.List)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.gallery3d.app.PhotoDataAdapter\:\ void\ setCurrentPhoto(com.android.gallery3d.data.Path,int)>=android.permission.VIBRATE
<com.android.browser.Tab$2\:\ boolean\ shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.CommandsInterface\:\ void\ cancelPendingUssd(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.os.BatteryStatsImpl\:\ void\ writeToParcelWithoutUids(android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.contacts.activities.GroupEditorActivity\:\ void\ onNewIntent(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.IIccPhoneBook$Stub\:\ int[]\ getAdnRecordsSize(int)>=android.permission.WAKE_LOCK
<com.android.settings.wifi.p2p.WifiP2pSettings\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.BLUETOOTH
<android.speech.SpeechRecognizer\:\ void\ stopListening()>=android.permission.RECORD_AUDIO
<com.android.server.pm.PackageInstallerService\:\ android.content.pm.ParceledListSlice\ getMySessions(java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.net.wifi.IWifiManager$Stub\:\ void\ startScan(boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.phone.CallerInfoCacheUpdateReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.contacts.activities.ConfirmAddDetailActivity\:\ void\ access$900(com.android.contacts.activities.ConfirmAddDetailActivity,long,android.net.Uri)>=android.permission.WRITE_CONTACTS
<com.android.email.Controller$15\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ getVoiceRadioTechnology(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ handlePollStateResult(int,android.os.AsyncResult)>=android.permission.SET_TIME_ZONE
<com.android.settings.wifi.WifiSettingsForSetupWizardXL\:\ void\ updateConnectionState(android.net.NetworkInfo$DetailedState)>=android.permission.ACCESS_WIFI_STATE
<com.android.email.service.AccountService$1$1\:\ void\ run()>=android.permission.READ_PHONE_STATE
<android.net.wifi.IWifiManager\:\ void\ startWifi()>=android.permission.CHANGE_WIFI_STATE
<com.android.server.usb.UsbService\:\ void\ clearDefaults(java.lang.String,int)>=android.permission.MANAGE_USB
<android.net.IThrottleManager$Stub\:\ long\ getByteCount(java.lang.String,int,int,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.calllog.CallLogAdapter\:\ void\ onContentChanged()>=android.permission.READ_CALL_LOG
<com.android.browser.BreadCrumbView$Controller\:\ void\ onTop(com.android.browser.BreadCrumbView,int,java.lang.Object)>=android.permission.GET_ACCOUNTS
<android.server.BluetoothService\:\ boolean\ disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer\:\ void\ <init>=android.permission.GET_ACCOUNTS
<android.nfc.tech.MifareUltralight\:\ void\ close()>=android.permission.NFC
<com.android.settings.net.NetworkPolicyEditor$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.SimContacts\:\ void\ access$100(android.database.Cursor,android.content.ContentResolver,android.accounts.Account)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.media.NotificationPlayer\:\ void\ startSound(com.android.systemui.media.NotificationPlayer$Command)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$RunningServicesActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.camera.VideoCamera$3\:\ void\ run()>=android.permission.RECORD_AUDIO
<com.android.email.activity.MessageViewFragment\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.PowerManagerService\:\ void\ acquireWakeLock(int,android.os.IBinder,java.lang.String,android.os.WorkSource)>=android.permission.WAKE_LOCK
<com.android.server.sip.SipWakeLock\:\ void\ acquire(long)>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService\:\ void\ close(java.lang.String,java.lang.String)>=android.permission.USE_SIP
<android.filterpacks.imageproc.DocumentaryFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.mms.transaction.ReadRecTransaction\:\ byte[]\ sendPdu(long,byte[],java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<com.android.server.am.BatteryStatsService\:\ void\ noteResetAudio()>=android.permission.UPDATE_DEVICE_STATS
<com.android.calendar.DayView$CalendarGestureListener\:\ void\ onLongPress(android.view.MotionEvent)>=android.permission.READ_CALENDAR
<com.android.settings.bluetooth.BluetoothVisibilityTimeoutFragment\:\ void\ <init>=android.permission.BLUETOOTH
<com.android.contacts.activities.PeopleActivity\:\ void\ onAction(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.util.AccountFilterUtil\:\ void\ handleAccountFilterResult(com.android.contacts.list.ContactListFilterController,int,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.sip.SipWakeLock\:\ void\ release(java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.email.activity.setup.AccountSetupExchangeFragment\:\ android.view.View\ onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>=android.permission.READ_PHONE_STATE
<com.android.server.usb.UsbService\:\ void\ setPortRoles(java.lang.String,int,int)>=android.permission.MANAGE_USB
<com.android.server.WifiService\:\ boolean\ setWifiEnabled(boolean)>=android.permission.CHANGE_WIFI_STATE
<android.media.MediaRouter$RouteGroup\:\ void\ requestSetVolume(int)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.PasswordUnlockScreen\:\ void\ verifyPasswordAndUnlock()>=android.permission.GET_ACCOUNTS
<com.android.contacts.calllog.CallLogAdapter$1\:\ void\ onClick(android.view.View)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.RIL\:\ void\ setGsmBroadcastActivation(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.util.NameConverter\:\ android.content.ContentValues\ displayNameToStructuredName(android.content.Context,java.lang.String,android.content.ContentValues)>=android.permission.WRITE_CONTACTS
<com.android.music.IMediaPlaybackService$Stub\:\ int\ removeTracks(int,int)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ hideLocked()>=android.permission.WAKE_LOCK
<com.android.contacts.activities.GroupEditorActivity\:\ void\ onBackPressed()>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ boolean\ supplyPuk(java.lang.String,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.settings.AccessibilitySettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.contacts.model.EntityDeltaList\:\ int\ indexOfFirstWritableRawContact(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.deviceinfo.Memory\:\ void\ mount()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ hasGrantedPolicy(android.content.ComponentName,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ setSystemAudioVolume(int,int,int)>=android.permission.HDMI_CEC
<android.server.BluetoothA2dpService\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.tts.TtsEngineSettingsFragment\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WRITE_SETTINGS
<com.android.camera.Camera\:\ boolean\ onCreateOptionsMenu(android.view.Menu)>=android.permission.NFC
<com.android.server.net.NetworkPolicyManagerService$8\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.ITelephony$Stub$Proxy\:\ boolean\ disableDataConnectivity()>=android.permission.CHANGE_NETWORK_STATE
<com.android.server.pm.PackageInstallerService\:\ void\ setPermissionsResult(int,boolean)>=android.permission.INSTALL_PACKAGES
<android.nfc.tech.NdefFormatable\:\ void\ close()>=android.permission.NFC
<com.android.camera.ui.InLineSettingRestore\:\ boolean\ changeIndex(int)>=android.permission.RECORD_AUDIO
<android.bluetooth.IBluetooth$Stub\:\ void\ removeServiceRecord(int)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth\:\ java.lang.String\ getAddress()>=android.permission.BLUETOOTH
<com.android.server.sip.SipService\:\ void\ open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ doKeyguardTimeout()>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothHeadset$Stub\:\ boolean\ isAudioConnected(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setShortSupportMessage(android.content.ComponentName,java.lang.CharSequence)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.launcher2.Launcher\:\ void\ onCreate(android.os.Bundle)>=android.permission.SET_WALLPAPER_HINTS
<com.android.bluetooth.opp.BluetoothOppTransfer\:\ void\ doOpushSdp()>=android.permission.BLUETOOTH
<com.android.calendar.month.MonthByWeekAdapter\:\ void\ refresh()>=android.permission.READ_CALENDAR
<com.android.inputmethod.latin.ExpandableBinaryDictionary\:\ void\ syncReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onDataConnectionAttached()>=android.permission.BROADCAST_STICKY
<android.telephony.gsm.SmsManager\:\ boolean\ deleteMessageFromSim(int)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteMobileRadioPowerState(int,long,int)>=android.permission.UPDATE_DEVICE_STATS
<android.content.ISyncAdapter$Stub$Proxy\:\ void\ startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.media.RingtoneManager\:\ android.media.Ringtone\ getRingtone(android.content.Context,android.net.Uri,int)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree\:\ void\ userWantsAudioOn()>=android.permission.BLUETOOTH
<com.android.server.statusbar.StatusBarManagerService\:\ void\ onNotificationError(java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>=android.permission.STATUS_BAR_SERVICE
<android.filterpacks.base.NullFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState\:\ boolean\ processMessage(android.os.Message)>=android.permission.VIBRATE
<com.android.email.activity.ActionBarController\:\ void\ onAccountSpinnerItemClicked(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.music.IMediaPlaybackService$Stub\:\ void\ open(long[],int)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub$Proxy\:\ android.os.ParcelUuid[]\ getRemoteUuids(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.am.BatteryStatsService\:\ void\ noteScreenBrightness(int)>=android.permission.UPDATE_DEVICE_STATS
<android.net.wifi.WifiApConfigStore$DefaultState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ boolean\ connectInputDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.emailcommon.service.IEmailServiceCallback$Stub\:\ void\ syncMailboxStatus(long,int,int)>=android.permission.READ_SYNC_SETTINGS
<android.accounts.AccountManager$BaseFutureTask\:\ void\ doWork()>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.Phone\:\ void\ requestIsimAuthentication(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.bluetooth.sap.SapService$SapBinder\:\ android.bluetooth.BluetoothDevice\ getClient()>=android.permission.BLUETOOTH
<com.android.contacts.calllog.ClearCallLogDialog$1$1\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.WRITE_CALL_LOG
<com.android.email.activity.EmailActivity\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<android.app.ContextImpl\:\ void\ sendStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.uiautomator.core.InteractionController\:\ void\ setRotationLeft()>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.FillLightFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ void\ setTestProviderEnabled(java.lang.String,boolean)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy\:\ void\ syncMailboxStatus(long,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.GroupMetaDataLoader\:\ android.net.Uri\ ensureIsGroupUri(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.nfc.handover.BluetoothHeadsetHandover\:\ void\ nextStep()>=android.permission.BLUETOOTH
<android.speech.tts.AudioPlaybackQueueItem\:\ void\ finish()>=android.permission.WAKE_LOCK
<com.android.settings.widget.ChartSweepView$OnSweepListener\:\ void\ onSweep(com.android.settings.widget.ChartSweepView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.base.GLTextureTarget\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ getBluetoothContactSharingDisabled(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.nfc.tech.MifareUltralight\:\ void\ connect()>=android.permission.NFC
<com.android.internal.telephony.AdnRecordCache\:\ void\ updateAdnBySearch(int,com.android.internal.telephony.AdnRecord,com.android.internal.telephony.AdnRecord,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.browser.NavScreen$2\:\ void\ onLayout(int,int,int,int)>=android.permission.GET_ACCOUNTS
<android.bluetooth.BluetoothHeadset\:\ boolean\ setAudioState(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<android.media.IMediaScannerListener$Stub$Proxy\:\ void\ scanCompleted(java.lang.String,android.net.Uri)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.phone.CallNotifier\:\ void\ onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub\:\ boolean\ disconnectPanDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.net.wifi.WifiStateMachine\:\ void\ access$2200(android.net.wifi.WifiStateMachine,int)>=android.permission.BROADCAST_STICKY
<com.android.server.am.BatteryStatsService\:\ void\ noteScreenState(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary\:\ void\ access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>=android.permission.WRITE_CONTACTS
<android.content.SyncManager$7\:\ void\ onSyncRequest(android.accounts.Account,int,java.lang.String,android.os.Bundle)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.UserBinaryDictionary\:\ void\ access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>=android.permission.WRITE_CONTACTS
<android.nfc.INfcAdapter$Stub\:\ android.nfc.INfcAdapterExtras\ getNfcAdapterExtrasInterface(java.lang.String)>=android.permission.NFC
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<android.media.MediaRouter$RouteInfo\:\ void\ requestUpdateVolume(int)>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager$Stub\:\ void\ acquireMulticastLock(android.os.IBinder,java.lang.String)>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<android.view.FallbackEventHandler\:\ boolean\ dispatchKeyEvent(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.browser.HistoryItem\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.GET_ACCOUNTS
<com.android.calendar.month.MonthByWeekAdapter$2\:\ void\ run()>=android.permission.WRITE_CALENDAR
<android.net.IConnectivityManager$Stub\:\ boolean\ requestRouteToHostAddress(int,byte[])>=android.permission.CHANGE_NETWORK_STATE
<com.android.phone.Use2GOnlyCheckBoxPreference$MyHandler\:\ void\ handleSetPreferredNetworkTypeResponse(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageViewFragmentBase$UpdatePreviewIconTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$HeaderAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.BLUETOOTH
<com.android.common.widget.GroupingListAdapter$1\:\ void\ onChange(boolean)>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.RIL\:\ void\ getSmscAddress(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.StateManager\:\ boolean\ createOptionsMenu(android.view.Menu)>=android.permission.NFC
<android.bluetooth.IBluetooth$Stub\:\ void\ setBluetoothTethering(boolean)>=android.permission.BLUETOOTH
<com.android.contacts.editor.ContactEditorFragment\:\ void\ doJoinSuggestedContact(long[])>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ void\ access$1200(com.android.server.ConnectivityService,int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.SharpenFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.preference.ContactsPreferences\:\ void\ setSortOrder(int)>=android.permission.WRITE_SETTINGS
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ addDeviceCategory(android.preference.PreferenceGroup,int,com.android.settings.bluetooth.BluetoothDeviceFilter$Filter)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaLteUiccFileHandler\:\ void\ loadEFImgTransparent(int,int,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.socialwidget.SocialWidgetProvider\:\ void\ setDisplayNameAndSnippet(android.content.Context,android.widget.RemoteViews,java.lang.CharSequence,java.lang.CharSequence,java.util.List,android.app.PendingIntent)>=android.permission.READ_SYNC_SETTINGS
<com.android.emailcommon.service.IEmailService$Stub$Proxy\:\ android.os.Bundle\ autoDiscover(java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<android.app.ActivityManager\:\ void\ killBackgroundProcesses(java.lang.String)>=android.permission.KILL_BACKGROUND_PROCESSES
<android.media.AudioManager\:\ void\ setWiredDeviceConnectionState(int,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ executeAppTransition()>=android.permission.MANAGE_APP_TOKENS
<com.android.internal.telephony.Phone\:\ void\ getSmscAddress(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$PrivacySettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.ui.CropView$HighlightRectangle\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.Tab$3\:\ void\ onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)>=android.permission.VIBRATE
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment\:\ void\ eventsChanged()>=android.permission.READ_CALENDAR
<com.android.providers.telephony.SmsProvider\:\ int\ deleteMessageFromIcc(java.lang.String)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.LomoishFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ notifyServiceStateChanged(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ addIncludedService(int,int,int,android.os.ParcelUuid)>=android.permission.BLUETOOTH
<com.android.systemui.power.PowerUI$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.server.audio.AudioService\:\ void\ forceRemoteSubmixFullVolume(boolean,android.os.IBinder)>=android.permission.CAPTURE_AUDIO_OUTPUT
<com.android.server.BluetoothManagerService\:\ void\ unregisterAdapter(android.bluetooth.IBluetoothManagerCallback)>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary\:\ boolean\ reloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.contacts.editor.ContactEditorFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ android.net.wifi.WifiConfiguration\ getWifiApConfiguration()>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.bluetooth.A2dpProfile\:\ int\ getPreferred(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.systemui.statusbar.CommandQueue$Callbacks\:\ void\ showSearchPanel()>=android.permission.VIBRATE
<android.accounts.IAccountManager$Stub\:\ void\ setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.contacts.editor.PhotoActionPopup$Listener\:\ void\ onUseAsPrimaryChosen()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.ActionBarAdapter\:\ void\ setSearchMode(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.service.AttachmentDownloadService$AccountManagerStub\:\ int\ getNumberOfAccounts()>=android.permission.GET_ACCOUNTS
<com.android.settings.tts.TtsEngineSettingsFragment\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<android.provider.ContactsContract$ProfileSyncState\:\ android.content.ContentProviderOperation\ newSetOperation(android.accounts.Account,byte[])>=android.permission.READ_SYNC_SETTINGS
<com.android.server.VibratorService$2\:\ void\ run()>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ void\ onHealthDeviceChannelChanged(java.lang.String,java.lang.String,boolean)>=android.permission.BLUETOOTH
<com.android.server.pm.PackageManagerService\:\ void\ flushPackageRestrictionsAsUser(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.providers.contacts.ContactsProvider2\:\ android.content.res.AssetFileDescriptor\ openAssetFile(android.net.Uri,java.lang.String)>=android.permission.WRITE_CONTACTS
<android.filterpacks.base.ObjectSource\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.editor.ContactEditorFragment\:\ void\ access$2300(com.android.contacts.editor.ContactEditorFragment,long,android.graphics.Bitmap,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.data.DownloadUtils\:\ boolean\ download(com.android.gallery3d.util.ThreadPool$JobContext,java.net.URL,java.io.OutputStream)>=android.permission.INTERNET
<com.android.browser.view.PieMenu\:\ void\ layoutPieView(com.android.browser.view.PieMenu$PieView,int,int,float)>=android.permission.GET_ACCOUNTS
<com.android.mms.transaction.TransactionService\:\ void\ onDestroy()>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ boolean\ isOffhook(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.contacts.editor.ContactEditorFragment\:\ void\ selectAccountAndCreateContact()>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.DayView$CalendarGestureListener\:\ boolean\ onSingleTapUp(android.view.MotionEvent)>=android.permission.WRITE_CALENDAR
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ java.lang.String\ getName()>=android.permission.BLUETOOTH
<android.content.SyncManager$SyncHandler\:\ void\ closeActiveSyncContext(android.content.SyncManager$ActiveSyncContext)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.ContactEditorActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.BluetoothHandsfree$13\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivity\:\ void\ addAudio(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ changeBarringPassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.telephony.SmsManager\:\ void\ sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>=android.permission.READ_EXTERNAL_STORAGE, android.permission.SEND_SMS
<android.filterpacks.ui.SurfaceRenderFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DuotoneFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setScreenCaptureDisabled(android.content.ComponentName,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.email.Email\:\ void\ updateLoggingFlags(android.content.Context)>=android.permission.READ_PHONE_STATE
<com.android.gallery3d.app.AlbumPage\:\ void\ access$1600(com.android.gallery3d.app.AlbumPage,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ boolean\ bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean)>=android.permission.WAKE_LOCK
<android.provider.Settings$System\:\ boolean\ putInt(android.content.ContentResolver,java.lang.String,int)>=android.permission.WRITE_SETTINGS
<com.android.contacts.editor.LabeledEditorView\:\ void\ onTypeSelectionChange(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.vcard.VCardEntry$EntryElementIterator\:\ boolean\ onElement(com.android.vcard.VCardEntry$EntryElement)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.pbap.BluetoothPbapVcardManager\:\ int\ getCallHistorySize(int)>=android.permission.READ_CALL_LOG
<com.android.server.BackupManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.net.VpnService\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<android.net.wifi.IWifiManager$Stub\:\ boolean\ disableNetwork(int)>=android.permission.CHANGE_WIFI_STATE
<com.android.inputmethod.latin.AutoCorrection\:\ boolean\ isValidWord(java.util.concurrent.ConcurrentHashMap,java.lang.CharSequence,boolean)>=android.permission.WRITE_CONTACTS
<com.android.vcard.VCardEntry$EntryElement\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.commands.svc.PowerCommand\:\ void\ run(java.lang.String[])>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ int\ getPackageUid(java.lang.String,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.wifi.WifiServiceImpl\:\ boolean\ setEnableAutoJoinWhenAssociated(boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.wallpaper.RenderScriptScene\:\ void\ start()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.net.NetworkPolicyEditor\:\ void\ read()>=android.permission.READ_PHONE_STATE
<com.android.settings.Settings$InputMethodAndSubtypeEnablerActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.app.ExpandableListActivity\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<android.view.IWindowManager$Stub$Proxy\:\ void\ setForcedDisplaySize(int,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CallManager\:\ com.android.internal.telephony.Connection\ dial(com.android.internal.telephony.Phone,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.PasswordUnlockScreen$2\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.launcher2.PagedViewWithDraggableItems\:\ boolean\ onLongClick(android.view.View)>=android.permission.VIBRATE
<android.webkit.HTML5VideoInline\:\ void\ stopPlayback()>=android.permission.WAKE_LOCK
<com.android.bluetooth.opp.BluetoothOppObexServerSession\:\ void\ releaseWakeLocks()>=android.permission.WAKE_LOCK
<android.media.IRingtonePlayer$Stub$Proxy\:\ void\ playAsync(android.net.Uri,boolean,int)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ void\ decrementPendingBroadcasts()>=android.permission.WAKE_LOCK
<com.android.settings.DreamSettings\:\ void\ setScreenSaverEnabled(android.content.Context,boolean)>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$SecuritySettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetooth\:\ int\ getBondState(java.lang.String)>=android.permission.BLUETOOTH
<com.android.providers.contacts.DbModifierWithNotification\:\ int\ update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<android.net.sip.SipAudioCall\:\ void\ access$900(android.net.sip.SipAudioCall,boolean)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.ProfileProvider\:\ void\ enforceReadPermission(android.net.Uri)>=android.permission.READ_PROFILE
<com.android.bluetooth.opp.BluetoothOppTransfer\:\ void\ start()>=android.permission.BLUETOOTH
<android.net.nsd.INsdManager$Stub\:\ void\ setEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.deskclock.AlarmAlertFullScreen\:\ void\ snooze()>=android.permission.WRITE_SETTINGS
<com.android.browser.NavTabScroller\:\ void\ onLayout(boolean,int,int,int,int)>=android.permission.GET_ACCOUNTS
<android.server.BluetoothAdapterProperties\:\ java.lang.String\ getObjectPath()>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ restoreSavedNetworkSelection(android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ boolean\ sendConnectNoticeToApp(android.net.wifi.p2p.WifiP2pDevice,android.net.wifi.p2p.WifiP2pConfig)>=android.permission.GET_TASKS
<com.android.nfc.handover.BluetoothHeadsetHandover\:\ void\ nextStepConnect()>=android.permission.BLUETOOTH
<android.filterpacks.base.FrameSource\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.mms.transaction.SmsReceiver\:\ void\ beginStartingService(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.server.wm.Session\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.filterpacks.base.OutputStreamTarget\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.mms.ui.DeliveryReportActivity\:\ java.util.List\ getSmsReportItems()>=android.permission.RECEIVE_SMS
<com.android.calendar.SearchActivity$1\:\ void\ onChange(boolean)>=android.permission.WRITE_CALENDAR
<com.android.gallery3d.app.MoviePlayer$AudioBecomingNoisyReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.contacts.widget.PinnedHeaderListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.launcher2.Launcher\:\ void\ showFirstRunWorkspaceCling()>=android.permission.GET_ACCOUNTS
<com.android.server.wifi.WifiServiceImpl\:\ java.util.List\ getConfiguredNetworks()>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.deviceinfo.UsbSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.contacts.list.PostalAddressPickerFragment\:\ void\ prepareEmptyView()>=android.permission.READ_SYNC_STATS
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ clientConnect(int,java.lang.String,boolean,int)>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ void\ carrierActionSetMeteredApnsEnabled(int,boolean)>=android.permission.MODIFY_PHONE_STATE
<com.android.gallery3d.app.GalleryActionBar$ClusterRunner\:\ void\ doCluster(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.net.NetworkPolicyManagerService\:\ void\ snoozeLimit(android.net.NetworkTemplate)>=android.permission.MANAGE_NETWORK_POLICY
<com.android.systemui.statusbar.tablet.SettingsView\:\ void\ onFinishInflate()>=android.permission.WRITE_SETTINGS
<android.content.pm.IPackageManager$Stub\:\ int[]\ getPackageGids(java.lang.String)>=android.permission.READ_EXTERNAL_STORAGE
<com.android.contacts.model.EntityDeltaList\:\ android.content.ContentProviderOperation$Builder\ beginKeepTogether()>=android.permission.READ_SYNC_SETTINGS
<android.net.sip.SipAudioCall\:\ void\ transferToNewSession()>=android.permission.WAKE_LOCK
<com.android.mms.data.Conversation$2\:\ void\ run()>=android.permission.READ_SMS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker$ApnChangeObserver\:\ void\ onChange(boolean)>=android.permission.BROADCAST_STICKY
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryHandler\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.music.MediaPlaybackService\:\ void\ stop()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.SubscriptionController\:\ android.telephony.SubscriptionInfo\ getActiveSubscriptionInfoForSimSlotIndex(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.accounts.AccountManagerService\:\ void\ confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.net.IThrottleManager\:\ long\ getPeriodStartTime(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.RIL\:\ void\ supplyNetworkDepersonalization(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.server.BluetoothBondState\:\ boolean\ isAutoPairingBlacklisted(java.lang.String)>=android.permission.BLUETOOTH
<com.android.calendar.agenda.AgendaListView$1\:\ void\ run()>=android.permission.READ_CALENDAR
<android.net.wifi.IWifiManager$Stub\:\ void\ initializeMulticastFiltering()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.contacts.activities.ActionBarAdapter$MyNavigationListener\:\ boolean\ onNavigationItemSelected(int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.DevicePickerFragment\:\ void\ createDevicePreference(com.android.settings.bluetooth.CachedBluetoothDevice)>=android.permission.BLUETOOTH
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ startVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.soundrecorder.SoundRecorder\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.internal.widget.LockPatternView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.WAKE_LOCK
<android.test.IsolatedContext$MockAccountManager\:\ void\ setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.internal.telephony.Phone\:\ void\ setVoiceMessageWaiting(int,int)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.GestureRecognizer\:\ void\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.email.activity.setup.AccountSetupNames$2\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.WiredAccessoryObserver\:\ void\ init()>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$25\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.internal.telephony.IPhoneSubInfo$Stub\:\ java.lang.String\ getLine1Number()>=android.permission.READ_PHONE_STATE
<com.android.email.NotificationController\:\ void\ showDownloadForwardFailedNotification(com.android.emailcommon.provider.EmailContent$Attachment)>=android.permission.VIBRATE
<com.android.settings.accounts.SyncSettings\:\ void\ onSyncStateUpdated()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ void\ setAirplaneMode(boolean)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.TabBar\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<android.net.wifi.WifiManager$WifiLock\:\ void\ acquire()>=android.permission.WAKE_LOCK
<com.android.email.activity.setup.DebugFragment\:\ void\ onClick(android.view.View)>=android.permission.INTERNET
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ boolean\ isAudioConnected(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ finish()>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.AlbumPicker\:\ void\ onCreate(android.os.Bundle)>=android.permission.RECORD_AUDIO
<com.android.nfc.DeviceHost$DeviceHostListener\:\ void\ onSeMifareAccess(byte[])>=android.permission.BLUETOOTH
<com.android.internal.telephony.IPhoneSubInfo\:\ java.lang.String\ getDeviceId()>=android.permission.READ_PHONE_STATE
<com.android.gallery3d.app.AlbumSetPage\:\ boolean\ onItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ updateServiceLocation()>=android.permission.WAKE_LOCK
<com.android.calendar.month.SimpleDayPickerFragment\:\ void\ updateMonthHighlight(android.widget.AbsListView)>=android.permission.WRITE_CALENDAR
<android.net.INetworkPolicyManager$Stub$Proxy\:\ android.net.NetworkPolicy[]\ getNetworkPolicies()>=android.permission.READ_PHONE_STATE
<com.android.server.statusbar.StatusBarManagerService\:\ void\ onPanelRevealed(boolean,int)>=android.permission.STATUS_BAR_SERVICE
<com.android.phone.InCallScreen\:\ void\ bailOutAfterErrorDialog()>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothGattServer\:\ void\ cancelConnection(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.editor.ContactEditorFragment\:\ void\ showJoinAggregateActivity(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary\:\ boolean\ reloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.server.am.BatteryStatsService\:\ void\ noteNetworkInterfaceType(java.lang.String,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.settings.Settings$WifiSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<android.net.ThrottleManager\:\ java.lang.String\ getHelpUri()>=android.permission.ACCESS_NETWORK_STATE
<com.android.voicedialer.VoiceDialerActivity$VoiceDialerBroadcastReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.FixedRotationFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.calendar.DayView\:\ void\ updateEventDetails()>=android.permission.READ_CALENDAR
<com.android.email.Controller\:\ void\ deleteAccountSync(long,android.content.Context)>=android.permission.WAKE_LOCK
<android.location.ILocationManager$Stub\:\ void\ clearTestProviderLocation(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ void\ recreateUnlockScreen(com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.MmsMessageSender\:\ boolean\ sendMessage(long)>=android.permission.WRITE_SMS
<android.net.wifi.WifiStateMachine$SoftApStartingState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BROADCAST_STICKY
<com.android.settings.RingerVolumePreference\:\ void\ onActivityStop()>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ toggleBluetooth()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.CropImage$LoadDataTask\:\ java.lang.Object\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.MessageViewFragmentBase\:\ void\ onSaveAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.server.MountService\:\ void\ mount(java.lang.String)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ getAutoTimeRequired()>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.browser.WebViewController\:\ void\ createSubWindow(com.android.browser.Tab)>=android.permission.INTERNET
<com.android.systemui.statusbar.tablet.TabletStatusBar\:\ void\ addNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>=android.permission.VIBRATE
<com.android.vcard.VCardParserImpl_V21\:\ void\ parse(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.RequestPermissionActivity\:\ void\ access$200(com.android.settings.bluetooth.RequestPermissionActivity)>=android.permission.BLUETOOTH
<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter\:\ android.widget.Filter$FilterResults\ performFiltering(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.settings.widget.ChartSweepView\:\ void\ dispatchOnSweep(boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.exchange.CalendarSyncEnabler\:\ void\ showNotificationForTest(java.lang.String)>=android.permission.VIBRATE
<com.android.settings.DataUsageSummary\:\ void\ access$800(com.android.settings.DataUsageSummary,long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.location.GpsLocationProvider\:\ void\ removeListener(int)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine$DefaultState\:\ boolean\ processMessage(android.os.Message)>=android.permission.WAKE_LOCK
<android.content.ContextWrapper\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.systemui.usb.StorageNotification\:\ void\ setMediaStorageNotification(int,int,int,boolean,boolean,android.app.PendingIntent)>=android.permission.VIBRATE
<com.android.phone.CallNotifier\:\ void\ onCfiChanged(boolean)>=android.permission.VIBRATE
<com.android.providers.contacts.LegacyApiSupport\:\ int\ updateAll(android.net.Uri,int,android.content.ContentValues,java.lang.String,java.lang.String[])>=android.permission.READ_SYNC_SETTINGS
<android.provider.Telephony$Sms$Outbox\:\ android.net.Uri\ addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long)>=android.permission.RECEIVE_SMS
<com.android.server.pm.PackageManagerService\:\ boolean\ updateIntentVerificationStatus(java.lang.String,int,int)>=android.permission.SET_PREFERRED_APPLICATIONS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setPasswordMinimumUpperCase(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.os.IPowerManager$Stub\:\ void\ setStayOnSetting(int)>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.ToPackedGrayFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.pm.PackageManagerService\:\ void\ setPermissionEnforced(java.lang.String,boolean)>=android.permission.GRANT_RUNTIME_PERMISSIONS
<com.android.settings.bluetooth.HeadsetProfile\:\ int\ getConnectionStatus(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ notifyDefaultData(com.android.internal.telephony.ApnContext)>=android.permission.BROADCAST_STICKY
<com.android.contacts.list.ContactListFilterControllerImpl\:\ boolean\ filterAccountExists()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.ITelephonyRegistry\:\ void\ notifySignalStrength(android.telephony.SignalStrength)>=android.permission.BROADCAST_STICKY
<com.android.server.InputMethodManagerService$InputMethodSettings\:\ boolean\ buildAndPutEnabledInputMethodsStrRemovingIdLocked(java.lang.StringBuilder,java.util.List,java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.server.StatusBarManagerService\:\ void\ enforceExpandStatusBar()>=android.permission.EXPAND_STATUS_BAR
<com.android.browser.TabControl\:\ com.android.browser.SnapshotTab\ createSnapshotTab(long)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.RIL\:\ void\ acknowledgeLastIncomingCdmaSms(boolean,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.accounts.IAccountManager$Stub$Proxy\:\ void\ removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>=android.permission.MANAGE_ACCOUNTS
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.net.IConnectivityManager$Stub\:\ void\ setMobileDataEnabled(boolean)>=android.permission.CHANGE_NETWORK_STATE
<com.android.settings.Settings$DataUsageSummaryActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.BluetoothPairingDialog\:\ void\ onCancel()>=android.permission.BLUETOOTH
<android.media.effect.effects.PosterizeEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<android.security.KeyChain\:\ java.security.cert.X509Certificate[]\ getCertificateChain(android.content.Context,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.quicksearchbox.google.GoogleSuggestClient\:\ com.android.quicksearchbox.SourceResult\ queryExternal(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothHealth\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.TelephonyRegistry\:\ void\ addOnSubscriptionsChangedListener(java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.providers.settings.SettingsBackupAgent\:\ int\ enableWifi(boolean)>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker\:\ void\ setCurrentState(android.content.Context,int)>=android.permission.READ_SYNC_SETTINGS
<android.accounts.IAccountManager$Stub$Proxy\:\ void\ getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>=android.permission.GET_ACCOUNTS
<android.content.ContextWrapper\:\ void\ sendStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.server.BluetoothPanProfileHandler\:\ void\ handlePanDeviceStateChange(android.bluetooth.BluetoothDevice,java.lang.String,int,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.app.StateManager\:\ void\ restoreFromState(android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.DataController\:\ void\ <init>=android.permission.GET_ACCOUNTS
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory\:\ void\ onLoadComplete(android.content.Loader,java.lang.Object)>=android.permission.READ_CALENDAR
<com.android.exchange.EmailSyncAlarmReceiver\:\ void\ access$000(com.android.exchange.EmailSyncAlarmReceiver,android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.base.GLTextureTarget\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.calendar.agenda.AgendaListView\:\ void\ <init>=android.permission.READ_CALENDAR
<com.android.internal.telephony.UiccSmsController\:\ void\ sendDataForSubscriberWithSelfPermissions(int,java.lang.String,java.lang.String,java.lang.String,int,[byte,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.READ_EXTERNAL_STORAGE, android.permission.SEND_SMS, android.permission.SEND_SMS_NO_CONFIRMATION
<android.net.IConnectivityManager$Stub$Proxy\:\ android.net.NetworkInfo\ getNetworkInfo(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<com.android.development.Connectivity$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.location.ILocationManager\:\ void\ clearTestProviderLocation(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.settings.DataUsageSummary$ConfirmRestrictFragment$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.READ_PHONE_STATE
<android.app.NativeActivity\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.opp.BluetoothOppNotification\:\ void\ updateActiveNotification()>=android.permission.VIBRATE
<com.android.calendar.widget.CalendarAppWidgetProvider\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.READ_CALENDAR
<com.android.emailcommon.service.IAccountService$Stub$Proxy\:\ void\ reconcileAccounts(java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<android.view.IWindowManager$Stub\:\ void\ prepareAppTransition(int,boolean)>=android.permission.WAKE_LOCK
<com.android.browser.Controller\:\ void\ onPreloginFinished(android.os.Bundle,android.content.Intent,long,boolean)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.RIL\:\ void\ setSuppServiceNotifications(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.VoicemailPermissions\:\ boolean\ callerHasFullAccess()>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ startDiscovery()>=android.permission.BLUETOOTH_ADMIN
<com.android.server.pm.PackageManagerService\:\ void\ installNewPackageLI(android.content.pm.PackageParser$Package,int,int,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ lockNow(android.os.Bundle)>=android.permission.DEVICE_POWER
<com.android.contacts.activities.GroupEditorActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.MountService\:\ int\ getPasswordType()>=android.permission.STORAGE_INTERNAL
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.String\ getDeviceOwnerName()>=android.permission.MANAGE_USERS
<com.android.mms.transaction.RetrieveTransaction\:\ void\ ensureRouteToHost(java.lang.String,com.android.mms.transaction.TransactionSettings)>=android.permission.CHANGE_NETWORK_STATE
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ boolean\ trySetupData(com.android.internal.telephony.ApnContext)>=android.permission.BROADCAST_STICKY
<com.android.server.BatteryService\:\ void\ processValues()>=android.permission.BLUETOOTH
<com.android.phone.InCallTouchUi\:\ void\ access$300(com.android.phone.InCallTouchUi,com.android.internal.telephony.CallManager)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivity\:\ void\ dialRecipient()>=android.permission.CALL_PHONE
<com.android.contacts.activities.NonPhoneActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.test.mock.MockContentResolver\:\ android.content.SyncStatusInfo\ getSyncStatus(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.internal.telephony.sip.SipPhone\:\ void\ queryTTYMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.TransactionService\:\ boolean\ isNetworkAvailable()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.policy.impl.PhoneWindowManager$2\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.settings.inputmethod.UserDictionaryLocalePicker\:\ void\ updateLocale(java.util.Locale)>=android.permission.CHANGE_CONFIGURATION
<com.android.phone.PhoneInterfaceManager\:\ I[]\ supplyPinReportResultForSubscriber(int,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.phone.CdmaVoicePrivacyCheckBoxPreference$MyHandler\:\ void\ handleGetVPResponse(android.os.Message)>=android.permission.WRITE_SETTINGS
<com.android.providers.downloads.DownloadNotification\:\ void\ updateCompletedNotification(java.util.Collection)>=android.permission.VIBRATE
<android.support.v4.net.ConnectivityManagerCompat\:\ boolean\ isActiveNetworkMetered(android.net.ConnectivityManager)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.sip.SipPhone\:\ void\ enableEnhancedVoicePrivacy(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.app.LocalePicker\:\ void\ updateLocale(java.util.Locale)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.PhotoDataAdapter\:\ java.lang.Object\ access$2500(com.android.gallery3d.app.PhotoDataAdapter,java.util.concurrent.Callable)>=android.permission.ACCESS_NETWORK_STATE
<com.android.music.AudioPreview$2\:\ void\ onAudioFocusChange(int)>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerOnePane\:\ void\ onInstallFragment(android.app.Fragment)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetooth$Stub\:\ boolean\ connectHeadset(java.lang.String)>=android.permission.BLUETOOTH
<com.android.soundrecorder.SoundRecorder\:\ void\ updateTimeRemaining()>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ showAccountSpecificWarning(long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.camera.ShutterButton$OnShutterButtonListener\:\ void\ onShutterButtonClick()>=android.permission.RECORD_AUDIO
<com.android.browser.widget.BookmarkThumbnailWidgetService$BookmarkFactory\:\ void\ loadBookmarks()>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.internal.telephony.CommandsInterface\:\ void\ queryTTYMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ getMute(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.browser.provider.BrowserProvider2\:\ android.net.Uri\ insertInTransaction(android.net.Uri,android.content.ContentValues,boolean)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.contacts.activities.TransactionSafeActivity\:\ boolean\ onSearchRequested()>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.WifiStateMachine\:\ void\ access$16800(android.net.wifi.WifiStateMachine)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.TelephonyRegistry\:\ void\ notifyCallState(int,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getOrganizationColorForUser(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.email.Controller$LegacyListener\:\ void\ loadAttachmentFailed(long,long,long,com.android.emailcommon.mail.MessagingException,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.event.EditEventFragment\:\ void\ access$600(com.android.calendar.event.EditEventFragment,int)>=android.permission.READ_CALENDAR
<com.android.soundrecorder.Recorder\:\ void\ stopRecording()>=android.permission.WAKE_LOCK
<android.app.WallpaperManager\:\ void\ clear()>=android.permission.SET_WALLPAPER
<com.google.android.mms.util.PduCache\:\ android.net.Uri\ normalizeKey(android.net.Uri)>=android.permission.WRITE_SMS
<com.android.gallery3d.ui.MenuExecutor\:\ void\ onMenuClicked(android.view.MenuItem,java.lang.String,com.android.gallery3d.ui.MenuExecutor$ProgressListener)>=android.permission.VIBRATE
<android.widget.DateTimeView\:\ void\ registerReceivers()>=android.permission.WRITE_SETTINGS
<com.android.exchange.AbstractSyncService\:\ boolean\ hasConnectivity()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ void\ setScanMode(int)>=android.permission.BLUETOOTH
<com.android.mms.ui.MessageUtils$ResizeImageResultCallback\:\ void\ onResizeResult(com.google.android.mms.pdu.PduPart,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.nfc.P2pLinkManager\:\ int\ doSnepProtocol(com.android.nfc.handover.HandoverManager,android.nfc.NdefMessage,android.net.Uri[])>=android.permission.BLUETOOTH
<android.widget.VideoView\:\ int\ getAudioSessionId()>=android.permission.WAKE_LOCK
<com.android.calendar.event.AttendeesView$PresenceQueryHandler$1\:\ void\ run()>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.app.MovieActivity$1\:\ void\ onDestroy()>=android.permission.WAKE_LOCK
<com.android.contacts.editor.ContactEditorFragment$3$1\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<android.media.IAudioService$Stub\:\ void\ reloadAudioSettings()>=android.permission.WRITE_SETTINGS
<android.net.IConnectivityManager$Stub$Proxy\:\ int\ getNetworkPreference()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.RIL\:\ void\ setCdmaBroadcastConfig(int[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.calendar.agenda.AgendaWindowAdapter$QueryHandler\:\ int\ processNewCursor(com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec,android.database.Cursor)>=android.permission.READ_CALENDAR
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ int\ getBondState()>=android.permission.BLUETOOTH
<android.net.wifi.WifiManager\:\ boolean\ clearBlacklist()>=android.permission.CHANGE_WIFI_STATE
<android.app.Activity\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.mms.ui.ComposeMessageActivity\:\ void\ onUserInteraction()>=android.permission.WRITE_SMS
<com.android.phone.BluetoothHandsfree\:\ void\ onBluetoothEnabled()>=android.permission.BLUETOOTH
<com.android.nfc.NfcService$EnableDisableTask\:\ boolean\ disableInternal()>=android.permission.BLUETOOTH
<android.accounts.AccountManager$10\:\ void\ doWork()>=android.permission.MANAGE_ACCOUNTS
<com.android.server.am.ActivityManagerService\:\ void\ unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ getOutgoingCallerIdDisplay(android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothDeviceProfileState\:\ void\ cancelCommand(int)>=android.permission.BLUETOOTH
<com.android.contacts.util.NameConverter\:\ java.lang.String\ structuredNameToDisplayName(android.content.Context,android.content.ContentValues)>=android.permission.WRITE_CONTACTS
<com.android.mms.model.VideoModel\:\ com.android.mms.util.ItemLoadedFuture\ loadThumbnailBitmap(com.android.mms.util.ItemLoadedCallback)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ access$4500(com.android.mms.ui.ComposeMessageActivity,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.settings.SettingsBackupAgent\:\ void\ restoreSettings(android.app.backup.BackupDataInput,android.net.Uri)>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.ToRGBAFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.WifiService\:\ boolean\ pingSupplicant()>=android.permission.ACCESS_WIFI_STATE
<android.support.v4.net.ConnectivityManagerCompatGingerbread\:\ boolean\ isActiveNetworkMetered(android.net.ConnectivityManager)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ getAvailableNetworks(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ forceStopPackageLocked(java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.development.Connectivity\:\ void\ access$2600(com.android.development.Connectivity)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setPropertiesByCarrier()>=android.permission.CHANGE_CONFIGURATION
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.InCallTouchUi\:\ void\ refreshAudioModePopup()>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ void\ handleInputDevicePropertyChange(java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<android.filterpacks.base.GLTextureSource\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ void\ setLinkTimeout(java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.settings.accounts.ManageAccountsSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager$Stub\:\ android.os.Messenger\ getWifiServiceMessenger()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.view.RotationPolicy\:\ void\ setRotationLock(android.content.Context,boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.NetworkManagementService\:\ void\ createPhysicalNetwork(int,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.settings.bluetooth.HidProfile\:\ void\ setPreferred(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH
<android.app.ContextImpl$ApplicationContentResolver\:\ boolean\ isSyncPending(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.contacts.list.PostalAddressPickerFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.PhoneNumberPickerFragment\:\ void\ onItemClick(int,long)>=android.permission.READ_SYNC_SETTINGS
<android.hardware.ISerialManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.SERIAL_PORT
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ void\ enforceReceiveAndSend(java.lang.String)>=android.permission.RECEIVE_SMS
<com.android.contacts.list.ContactEntryListFragment\:\ void\ onItemClick(int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.widget.SettingsAppWidgetProvider\:\ android.widget.RemoteViews\ buildUpdate(android.content.Context)>=android.permission.BLUETOOTH
<android.media.IRingtonePlayer$Stub\:\ void\ play(android.os.IBinder,android.net.Uri,int)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ boolean\ isTetheringStarted()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.phone.BluetoothHandsfree$ScoSocketConnectThread\:\ void\ connectSco()>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ void\ closeSystemDialogsLocked(int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ getCameraDisabled(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.nfc.INfcTag$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.NFC
<com.android.camera.PanoramaActivity\:\ void\ createCameraScreenNail(boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.LocationSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1\:\ boolean\ performAction(int,int,android.os.Bundle)>=android.permission.WRITE_CONTACTS
<com.android.settings.bluetooth.DevicePickerFragment\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.calendar.agenda.AgendaByDayAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_CALENDAR
<com.android.soundrecorder.SoundRecorder\:\ void\ access$100(com.android.soundrecorder.SoundRecorder)>=android.permission.WAKE_LOCK
<com.android.nfc.snep.SnepServer$ServerThread\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.PhotoPage$2\:\ void\ onLoadingFinished()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.PhoneBase\:\ void\ getEnhancedVoicePrivacy(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ addCallAndContactMenuItems(android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHandsfree$SignalScoCloseThread\:\ void\ shutdown()>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ setPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.RIL\:\ void\ changeIccPin2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.test.IsolatedContext\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<android.media.MediaScanner$MyMediaScannerClient\:\ void\ scanFile(java.lang.String,long,long,boolean,boolean)>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary\:\ void\ syncReloadDictionaryInternal()>=android.permission.WRITE_CONTACTS
<android.accounts.AccountManager$8\:\ android.accounts.AccountManagerFuture\ start()>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ onSystemReady()>=android.permission.WAKE_LOCK
<com.android.settings.PointerSpeedPreference\:\ void\ showDialog(android.os.Bundle)>=android.permission.WRITE_SETTINGS
<com.android.internal.policy.impl.SimUnlockScreen$1$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ cleanUpAllConnections(boolean,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.gallery3d.app.ManageCachePage$1\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<com.android.mms.transaction.MessagingNotification\:\ int\ access$300(android.content.Context,long[])>=android.permission.READ_SMS
<com.android.settings.DataUsageSummary\:\ boolean\ hasLimitedNetworks()>=android.permission.READ_PHONE_STATE
<com.android.server.NotificationManagerService\:\ void\ enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[])>=android.permission.VIBRATE
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary\:\ void\ addWordToUserDictionary(java.lang.String,int)>=android.permission.READ_USER_DICTIONARY
<com.android.internal.app.ResolverActivity$1\:\ void\ onPackageRemoved(java.lang.String,int)>=android.permission.WRITE_SETTINGS
<com.android.server.MountService\:\ int\ mountSecureContainer(java.lang.String,java.lang.String,int,boolean)>=android.permission.ASEC_MOUNT_UNMOUNT
<com.android.browser.view.PieListView\:\ void\ layout(int,int,boolean,float,int)>=android.permission.GET_ACCOUNTS
<com.android.settings.DevelopmentSettings\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.settings.ChooseLockPassword$ChooseLockPasswordFragment\:\ android.view.View\ onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.nfc.INfcTag\:\ boolean\ isNdef(int)>=android.permission.NFC
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment\:\ void\ toggleVisibility(int)>=android.permission.WRITE_CALENDAR
<com.android.email.activity.MessageCompose$LoadMessageTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ComposeMessageActivity\:\ int\ access$3900(com.android.mms.ui.ComposeMessageActivity,long,boolean)>=android.permission.WRITE_SMS
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.VibratorService$3\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.VIBRATE
<com.android.browser.UrlInputView$UrlInputListener\:\ void\ onAction(java.lang.String,java.lang.String,java.lang.String)>=android.permission.GET_ACCOUNTS
<android.speech.tts.TextToSpeech\:\ java.util.Set\ getFeatures(java.util.Locale)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ void\ replaceNonSystemPackageLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>=android.permission.WAKE_LOCK
<com.android.settings.quicklaunch.QuickLaunchSettings\:\ void\ clearShortcut(char)>=android.permission.WRITE_SETTINGS
<android.app.ActivityGroup\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.settings.DevelopmentSettings\:\ void\ access$000(android.content.Context,java.lang.String,boolean)>=android.permission.READ_EXTERNAL_STORAGE
<android.filterpacks.base.InputStreamSource\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.list.CustomContactListFilterActivity\:\ void\ doSaveAction()>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.NetworkStateHandler\:\ void\ <init>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.TelephonyRegistry\:\ void\ notifyCarrierNetworkChange(boolean)>=android.permission.MODIFY_PHONE_STATE
<com.android.contacts.activities.ShowOrCreateActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<android.nfc.tech.BasicTagTechnology\:\ void\ reconnect()>=android.permission.NFC
<com.android.voicedialer.VoiceDialerActivity$CommandRecognizerClient$2\:\ void\ run()>=android.permission.VIBRATE
<com.android.server.WifiService\:\ int\ addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<android.provider.Contacts$Settings\:\ void\ setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.google.common.io.Resources\:\ byte[]\ toByteArray(java.net.URL)>=android.permission.INTERNET
<com.android.server.LocationManagerService\:\ void\ handleLocationChangedLocked(android.location.Location,boolean)>=android.permission.WAKE_LOCK
<com.android.email.Controller\:\ void\ loadMessageForView(long)>=android.permission.READ_PHONE_STATE
<android.app.Application\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.internal.telephony.RIL\:\ void\ sendScreenState(boolean)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactListFilterControllerImpl\:\ void\ selectCustomFilter()>=android.permission.READ_SYNC_SETTINGS
<android.content.IContentService\:\ int\ getIsSyncable(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ setSelectedContactUri(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.editor.SelectAccountDialogFragment\:\ void\ access$000(com.android.contacts.editor.SelectAccountDialogFragment,com.android.contacts.model.AccountWithDataSet)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.util.AccountSelectionUtil\:\ android.app.Dialog\ getSelectAccountDialog(android.content.Context,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.pm.PackageManagerService\:\ void\ unregisterMoveCallback(android.content.pm.IPackageMoveObserver)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.phone.BluetoothHandsfree$13\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.server.dreams.DreamManagerService$BinderService\:\ void\ dream()>=android.permission.WRITE_DREAM_STATE
<com.android.exchange.EasOutboxService\:\ com.android.exchange.EasResponse\ sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.LockScreen$WaveViewMethods\:\ void\ onGrabbedStateChange(android.view.View,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.AdnRecordLoader\:\ void\ loadAllFromEF(int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.inputmethod.keyboard.KeyboardSwitcher\:\ void\ hapticAndAudioFeedback(int)>=android.permission.VIBRATE
<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub\:\ void\ onLockscreenShown()>=android.permission.ACCESS_VOICE_INTERACTION_SERVICE
<android.media.effect.effects.BlackWhiteEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.internal.policy.impl.RecentApplicationsDialog\:\ void\ onStart()>=android.permission.GET_TASKS
<com.android.phone.DTMFTwelveKeyDialer\:\ void\ sendShortDtmfToNetwork(char)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.GrainFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.accounts.AccountManagerService\:\ java.lang.String\ getPassword(android.accounts.Account)>=android.permission.AUTHENTICATE_ACCOUNTS
<android.bluetooth.IBluetoothA2dp\:\ java.util.List\ getDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.contacts.vcard.ExportProcessor\:\ void\ runInternal()>=android.permission.WRITE_CONTACTS
<com.android.vcard.VCardInterpreter\:\ void\ onEntryEnded()>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ android.bluetooth.BluetoothDevice[]\ getBondedDevices()>=android.permission.BLUETOOTH
<com.android.browser.TabControl\:\ boolean\ setCurrentTab(com.android.browser.Tab,boolean)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.CommandsInterface\:\ void\ setCdmaSubscriptionSource(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.deskclock.AlarmInitReceiver$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService\:\ boolean\ isRegistered(java.lang.String,java.lang.String)>=android.permission.USE_SIP
<com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState\:\ void\ enter()>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.app.DialogPicker\:\ void\ onBackPressed()>=android.permission.RECORD_AUDIO
<com.android.settings.accounts.AccountSyncSettings\:\ void\ setFeedsState()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager\:\ int[]\ getAdnRecordsSize(int)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$2\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<android.media.IRingtonePlayer$Stub\:\ void\ playAsync(android.net.Uri,boolean,int)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ clearDeviceOwner(java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.ContactLoader\:\ void\ loadGroupMetaData(com.android.contacts.ContactLoader$Result)>=android.permission.WRITE_CONTACTS
<android.filterpacks.imageproc.CropRectFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ acceptCall()>=android.permission.WAKE_LOCK
<com.android.settings.inputmethod.UserDictionaryAddWordContents\:\ void\ delete(android.content.Context)>=android.permission.WRITE_USER_DICTIONARY
<android.bluetooth.BluetoothAdapter\:\ boolean\ isOffloadedScanBatchingSupported()>=android.permission.BLUETOOTH
<android.net.wifi.WifiStateMachine$DriverLoadingState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.LockSettingsService\:\ com.android.internal.widget.VerifyCredentialResponse\ checkPattern(java.lang.String,int,com.android.internal.widget.ICheckCredentialProgressCallback)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.email.RefreshManager$SendPendingMessagesForAllAccountsImpl\:\ void\ onPostExecute(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.exchange.EmailSyncAlarmReceiver\:\ void\ handleReceive(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.NetworkManagementService\:\ void\ stopAccessPoint(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<android.server.BluetoothService\:\ void\ autoConnect()>=android.permission.BLUETOOTH
<com.android.phone.InCallScreen$14\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.WhitelistDictionary\:\ void\ loadDictionary()>=android.permission.WRITE_CONTACTS
<android.nfc.NfcActivityManager\:\ void\ setNdefPushContentUri(android.app.Activity,android.net.Uri[])>=android.permission.NFC
<android.accounts.IAccountManager\:\ void\ getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>=android.permission.GET_ACCOUNTS
<com.android.contacts.list.PostalAddressListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.text.StringSource\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.location.ILocationManager$Stub$Proxy\:\ void\ removeTestProvider(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<android.telephony.SmsManager\:\ boolean\ updateMessageOnIcc(int,int,byte[])>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.PickerActivity\:\ void\ onResume()>=android.permission.RECORD_AUDIO
<com.android.contacts.ContactLoader\:\ void\ deliverResult(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.CallerInfoCache$CacheAsyncTask\:\ void\ releaseWakeLock()>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ bootAnimationComplete()>=android.permission.BROADCAST_STICKY
<com.android.systemui.statusbar.policy.NetworkController\:\ java.lang.String\ huntForSsid(android.net.wifi.WifiInfo)>=android.permission.ACCESS_WIFI_STATE
<com.google.common.io.ByteStreams\:\ long\ getChecksum(com.google.common.io.InputSupplier,java.util.zip.Checksum)>=android.permission.INTERNET
<com.android.server.accessibility.AccessibilityManagerService\:\ boolean\ sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>=android.permission.INTERACT_ACROSS_USERS
<com.android.ex.variablespeed.MediaPlayerProxy\:\ void\ seekTo(int)>=android.permission.WAKE_LOCK
<com.android.settings.SettingsPreferenceFragment\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ void\ handleInetConditionHoldEnd(int,int)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ enableEnhancedVoicePrivacy(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<android.os.IHardwareService$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.FLASHLIGHT
<com.android.contacts.activities.TransactionSafeActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<android.content.ContentService\:\ android.content.SyncStatusInfo\ getSyncStatus(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<android.location.LocationManager\:\ void\ clearTestProviderStatus(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.server.ConnectivityService\:\ boolean\ updateLockdownVpn()>=android.permission.ACCESS_NETWORK_STATE, android.permission.CONNECTIVITY_INTERNAL
<android.service.dreams.DreamManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WRITE_SETTINGS
<com.android.common.widget.CompositeCursorAdapter\:\ void\ bindView(android.view.View,int,android.database.Cursor,int)>=android.permission.READ_SYNC_SETTINGS
<android.media.IAudioService$Stub\:\ void\ setBluetoothScoOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.server.connectivity.Vpn\:\ void\ access$600(com.android.server.connectivity.Vpn,com.android.internal.net.VpnConfig,java.lang.String,android.graphics.Bitmap)>=android.permission.VIBRATE
<com.android.settings.bluetooth.A2dpProfile\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<android.net.wifi.WifiStateMachine$DriverUnloadingState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.phone.sip.SipSettings\:\ void\ access$500(com.android.phone.sip.SipSettings,android.net.sip.SipProfile)>=android.permission.USE_SIP
<com.android.calendar.AllInOneActivity\:\ void\ eventsChanged()>=android.permission.WRITE_CALENDAR
<android.bluetooth.IBluetooth\:\ int\ getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothDeviceProfileState\:\ void\ access$6800(android.bluetooth.BluetoothDeviceProfileState)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.Gallery\:\ void\ onBackPressed()>=android.permission.RECORD_AUDIO
<com.android.common.contacts.DataUsageStatUpdater\:\ boolean\ updateWithRfc822Address(java.util.Collection)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wifi.WifiServiceImpl\:\ void\ startScan(android.net.wifi.ScanSettings,android.os.WorkSource)>=android.permission.CHANGE_WIFI_STATE, android.permission.UPDATE_DEVICE_STATS
<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub\:\ void\ hideCurrentSession()>=android.permission.ACCESS_VOICE_INTERACTION_SERVICE
<android.media.AudioManager\:\ void\ setBluetoothScoOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.vcard.VCardEntry$OrganizationData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ restartRadio()>=android.permission.WAKE_LOCK
<com.android.server.statusbar.StatusBarManagerService\:\ void\ disable(int,android.os.IBinder,java.lang.String)>=android.permission.STATUS_BAR
<com.android.server.audio.AudioService\:\ void\ setRingtonePlayer(android.media.IRingtonePlayer)>=android.permission.REMOTE_AUDIO_PLAYBACK
<com.android.contacts.editor.ContactEditorFragment\:\ void\ setIntentExtras(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.nfc.DeviceHost$DeviceHostListener\:\ void\ onRemoteFieldDeactivated()>=android.permission.BLUETOOTH
<com.android.contacts.util.AccountsListAdapter\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.recent.RecentsVerticalScrollView$3\:\ void\ onClick(android.view.View)>=android.permission.REORDER_TASKS
<com.android.internal.telephony.cdma.CdmaLteUiccFileHandler\:\ void\ updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ ensureBootCompleted()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.BlackWhiteFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SharpenFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.nfc.handover.BluetoothHeadsetHandover$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<android.view.accessibility.IAccessibilityManager\:\ void\ unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>=android.permission.WRITE_SETTINGS
<android.service.quicksettings.TileService\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.exchange.EasSyncService\:\ com.android.exchange.provider.GalResult\ searchGal(android.content.Context,long,java.lang.String,int)>=android.permission.WAKE_LOCK
<android.test.mock.MockContentResolver\:\ void\ setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.calendar.CalendarController$EventHandler\:\ void\ handleEvent(com.android.calendar.CalendarController$EventInfo)>=android.permission.WRITE_CALENDAR
<com.android.phone.BluetoothHeadsetService\:\ void\ access$1500(com.android.phone.BluetoothHeadsetService,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.quicksearchbox.util.JavaNetHttpHelper\:\ java.lang.String\ post(java.lang.String,java.util.Map,java.lang.String)>=android.permission.INTERNET
<com.android.settings.vpn2.VpnSettings\:\ java.lang.String[]\ getDefaultNetwork()>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.CalendarController\:\ void\ sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,long,int)>=android.permission.WRITE_CALENDAR
<com.android.music.IMediaPlaybackService$Stub\:\ int\ removeTrack(long)>=android.permission.WAKE_LOCK
<com.android.contacts.list.LegacyPhoneNumberListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ java.lang.String[]\ getTetherableUsbRegexs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.media.NotificationPlayer\:\ void\ enqueueLocked(com.android.systemui.media.NotificationPlayer$Command)>=android.permission.WAKE_LOCK
<com.android.settings.AccessibilitySettings$ToggleAccessibilityServicePreferenceFragment\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_SETTINGS
<com.android.contacts.editor.Editor$EditorListener\:\ void\ onRequest(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.deskclock.AlarmAlertFullScreen\:\ boolean\ dispatchKeyEvent(android.view.KeyEvent)>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.WhitelistDictionary\:\ boolean\ isValidWord(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.phone.PhoneApp\:\ void\ updateProximitySensorMode(com.android.internal.telephony.Phone$State)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ access$3000(com.android.mms.ui.ComposeMessageActivity,long)>=android.permission.WRITE_SMS
<com.android.mms.ui.MessageUtils\:\ java.lang.String\ getNotificationIndDetails(android.content.Context,android.database.Cursor)>=android.permission.WRITE_SMS
<com.android.contacts.group.GroupBrowseListAdapter\:\ int\ getSelectedGroupPosition()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.statusbar.StatusBarManagerService\:\ void\ onNotificationActionClick(java.lang.String,int)>=android.permission.STATUS_BAR_SERVICE
<com.android.systemui.statusbar.BaseStatusBar$2\:\ boolean\ onClickHandler(android.view.View,android.app.PendingIntent,android.content.Intent)>=android.permission.VIBRATE
<com.android.server.am.ActivityStack\:\ void\ activityPaused(android.os.IBinder,boolean)>=android.permission.WAKE_LOCK
<android.net.sip.SipManager\:\ boolean\ isOpened(java.lang.String)>=android.permission.USE_SIP
<com.android.phone.BluetoothHandsfree$1\:\ void\ onServiceConnected(int,android.bluetooth.BluetoothProfile)>=android.permission.BLUETOOTH
<com.android.browser.UiController\:\ com.android.browser.Tab\ openTabToHomePage()>=android.permission.GET_ACCOUNTS
<com.android.server.DockObserver\:\ void\ update()>=android.permission.WAKE_LOCK
<com.android.settings.Settings$RunningServicesActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask\:\ com.android.contacts.vcard.ImportRequest\ doInBackground(com.android.contacts.vcard.VCardService[])>=android.permission.READ_SYNC_SETTINGS
<android.media.AsyncPlayer$Thread\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.providers.contacts.GlobalSearchSupport\:\ android.database.Cursor\ handleSearchShortcutRefresh(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.PhoneNotifier\:\ void\ notifyServiceState(com.android.internal.telephony.Phone)>=android.permission.BROADCAST_STICKY
<com.android.mms.ui.SlideView\:\ void\ stopVideo()>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ setAlwaysFinish(boolean)>=android.permission.SET_ALWAYS_FINISH
<com.android.contacts.detail.PhotoSelectionHandler\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.DataUsageSummary\:\ void\ access$2400(com.android.settings.DataUsageSummary,long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.ThrottleService\:\ void\ systemReady()>=android.permission.WRITE_SETTINGS
<com.android.settings.OwnerInfoSettings\:\ void\ onPause()>=android.permission.WRITE_SETTINGS
<com.android.calendar.AllInOneActivity\:\ void\ handleEvent(com.android.calendar.CalendarController$EventInfo)>=android.permission.WRITE_CALENDAR
<android.filterpacks.videosrc.SurfaceTextureSource\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ processNextPostDialChar()>=android.permission.WAKE_LOCK
<com.google.common.io.ByteStreams\:\ byte[]\ toByteArray(com.google.common.io.InputSupplier)>=android.permission.INTERNET
<com.android.contacts.vcard.VCardImportExportListener\:\ void\ onExportProcessed(com.android.contacts.vcard.ExportRequest,int)>=android.permission.VIBRATE
<android.nfc.tech.NfcA\:\ void\ reconnect()>=android.permission.NFC
<com.android.internal.telephony.DataConnectionTracker\:\ void\ setDataOnRoamingEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.accounts.AccountSyncSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.server.sip.SipService$AutoRegistrationProcess\:\ void\ onRegistering(android.net.sip.ISipSession)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.UserDictionary\:\ void\ addWordToUserDictionary(java.lang.String,int)>=android.permission.READ_USER_DICTIONARY
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ createAndAddWindows()>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ setCLIR(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.activities.PeopleActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.camera.EffectsRecorder$5\:\ void\ run()>=android.permission.RECORD_AUDIO
<com.android.settings.accounts.AccountPreferenceBase\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ supplyIccPin2(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.net.NetworkStatsService\:\ void\ forceUpdate()>=android.permission.READ_NETWORK_USAGE_HISTORY
<com.android.calendar.month.MonthByWeekAdapter\:\ void\ <init>=android.permission.READ_CALENDAR
<com.android.calendar.DeleteEventHelper\:\ void\ deleteRepeatingEvent(int)>=android.permission.WRITE_CALENDAR
<com.android.gallery3d.ui.PhotoView\:\ boolean\ snapToNeighborImage()>=android.permission.VIBRATE
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ void\ sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>=android.permission.WAKE_LOCK
<com.google.common.io.Files\:\ java.lang.String\ toString(java.io.File,java.nio.charset.Charset)>=android.permission.INTERNET
<com.android.systemui.recent.RecentTasksLoader$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.GET_TASKS
<com.android.contacts.list.JoinContactListFragment\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.setup.AccountSettingsEditQuickResponsesFragment$QuickResponseFinder\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.UIControllerOnePane$ActionBarControllerCallback\:\ void\ onAccountSelected(long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.UiccPhoneBookController\:\ java.util.List\ getAdnRecordsInEfForSubscriber(int,int)>=android.permission.READ_CONTACTS
<android.provider.UserDictionary$Words\:\ void\ addWord(android.content.Context,java.lang.String,int,java.lang.String,java.util.Locale)>=android.permission.WRITE_USER_DICTIONARY
<com.android.server.net.NetworkPolicyManagerService\:\ void\ onTetheringChanged(java.lang.String,boolean)>=android.permission.MANAGE_NETWORK_POLICY
<com.android.settings.net.NetworkPolicyEditor\:\ void\ write(android.net.NetworkPolicy[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.BrightnessPreference\:\ void\ setMode(int)>=android.permission.WRITE_SETTINGS
<com.android.settings.inputmethod.InputMethodPreference\:\ void\ saveImeSettings()>=android.permission.WRITE_SETTINGS
<com.android.music.MediaPlaybackService$MultiPlayer\:\ boolean\ setDataSourceImpl(android.media.MediaPlayer,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.email.service.MailService\:\ void\ reconcilePopImapAccountsSync(android.content.Context)>=android.permission.WAKE_LOCK
<com.android.emailcommon.utility.EmailAsyncTask$InnerTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.PhoneUi\:\ void\ setUseQuickControls(boolean)>=android.permission.GET_ACCOUNTS
<com.android.server.pm.PackageManagerService\:\ I[]\ getPackageGids(java.lang.String,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.vcard.VCardParserImpl_V21\:\ void\ parseOne(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<android.net.IConnectivityManager$Stub$Proxy\:\ int\ stopUsingNetworkFeature(int,java.lang.String)>=android.permission.BLUETOOTH
<android.server.BluetoothEventLoop\:\ void\ onRequestPasskeyConfirmation(java.lang.String,int,int)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.PhotoView\:\ com.android.gallery3d.ui.PhotoFallbackEffect\ buildFallbackEffect(com.android.gallery3d.ui.GLView,com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<com.android.settings.widget.SettingsAppWidgetProvider\:\ void\ onEnabled(android.content.Context)>=android.permission.WRITE_SETTINGS
<com.android.gallery3d.app.AbstractGalleryActivity\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.RECORD_AUDIO
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.String\ getApplicationRestrictionsManagingPackage(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.PhoneProxy\:\ void\ setTTYMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.browser.UiController\:\ void\ closeCurrentTab()>=android.permission.GET_ACCOUNTS
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ access$900(com.android.server.accessibility.AccessibilityManagerService)>=android.permission.WRITE_SETTINGS
<com.android.mms.util.PduLoaderManager$PduTask\:\ void\ run()>=android.permission.WRITE_SMS
<com.android.internal.policy.impl.KeyguardViewProperties\:\ com.android.internal.policy.impl.KeyguardViewBase\ createKeyguardView(android.content.Context,com.android.internal.policy.impl.KeyguardViewCallback,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardWindowController)>=android.permission.GET_ACCOUNTS
<com.android.server.NetworkScoreService\:\ boolean\ clearScores()>=android.permission.BROADCAST_NETWORK_PRIVILEGED, android.permission.SCORE_NETWORKS
<com.android.browser.BrowserBookmarksPage$2\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<android.filterpacks.base.CallbackFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.phone.CarrierConfigLoader\:\ void\ updateConfigForPhoneId(int,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.ConnectivityService\:\ android.net.LinkProperties\ getLinkProperties(android.net.Network)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetoothPbap$Stub\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.wifi.WifiServiceImpl\:\ boolean\ removeNetwork(int)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.view.WindowManagerPolicy\:\ void\ setSafeMode(boolean)>=android.permission.VIBRATE
<android.media.AudioService\:\ void\ onSetWiredDeviceConnectionState(int,int,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ setScanMode(int,int)>=android.permission.BLUETOOTH
<com.android.internal.widget.LockPatternView\:\ void\ handleActionMove(android.view.MotionEvent)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.ui.SlotView$SimpleListener\:\ void\ onLongTap(int)>=android.permission.VIBRATE
<com.android.internal.telephony.ISms$Stub$Proxy\:\ boolean\ enableCellBroadcast(int)>=android.permission.RECEIVE_SMS
<com.android.phone.InCallScreen\:\ void\ updateAfterRadioTechnologyChange()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaLteUiccRecords\:\ void\ fetchSimRecords()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ColorTemperatureFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiMulticastDisabled(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.contacts.list.ContactListFilterController$ContactListFilterListener\:\ void\ onContactListFilterChanged()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.PhoneNumberPickerFragment\:\ void\ finish()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.CallDetailActivity\:\ void\ onMenuEditNumberBeforeCall(android.view.MenuItem)>=android.permission.READ_PHONE_STATE
<com.android.email.service.MailService$4\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.IccProvider\:\ boolean\ addIccRecordToEf(int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ hangupAndPowerOff()>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ copyMedia(long)>=android.permission.WRITE_SMS
<android.telephony.TelephonyManager\:\ java.lang.String\ getMsisdn()>=android.permission.READ_PHONE_STATE
<android.bluetooth.BluetoothAdapter\:\ boolean\ enableNoAutoConnect()>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.calllog.CallLogFragment\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_CALL_LOG
<com.android.settings.DataUsageSummary\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ void\ wakingUp()>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager\:\ int\ startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.phone.NotificationMgr\:\ void\ notifyMissedCall(java.lang.String,java.lang.String,java.lang.String,android.graphics.drawable.Drawable,android.graphics.Bitmap,long)>=android.permission.VIBRATE
<com.android.gallery3d.app.CropImage\:\ void\ onCreate(android.os.Bundle)>=android.permission.RECORD_AUDIO
<com.android.providers.downloads.SystemFacade\:\ boolean\ isNetworkRoaming()>=android.permission.ACCESS_NETWORK_STATE
<com.android.exchange.adapter.AbstractSyncParser\:\ boolean\ parse()>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.MovieActivity$1\:\ void\ onPlayPause()>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.WhitelistDictionary\:\ boolean\ reloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.server.TelephonyRegistry\:\ void\ listenForSubscriber(int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.READ_PHONE_STATE, android.permission.READ_PRECISE_PHONE_STATE, android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.internal.telephony.RIL\:\ void\ setFacilityLockForApp(java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.MobileNetworkSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.CHANGE_NETWORK_STATE
<com.google.common.io.ByteStreams\:\ byte[]\ getDigest(com.google.common.io.InputSupplier,java.security.MessageDigest)>=android.permission.INTERNET
<com.android.settings.Settings$SecuritySettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.mms.transaction.Transaction\:\ byte[]\ sendPdu(byte[],java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<android.app.IAlarmManager\:\ void\ setTimeZone(java.lang.String)>=android.permission.SET_TIME_ZONE
<com.android.internal.telephony.UiccSmsController\:\ void\ sendMultipartTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean)>=android.permission.READ_EXTERNAL_STORAGE, android.permission.SEND_SMS, android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.mms.ui.ComposeMessageActivity\:\ android.net.Uri\ getContactUriForPhoneNumber(java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.emailcommon.service.IEmailService\:\ void\ loadAttachment(long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.pbap.BluetoothPbapService\:\ void\ onCreate()>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ android.content.ComponentName\ getRestrictionsProvider(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.net.wifi.IWifiManager$Stub$Proxy\:\ android.os.Messenger\ getWifiServiceMessenger()>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.EmergencyCallbackModeService\:\ void\ access$000(com.android.phone.EmergencyCallbackModeService,android.os.AsyncResult)>=android.permission.VIBRATE
<android.test.IsolatedContext$MockAccountManager\:\ java.lang.String\ getUserData(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ animateCollapse()>=android.permission.VIBRATE
<com.android.calendar.event.EditEventView\:\ void\ setModel(com.android.calendar.CalendarEventModel)>=android.permission.READ_CALENDAR
<android.filterpacks.ui.SurfaceRenderFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.calendar.DeleteEventHelper$3\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_CALENDAR
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.SIMRecords\:\ void\ setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.UserBinaryDictionary\:\ void\ generateBinaryDictionary()>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.ui.GLView\:\ boolean\ onTouch(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.TintFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ int\ compareTo(com.android.settings.bluetooth.CachedBluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.calllog.VoicemailNotifier\:\ void\ updateNotification(android.net.Uri)>=android.permission.READ_CALL_LOG
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$InactiveState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.bluetooth.HeadsetBase\:\ void\ handleInput(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setMute(boolean)>=android.permission.WAKE_LOCK
<java.net.URL\:\ java.io.InputStream\ openStream()>=android.permission.INTERNET
<com.android.internal.telephony.PhoneProxy\:\ void\ requestIsimAuthentication(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$29\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<android.content.pm.IPackageManager$Stub$Proxy\:\ void\ getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>=android.permission.GET_PACKAGE_SIZE
<android.webkit.WebView\:\ void\ <init>=android.permission.INTERNET
<android.net.wifi.WifiManager\:\ android.os.Messenger\ getWifiStateMachineMessenger()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState\:\ void\ chooseUpstreamType(boolean)>=android.permission.BLUETOOTH
<com.android.phone.InCallTouchUi\:\ void\ updateState(com.android.internal.telephony.CallManager)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ keyguardDone(boolean)>=android.permission.WAKE_LOCK
<com.android.contacts.detail.ContactDetailFragment$AddToMyContactsQuickFix\:\ boolean\ isApplicable()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.Connection\:\ void\ cancelPostDial()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ setVoiceMessageWaiting(int,int)>=android.permission.WAKE_LOCK
<android.content.CursorEntityIterator\:\ android.content.Entity\ getEntityAndIncrementCursor(android.database.Cursor)>=android.permission.READ_CALENDAR
<com.android.server.wm.WindowManagerService\:\ void\ rebootSafeMode()>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ int\ movePrimaryStorage(java.lang.String)>=android.permission.MOVE_PACKAGE
<com.android.systemui.usb.StorageNotification\:\ void\ access$100(com.android.systemui.usb.StorageNotification,java.lang.String,java.lang.String,java.lang.String)>=android.permission.VIBRATE
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ void\ sendP2pStateChangedBroadcast(boolean)>=android.permission.BROADCAST_STICKY
<com.android.browser.PhoneUi\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ holdCall(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.phone.OtaUtils\:\ void\ onClickHandler(int)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ void\ updatePersistentConfiguration(android.content.res.Configuration)>=android.permission.CHANGE_CONFIGURATION
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ getAvailableNetworks(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageViewFragmentBase\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.AlbumPage\:\ void\ resume()>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.AccountManager\:\ android.accounts.Account[]\ getAccounts()>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ pollCallsWhenSafe()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.TintFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.location.LocationManager\:\ void\ requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.launcher2.Workspace\:\ void\ setup(com.android.launcher2.DragController)>=android.permission.SET_WALLPAPER_HINTS
<com.android.settings.SoundSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.server.DevicePolicyManagerService\:\ void\ access$200(com.android.server.DevicePolicyManagerService)>=android.permission.WRITE_SETTINGS
<com.android.music.MusicPicker\:\ void\ setSelected(android.database.Cursor)>=android.permission.WAKE_LOCK
<android.webkit.HTML5VideoInline\:\ void\ start()>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.PhotoView\:\ boolean\ switchWithCaptureAnimation(int)>=android.permission.VIBRATE
<com.android.quicksearchbox.google.AbstractGoogleSource\:\ com.android.quicksearchbox.SuggestionCursor\ getSuggestions(java.lang.String,int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetoothA2dp$Stub\:\ boolean\ disconnectSinkInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.SelectionManager\:\ void\ deSelectAll()>=android.permission.VIBRATE
<com.android.internal.telephony.IccSmsInterfaceManager\:\ boolean\ enableCellBroadcastRange(int,int)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.LocalBluetoothProfile\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.providers.downloads.DownloadService\:\ com.android.providers.downloads.DownloadInfo\ insertDownloadLocked(com.android.providers.downloads.DownloadInfo$Reader,long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.usb.UsbSettingsManager$MyPackageMonitor\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.ISms$Stub$Proxy\:\ boolean\ disableCellBroadcast(int)>=android.permission.RECEIVE_SMS
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ParceledListSlice\ queryIntentActivityOptions(android.content.ComponentName,[android.content.Intent,[java.lang.String,android.content.Intent,java.lang.String,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.bluetooth.BluetoothHeadset\:\ int\ getBatteryUsageHint(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.mms.ui.SlideListItemView\:\ void\ setVideo(java.lang.String,android.net.Uri)>=android.permission.WAKE_LOCK
<com.android.settings.DateTimeSettings\:\ void\ initUI()>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.statusbar.phone.PhoneStatusBar$21\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.VIBRATE
<com.android.calendar.widget.CalendarAppWidgetModel\:\ com.android.calendar.widget.CalendarAppWidgetModel$DayInfo\ populateDayInfo(int,android.text.format.Time)>=android.permission.READ_CALENDAR
<android.filterfw.core.Filter\:\ void\ transferInputFrames(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ disable(boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.am.ActivityManagerService\:\ void\ realStartServiceLocked(com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.LegacyApiSupport\:\ int\ updateOrganizations(long,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.EmailAddressListAdapter\:\ android.net.Uri\ getDataUri(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.BatteryStatsService\:\ void\ noteStartWakelock(int,int,java.lang.String,java.lang.String,int,boolean)>=android.permission.UPDATE_DEVICE_STATS
<com.android.server.am.ActivityManagerService\:\ void\ stopServiceLocked(com.android.server.am.ServiceRecord)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onSetDependencyMet(java.lang.String,boolean)>=android.permission.BROADCAST_STICKY
<java.net.HttpURLConnection\:\ void\ <init>=android.permission.INTERNET
<android.bluetooth.IBluetooth$Stub$Proxy\:\ java.util.List\ getConnectedPanDevices()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ int\ getPanDeviceConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.providers.contacts.VoicemailContentProvider\:\ java.lang.String\ getCallingPackage()>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.contacts.list.LegacyPhoneNumberListAdapter\:\ android.net.Uri\ getContactUri(int,android.database.Cursor,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.ContactSelectionActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothA2dp$Stub$Proxy\:\ boolean\ isA2dpPlaying(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<android.server.BluetoothA2dpService\:\ void\ onBluetoothDisable()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ connectWithoutResettingTimer(boolean)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardStatusViewManager$1\:\ void\ onUserChanged(int)>=android.permission.GET_ACCOUNTS
<com.android.exchange.EasAccountService\:\ com.android.exchange.EasResponse\ sendPing(byte[],int)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService\:\ int\ removeTracks(int,int)>=android.permission.WAKE_LOCK
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneDisambiguationDialogFragment\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.READ_PHONE_STATE
<com.android.calendar.CalendarController\:\ void\ sendEventRelatedEventWithExtra(java.lang.Object,long,long,long,long,int,int,long,long)>=android.permission.WRITE_CALENDAR
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ boolean\ isSyncActive()>=android.permission.READ_SYNC_STATS
<android.net.wifi.WifiStateMachine$DefaultState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.mms.data.Conversation$1\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.READ_SMS
<android.telephony.TelephonyManager\:\ java.lang.String\ getGroupIdLevel1()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.statusbar.StatusBarManagerService\:\ void\ disableForUser(int,android.os.IBinder,java.lang.String,int)>=android.permission.STATUS_BAR
<com.android.browser.ActivityController\:\ void\ onDestroy()>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.latin.DictionaryCollection\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<com.android.providers.settings.SettingsHelper\:\ void\ setAutoRestore(boolean)>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$CryptKeeperSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothHeadset\:\ java.util.List\ getDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.browser.AddBookmarkPage\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.ITelephony$Stub\:\ boolean\ enableDataConnectivity()>=android.permission.CHANGE_NETWORK_STATE
<com.android.contacts.activities.DialtactsActivity$7\:\ boolean\ onQueryTextChange(java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.ImageStitcher\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.view.IWindowManager$Stub$Proxy\:\ void\ prepareAppTransition(int,boolean)>=android.permission.WAKE_LOCK
<android.media.RingtoneManager\:\ android.media.Ringtone\ getRingtone(android.content.Context,android.net.Uri)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothDevice\:\ android.bluetooth.BluetoothSocket\ createScoSocket()>=android.permission.BLUETOOTH
<android.net.INetworkPolicyManager$Stub$Proxy\:\ boolean\ isNetworkMetered(android.net.NetworkState)>=android.permission.READ_PHONE_STATE
<com.android.gallery3d.data.FilterDeleteSet\:\ long\ reload()>=android.permission.ACCESS_NETWORK_STATE
<android.view.ContextThemeWrapper\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.mms.ui.SlideView$1\:\ void\ onPrepared(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.email.activity.EmailActivity\:\ void\ onStart()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.dialog.ClearFrequentsDialog$1$1\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ setScanMode(int,int)>=android.permission.BLUETOOTH
<android.filterpacks.base.GLTextureSource\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.bluetooth.BluetoothGattServer\:\ boolean\ connect(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH
<android.server.BluetoothAdapterStateMachine$Switching\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.settings.SecuritySettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.email.activity.MessageViewFragmentBase$LoadBodyTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.group.GroupBrowseListFragment\:\ void\ access$400(com.android.contacts.group.GroupBrowseListFragment)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.CallNotifier\:\ void\ resetAudioStateAfterDisconnect()>=android.permission.BLUETOOTH
<android.app.ActivityManager\:\ java.util.List\ getRunningTasks(int,int,android.app.IThumbnailReceiver)>=android.permission.GET_TASKS
<com.android.settings.bluetooth.BluetoothSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.BLUETOOTH
<com.android.internal.telephony.IPhoneSubInfo$Stub\:\ java.lang.String\ getSubscriberId()>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.cat.IconLoader\:\ void\ readClut()>=android.permission.WAKE_LOCK
<com.android.settings.PrivacySettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.accounts.IAccountManager$Stub$Proxy\:\ void\ hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>=android.permission.GET_ACCOUNTS
<android.net.VpnService\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.phone.BluetoothHandsfree$ScoSocketConnectThread\:\ void\ <init>=android.permission.BLUETOOTH
<android.nfc.INfcTag\:\ int\ connect(int,int)>=android.permission.NFC
<android.content.IContentService$Stub\:\ void\ setIsSyncable(android.accounts.Account,java.lang.String,int)>=android.permission.WRITE_SYNC_SETTINGS
<android.location.LocationManager\:\ boolean\ addGpsStatusListener(android.location.GpsStatus$Listener)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.settings.accounts.ManageAccountsSettings\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<android.test.mock.MockApplication\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<android.widget.VideoView\:\ void\ release(boolean)>=android.permission.WAKE_LOCK
<com.android.email.activity.ActionBarController$2\:\ void\ run()>=android.permission.ACCESS_NETWORK_STATE
<android.net.NetworkPolicyManager\:\ android.net.NetworkPolicy[]\ getNetworkPolicies()>=android.permission.READ_PHONE_STATE
<com.android.gallery3d.ui.ScrollBarView\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<android.server.BluetoothService\:\ boolean\ getTrustState(java.lang.String)>=android.permission.BLUETOOTH
<android.provider.Telephony$Sms\:\ android.database.Cursor\ query(android.content.ContentResolver,java.lang.String[])>=android.permission.RECEIVE_SMS
<com.android.server.pm.PackageManagerService\:\ void\ addCrossProfileIntentFilter(android.content.IntentFilter,java.lang.String,int,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ void\ sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>=android.permission.SEND_SMS
<android.content.IContentService$Stub$Proxy\:\ int\ getIsSyncable(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.WebViewController\:\ void\ onPageFinished(com.android.browser.Tab)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ acquireWakeLock()>=android.permission.WAKE_LOCK
<com.android.voicedialer.CommandRecognizerEngine\:\ void\ onRecognitionSuccess(com.android.voicedialer.RecognizerClient)>=android.permission.READ_CALL_LOG
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ onShowMoreKeysPanel(int,int,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)>=android.permission.WRITE_CONTACTS
<com.android.phone.NotificationMgr\:\ void\ updateCfi(boolean)>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ int\ dispatchMessage(com.android.internal.telephony.SmsMessageBase)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ boolean\ trySetupData(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.server.pm.PackageInstallerService\:\ void\ uninstall(java.lang.String,java.lang.String,int,android.content.IntentSender,int)>=android.permission.DELETE_PACKAGES, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.gallery3d.app.ManageCachePage$1\:\ boolean\ onTouch(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.LocationManagerService$Receiver\:\ void\ binderDied()>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothHeadset\:\ boolean\ stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ boolean\ setDiscoverableTimeout(int)>=android.permission.BLUETOOTH
<android.content.ContentResolver\:\ void\ setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.inputmethod.latin.ContactsBinaryDictionary\:\ void\ generateBinaryDictionary()>=android.permission.WRITE_CONTACTS
<android.service.dreams.DreamService\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<android.os.IVibratorService$Stub\:\ void\ cancelVibrate(android.os.IBinder)>=android.permission.VIBRATE
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ reconnectAfterFail(com.android.internal.telephony.DataConnection$FailCause,java.lang.String,int)>=android.permission.BROADCAST_STICKY
<com.android.mms.util.DownloadManager\:\ java.lang.String\ access$400(com.android.mms.util.DownloadManager,android.net.Uri)>=android.permission.WRITE_SMS
<com.android.mms.data.Conversation$3\:\ void\ run()>=android.permission.RECEIVE_SMS
<com.google.common.io.Files\:\ java.lang.Object\ readLines(java.io.File,java.nio.charset.Charset,com.google.common.io.LineProcessor)>=android.permission.INTERNET
<com.android.contacts.vcard.SelectAccountActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ void\ tryFailover(int)>=android.permission.CHANGE_WIFI_STATE
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ configureMTU(int,java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ hangupConnection(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.server.BluetoothEventLoop\:\ void\ onRequestPinCode(java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.server.AlarmManagerService\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.contacts.list.JoinContactListFragment\:\ boolean\ isSyncActive()>=android.permission.READ_SYNC_STATS
<android.bluetooth.IBluetooth\:\ java.util.List\ getConnectedPanDevices()>=android.permission.BLUETOOTH
<com.android.internal.telephony.UiccPhoneBookController\:\ boolean\ updateAdnRecordsInEfByIndexForSubscriber(int,int,java.lang.String,java.lang.String,int,java.lang.String)>=android.permission.WRITE_CONTACTS
<android.inputmethodservice.InputMethodService\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.gallery3d.app.SlideshowPage\:\ void\ setContentPane(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.WifiManager$MulticastLock\:\ void\ release()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ rejectCall()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.MovieActivity$1\:\ void\ access$1200(com.android.gallery3d.app.MoviePlayer)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiRadioPowerState(int,long,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.server.sip.SipSessionGroup\:\ void\ processTransactionTerminated(javax.sip.TransactionTerminatedEvent)>=android.permission.WAKE_LOCK
<com.android.contacts.ContactsUtils\:\ android.content.Intent\ getCallIntent(java.lang.String,java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.cdma.RuimFileHandler\:\ void\ loadEFLinearFixed(int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ int\ numHwTrackFiltersAvailable()>=android.permission.BLUETOOTH
<com.android.providers.media.MediaProvider\:\ android.os.ParcelFileDescriptor\ openFile(android.net.Uri,java.lang.String)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.AddBookmarkPage\:\ void\ onItemSelected(android.widget.AdapterView,android.view.View,int,long)>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.ColorTemperatureFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.bluetooth.IBluetooth$Stub$Proxy\:\ java.util.List\ getPanDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<android.content.ContentService\:\ void\ removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.contacts.model.EntityDelta\:\ com.android.contacts.model.AccountType\ getRawContactAccountType(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ setFocusedStack(int)>=android.permission.MANAGE_ACTIVITY_STACKS
<com.android.server.ConnectivityService$FeatureUser\:\ void\ expire()>=android.permission.BLUETOOTH
<android.hardware.location.ContextHubService\:\ int\ loadNanoApp(int,android.hardware.location.NanoApp)>=android.permission.LOCATION_HARDWARE
<com.android.bluetooth.pbap.BluetoothPbapVcardManager\:\ java.util.ArrayList\ getPhonebookNameList(int)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.sip.SipPhone$SipConnection$1\:\ void\ onCallEnded(com.android.internal.telephony.Connection$DisconnectCause)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ boolean\ attachApplicationLocked(android.app.IApplicationThread,int)>=android.permission.WAKE_LOCK
<com.android.calendar.event.EditEventFragment\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.WRITE_CALENDAR
<com.android.calendar.DayView\:\ boolean\ setSelectionFromPosition(int,int,boolean)>=android.permission.READ_CALENDAR
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ java.lang.String\ getRemoteName(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.media.effect.effects.CropEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ onDeviceAdded(com.android.settings.bluetooth.CachedBluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.UserDictionarySettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_USER_DICTIONARY
<com.android.exchange.ExchangeService$AccountObserver\:\ void\ onAccountChanged()>=android.permission.WAKE_LOCK
<com.android.server.accessibility.AccessibilityManagerService$1\:\ void\ onPackageRemoved(java.lang.String,int)>=android.permission.WRITE_SETTINGS
<android.server.BluetoothEventLoop\:\ void\ onNetworkDeviceDisconnected(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.BluetoothPermissionActivity\:\ void\ savePhonebookPermissionChoice(int)>=android.permission.BLUETOOTH
<com.android.contacts.quickcontact.DataAction\:\ void\ <init>=android.permission.READ_PHONE_STATE
<com.android.gallery3d.ui.EdgeView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.InCallScreen$15\:\ void\ onCancel(android.content.DialogInterface)>=android.permission.BLUETOOTH
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ clientDisconnect(int,java.lang.String)>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ void\ setNetworkSelectionModeAutomatic(int)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.ConnectivityService\:\ android.net.NetworkRequest\ listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder)>=android.permission.ACCESS_NETWORK_STATE, android.permission.ACCESS_WIFI_STATE, android.permission.CHANGE_NETWORK_STATE, android.permission.CONNECTIVITY_INTERNAL
<com.android.phone.CallController\:\ void\ placeCall(android.content.Intent)>=android.permission.BLUETOOTH
<com.android.contacts.list.ContactEntryListFragment\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.BitmapOverlayFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.contacts.list.LegacyContactListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.content.SyncManager\:\ void\ sendSyncFinishedOrCanceledMessage(android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.CrossProcessFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.CallLogFragment\:\ void\ onStop()>=android.permission.WRITE_CALL_LOG
<com.android.server.net.NetworkPolicyManagerService\:\ void\ setConnectivityListener(android.net.INetworkPolicyListener)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.settings.VoiceInputOutputSettings\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WRITE_SETTINGS
<com.android.mms.ui.ConversationListAdapter$OnContentChangedListener\:\ void\ onContentChanged(com.android.mms.ui.ConversationListAdapter)>=android.permission.READ_SMS
<android.server.BluetoothEventLoop\:\ void\ onPanDevicePropertyChanged(java.lang.String,java.lang.String[])>=android.permission.BLUETOOTH
<android.content.pm.IPackageManager$Stub\:\ boolean\ setInstallLocation(int)>=android.permission.WRITE_SETTINGS
<com.android.bluetooth.opp.BluetoothOppService\:\ void\ createServerSession(javax.obex.ObexTransport)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.DialogPicker\:\ void\ onPause()>=android.permission.RECORD_AUDIO
<android.provider.Contacts$People\:\ android.net.Uri\ addToGroup(android.content.ContentResolver,long,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.NotificationTransaction\:\ void\ notifyObservers()>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager\:\ boolean\ isMulticastEnabled()>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.BluetoothHandsfree$14\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ boolean\ findFocus(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>=android.permission.INTERACT_ACROSS_USERS
<com.android.internal.telephony.IccRecords\:\ void\ setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.location.LocationManager\:\ boolean\ addNmeaListener(android.location.OnNmeaMessageListener)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<android.accounts.IAccountManager$Stub$Proxy\:\ void\ setUserData(android.accounts.Account,java.lang.String,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<android.media.AsyncPlayer\:\ void\ releaseWakeLock()>=android.permission.WAKE_LOCK
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState\:\ boolean\ turnOffUpstreamMobileConnection()>=android.permission.BLUETOOTH
<com.google.common.io.Files\:\ void\ copy(java.io.File,java.nio.charset.Charset,java.lang.Appendable)>=android.permission.INTERNET
<com.android.music.IMediaPlaybackService$Stub$Proxy\:\ void\ next()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ setBandMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothGatt\:\ boolean\ requestMtu(int)>=android.permission.BLUETOOTH
<com.android.contacts.ContactsListActivity\:\ android.net.Uri\ getContactUri(int)>=android.permission.WRITE_CONTACTS
<android.filterpacks.performance.ThroughputFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.ApplicationSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.providers.contacts.ContactsProvider2\:\ void\ enforceSocialStreamReadPermission(android.net.Uri)>=android.permission.READ_SOCIAL_STREAM
<com.android.contacts.activities.ActionBarAdapter\:\ boolean\ onClose()>=android.permission.READ_SYNC_SETTINGS
<android.media.AudioService$AudioHandler$2\:\ boolean\ onError(android.media.MediaPlayer,int,int)>=android.permission.WAKE_LOCK
<com.android.launcher2.PagedViewWithDraggableItems\:\ boolean\ beginDragging(android.view.View)>=android.permission.VIBRATE
<com.android.exchange.EasOutboxService\:\ boolean\ tryProvision(com.android.exchange.EasSyncService)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ onNewIntent(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.sip.SipSettings\:\ void\ processActiveProfilesFromSipService()>=android.permission.USE_SIP
<android.bluetooth.BluetoothServerSocket\:\ void\ <init>=android.permission.BLUETOOTH
<com.android.server.AppOpsService\:\ void\ setAudioRestriction(int,int,int,int,[java.lang.String)>=android.permission.UPDATE_APP_OPS_STATS
<com.android.mms.transaction.SmsReceiverService\:\ void\ sendFirstQueuedMessage()>=android.permission.RECEIVE_SMS
<com.android.phone.BluetoothHandsfree$29\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<android.app.AlarmManager\:\ void\ setTimeZone(java.lang.String)>=android.permission.SET_TIME_ZONE
<com.android.internal.telephony.RIL\:\ void\ setLocationUpdates(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ int\ dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>=android.permission.WAKE_LOCK
<android.media.AudioService$AudioHandler\:\ void\ onHandlePersistMediaButtonReceiver(android.content.ComponentName)>=android.permission.WRITE_SETTINGS
<com.android.phone.BluetoothHandsfree$4\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.phone.BluetoothAtPhonebook\:\ android.bluetooth.AtCommandResult\ access$1000(com.android.phone.BluetoothAtPhonebook)>=android.permission.READ_CALL_LOG
<com.android.server.net.NetworkPolicyManagerService\:\ int\ getUidPolicy(int)>=android.permission.MANAGE_NETWORK_POLICY
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ boolean\ access$5300(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.net.wifi.p2p.WifiP2pDevice,android.net.wifi.p2p.WifiP2pConfig)>=android.permission.GET_TASKS
<com.android.settings.WirelessSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetooth\:\ int\ getScanMode()>=android.permission.BLUETOOTH
<android.webkit.HTML5Audio\:\ void\ pause()>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ keyguardDone(boolean,boolean)>=android.permission.WAKE_LOCK
<com.android.contacts.list.PostalAddressPickerFragment\:\ void\ setQueryString(java.lang.String,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.AlbumSetPage$3\:\ void\ onLongTap(int)>=android.permission.VIBRATE
<android.filterpacks.text.StringLogger\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_CALENDAR
<com.android.gallery3d.app.SlideshowPage\:\ void\ initializeViews()>=android.permission.ACCESS_NETWORK_STATE
<android.media.effect.effects.FillLightEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.email.activity.MailboxListFragment$FindParentMailboxTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.exchange.EasSyncService\:\ java.lang.String\ acknowledgeProvisionImpl(com.android.exchange.EasSyncService,java.lang.String,java.lang.String,boolean)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.GlobalSearchSupport\:\ android.database.Cursor\ addSearchSuggestionsBasedOnFilter(android.database.MatrixCursor,android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ getBasebandVersion(android.os.Message)>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ void\ dumpProfileState(java.io.PrintWriter)>=android.permission.BLUETOOTH
<com.android.contacts.ContactSaveService\:\ void\ updateGroup(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.InCallScreen\:\ void\ access$500(com.android.phone.InCallScreen,android.os.AsyncResult)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ sendRawPdu(byte[],byte[],android.app.PendingIntent,android.app.PendingIntent,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ void\ handleMediaKeyEvent(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.contacts.model.AccountTypeManagerImpl\:\ void\ loadAccountsInBackground()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.accounts.AccountSyncSettings\:\ void\ onSyncStateUpdated()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.content.ContentService\:\ void\ setIsSyncable(android.accounts.Account,java.lang.String,int)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.email.provider.AccountReconciler\:\ void\ reconcileAccounts(android.content.Context,java.util.List,android.accounts.Account[],android.content.Context)>=android.permission.WAKE_LOCK
<com.android.server.ThrottleService$MyHandler\:\ void\ onResetAlarm()>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ handleNotificationError(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification,java.lang.String)>=android.permission.VIBRATE
<com.android.settings.inputmethod.SpellCheckersSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<android.filterfw.core.FilterFunction\:\ void\ close()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.ServiceStateTracker\:\ void\ setPowerStateToDesired()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ hangupForegroundResumeBackground()>=android.permission.WAKE_LOCK
<com.android.settings.DataUsageSummary\:\ boolean\ hasEthernet(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaLteUiccRecords\:\ void\ setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub\:\ android.net.NetworkQuotaInfo\ getActiveNetworkQuotaInfo()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.ISms$Stub$Proxy\:\ java.util.List\ getAllMessagesFromIccEf()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneSubInfo\:\ java.lang.String\ getMsisdn()>=android.permission.READ_PHONE_STATE
<com.android.settings.bluetooth.RequestPermissionActivity$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.commands.monkey.Monkey\:\ void\ main(java.lang.String[])>=android.permission.WAKE_LOCK
<android.filterpacks.base.OutputStreamTarget\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.media.AudioService$AudioHandler\:\ void\ cleanupPlayer(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.settings.wifi.WifiSettingsForSetupWizardXL\:\ void\ onCreate(android.os.Bundle)>=android.permission.ACCESS_WIFI_STATE
<com.android.emailcommon.service.IEmailServiceCallback\:\ void\ sendMessageStatus(long,java.lang.String,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaDataConnection\:\ void\ access$1800(com.android.internal.telephony.DataConnection,java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CallManager\:\ void\ setAudioMode()>=android.permission.BLUETOOTH
<com.android.settings.AirplaneModeEnabler\:\ void\ setAirplaneModeInECM(boolean,boolean)>=android.permission.WRITE_SETTINGS
<com.android.phone.PhoneUtils\:\ com.android.internal.telephony.CallerInfo\ getCallerInfo(android.content.Context,com.android.internal.telephony.Connection)>=android.permission.WRITE_CONTACTS
<com.android.server.NetworkManagementService\:\ void\ addRoute(int,android.net.RouteInfo)>=android.permission.CONNECTIVITY_INTERNAL
<android.net.wifi.WifiStateMachine$InitialState\:\ void\ enter()>=android.permission.ACCESS_WIFI_STATE
<com.android.music.IMediaPlaybackService$Stub$Proxy\:\ void\ open(long[],int)>=android.permission.WAKE_LOCK
<com.android.systemui.usb.StorageNotification\:\ void\ setUsbStorageNotification(int,int,int,boolean,boolean,android.app.PendingIntent)>=android.permission.VIBRATE
<com.android.contacts.editor.AggregationSuggestionEngine\:\ android.net.Uri\ buildAggregationSuggestionUri(com.android.contacts.model.EntityDelta$ValuesDelta)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.usage.UsageStatsService$BinderService\:\ void\ setAppInactive(java.lang.String,boolean,int)>=android.permission.CHANGE_APP_IDLE_STATE
<android.bluetooth.IBluetooth$Stub\:\ boolean\ isTetheringOn()>=android.permission.BLUETOOTH
<com.android.internal.app.IBatteryStats$Stub$Proxy\:\ void\ setBatteryState(int,int,int,int,int,int)>=android.permission.BLUETOOTH
<com.android.server.display.DisplayManagerService$BinderService\:\ void\ requestColorMode(int,int)>=android.permission.CONFIGURE_DISPLAY_COLOR_MODE
<android.accounts.AccountManager\:\ android.accounts.AccountManagerFuture\ updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ void\ onProfileClicked(com.android.settings.bluetooth.LocalBluetoothProfile)>=android.permission.BLUETOOTH
<android.content.IContentService\:\ android.content.SyncStatusInfo\ getSyncStatus(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.contacts.list.ProviderStatusWatcher$2\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isRemovingAdmin(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.email.mail.store.Pop3Store\:\ android.os.Bundle\ autoDiscover(android.content.Context,java.lang.String,java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.server.wifi.WifiServiceImpl\:\ boolean\ pingSupplicant()>=android.permission.ACCESS_WIFI_STATE
<com.android.mms.transaction.MessagingNotification\:\ void\ updateSendFailedNotificationForThread(android.content.Context,long)>=android.permission.READ_SMS
<com.android.phone.PhoneUtils\:\ boolean\ hangupRingingAndActive(com.android.internal.telephony.Phone)>=android.permission.WRITE_CONTACTS
<android.filterpacks.imageproc.BitmapOverlayFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.email.mail.Store\:\ android.os.Bundle\ autoDiscover(android.content.Context,java.lang.String,java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.settings.accounts.SyncSettings\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ checkSelection()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.TelephonyRegistry\:\ void\ notifyDataConnectionForSubscriber(int,int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>=android.permission.MODIFY_PHONE_STATE
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker$1\:\ void\ run()>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine$VerifyingLinkState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ android.content.pm.UserInfo\ getCurrentUser()>=android.permission.INTERACT_ACROSS_USERS
<com.android.phone.CallNotifier\:\ void\ onPhoneStateChanged(android.os.AsyncResult)>=android.permission.BLUETOOTH
<com.android.contacts.list.ContactPickerFragment\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.BluetoothHandsfree$16\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<android.filterpacks.imageproc.ToRGBFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.deskclock.AlarmClock$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_SETTINGS
<android.preference.VolumePreference$SeekBarVolumizer\:\ void\ stopSample()>=android.permission.WAKE_LOCK
<com.android.providers.contacts.LegacyApiSupport\:\ int\ delete(android.net.Uri,java.lang.String,java.lang.String[])>=android.permission.READ_SYNC_SETTINGS
<com.android.email.NotificationController\:\ void\ showLoginFailedNotification(long)>=android.permission.VIBRATE
<com.android.browser.Tab\:\ void\ capture()>=android.permission.GET_ACCOUNTS
<android.content.SyncManager$SyncHandler\:\ void\ runBoundToSyncAdapter(android.content.SyncManager$ActiveSyncContext,android.content.ISyncAdapter)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothA2dp$Stub$Proxy\:\ boolean\ suspendSink(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy\:\ java.lang.String\ getIccSerialNumber()>=android.permission.READ_PHONE_STATE
<android.bluetooth.BluetoothA2dp\:\ boolean\ isEnabled()>=android.permission.BLUETOOTH
<android.widget.VideoView$6\:\ void\ surfaceCreated(android.view.SurfaceHolder)>=android.permission.WAKE_LOCK
<com.android.settings.net.DataUsageMeteredSettings\:\ android.preference.Preference\ buildMobilePref(android.content.Context)>=android.permission.READ_PHONE_STATE
<com.android.calendar.EventInfoFragment$QueryHandler\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.READ_CALENDAR
<android.accounts.ChooseTypeAndAccountActivity\:\ void\ run(android.accounts.AccountManagerFuture)>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.FaceUnlock\:\ void\ handleUnlock()>=android.permission.GET_ACCOUNTS
<com.android.contacts.list.LegacyPostalAddressListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<com.android.server.location.LocationProviderInterface\:\ void\ addListener(int)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ void\ setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>=android.permission.CONNECTIVITY_INTERNAL
<android.bluetooth.IBluetooth$Stub\:\ boolean\ createBond(java.lang.String)>=android.permission.BLUETOOTH
<com.android.nfc.NfcService$ApplyRoutingTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumSetPage$1\:\ boolean\ onTouch(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.PhoneUtils\:\ com.android.phone.PhoneUtils$CallerInfoToken\ startGetCallerInfo(android.content.Context,com.android.internal.telephony.Call,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>=android.permission.WRITE_CONTACTS
<com.android.server.VibratorService\:\ void\ systemReady()>=android.permission.WAKE_LOCK
<com.android.mms.ui.ManageSimMessages\:\ void\ deleteAllFromSim()>=android.permission.RECEIVE_SMS
<com.android.email.activity.MessageViewFragmentBase\:\ void\ updateAttachmentTab()>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.BluetoothHeadsetService$6\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.vpndialogs.ConfirmDialog\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.webkit.HTML5VideoFullScreen$1\:\ void\ surfaceCreated(android.view.SurfaceHolder)>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ boolean\ disconnectHeadset(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ boolean\ isTetheringSupported()>=android.permission.ACCESS_NETWORK_STATE
<android.speech.SpeechRecognizer\:\ void\ handleStartListening(android.content.Intent)>=android.permission.RECORD_AUDIO
<com.android.inputmethod.pinyin.SoftKeyboardView\:\ com.android.inputmethod.pinyin.SoftKey\ onKeyMove(int,int)>=android.permission.VIBRATE
<android.server.BluetoothService\:\ java.util.List\ getInputDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.server.backup.BackupManagerService$ActiveRestoreSession\:\ int\ restoreAll(long,android.app.backup.IRestoreObserver)>=android.permission.BACKUP
<android.webkit.WebSettingsClassic\:\ void\ <init>=android.permission.INTERNET
<com.android.providers.calendar.CalendarProvider2\:\ void\ modifyCalendarSubscription(long,boolean)>=android.permission.READ_CALENDAR
<com.android.internal.telephony.RIL\:\ void\ requestIsimAuthentication(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ boolean\ requestRouteToHostAddress(int,java.net.InetAddress)>=android.permission.CHANGE_NETWORK_STATE
<com.android.internal.telephony.gsm.GsmDataConnection\:\ void\ access$1800(com.android.internal.telephony.DataConnection,java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ android.app.ActivityManager$TaskThumbnail\ getTaskThumbnail(int)>=android.permission.BROADCAST_STICKY, android.permission.READ_FRAME_BUFFER
<com.android.internal.telephony.UiccPhoneBookController\:\ boolean\ updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.server.WiredAccessoryObserver$BootCompletedReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.app.IActivityManager\:\ void\ wakingUp()>=android.permission.WAKE_LOCK
<com.android.settings.RadioInfo\:\ void\ refreshSmsc()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.BitmapSource\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactEntryListFragment\:\ boolean\ isSyncActive()>=android.permission.READ_SYNC_STATS
<com.android.phone.BluetoothHandsfree$21\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ void\ sendConnectedBroadcast(android.net.NetworkInfo)>=android.permission.BROADCAST_STICKY
<android.bluetooth.BluetoothDevice\:\ int\ getServiceChannel(android.os.ParcelUuid)>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ changeIccPinForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker\:\ void\ setCurrentState(android.content.Context,int)>=android.permission.READ_SYNC_SETTINGS
<android.location.LocationManager\:\ void\ removeUpdates(android.location.LocationListener)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.internal.telephony.ISms$Stub\:\ boolean\ updateMessageOnIccEf(int,int,byte[])>=android.permission.WAKE_LOCK
<com.android.nfc.nxp.NativeNfcManager\:\ void\ notifyLlcpLinkDeactivated(com.android.nfc.nxp.NativeP2pDevice)>=android.permission.BLUETOOTH
<com.android.bluetooth.pbap.BluetoothPbapService\:\ void\ access$500(com.android.bluetooth.pbap.BluetoothPbapService)>=android.permission.READ_CALL_LOG
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ restoreSelectedUri(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.event.EditEventFragment$2\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.READ_CALENDAR
<android.net.wifi.IWifiManager$Stub$Proxy\:\ boolean\ acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub\:\ int\ getRemoteClass(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ getDeviceIdentity(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.group.GroupDetailFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.AccessibilityEnableScriptInjectionPreference\:\ void\ onDialogClosed(boolean)>=android.permission.WRITE_SETTINGS
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.Controller\:\ boolean\ onContextItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<android.nfc.INfcAdapterExtras$Stub$Proxy\:\ void\ setCardEmulationRoute(java.lang.String,int)>=android.permission.NFC
<com.android.settings.AirplaneModeEnabler\:\ void\ setAirplaneModeOn(boolean)>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$StorageSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<android.preference.VolumePreference$SeekBarVolumizer\:\ void\ changeVolumeBy(int)>=android.permission.WAKE_LOCK
<com.android.systemui.recent.RecentsCallback\:\ void\ handleOnClick(android.view.View)>=android.permission.REORDER_TASKS
<android.filterpacks.imageproc.Invert\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.vpn2.VpnSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.settings.Settings$ManageAccountsSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.ui.PhotoView$MyGestureListener\:\ boolean\ onSingleTapUp(float,float)>=android.permission.VIBRATE
<com.android.launcher2.Launcher\:\ void\ setupViews()>=android.permission.SET_WALLPAPER_HINTS
<com.android.exchange.adapter.CalendarSyncAdapter\:\ void\ <init>=android.permission.READ_CALENDAR
<com.android.browser.BrowserWebViewFactory\:\ android.webkit.WebView\ createSubWebView(boolean)>=android.permission.INTERNET
<android.filterpacks.imageproc.SaturateFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneBase\:\ void\ notifyDataConnection(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.systemui.statusbar.phone.CloseDragHandle\:\ boolean\ onInterceptTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.contacts.list.LegacyContactListAdapter\:\ void\ bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.base.CallbackFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.AccessibilityEnableScriptInjectionPreference\:\ void\ setSystemSetting(boolean)>=android.permission.WRITE_SETTINGS
<com.android.emailcommon.service.IEmailServiceCallback$Stub\:\ void\ syncMailboxListStatus(long,int,int)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothAdapterStateMachine$BluetoothOn\:\ void\ exit()>=android.permission.BLUETOOTH
<android.net.IConnectivityManager$Stub$Proxy\:\ int\ tether(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.accounts.ManageAccountsSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ hangup()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccSmsInterfaceManager\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$DisplaySettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.mms.data.Conversation\:\ void\ blockingMarkAllSmsMessagesAsSeen(android.content.Context)>=android.permission.RECEIVE_SMS
<com.android.exchange.EasSyncService\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wifi.WifiServiceImpl\:\ void\ reconnect()>=android.permission.CHANGE_WIFI_STATE
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ void\ refresh()>=android.permission.BLUETOOTH
<com.android.internal.telephony.IccCard\:\ void\ access$100(com.android.internal.telephony.IccCard)>=android.permission.WAKE_LOCK
<android.nfc.INfcAdapter$Stub\:\ void\ setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>=android.permission.NFC
<com.android.providers.contacts.CallLogProvider\:\ void\ checkVoicemailPermissionAndAddRestriction(android.net.Uri,com.android.providers.contacts.util.SelectionBuilder)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.contacts.editor.ContactEditorFragment$1\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getPasswordMinimumLength(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ stopOneTouchRecord(int)>=android.permission.HDMI_CEC
<com.android.server.ThrottleService$MyHandler\:\ void\ checkThrottleAndPostNotification(long)>=android.permission.BROADCAST_STICKY
<android.net.nsd.NsdManager\:\ android.os.Messenger\ getMessenger()>=android.permission.INTERNET
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ queryAvailableBandMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.browser.homepages.HomeProvider\:\ android.os.ParcelFileDescriptor\ openFile(android.net.Uri,java.lang.String)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.settings.wifi.WifiSettings\:\ void\ resumeWifiScan()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.cdma.CDMAPhone\:\ boolean\ handlePinMmi(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.calendar.CalendarController$1\:\ void\ run()>=android.permission.READ_CALENDAR
<com.android.gallery3d.app.PickerActivity\:\ void\ onBackPressed()>=android.permission.RECORD_AUDIO
<com.android.phone.DataUsageListener$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ startDelayedRetry(com.android.internal.telephony.DataConnection$FailCause,com.android.internal.telephony.ApnContext,int)>=android.permission.WAKE_LOCK
<android.server.BluetoothHealthProfileHandler\:\ boolean\ unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.exchange.ExchangeService$2\:\ void\ updateFolderList(long)>=android.permission.READ_SYNC_SETTINGS
<android.content.IContentService\:\ boolean\ isSyncPending(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.email.Controller$15$1\:\ void\ call(com.android.emailcommon.service.IEmailServiceCallback)>=android.permission.READ_SYNC_SETTINGS
<android.net.IConnectivityManager$Stub$Proxy\:\ void\ startLegacyVpn(com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>=android.permission.BROADCAST_STICKY
<android.location.ILocationManager\:\ void\ addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.server.dreams.DreamManagerService$BinderService\:\ android.content.ComponentName\ getDefaultDreamComponent()>=android.permission.READ_DREAM_STATE
<android.filterpacks.imageproc.CropFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.gsm.SIMFileHandler\:\ void\ getEFLinearRecordSize(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.service.dreams.IDreamManager\:\ void\ setDreamComponent(android.content.ComponentName)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.ServiceStateTracker\:\ void\ disableSingleLocationUpdate()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CallManager\:\ void\ acceptCall(com.android.internal.telephony.Call)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$12\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.server.ThrottleService$MyHandler\:\ void\ clearThrottleAndNotification()>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ notifyOffApnsOfAvailability(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.cat.IconLoader\:\ void\ readId()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneProxy\:\ void\ getPreferredNetworkType(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.OutgoingCallBroadcaster\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.SlotView$MyGestureListener\:\ void\ onLongPress(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.contacts.detail.PhotoSelectionHandler\:\ boolean\ handlePhotoActivityResult(int,int,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<android.test.IsolatedContext$MockAccountManager\:\ java.lang.String\ peekAuthToken(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.server.VibratorService\:\ void\ doVibratorOn(long)>=android.permission.WAKE_LOCK
<com.google.common.io.CharStreams\:\ long\ copy(com.google.common.io.InputSupplier,com.google.common.io.OutputSupplier)>=android.permission.INTERNET
<com.android.calendar.DayView$CalendarGestureListener\:\ boolean\ onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>=android.permission.READ_CALENDAR
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.net.sip.ISipService$Stub\:\ android.net.sip.SipProfile[]\ getListOfProfiles()>=android.permission.USE_SIP
<android.bluetooth.IBluetooth$Stub\:\ int\ getInputDeviceConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneProxy\:\ void\ invokeOemRilRequestRaw(byte[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerOnePane\:\ void\ onAccountSelected(long)>=android.permission.ACCESS_NETWORK_STATE
<android.webkit.HTML5VideoView\:\ void\ pause()>=android.permission.WAKE_LOCK
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask\:\ com.android.contacts.model.EntityDeltaList\ doInBackground(android.content.Intent[])>=android.permission.WRITE_CONTACTS
<com.android.emailcommon.service.EmailServiceProxy$10\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<android.test.mock.MockApplication\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.voicedialer.VoiceDialerActivity\:\ void\ acquireWakeLock(android.content.Context)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.MenuExecutor\:\ void\ onMenuClicked(int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)>=android.permission.VIBRATE
<com.android.settings.accounts.AccountPreferenceBase\:\ void\ onPrepareOptionsMenu(android.view.Menu)>=android.permission.READ_SYNC_STATS
<com.android.contacts.list.LegacyPostalAddressListAdapter\:\ android.net.Uri\ getContactMethodUri(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.emailcommon.service.IEmailService\:\ void\ startSync(long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.location.LocationProviderInterface\:\ void\ disable()>=android.permission.WAKE_LOCK
<com.android.mms.ui.ManageSimMessages\:\ void\ access$500(com.android.mms.ui.ManageSimMessages,android.database.Cursor)>=android.permission.RECEIVE_SMS
<com.android.development.Connectivity\:\ void\ access$2100(com.android.development.Connectivity)>=android.permission.CHANGE_NETWORK_STATE
<com.android.browser.XLargeUi\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.settings.wifi.WpsDialog\:\ void\ onCreate(android.os.Bundle)>=android.permission.ACCESS_WIFI_STATE
<com.android.server.InputMethodManagerService$MyPackageMonitor\:\ void\ onSomePackagesChanged()>=android.permission.WRITE_SETTINGS
<com.android.server.WifiService\:\ void\ persistWifiState(int)>=android.permission.WRITE_SETTINGS
<android.nfc.tech.MifareClassic\:\ byte[]\ transceive(byte[],boolean)>=android.permission.NFC
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onDataStateChanged(android.os.AsyncResult)>=android.permission.BROADCAST_STICKY
<android.speech.RecognitionService\:\ boolean\ access$700(android.speech.RecognitionService,android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<com.android.contacts.activities.ShowOrCreateActivity\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onDisconnectDone(int,android.os.AsyncResult)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine$DisconnectingState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.app.NativeActivity\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<android.filterpacks.imageproc.LomoishFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.accounts.IAccountManager$Stub\:\ void\ editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>=android.permission.MANAGE_ACCOUNTS
<android.content.IContentService$Stub\:\ boolean\ isSyncPending(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<android.content.SyncManager$ActiveSyncContext\:\ void\ binderDied()>=android.permission.WAKE_LOCK
<com.android.contacts.activities.PeopleActivity\:\ void\ access$700(com.android.contacts.activities.PeopleActivity,android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy\:\ java.lang.String\ getLine1AlphaTag()>=android.permission.READ_PHONE_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ handleRadioAvailable()>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.tablet.TabletStatusBar\:\ void\ updateSearchPanel()>=android.permission.VIBRATE
<com.android.phone.InCallScreen\:\ void\ updateInCallTouchUi()>=android.permission.BLUETOOTH
<com.android.browser.search.OpenSearchSearchEngine\:\ android.net.NetworkInfo\ getActiveNetworkInfo(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.wifi.WifiServiceImpl\:\ android.net.wifi.WifiActivityEnergyInfo\ reportActivityInfo()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ switchHoldingAndActive()>=android.permission.WAKE_LOCK
<com.android.exchange.EasSyncService\:\ com.android.exchange.EasResponse\ executePostWithTimeout(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,int)>=android.permission.WAKE_LOCK
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ setDiscoverableTimeout(int)>=android.permission.BLUETOOTH
<android.net.wifi.WifiManager\:\ boolean\ isTdlsSupported()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.policy.impl.FaceUnlock\:\ void\ handlePokeWakelock(int)>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ void\ showMySoftInput(android.os.IBinder,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.net.NetworkPolicyManagerService$5\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.READ_PHONE_STATE
<com.android.gallery3d.app.Gallery\:\ void\ onPause()>=android.permission.RECORD_AUDIO
<com.android.quicksearchbox.util.HttpHelper\:\ java.lang.String\ get(com.android.quicksearchbox.util.HttpHelper$GetRequest)>=android.permission.INTERNET
<com.android.gallery3d.ui.GLView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.LomoishFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ setupDataOnReadyApns(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.server.am.ActivityManagerService\:\ void\ finishBooting()>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ void\ setAdditionalInputMethodSubtypes(java.lang.String,[android.view.inputmethod.InputMethodSubtype)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.browser.TabControl\:\ void\ saveState(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.IccCard\:\ void\ broadcastIccStateChangedIntent(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.mms.transaction.NotificationTransaction\:\ void\ ensureRouteToHost(java.lang.String,com.android.mms.transaction.TransactionSettings)>=android.permission.CHANGE_NETWORK_STATE
<android.app.ListActivity\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.ITelephony$Stub$Proxy\:\ java.util.List\ getNeighboringCellInfo()>=android.permission.ACCESS_COARSE_LOCATION
<android.bluetooth.BluetoothDevice\:\ boolean\ setPairingConfirmation(boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary\:\ void\ <init>=android.permission.WRITE_CONTACTS
<android.speech.RecognitionService$RecognitionServiceBinder\:\ void\ stopListening(android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<com.android.server.TelephonyRegistry\:\ void\ broadcastSignalStrengthChanged(android.telephony.SignalStrength)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy\:\ java.lang.String\ getDeviceId()>=android.permission.READ_PHONE_STATE
<android.net.wifi.IWifiManager\:\ boolean\ releaseWifiLock(android.os.IBinder)>=android.permission.WAKE_LOCK
<com.android.mms.data.Contact\:\ java.util.List\ getByPhoneUris(android.os.Parcelable[])>=android.permission.WRITE_CONTACTS
<android.nfc.INfcTag$Stub\:\ int[]\ getTechList(int)>=android.permission.NFC
<com.android.systemui.usb.UsbStorageActivity\:\ void\ checkStorageUsersAsync()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.phone.BluetoothHandsfree$12\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.bluetooth.pbapclient.PbapClientService$BluetoothPbapClientBinder\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ access$5000(com.android.mms.ui.ComposeMessageActivity)>=android.permission.WRITE_SMS
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getLine1Number(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiScanStarted(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onVoiceCallEnded()>=android.permission.BROADCAST_STICKY
<android.accounts.AccountManager\:\ void\ clearPassword(android.accounts.Account)>=android.permission.MANAGE_ACCOUNTS
<com.android.gallery3d.app.AlbumPage$2\:\ boolean\ onTouch(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<android.media.Ringtone\:\ void\ setUri(android.net.Uri)>=android.permission.WAKE_LOCK
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ boolean\ disableWBS()>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<android.app.ContextImpl$ApplicationContentResolver\:\ boolean\ getSyncAutomatically(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ int\ getLteOnCdmaMode(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.mms.util.Recycler$MmsRecycler\:\ android.database.Cursor\ getAllThreads(android.content.Context)>=android.permission.READ_SMS
<com.android.inputmethod.latin.suggestions.SuggestionsView$Listener\:\ void\ pickSuggestionManually(int,java.lang.CharSequence,int,int)>=android.permission.WRITE_CONTACTS
<com.android.phone.PhoneInterfaceManager\:\ android.telephony.VisualVoicemailSmsFilterSettings\ getSystemVisualVoicemailSmsFilterSettings(java.lang.String,int)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.internal.policy.impl.GlobalActions$2\:\ void\ onPress()>=android.permission.WAKE_LOCK
<android.os.storage.IMountService$Stub\:\ void\ finishMediaUpdate()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<android.view.IWindowManager$Stub\:\ void\ disableKeyguard(android.os.IBinder,java.lang.String)>=android.permission.DISABLE_KEYGUARD
<com.android.phone.OtaUtils\:\ void\ onClickOtaTryAgainButton()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.AlbumPage\:\ void\ clearLoadingBit(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ <init>=android.permission.WRITE_SETTINGS
<android.telephony.TelephonyManager\:\ java.util.List\ getAllCellInfo()>=android.permission.ACCESS_FINE_LOCATION
<android.filterpacks.imageproc.BitmapSource\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setPasswordMinimumSymbols(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.IccCard\:\ void\ changeIccFdnPassword(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.nfc.tech.MifareUltralight\:\ void\ setTimeout(int)>=android.permission.NFC
<android.filterpacks.imageproc.StraightenFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.calendar.AllInOneActivity\:\ void\ updateSecondaryTitleFields(long)>=android.permission.READ_CALENDAR
<com.android.bluetooth.a2dpsink.A2dpSinkService$BluetoothA2dpSinkBinder\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.mms.transaction.Transaction\:\ void\ process()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.ToRGBAFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.nfc.INfcAdapterExtras$Stub\:\ void\ setCardEmulationRoute(java.lang.String,int)>=android.permission.NFC
<android.view.IWindowSession$Stub$Proxy\:\ boolean\ performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DockService\:\ void\ handleBluetoothStateOn(int)>=android.permission.BLUETOOTH
<com.android.server.WifiService\:\ android.net.wifi.WifiConfiguration\ getWifiApConfiguration()>=android.permission.ACCESS_WIFI_STATE
<com.android.calendar.EventInfoFragment\:\ void\ access$100(com.android.calendar.EventInfoFragment,android.view.View)>=android.permission.READ_CALENDAR
<com.android.settings.deviceinfo.UsbSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<android.location.LocationManager\:\ void\ removeTestProvider(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.settings.inputmethod.SpellCheckersSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.ToPackedGrayFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.tv.TvInputManagerService$BinderService\:\ android.os.ParcelFileDescriptor\ openDvbDevice(android.media.tv.DvbDeviceInfo,int)>=android.permission.DVB_DEVICE
<com.android.internal.policy.impl.PhoneWindowManager\:\ long\ interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub$Proxy\:\ android.net.NetworkInfo[]\ getAllNetworkInfo()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ boolean\ findAccessibilityNodeInfoByAccessibilityId(int,long,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,long)>=android.permission.INTERACT_ACROSS_USERS
<com.android.contacts.vcard.SelectAccountActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cat.CatService\:\ void\ sendTerminalResponse(com.android.internal.telephony.cat.CommandDetails,com.android.internal.telephony.cat.ResultCode,boolean,int,com.android.internal.telephony.cat.ResponseData)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$WirelessSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.IPhoneSubInfo$Stub\:\ java.lang.String\ getVoiceMailNumber()>=android.permission.READ_PHONE_STATE
<android.server.BluetoothService\:\ boolean\ startDiscovery()>=android.permission.BLUETOOTH_ADMIN
<android.net.IConnectivityManager$Stub\:\ boolean\ setRadio(int,boolean)>=android.permission.CHANGE_NETWORK_STATE
<android.server.BluetoothEventLoop\:\ void\ onInputDevicePropertyChanged(java.lang.String,java.lang.String[])>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.PhotoView\:\ void\ pause()>=android.permission.VIBRATE
<com.android.gallery3d.ui.UndoBarView\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ void\ retrieveSettings()>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ boolean\ supplyPin(java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<android.service.dreams.DreamService\:\ boolean\ dispatchGenericMotionEvent(android.view.MotionEvent)>=android.permission.BROADCAST_STICKY
<com.android.contacts.detail.PhotoSelectionHandler\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.sip.SipPhone\:\ void\ queryCdmaRoamingPreference(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.widget.PasswordEntryKeyboardHelper\:\ void\ handleModeChange()>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiScanStartedFromSource(android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS
<com.android.bluetooth.opp.BluetoothOppBtErrorActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ reboot(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.filterpacks.videoproc.BackDropperFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.input.InputManagerService\:\ void\ registerTabletModeChangedListener(android.hardware.input.ITabletModeChangedListener)>=android.permission.TABLET_MODE
<com.android.calendar.alerts.QuickResponseActivity\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_CALENDAR
<com.android.settings.Settings$StorageUseActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<android.net.wifi.IWifiManager\:\ android.net.DhcpInfo\ getDhcpInfo()>=android.permission.ACCESS_WIFI_STATE
<com.android.camera.ActivityBase\:\ void\ onPause()>=android.permission.RECORD_AUDIO
<com.android.providers.downloads.StorageManager\:\ void\ trimDatabase()>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setActiveAdmin(android.content.ComponentName,boolean,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_DEVICE_ADMINS
<com.android.music.MediaPlaybackService\:\ void\ stop(boolean)>=android.permission.WAKE_LOCK
<android.server.BluetoothA2dpService\:\ boolean\ checkSinkSuspendState(int)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.email.activity.MessageOrderManager$LoadMessageListTask\:\ void\ onSuccess(android.database.Cursor)>=android.permission.ACCESS_NETWORK_STATE
<android.nfc.tech.NfcB\:\ void\ connect()>=android.permission.NFC
<com.android.server.TelephonyRegistry\:\ void\ notifyPreciseDataConnectionFailed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.calendar.month.MonthByWeekAdapter\:\ void\ setEvents(int,int,java.util.ArrayList)>=android.permission.READ_CALENDAR
<com.android.music.MediaPlaybackActivity$7\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.server.usb.UsbSettingsManager$MyPackageMonitor\:\ void\ onSomePackagesChanged()>=android.permission.WRITE_SETTINGS
<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub\:\ android.content.ComponentName\ getActiveServiceComponentName()>=android.permission.ACCESS_VOICE_INTERACTION_SERVICE
<com.android.internal.widget.PasswordEntryKeyboardView\:\ void\ showPreview(int)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.internal.telephony.ITelephony$Stub$Proxy\:\ void\ call(java.lang.String)>=android.permission.CALL_PHONE
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatedState\:\ void\ exit()>=android.permission.BROADCAST_STICKY
<android.net.wifi.WifiManager\:\ android.net.wifi.WifiConfiguration\ getWifiApConfiguration()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallback\:\ void\ onUserChanged(int)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.cat.CatService\:\ void\ handleCmdResponse(com.android.internal.telephony.cat.CatResponseMessage)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ access$000(com.android.internal.telephony.cdma.CdmaConnection)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ProviderStatusWatcher$2\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ boolean\ requestBandwidthUpdate(android.net.Network)>=android.permission.ACCESS_NETWORK_STATE
<com.android.providers.contacts.VoicemailContentTable\:\ android.net.Uri\ insert(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.mms.data.Conversation\:\ void\ markAsRead()>=android.permission.WRITE_SMS
<com.android.server.AppOpsService\:\ void\ setMode(int,int,java.lang.String,int)>=android.permission.UPDATE_APP_OPS_STATS
<android.provider.Settings$System\:\ boolean\ putLong(android.content.ContentResolver,java.lang.String,long)>=android.permission.WRITE_SETTINGS
<android.accounts.AccountManager\:\ android.accounts.AccountManagerFuture\ getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.phone.BluetoothHandsfree\:\ void\ access$6100(com.android.phone.BluetoothHandsfree)>=android.permission.WAKE_LOCK
<com.android.server.media.projection.MediaProjectionManagerService$BinderService\:\ void\ addCallback(android.media.projection.IMediaProjectionWatcherCallback)>=android.permission.MANAGE_MEDIA_PROJECTION
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ sendKeyEvent(int,int,boolean)>=android.permission.HDMI_CEC
<android.telephony.SmsManager\:\ boolean\ enableCellBroadcast(int)>=android.permission.RECEIVE_SMS
<com.android.exchange.EasSyncService\:\ void\ sendMeetingResponse(com.android.exchange.MeetingResponseRequest)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ boolean\ _isProviderEnabledLocked(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.app.AlbumPicker\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<android.net.nsd.NsdManager\:\ void\ init()>=android.permission.INTERNET
<android.bluetooth.IBluetooth$Stub\:\ byte[]\ readOutOfBandData()>=android.permission.BLUETOOTH
<com.android.providers.telephony.MmsSmsProvider\:\ int\ update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>=android.permission.WRITE_SMS
<com.android.email.activity.ActionBarController$Callback\:\ void\ onAccountSelected(long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.net.NetworkStatsService\:\ void\ advisePersistThreshold(long)>=android.permission.MODIFY_NETWORK_ACCOUNTING
<com.android.internal.telephony.RIL\:\ void\ setRadioPower(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<android.view.WindowManagerPolicy\:\ void\ systemReady()>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ sendEnvelopeWithStatus(int,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.usb.UsbService\:\ void\ setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)>=android.permission.MANAGE_USB
<android.accounts.IAccountManager\:\ java.lang.String\ peekAuthToken(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment\:\ void\ bindEditorsForExistingContact(com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.FillLightFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothHeadset$Stub\:\ boolean\ disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.AlbumSetPage$4\:\ boolean\ onActionItemClicked(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.base.FrameBranch\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.os.RuntimeInit$UncaughtHandler\:\ void\ uncaughtException(java.lang.Thread,java.lang.Throwable)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth\:\ boolean\ disconnectInputDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.nfc.handover.HandoverManager$HandoverTransfer\:\ void\ processFiles()>=android.permission.VIBRATE
<android.net.IThrottleManager$Stub$Proxy\:\ int\ getCliffLevel(java.lang.String,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.ExpandableDictionary\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<com.android.contacts.editor.EventFieldEditorView$2\:\ void\ onDateSet(com.android.contacts.datepicker.DatePicker,int,int,int)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.PosterizeFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.MessagingNotification$3\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SMS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ setUidPolicy(int,int)>=android.permission.MANAGE_NETWORK_POLICY
<android.app.ActivityGroup\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<android.media.effect.effects.GrainEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.PhotoView\:\ void\ captureAnimationDone(int)>=android.permission.VIBRATE
<com.android.inputmethod.latin.UserBinaryDictionary\:\ void\ loadDictionaryAsync()>=android.permission.READ_USER_DICTIONARY
<android.net.DhcpStateMachine$DefaultState\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ refresh()>=android.permission.BLUETOOTH
<com.android.systemui.statusbar.tablet.SettingsView\:\ void\ onClick(android.view.View)>=android.permission.EXPAND_STATUS_BAR
<com.android.phone.ContactsAsyncHelper$OnImageLoadCompleteListener\:\ void\ onImageLoadComplete(int,android.graphics.drawable.Drawable,android.graphics.Bitmap,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary\:\ boolean\ isValidWord(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.server.ethernet.EthernetServiceImpl\:\ void\ addListener(android.net.IEthernetServiceListener)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.DrawRectFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.PhotoView$Model\:\ void\ moveTo(int)>=android.permission.VIBRATE
<com.android.inputmethod.latin.WhitelistDictionary\:\ void\ startDictionaryLoadingTaskLocked()>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.ui.MenuExecutor$MediaOperation\:\ java.lang.Object\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.DreamSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.server.BluetoothEventLoop\:\ void\ sendDisplayPinIntent(java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.settings.RadioInfo\:\ void\ onCreate(android.os.Bundle)>=android.permission.WAKE_LOCK
<com.android.launcher2.Workspace$1\:\ void\ run()>=android.permission.SET_WALLPAPER_HINTS
<com.android.settings.Settings$CryptKeeperSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.UsimPhoneBookManager\:\ java.util.ArrayList\ loadEfFilesFromUsim()>=android.permission.WAKE_LOCK
<android.content.IContentService$Stub\:\ boolean\ getSyncAutomatically(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.contacts.LegacyApiSupport\:\ void\ updateLegacyPhotoData(long,long,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.LogTag$1\:\ void\ run()>=android.permission.RECEIVE_SMS
<android.os.SystemVibrator\:\ void\ vibrate(long)>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ boolean\ enable(boolean,boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.settings.DataUsageSummary\:\ void\ access$2800(com.android.settings.DataUsageSummary,boolean)>=android.permission.WRITE_SETTINGS
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler\:\ void\ access$000(com.android.settings.bluetooth.BluetoothDiscoverableEnabler)>=android.permission.BLUETOOTH
<com.android.internal.widget.multiwaveview.GlowPadView\:\ void\ handleMove(android.view.MotionEvent)>=android.permission.BLUETOOTH
<com.android.internal.os.RuntimeInit\:\ void\ wtf(java.lang.String,java.lang.Throwable)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneNotifier\:\ void\ notifySignalStrength(com.android.internal.telephony.Phone)>=android.permission.BROADCAST_STICKY
<com.android.settings.SubSettings\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onVoiceCallStarted()>=android.permission.BROADCAST_STICKY
<com.android.server.statusbar.StatusBarManagerService\:\ void\ clickTile(android.content.ComponentName)>=android.permission.STATUS_BAR
<com.android.internal.telephony.CommandsInterface\:\ void\ invokeOemRilRequestRaw(byte[],android.os.Message)>=android.permission.WAKE_LOCK
<android.media.IRingtonePlayer$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.contacts.ContactLoader\:\ void\ loadStreamItems(com.android.contacts.ContactLoader$Result)>=android.permission.WRITE_CONTACTS
<com.android.server.MountService\:\ java.lang.String\ getPrimaryStorageUuid()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.settings.Settings$SecuritySettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity\:\ boolean\ onSearchRequested()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.model.AccountTypeManagerImpl\:\ java.util.Map\ getUsableInvitableAccountTypes()>=android.permission.WRITE_CONTACTS
<com.android.calendar.alerts.AlertReceiver\:\ android.content.Intent\ createEmailIntent(android.content.Context,long,java.lang.String)>=android.permission.READ_CALENDAR
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ int\ getScanMode()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ cleanUpConnection(boolean,java.lang.String,boolean)>=android.permission.BROADCAST_STICKY
<com.android.server.am.BatteryStatsService\:\ void\ noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.email.activity.UIControllerTwoPane\:\ void\ onBeforeMessageGone()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$AccountSyncSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.providers.downloads.DownloadThread\:\ void\ executeDownload(com.android.providers.downloads.DownloadThread$State,android.net.http.AndroidHttpClient,org.apache.http.client.methods.HttpGet)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.MessageViewFragment\:\ java.io.File\ performAttachmentSave(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.server.am.BatteryStatsService\:\ void\ setBatteryState(int,int,int,int,int,int,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.server.backup.Trampoline\:\ android.content.Intent\ getConfigurationIntent(java.lang.String)>=android.permission.BACKUP
<com.android.contacts.list.CustomContactListFilterActivity\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<android.media.effect.effects.VignetteEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.providers.calendar.CalendarAlarmManager\:\ void\ releaseScheduleNextAlarmWakeLock()>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isProfileActivePasswordSufficientForParent(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.mms.ui.SlideshowEditActivity$SlideListAdapter\:\ android.view.View\ createViewFromResource(int,android.view.View,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ hangupWaitingOrBackground()>=android.permission.WAKE_LOCK
<com.android.exchange.ExchangeService$1$3\:\ void\ call(com.android.emailcommon.service.IEmailServiceCallback)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.vcard.ImportVCardActivity\:\ void\ showFailureNotification(int)>=android.permission.VIBRATE
<com.android.internal.widget.WaveView\:\ void\ vibrate(long)>=android.permission.WAKE_LOCK
<android.app.ContextImpl$ApplicationContentResolver\:\ java.util.List\ getPeriodicSyncs(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.service.AttachmentDownloadService$DownloadSet\:\ void\ endDownload(long,int)>=android.permission.VIBRATE
<com.android.gallery3d.app.AlbumPicker\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.RECORD_AUDIO
<com.android.settings.bluetooth.DockService\:\ boolean\ msgTypeUndockedPermanent(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<com.android.settings.accounts.AccountSyncSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.phone.CallNotifier\:\ void\ showIncomingCall()>=android.permission.WAKE_LOCK
<android.filterpacks.ui.SurfaceRenderFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ setInputChangeListener(android.hardware.hdmi.IHdmiInputChangeListener)>=android.permission.HDMI_CEC
<com.android.internal.telephony.CommandsInterface\:\ void\ getNetworkSelectionMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onActionIntentReconnectAlarm(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.settings.bluetooth.RequestPermissionHelperActivity\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH
<android.net.INetworkPolicyListener$Stub$Proxy\:\ void\ onRestrictBackgroundChanged(boolean)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.ITelephony$Stub\:\ boolean\ disableDataConnectivity()>=android.permission.CHANGE_NETWORK_STATE
<android.view.VolumePanel\:\ void\ onMuteChanged(int,int)>=android.permission.VIBRATE
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ParceledListSlice\ getInstalledPackages(int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.music.MediaPlaybackService\:\ void\ access$400(com.android.music.MediaPlaybackService)>=android.permission.WAKE_LOCK
<com.android.contacts.ContactSaveService\:\ void\ saveContact(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.SearchPanelView\:\ void\ vibrate()>=android.permission.WAKE_LOCK
<com.android.providers.downloads.DownloadService\:\ void\ access$500(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo$Reader,com.android.providers.downloads.DownloadInfo,long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ addNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>=android.permission.VIBRATE
<android.nfc.tech.Ndef\:\ void\ reconnect()>=android.permission.NFC
<com.android.phone.PhoneUtils\:\ boolean\ answerCall(com.android.internal.telephony.Call)>=android.permission.BLUETOOTH
<com.android.contacts.ContactLoader\:\ void\ postViewNotificationToSyncAdapter()>=android.permission.READ_SYNC_SETTINGS
<com.android.music.MediaPlaybackService\:\ void\ enqueue(long[],int)>=android.permission.WAKE_LOCK
<android.webkit.WebViewClassic\:\ void\ clearView()>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.phone.PhoneStatusBar$19\:\ void\ onClick(android.view.View)>=android.permission.VIBRATE
<com.android.phone.BluetoothHeadsetService$6\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhone\:\ void\ notifyDataConnectionFailed(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<android.webkit.GeolocationService\:\ void\ setEnableGps(boolean)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.server.DeviceStorageMonitorService\:\ void\ <init>=android.permission.CLEAR_APP_CACHE
<com.android.internal.telephony.RIL\:\ void\ dial(java.lang.String,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.test.RenamingDelegatingContext\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ showMessageDetails(com.android.mms.ui.MessageItem)>=android.permission.WRITE_SMS
<com.android.music.MediaPlaybackService$ServiceStub\:\ void\ open(long[],int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ com.android.internal.telephony.Connection\ dial(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WRITE_CONTACTS
<com.android.camera.VideoCamera\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageSlicer\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.webkit.WebViewClassic$8\:\ void\ onPostExecute(android.webkit.WebViewCore$DrawData)>=android.permission.WAKE_LOCK
<com.android.mms.ui.MmsThumbnailPresenter\:\ void\ presentImageThumbnail(com.android.mms.ui.SlideViewInterface,com.android.mms.model.ImageModel)>=android.permission.READ_SYNC_SETTINGS
<android.provider.ContactsContract$RawContacts\:\ android.net.Uri\ getContactLookupUri(android.content.ContentResolver,android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.data.ClusterAlbumSet\:\ long\ reload()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub\:\ void\ updateSoundModel(android.hardware.soundtrigger.SoundTrigger$GenericSoundModel)>=android.permission.MANAGE_SOUND_TRIGGER
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setMaximumTimeToLock(android.content.ComponentName,long,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.os.BatteryStatsImpl\:\ void\ setBatteryState(int,int,int,int,int,int)>=android.permission.BLUETOOTH
<com.android.voicedialer.VoiceDialerActivity\:\ int\ access$600(com.android.voicedialer.VoiceDialerActivity,int)>=android.permission.VIBRATE
<com.android.music.IMediaPlaybackService$Stub$Proxy\:\ int\ removeTracks(int,int)>=android.permission.WAKE_LOCK
<com.android.calendar.CalendarUtils$TimeZoneUtils\:\ java.lang.String\ getTimeZone(android.content.Context,java.lang.Runnable)>=android.permission.READ_CALENDAR
<com.android.internal.telephony.sip.SipPhone\:\ void\ setBandMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiScanStoppedFromSource(android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS
<com.android.server.wm.WindowManagerService\:\ void\ setOverscan(int,int,int,int,int)>=android.permission.WRITE_SECURE_SETTINGS
<com.android.gallery3d.util.ThreadPool$Worker\:\ void\ run()>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.OutgoingCallBroadcaster\:\ void\ processIntent(android.content.Intent)>=android.permission.BLUETOOTH
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker\:\ void\ toggleState(android.content.Context)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothAdapter\:\ android.os.ParcelUuid[]\ getUuids()>=android.permission.BLUETOOTH
<com.android.settings.inputmethod.SpellCheckersSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.settings.Settings$PrivacySettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ void\ requestNetworkTransitionWakelock(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService\:\ void\ open(android.net.sip.SipProfile)>=android.permission.USE_SIP
<android.app.ActivityManagerNative\:\ void\ updatePersistentConfiguration(android.content.res.Configuration)>=android.permission.CHANGE_CONFIGURATION
<com.android.email.activity.ActionBarController\:\ void\ refreshInernal()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.editor.ContactEditorFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ queryAvailableBandMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ handleCfuQueryResult(com.android.internal.telephony.CallForwardInfo[])>=android.permission.WAKE_LOCK
<com.android.phone.Use2GOnlyCheckBoxPreference\:\ void\ onClick()>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub\:\ boolean\ isEnabled()>=android.permission.BLUETOOTH
<android.filterfw.core.AsyncRunner$AsyncRunnerTask\:\ void\ onCancelled(android.filterfw.core.AsyncRunner$RunnerResult)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DockService\:\ java.lang.CharSequence[]\ initBtSettings(android.bluetooth.BluetoothDevice,int,boolean)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothDevicePreference\:\ void\ pair()>=android.permission.BLUETOOTH
<com.android.bluetooth.opp.BluetoothOppService\:\ void\ access$700(com.android.bluetooth.opp.BluetoothOppService,javax.obex.ObexTransport)>=android.permission.WAKE_LOCK
<com.android.server.DevicePolicyManagerService$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.ExpandableDictionary\:\ boolean\ reloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.email.activity.MessageFileViewFragment\:\ void\ reloadUiFromMessage(com.android.emailcommon.provider.EmailContent$Message,boolean)>=android.permission.READ_PHONE_STATE
<com.android.settings.LocalePicker\:\ void\ updateLocale(java.util.Locale)>=android.permission.CHANGE_CONFIGURATION
<com.android.gallery3d.app.PhotoDataAdapter$DataListener\:\ void\ onLoadingFinished()>=android.permission.ACCESS_NETWORK_STATE
<android.app.INotificationManager$Stub\:\ void\ enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[])>=android.permission.VIBRATE
<com.android.phone.BluetoothHandsfree$26\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.widget.multiwaveview.GlowPadView$2\:\ void\ onAnimationEnd(android.animation.Animator)>=android.permission.BLUETOOTH
<android.net.wifi.SupplicantStateTracker\:\ void\ sendSupplicantStateChangedBroadcast(android.net.wifi.SupplicantState,boolean)>=android.permission.BROADCAST_STICKY
<android.location.LocationManager\:\ boolean\ registerGnssStatusCallback(android.location.GnssStatus$Callback)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.deskclock.SetAlarm\:\ void\ onTimeSet(android.widget.TimePicker,int,int)>=android.permission.WRITE_SETTINGS
<com.android.browser.UrlHandler\:\ boolean\ handleMenuClick(com.android.browser.Tab,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.settings.inputmethod.UserDictionaryList\:\ java.util.TreeSet\ getUserDictionaryLocalesSet(android.app.Activity)>=android.permission.READ_USER_DICTIONARY
<com.android.email.provider.AccountReconciler\:\ boolean\ accountsNeedReconciling(android.content.Context,java.util.List,android.accounts.Account[])>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.DrawOverlayFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.list.OnContactBrowserActionListener\:\ void\ onInvalidSelection()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.audio.AudioService\:\ void\ disableSafeMediaVolume(java.lang.String)>=android.permission.STATUS_BAR_SERVICE
<com.android.phone.PhoneUtils\:\ int\ placeCall(android.content.Context,com.android.internal.telephony.Phone,java.lang.String,android.net.Uri,boolean,android.net.Uri)>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiSettings\:\ void\ updateAccessPoints()>=android.permission.ACCESS_WIFI_STATE
<com.android.bluetooth.opp.BluetoothOppNotification\:\ void\ access$300(com.android.bluetooth.opp.BluetoothOppNotification)>=android.permission.VIBRATE
<com.android.server.backup.Trampoline\:\ java.lang.String\ getCurrentTransport()>=android.permission.BACKUP
<android.net.IThrottleManager$Stub$Proxy\:\ long\ getCliffThreshold(java.lang.String,int)>=android.permission.ACCESS_NETWORK_STATE
<android.widget.ActivityChooserModel$DataModelPackageMonitor\:\ void\ onPackageRemoved(java.lang.String,int)>=android.permission.WRITE_SETTINGS
<android.filterpacks.base.ObjectSource\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ java.lang.String[]\ listInterfaces()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.phone.BluetoothHandsfree$27\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<android.accounts.AccountManagerService\:\ android.accounts.Account[]\ getAccounts(int)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.CommandsInterface\:\ void\ setSuppServiceNotifications(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.AtCommandHandler\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.phone.CallNotifier\:\ void\ access$100(com.android.phone.CallNotifier,boolean)>=android.permission.VIBRATE
<com.android.server.pm.PackageManagerService\:\ void\ access$3800(com.android.server.pm.PackageManagerService,boolean,boolean)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothDeviceFilter$BondedDeviceFilter\:\ boolean\ matches(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.service.quicksettings.TileService\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<android.webkit.HTML5VideoFullScreen\:\ void\ prepareDataCommon(android.webkit.HTML5VideoViewProxy)>=android.permission.WAKE_LOCK
<com.android.settings.wifi.WifiSettings\:\ int\ getAccessPointsCount()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.am.BatteryStatsService\:\ void\ noteNetworkStatsEnabled()>=android.permission.UPDATE_DEVICE_STATS
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ sendBurstDtmf(java.lang.String,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ sendCDMAFeatureCode(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.util.List\ getActiveAdmins(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.email.RefreshManager\:\ boolean\ refreshMessageList(long,long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isPackageSuspended(android.content.ComponentName,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.DockSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ void\ access$2500(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.ITelephony$Stub$Proxy\:\ android.os.Bundle\ getCellLocation()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.RIL\:\ void\ deleteSmsOnSim(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.EmergencyCallbackModeService$3\:\ void\ onTick(long)>=android.permission.VIBRATE
<com.android.settings.accounts.SyncSettings$1\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ refreshName()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.SlotView\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ setPropertiesByCarrier()>=android.permission.CHANGE_CONFIGURATION
<com.android.phone.CallFeaturesSetting\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WRITE_SETTINGS
<com.android.server.wifi.WifiServiceImpl\:\ boolean\ getEnableAutoJoinWhenAssociated()>=android.permission.ACCESS_WIFI_STATE
<android.filterpacks.base.NullFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.email.provider.DBHelper\:\ void\ createAccountManagerAccount(android.content.Context,java.lang.String,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ void\ setBluetoothEnabled(boolean)>=android.permission.BLUETOOTH
<com.android.systemui.statusbar.tablet.TabletStatusBar\:\ void\ handleNotificationError(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification,java.lang.String)>=android.permission.VIBRATE
<android.nfc.tech.BasicTagTechnology\:\ void\ close()>=android.permission.NFC
<com.android.email.service.MailService\:\ boolean\ hasMismatchInPopImapAccounts(android.content.Context)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ int\ handleAppTransitionReadyLocked()>=android.permission.WAKE_LOCK
<com.android.server.power.PowerManagerService$BinderService\:\ void\ releaseWakeLock(android.os.IBinder,int)>=android.permission.WAKE_LOCK
<com.android.quicksearchbox.util.NamedTask\:\ void\ run()>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ hideSearchPanel()>=android.permission.VIBRATE
<android.content.SyncManager$ActiveSyncContext\:\ void\ onServiceDisconnected(android.content.ComponentName)>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ java.lang.String[]\ getTetherableBluetoothRegexs()>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetoothA2dp$Stub\:\ java.util.List\ getDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.settings.DataUsageSummary\:\ void\ onCreate(android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.InCallScreen$5\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WAKE_LOCK
<com.android.settings.ProxySelector\:\ boolean\ saveToDb()>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.ResizeFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.view.WindowManagerPolicy\:\ void\ init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs,android.os.LocalPowerManager)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.PhoneFallbackEventHandler\:\ boolean\ onKeyUp(int,android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ setCurrentPreferredNetworkType()>=android.permission.WAKE_LOCK
<com.android.contacts.activities.TransactionSafeActivity\:\ void\ onAttachFragment(android.app.Fragment)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.accounts.SyncSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.email.activity.ContactStatusLoader\:\ com.android.email.activity.ContactStatusLoader$Result\ getContactInfo(android.content.Context,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.Utils\:\ void\ setTimeZone(android.content.Context,java.lang.String)>=android.permission.WRITE_CALENDAR
<com.android.server.wallpaper.WallpaperManagerService\:\ void\ setWallpaperComponentChecked(android.content.ComponentName,java.lang.String,int)>=android.permission.SET_WALLPAPER_COMPONENT
<android.media.effect.effects.SharpenEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.server.ConnectivityService\:\ void\ setGlobalProxy(android.net.ProxyInfo)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ removeNotification(android.os.IBinder)>=android.permission.VIBRATE
<com.android.phone.BluetoothAtPhonebook\:\ java.lang.String\ getLastDialledNumber()>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.RIL\:\ void\ getPDPContextList(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteVibratorOff(int)>=android.permission.UPDATE_DEVICE_STATS
<android.view.WindowManagerPolicy$WindowManagerFuncs\:\ void\ rebootSafeMode()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setPreferredNetworkType(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine$ConnectedState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BROADCAST_STICKY
<com.android.email.activity.UIControllerTwoPane\:\ void\ showAccountSpecificWarning(long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.PhoneInterfaceManager\:\ boolean\ isRinging(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.contacts.activities.AttachPhotoActivity$2\:\ void\ onLoadComplete(android.content.Loader,com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.ISms$Stub$Proxy\:\ void\ sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.settings.net.DataUsageMeteredSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.UserHistoryDictionary\:\ void\ startDictionaryLoadingTaskLocked()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.test.SimulatedCommands\:\ void\ <init>=android.permission.WAKE_LOCK
<android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ int\ getScanMode()>=android.permission.BLUETOOTH
<android.speech.tts.TextToSpeech\:\ int\ speak(java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>=android.permission.BROADCAST_STICKY
<android.provider.Telephony$Sms$Sent\:\ android.net.Uri\ addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>=android.permission.RECEIVE_SMS
<com.android.settings.bluetooth.BluetoothEventManager$PairingCancelHandler\:\ void\ onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.AlbumPage$2\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.widget.PasswordEntryKeyboardView\:\ void\ sendAccessibilityEventForUnicodeCharacter(int,int)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.filterpacks.imageproc.ToGrayFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DevicePickerFragment\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.BLUETOOTH
<com.android.phone.SipBroadcastReceiver\:\ void\ takeCall(android.content.Intent)>=android.permission.USE_SIP
<android.filterpacks.videoproc.BackDropperFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.pm.PackageManagerService\:\ void\ setLastChosenActivity(android.content.Intent,java.lang.String,int,android.content.IntentFilter,int,android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.SET_PREFERRED_APPLICATIONS
<com.android.server.NetworkManagementService\:\ void\ setInterfaceIpv6NdOffload(java.lang.String,boolean)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.DefaultPhoneNotifier\:\ void\ notifyDataConnection(com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.Phone$DataState)>=android.permission.BROADCAST_STICKY
<com.android.email.Controller\:\ void\ serviceLogging(int)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ setAndBroadcastNetworkSetTimeZone(java.lang.String)>=android.permission.SET_TIME_ZONE
<com.android.server.am.ActivityManagerService\:\ boolean\ updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$InputMethodAndLanguageSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.CommandsInterface\:\ void\ getAvailableNetworks(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$InputMethodAndSubtypeEnablerActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.phone.InCallScreen\:\ void\ onMMICancel()>=android.permission.BLUETOOTH
<com.android.server.am.ActivityStack\:\ void\ awakeFromSleepingLocked()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothDevicePreference\:\ void\ onBindView(android.view.View)>=android.permission.BLUETOOTH
<com.android.mms.transaction.TransactionService$ServiceHandler\:\ void\ processPendingTransaction(com.android.mms.transaction.Transaction,com.android.mms.transaction.TransactionSettings)>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHandsfree$23\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.gallery3d.app.ControllerOverlay$Listener\:\ void\ onPlayPause()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService$Receiver\:\ void\ decrementPendingBroadcastsLocked()>=android.permission.WAKE_LOCK
<com.android.server.ThrottleService$DataRecorder\:\ void\ <init>=android.permission.READ_PHONE_STATE
<android.filterpacks.imageproc.DrawRectFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.app.Activity\:\ void\ stopLockTask()>=android.permission.BROADCAST_STICKY
<com.android.phone.BluetoothHandsfree$18\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.mms.data.Conversation\:\ void\ startDelete(com.android.mms.data.Conversation$ConversationQueryHandler,int,boolean,long)>=android.permission.WRITE_SMS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ java.util.List\ getConfiguredNetworks()>=android.permission.ACCESS_WIFI_STATE
<com.android.camera.VideoCamera\:\ void\ onPause()>=android.permission.RECORD_AUDIO
<com.android.emailcommon.service.IAccountService$Stub\:\ void\ reconcileAccounts(java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ positionTaskInStack(int,int,int)>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.server.MountService\:\ void\ setPrimaryStorageUuid(java.lang.String,android.content.pm.IPackageMoveObserver)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.gallery3d.ui.CropView$FaceHighlightView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.AccountManager$4\:\ android.accounts.AccountManager$Future2Task\ start()>=android.permission.GET_ACCOUNTS
<android.net.IConnectivityManager$Stub$Proxy\:\ android.net.LinkProperties\ getActiveLinkProperties()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager\:\ boolean\ copyMessageToIccEf(int,byte[],byte[])>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$4\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<android.server.BluetoothAdapterProperties\:\ void\ getAllProperties()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ getCallWaiting(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneBase\:\ void\ notifyDataConnection(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.ITelephony\:\ boolean\ isSimPinEnabled()>=android.permission.READ_PHONE_STATE
<android.filterpacks.imageproc.SaturateFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.net.NetworkStatsService\:\ void\ removeUidLocked(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.providers.userdictionary.DictionaryBackupAgent\:\ void\ onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>=android.permission.WRITE_USER_DICTIONARY
<android.filterpacks.ui.SurfaceTargetFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.calendar.AllInOneActivity\:\ void\ onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>=android.permission.WRITE_CALENDAR
<com.android.wallpaper.RenderScriptWallpaper$RenderScriptEngine\:\ void\ onVisibilityChanged(boolean)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.deviceinfo.Status\:\ void\ setBtStatus()>=android.permission.BLUETOOTH
<android.net.IConnectivityManager$Stub\:\ int\ setUsbTethering(boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothDevice\:\ boolean\ fetchUuidsWithSdp()>=android.permission.BLUETOOTH
<com.android.contacts.calllog.CallLogAdapter\:\ void\ access$100(com.android.contacts.calllog.CallLogAdapter)>=android.permission.READ_SYNC_SETTINGS
<android.view.IWindowManager\:\ void\ disableKeyguard(android.os.IBinder,java.lang.String)>=android.permission.DISABLE_KEYGUARD
<com.android.mms.ui.SlideViewInterface\:\ void\ startAudio()>=android.permission.WAKE_LOCK
<com.android.browser.BrowserActivity\:\ boolean\ onKeyUp(int,android.view.KeyEvent)>=android.permission.GET_ACCOUNTS
<com.android.mms.data.Contact$ContactsCache\:\ void\ access$700(com.android.mms.data.Contact$ContactsCache,com.android.mms.data.Contact)>=android.permission.WRITE_CONTACTS
<com.android.email.SingleRunningTask\:\ void\ run(java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.exchange.provider.ExchangeDirectoryProvider\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.contacts.list.PostalAddressPickerFragment\:\ void\ finish()>=android.permission.READ_SYNC_SETTINGS
<android.nfc.INfcTag\:\ int\ ndefWrite(int,android.nfc.NdefMessage)>=android.permission.NFC
<com.android.contacts.editor.ContactEditorFragment\:\ android.view.View\ onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.location.LocationManager\:\ boolean\ registerGnssStatusCallback(android.location.GnssStatus$Callback,android.os.Handler)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.email.activity.MessageListFragment$MessageOpenTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetooth\:\ android.os.ParcelUuid[]\ getRemoteUuids(java.lang.String)>=android.permission.BLUETOOTH
<android.service.quicksettings.TileService\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.mms.ui.MessageListItem\:\ void\ bindCommonMessage()>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothA2dp$Stub$Proxy\:\ boolean\ allowIncomingConnect(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.exchange.ExchangeService\:\ void\ access$900(com.android.exchange.ExchangeService,long)>=android.permission.WAKE_LOCK
<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask\:\ com.android.emailcommon.mail.MessagingException\ doInBackground(java.lang.Void[])>=android.permission.READ_CALENDAR
<com.android.server.LocationManagerService$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.email.activity.MessageList$1\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ enableSystemAppWithIntent(android.content.ComponentName,android.content.Intent)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.detail.PhotoSelectionHandler\:\ int\ getWritableEntityIndex()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.UIControllerOnePane\:\ void\ onRespondedToInvite(int)>=android.permission.ACCESS_NETWORK_STATE
<android.hardware.ISerialManager$Stub$Proxy\:\ java.lang.String[]\ getSerialPorts()>=android.permission.SERIAL_PORT
<com.android.nfc.handover.HandoverManager$HandoverTransfer\:\ void\ finishTransfer(boolean,android.net.Uri,java.lang.String)>=android.permission.VIBRATE
<com.android.server.sip.SipService\:\ void\ stopPortMappingMeasurement()>=android.permission.WAKE_LOCK
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker\:\ int\ getTriState(android.content.Context)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaDataConnection\:\ void\ tearDownData(java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.vcard.VCardParserImpl_V30\:\ void\ parseOne(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.p2p.IWifiP2pManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.ACCESS_WIFI_STATE
<android.content.SyncManager\:\ void\ access$100(android.content.SyncManager)>=android.permission.WAKE_LOCK
<com.android.browser.DataController$DataControllerHandler\:\ void\ doUpdateHistoryTitle(java.lang.String,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ drawTopPanel(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ stopDtmf()>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.policy.ToggleSlider$Listener\:\ void\ onChanged(com.android.systemui.statusbar.policy.ToggleSlider,boolean,boolean,int)>=android.permission.WRITE_SETTINGS
<android.accounts.IAccountManager\:\ void\ invalidateAuthToken(java.lang.String,java.lang.String)>=android.permission.MANAGE_ACCOUNTS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ setCountryCode(java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ beginServiceDeclaration(int,int,int,int,android.os.ParcelUuid,boolean)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothGatt\:\ boolean\ requestConnectionPriority(int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhone\:\ void\ setCdmaRoamingPreference(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothA2dp$Stub$Proxy\:\ boolean\ resumeSink(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.voicedialer.RecognizerClient\:\ void\ onMicrophoneStart(java.io.InputStream)>=android.permission.VIBRATE
<com.android.calendar.agenda.AgendaWindowAdapter$DayAdapterInfo\:\ void\ <init>=android.permission.READ_CALENDAR
<com.android.internal.telephony.RIL\:\ void\ queryTTYMode(android.os.Message)>=android.permission.WAKE_LOCK
<android.media.effect.SingleFilterEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.gallery3d.data.FilterTypeSet\:\ void\ updateData()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.CommandsInterface\:\ void\ rejectCall(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.BluetoothManagerService\:\ void\ unregisterStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>=android.permission.BLUETOOTH
<android.app.WallpaperManager\:\ void\ setStream(java.io.InputStream)>=android.permission.SET_WALLPAPER
<android.app.IActivityManager\:\ void\ killApplicationWithUid(java.lang.String,int)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub$Proxy\:\ boolean\ enableNetwork(int,boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.providers.contacts.LegacyApiSupport\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$DateTimeSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.internal.telephony.IIccPhoneBook$Stub\:\ boolean\ updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.contacts.dialpad.DialpadFragment\:\ void\ onPressed(android.view.View,boolean)>=android.permission.VIBRATE
<com.android.mms.ui.QuickContactDivot\:\ void\ onClick(android.view.View)>=android.permission.WRITE_CONTACTS
<com.android.phone.InCallScreen\:\ void\ onDisconnect(android.os.AsyncResult)>=android.permission.BLUETOOTH
<com.android.contacts.ContactsUtils\:\ int\ getThumbnailSize(android.content.Context)>=android.permission.WRITE_CONTACTS
<android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl\:\ boolean\ isActiveNetworkMetered(android.net.ConnectivityManager)>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.ui.PhotoView$Listener\:\ void\ onDeleteImage(com.android.gallery3d.data.Path,int)>=android.permission.VIBRATE
<com.android.settings.bluetooth.A2dpProfile\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.emailcommon.provider.Account\:\ boolean\ isAutomaticSyncDisabledByRoaming(android.content.Context,long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.OtaUtils\:\ void\ onClickOtaActivateButton()>=android.permission.BLUETOOTH
<com.android.internal.app.NetInitiatedActivity\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.ISms\:\ void\ sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<java.net.ServerSocket\:\ void\ <init>=android.permission.INTERNET
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ addSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>=android.permission.HDMI_CEC
<com.android.internal.telephony.RIL\:\ void\ setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.connectivity.IpConnectivityMetrics$Impl\:\ int\ logEvent(android.net.ConnectivityMetricsEvent)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ explicitCallTransfer()>=android.permission.WAKE_LOCK
<android.app.WallpaperManager\:\ int\ setStream(java.io.InputStream,android.graphics.Rect,boolean,int)>=android.permission.SET_WALLPAPER
<com.android.contacts.editor.StructuredNameEditorView\:\ void\ switchFromStructuredNameToFullName()>=android.permission.WRITE_CONTACTS
<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub\:\ void\ launchVoiceAssistFromKeyguard()>=android.permission.ACCESS_VOICE_INTERACTION_SERVICE
<com.android.server.am.ActivityManagerService$7\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.content.IContentService$Stub\:\ void\ removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.systemui.usb.StorageNotification\:\ void\ updateUsbMassStorageNotification(boolean)>=android.permission.VIBRATE
<com.android.gallery3d.ui.GLView\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<com.android.vcard.VCardEntry$EmailData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.base.FrameStore\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.calendar.CalendarViewAdapter\:\ void\ refresh(android.content.Context)>=android.permission.READ_CALENDAR
<com.android.mms.ui.SlideView\:\ void\ setAudio(android.net.Uri,java.lang.String,java.util.Map)>=android.permission.WAKE_LOCK
<com.android.nfc.nxp.NativeNfcManager\:\ void\ notifySeMifareAccess(byte[])>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ void\ p2pConnectWithPinDisplay(android.net.wifi.p2p.WifiP2pConfig,boolean)>=android.permission.GET_TASKS
<com.android.commands.svc.Svc\:\ void\ main(java.lang.String[])>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager$Stub\:\ void\ setWifiApConfiguration(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.am.BroadcastQueue\:\ void\ setBroadcastTimeoutLocked(long)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccFileHandler\:\ void\ getEFLinearRecordSize(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.CryptKeeper\:\ void\ onDestroy()>=android.permission.WAKE_LOCK
<com.android.settings.AccessibilitySettings\:\ void\ handleLockScreenRotationPreferenceClick()>=android.permission.WRITE_SETTINGS
<com.android.contacts.editor.SplitContactConfirmationDialogFragment$Listener\:\ void\ onSplitContactConfirmed()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.InputMethodManagerService\:\ void\ setSelectedInputMethodAndSubtypeLocked(android.view.inputmethod.InputMethodInfo,int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.bluetooth.pan.PanService$BluetoothPanBinder\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.editor.StructuredNameEditorView\:\ void\ rebuildStructuredName(com.android.contacts.model.EntityDelta$ValuesDelta)>=android.permission.WRITE_CONTACTS
<com.android.phone.NotificationMgr\:\ void\ updateInCallNotification(boolean)>=android.permission.WRITE_CONTACTS
<com.android.mms.data.Conversation\:\ void\ asyncDeleteObsoleteThreads(android.content.AsyncQueryHandler,int)>=android.permission.WRITE_SMS
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ unpair()>=android.permission.BLUETOOTH
<com.android.contacts.vcard.ImportVCardActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.AccelerometerListener\:\ void\ onSensorEvent(double,double,double)>=android.permission.BLUETOOTH
<com.android.server.wm.WindowManagerService\:\ boolean\ clearWindowContentFrameStats(android.os.IBinder)>=android.permission.FRAME_STATS
<com.android.internal.telephony.DataConnectionTracker\:\ void\ gotoIdleAndNotifyDataConnection(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.development.SyncAdapterDriver\:\ void\ startSyncSelected(android.view.View)>=android.permission.GET_ACCOUNTS
<android.bluetooth.BluetoothGattServer\:\ void\ clearServices()>=android.permission.BLUETOOTH
<com.android.server.am.BatteryStatsService\:\ void\ noteSyncStart(java.lang.String,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.contacts.util.AccountSelectionUtil\:\ android.app.Dialog\ getSelectAccountDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnCancelListener)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.NotificationController\:\ android.graphics.Bitmap\ getSenderPhoto(com.android.emailcommon.provider.EmailContent$Message)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ getSignalStrength(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ removeWindowToken(android.os.IBinder)>=android.permission.MANAGE_APP_TOKENS
<com.android.browser.BrowserSettings\:\ void\ updateConnectionType()>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.DTMFTwelveKeyDialerView\:\ boolean\ dispatchKeyEvent(android.view.KeyEvent)>=android.permission.BLUETOOTH
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat\:\ boolean\ performAction(int,int,android.os.Bundle)>=android.permission.WRITE_CONTACTS
<com.android.server.InputMethodManagerService$MyPackageMonitor\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.server.wifi.WifiServiceImpl\:\ int\ getWifiApEnabledState()>=android.permission.ACCESS_WIFI_STATE
<com.android.browser.BaseUi\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<android.net.sip.ISipService$Stub\:\ void\ close(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.email.service.PolicyService$1\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.VIBRATE
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ access$100(com.android.internal.telephony.cdma.CdmaServiceStateTracker)>=android.permission.SET_TIME_ZONE
<com.android.settings.Settings$DeviceInfoSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.settings.DataUsageSummary\:\ void\ onPrepareOptionsMenu(android.view.Menu)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$DefaultState\:\ void\ enter()>=android.permission.BLUETOOTH
<android.content.pm.IPackageManager$Stub$Proxy\:\ void\ freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>=android.permission.CLEAR_APP_CACHE
<com.android.server.ConnectivityService\:\ void\ pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>=android.permission.ACCESS_NETWORK_STATE, android.permission.ACCESS_WIFI_STATE, android.permission.CONNECTIVITY_INTERNAL
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ disconnectAudio()>=android.permission.BLUETOOTH_ADMIN
<android.location.ILocationManager$Stub$Proxy\:\ void\ clearTestProviderLocation(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.deskclock.Alarms\:\ void\ setNextAlert(android.content.Context)>=android.permission.WRITE_SETTINGS
<android.filterpacks.videosrc.SurfaceTextureSource\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.sip.SipAudioCall\:\ void\ endCall()>=android.permission.WAKE_LOCK
<com.android.music.IMediaPlaybackService\:\ void\ open(long[],int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ setBandMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.SimPukUnlockScreen$TouchInput\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneBase\:\ void\ setCdmaSubscription(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.media.IAudioService\:\ void\ stopBluetoothSco(android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.server.sip.SipService$AutoRegistrationProcess\:\ void\ onRegistrationDone(android.net.sip.ISipSession,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ proceedAfterWaitChar()>=android.permission.WAKE_LOCK
<com.android.browser.ActivityController\:\ boolean\ onKeyUp(int,android.view.KeyEvent)>=android.permission.GET_ACCOUNTS
<com.android.mms.transaction.Transaction\:\ byte[]\ sendPdu(long,byte[])>=android.permission.CHANGE_NETWORK_STATE
<com.android.commands.bmgr.Bmgr\:\ void\ doEnable()>=android.permission.WRITE_SETTINGS
<com.android.server.net.NetworkPolicyManagerService\:\ I[]\ getRestrictBackgroundWhitelistedUids()>=android.permission.MANAGE_NETWORK_POLICY
<android.os.Vibrator\:\ void\ vibrate(long)>=android.permission.WAKE_LOCK
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1\:\ boolean\ onCustomRequest(int)>=android.permission.WRITE_CONTACTS
<com.android.internal.policy.impl.PatternUnlockScreen\:\ void\ onResume()>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ boolean\ access$2900(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.settings.DataUsageSummary$ConfirmAutoSyncChangeFragment$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.server.input.InputManagerService\:\ void\ deliverInputDevicesChanged(android.view.InputDevice[])>=android.permission.VIBRATE
<com.android.browser.UrlInputView\:\ void\ finishInput(java.lang.String,java.lang.String,java.lang.String)>=android.permission.GET_ACCOUNTS
<android.hardware.location.ContextHubService\:\ android.hardware.location.ContextHubInfo\ getContextHubInfo(int)>=android.permission.LOCATION_HARDWARE
<com.android.email.activity.MessageViewFragmentBase$ControllerResults\:\ void\ serviceCheckMailCallback(com.android.emailcommon.mail.MessagingException,long,long,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.ReadRecTransaction\:\ void\ ensureRouteToHost(java.lang.String,com.android.mms.transaction.TransactionSettings)>=android.permission.CHANGE_NETWORK_STATE
<com.android.contacts.dialpad.DialpadFragment\:\ void\ dialButtonPressed()>=android.permission.READ_PHONE_STATE
<com.android.phone.CarrierConfigLoader\:\ void\ notifyConfigChangedForSubId(int)>=android.permission.MODIFY_PHONE_STATE
<com.android.email.activity.MessageViewFragment\:\ void\ updateAttachmentTab()>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.SearchActivity\:\ void\ handleIntent(android.content.Intent)>=android.permission.WRITE_CALENDAR
<com.android.server.am.ActivityManagerService\:\ void\ startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,boolean,int)>=android.permission.WAKE_LOCK
<com.android.exchange.ExchangeService\:\ void\ stopNonAccountMailboxSyncsForAccount(long)>=android.permission.WAKE_LOCK
<com.android.calendar.DayView\:\ void\ access$4900(com.android.calendar.DayView,android.view.MotionEvent,android.view.MotionEvent,float,float)>=android.permission.READ_CALENDAR
<com.android.music.MusicUtils\:\ void\ setRingtone(android.content.Context,long)>=android.permission.WRITE_SETTINGS
<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ setFilter(com.android.contacts.list.ContactListFilter,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.DeviceInfoSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.settings.DockSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<android.view.IWindowSession\:\ int\ add(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>=android.permission.SYSTEM_ALERT_WINDOW
<android.app.AliasActivity\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.deskclock.Alarms\:\ long\ addAlarm(android.content.Context,com.android.deskclock.Alarm)>=android.permission.WRITE_SETTINGS
<com.android.phone.InCallScreen$6\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WAKE_LOCK
<com.android.server.TelephonyRegistry\:\ void\ notifySignalStrengthForPhoneId(int,int,android.telephony.SignalStrength)>=android.permission.MODIFY_PHONE_STATE
<com.android.commands.uiautomator.DumpCommand\:\ void\ run(java.lang.String[])>=android.permission.WRITE_SETTINGS
<com.android.exchange.EasAccountService\:\ com.android.exchange.EasResponse\ sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity,int)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$StorageSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.server.am.BatteryStatsService\:\ byte[]\ getStatistics()>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivity\:\ int\ getDrmMimeMenuStringRsrc(long)>=android.permission.WRITE_SMS
<com.android.gallery3d.app.ManageCachePage\:\ void\ onBackPressed()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.group.GroupEditorFragment$3\:\ android.content.Loader\ onCreateLoader(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ com.android.internal.telephony.Connection\ dial(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccCard\:\ void\ supplyNetworkDepersonalization(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.media.IRingtonePlayer\:\ void\ play(android.os.IBinder,android.net.Uri,int)>=android.permission.WAKE_LOCK
<com.android.server.wifi.WifiServiceImpl\:\ void\ acquireMulticastLock(android.os.IBinder,java.lang.String)>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.google.common.io.Resources$1\:\ java.lang.Object\ getInput()>=android.permission.INTERNET
<com.android.exchange.EasOutboxService\:\ android.os.Bundle\ tryAutodiscover(java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.job.JobSchedulerService$JobSchedulerStub\:\ int\ scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL, android.permission.UPDATE_DEVICE_STATS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ enable()>=android.permission.BLUETOOTH_ADMIN
<com.android.settings.inputmethod.InputMethodAndLanguageSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothHeadset$Stub\:\ boolean\ stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ java.lang.String[]\ getTetheredIfacePairs()>=android.permission.ACCESS_NETWORK_STATE
<android.nfc.NfcAdapter\:\ void\ disableForegroundDispatch(android.app.Activity)>=android.permission.NFC
<android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.contacts.list.EmailAddressPickerFragment\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.media.AudioService\:\ void\ checkScoAudioState()>=android.permission.BLUETOOTH
<android.test.IsolatedContext$MockAccountManager\:\ boolean\ addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.email.activity.UIControllerTwoPane\:\ void\ installMessageViewFragment(com.android.email.activity.MessageViewFragment)>=android.permission.ACCESS_NETWORK_STATE
<android.net.sip.SipAudioCall\:\ void\ stopCall(boolean)>=android.permission.WAKE_LOCK
<com.android.browser.NavScreen\:\ void\ access$000(com.android.browser.NavScreen,com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment$EntityDeltaComparator\:\ int\ compare(java.lang.Object,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.le.BluetoothLeScanner\:\ void\ startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ reconnectAfterFail(com.android.internal.telephony.DataConnection$FailCause,com.android.internal.telephony.ApnContext,int)>=android.permission.WAKE_LOCK
<com.android.gallery3d.data.MediaSet\:\ long\ reload()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.wifi.WifiServiceImpl\:\ void\ disconnect()>=android.permission.CHANGE_WIFI_STATE
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker\:\ int\ getActualState(android.content.Context)>=android.permission.BLUETOOTH
<com.android.browser.Controller\:\ void\ closeTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<android.net.wifi.WifiManager\:\ boolean\ setWifiEnabled(boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.browser.GoogleAccountLogin\:\ android.accounts.Account[]\ getAccounts(android.content.Context)>=android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.DockService$1\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.email.provider.DBHelper\:\ void\ upgradeFromVersion21ToVersion22(android.database.sqlite.SQLiteDatabase,android.content.Context)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.server.content.ContentService\:\ android.os.Bundle\ getCache(java.lang.String,android.net.Uri,int)>=android.permission.CACHE_CONTENT, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.providers.contacts.VoicemailContentProvider\:\ int\ update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.server.BatteryService\:\ void\ sendIntent()>=android.permission.BROADCAST_STICKY
<com.android.phone.PhoneInterfaceManager\:\ boolean\ setRadioForSubscriber(int,boolean)>=android.permission.MODIFY_PHONE_STATE
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.DataConnection$DcInactiveState\:\ boolean\ processMessage(android.os.Message)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ColorTemperatureFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.print.PrintManagerService$PrintManagerImpl\:\ android.print.PrintJobInfo\ getPrintJobInfo(android.print.PrintJobId,int,int)>=com.android.printspooler.permission.ACCESS_ALL_PRINT_JOBS
<android.webkit.HTML5VideoView\:\ void\ pauseAndDispatch(android.webkit.HTML5VideoViewProxy)>=android.permission.WAKE_LOCK
<com.android.browser.NavScreen\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<android.inputmethodservice.KeyboardView\:\ void\ setKeyboard(android.inputmethodservice.Keyboard)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.internal.telephony.UiccSmsController\:\ java.util.List\ getAllMessagesFromIccEfForSubscriber(int,java.lang.String)>=android.permission.RECEIVE_SMS
<android.net.wifi.IWifiManager$Stub\:\ void\ clearBlacklist()>=android.permission.CHANGE_WIFI_STATE
<com.android.server.UiModeManagerService$8\:\ void\ retrieveLocation()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.music.AudioPreview$PreviewPlayer\:\ void\ access$300(android.media.MediaPlayer,boolean)>=android.permission.WAKE_LOCK
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler\:\ long\ access$1600(com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.SearchPanelView\:\ void\ hide(boolean)>=android.permission.VIBRATE
<com.android.internal.telephony.CommandsInterface\:\ void\ getLastPdpFailCause(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$SpellCheckersSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewBase\:\ void\ wakeWhenReadyTq(int)>=android.permission.WAKE_LOCK
<com.android.settings.accounts.AccountPreferenceBase\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.accounts.IAccountManager$Stub\:\ void\ getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>=android.permission.USE_CREDENTIALS
<com.android.settings.accounts.SyncSettings\:\ void\ onStart()>=android.permission.GET_ACCOUNTS
<com.android.server.VibratorService\:\ void\ vibratePattern(long[],int,android.os.IBinder)>=android.permission.VIBRATE
<com.android.phone.CdmaVoicePrivacyCheckBoxPreference\:\ void\ onClick()>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager\:\ java.lang.String[]\ getTetheredIfaces()>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.keyboard.internal.KeyboardState$SwitchActions\:\ void\ hapticAndAudioFeedback(int)>=android.permission.VIBRATE
<android.webkit.HTML5Audio\:\ void\ resetMediaPlayer()>=android.permission.WAKE_LOCK
<com.android.server.WifiService\:\ void\ reassociate()>=android.permission.CHANGE_WIFI_STATE
<com.android.providers.contacts.CallLogProvider\:\ int\ update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.settings.Settings$DeviceAdminSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.ex.variablespeed.VariableSpeed\:\ void\ start()>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub\:\ int\ getNetworkPreference()>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetoothHeadset$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.server.pm.PackageManagerService\:\ int\ installExistingPackageAsUser(java.lang.String,int)>=android.permission.INSTALL_PACKAGES, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.BluetoothHandsfree$2\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ void\ registerTaskStackListener(android.app.ITaskStackListener)>=android.permission.MANAGE_ACTIVITY_STACKS
<com.android.phone.PhoneInterfaceManager\:\ android.os.Bundle\ getCellLocation()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.vcard.VCardParserImpl_V30\:\ void\ parseItems()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wm.InputMonitor\:\ int\ interceptMotionBeforeQueueingWhenScreenOff(int)>=android.permission.WAKE_LOCK
<com.android.email.activity.setup.MailboxSettings$2\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.app.ManageCachePage\:\ boolean\ onCreateActionBar(android.view.Menu)>=android.permission.NFC
<com.android.email.Controller\:\ void\ updateMailbox(long,long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.calendar.CalendarProvider2\:\ int\ deleteReminders(android.net.Uri,boolean,java.lang.String,java.lang.String[],boolean)>=android.permission.READ_CALENDAR
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ boolean\ isBusy()>=android.permission.BLUETOOTH
<com.android.settings.wifi.p2p.WifiP2pSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardUpdateMonitor$SimStateCallback\:\ void\ onSimStateChanged(com.android.internal.telephony.IccCard$State)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteEvent(int,java.lang.String,int)>=android.permission.UPDATE_DEVICE_STATS
<android.filterpacks.imageproc.FlipFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cat.CommandParamsFactory\:\ boolean\ processEventNotify(com.android.internal.telephony.cat.CommandDetails,java.util.List)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ToRGBAFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.bluetooth.IBluetooth\:\ boolean\ connectPanDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ queryCdmaRoamingPreference(android.os.Message)>=android.permission.WAKE_LOCK
<android.preference.VolumePreference$SeekBarVolumizer\:\ void\ muteVolume()>=android.permission.WAKE_LOCK
<android.accounts.IAccountManager$Stub$Proxy\:\ java.lang.String\ getPassword(android.accounts.Account)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.phone.PhoneInterfaceManager\:\ boolean\ handlePinMmiForSubscriber(int,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<android.webkit.WebViewClassic\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ int\ startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>=android.permission.SET_DEBUG_APP
<com.android.server.am.ActivityManagerService\:\ void\ comeOutOfSleepIfNeededLocked()>=android.permission.WAKE_LOCK
<android.view.WindowManagerPolicy$WindowManagerFuncs\:\ void\ shutdown()>=android.permission.WAKE_LOCK
<com.android.contacts.editor.PhoneticNameEditorView\:\ void\ onTypeSelectionChange(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.sip.SipPhone\:\ void\ <init>=android.permission.CHANGE_CONFIGURATION
<android.bluetooth.AtCommandHandler\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.server.input.InputManagerService$Callbacks\:\ int\ interceptMotionBeforeQueueingWhenScreenOff(int)>=android.permission.WAKE_LOCK
<com.android.settings.deviceinfo.Memory\:\ void\ unmount()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.server.content.ContentService\:\ void\ setMasterSyncAutomatically(boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.WRITE_SYNC_SETTINGS
<com.android.contacts.detail.PhotoSelectionHandler\:\ int\ getPhotoPickSize()>=android.permission.WRITE_CONTACTS
<android.app.ExpandableListActivity\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<android.test.mock.MockContentResolver\:\ boolean\ getSyncAutomatically(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.InCallScreen\:\ void\ onStop()>=android.permission.BLUETOOTH
<android.nfc.INfcAdapterExtras$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.NFC
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ setSelectedContactUri(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.MessagingListener\:\ void\ synchronizeMailboxFinished(long,long,int,int,java.util.ArrayList)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageCompose$6\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.OtaUtils\:\ void\ onOtaCloseFailureNotice()>=android.permission.BLUETOOTH
<com.android.phone.MobileNetworkSettings$MyHandler\:\ void\ handleSetPreferredNetworkTypeResponse(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.deviceinfo.Memory\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.providers.contacts.ContactsProvider2\:\ android.net.Uri\ insert(android.net.Uri,android.content.ContentValues)>=android.permission.WRITE_SOCIAL_STREAM
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getPasswordHistoryLength(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.wifi.WifiServiceImpl\:\ boolean\ releaseWifiLock(android.os.IBinder)>=android.permission.WAKE_LOCK
<com.android.settings.DevelopmentSettings\:\ void\ writeAppProcessLimitOptions(java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.commands.monkey.MonkeyEvent\:\ int\ injectEvent(android.view.IWindowManager,android.app.IActivityManager,int)>=android.permission.WRITE_SETTINGS
<android.os.storage.IMountService$Stub$Proxy\:\ int\ mountVolume(java.lang.String)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<android.filterpacks.base.FrameSource\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.LockSettingsService\:\ void\ setLong(java.lang.String,long,int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.contacts.editor.ContactEditorFragment\:\ void\ onStop()>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ java.lang.String\ getRemoteAlias(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.location.LocationManager\:\ void\ setTestProviderEnabled(java.lang.String,boolean)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ refreshDevice(int,java.lang.String)>=android.permission.BLUETOOTH
<com.android.bluetooth.pan.PanService$BluetoothPanBinder\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.BLUETOOTH
<com.android.settings.accounts.AccountSyncSettings\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$AccountSyncSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactListFilterControllerImpl\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<com.android.server.SamplingProfilerService\:\ void\ registerSettingObserver(android.content.Context)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ deleteSmsOnRuim(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService$AutoRegistrationProcess\:\ void\ onRegistrationTimeout(android.net.sip.ISipSession)>=android.permission.WAKE_LOCK
<com.android.calendar.widget.CalendarAppWidgetProvider\:\ void\ onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>=android.permission.READ_CALENDAR
<com.android.contacts.editor.ContactEditorFragment\:\ void\ createContact()>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.SmsMessageSender\:\ java.lang.String\ getOutgoingServiceCenter(long)>=android.permission.RECEIVE_SMS
<com.android.contacts.list.AccountFilterActivity\:\ java.util.List\ access$100(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.EmergencyCallbackModeService\:\ void\ startTimerNotification()>=android.permission.VIBRATE
<com.android.emailcommon.service.IEmailService$Stub\:\ void\ hostChanged(long)>=android.permission.WAKE_LOCK
<android.filterpacks.videoproc.BackDropperFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.CallNotifier\:\ void\ <init>=android.permission.ACCESS_COARSE_LOCATION
<com.android.gallery3d.ui.PhotoView$MyGestureListener\:\ boolean\ flingImages(float,float)>=android.permission.VIBRATE
<com.android.server.UpdateLockService\:\ void\ acquireUpdateLock(android.os.IBinder,java.lang.String)>=android.permission.UPDATE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ sendDtmf(char)>=android.permission.WAKE_LOCK
<com.android.exchange.adapter.ContactsSyncAdapter\:\ java.lang.String\ getSyncKey()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Utils\:\ boolean\ isWifiOnly(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<com.android.commands.svc.WifiCommand\:\ void\ run(java.lang.String[])>=android.permission.BLUETOOTH
<com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener\:\ void\ onRemovePictureChosen()>=android.permission.READ_SYNC_SETTINGS
<android.nfc.tech.NfcF\:\ byte[]\ transceive(byte[],boolean)>=android.permission.NFC
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ int\ getScanMode()>=android.permission.BLUETOOTH
<android.app.ActivityManagerNative\:\ android.content.Intent\ registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ getLine1AlphaTagForDisplay(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.am.ActivityManagerService$6\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.CachedBluetoothDeviceManager\:\ void\ onScanningStateChanged(boolean)>=android.permission.BLUETOOTH
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onDisconnectDone(int,android.os.AsyncResult)>=android.permission.WAKE_LOCK
<com.android.server.net.NetworkStatsService\:\ void\ performPoll(int)>=android.permission.WAKE_LOCK
<com.android.exchange.EasOutboxService\:\ void\ messageMoveRequest(com.android.exchange.MessageMoveRequest)>=android.permission.WAKE_LOCK
<com.android.contacts.editor.ContactEditorFragment\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ systemReady()>=android.permission.READ_PHONE_STATE
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ setKeyguardEnabled(boolean)>=android.permission.WAKE_LOCK
<com.android.camera.LocationManager\:\ void\ startReceivingLocationUpdates()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.contacts.activities.DialtactsActivity$11\:\ void\ onCallNumberDirectly(java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ setLightsOn(boolean)>=android.permission.VIBRATE
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState\:\ void\ <init>=android.permission.BLUETOOTH
<com.android.contacts.ContactsUtils\:\ boolean\ areGroupWritableAccountsAvailable(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.sip.SipCommandInterface\:\ void\ setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothGattServer\:\ boolean\ removeService(android.bluetooth.BluetoothGattService)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.PhotoPage$Model\:\ void\ setCurrentPhoto(com.android.gallery3d.data.Path,int)>=android.permission.VIBRATE
<com.android.gallery3d.app.ActivityState\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.IAccountManager$Stub\:\ void\ hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.ui.SlotView$Listener\:\ void\ onSingleTapUp(int)>=android.permission.VIBRATE
<android.server.BluetoothService\:\ boolean\ setPairingConfirmation(java.lang.String,boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ invokeOemRilRequestRaw(byte[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.voicemail.VoicemailPlaybackPresenter\:\ void\ stopPlaybackAtPosition(int,int)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setPasswordExpirationTimeout(android.content.ComponentName,long,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.location.ILocationManager$Stub\:\ void\ addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.providers.downloads.DownloadService\:\ boolean\ access$700(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo,boolean,boolean)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver\:\ void\ observe()>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1\:\ void\ onTextInput(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.nfc.DeviceHost$DeviceHostListener\:\ void\ onRemoteFieldActivated()>=android.permission.BLUETOOTH
<com.android.contacts.editor.ContactEditorFragment\:\ void\ onSplitContactConfirmed()>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.PhotoPage$1\:\ boolean\ onTouch(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.transaction.NotificationTransaction\:\ byte[]\ sendPdu(long,byte[])>=android.permission.CHANGE_NETWORK_STATE
<com.android.contacts.activities.ShowOrCreateActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.OtaUtils\:\ void\ otaShowProgramFailure(int)>=android.permission.BLUETOOTH
<com.android.music.IMediaPlaybackService$Stub$Proxy\:\ void\ setRepeatMode(int)>=android.permission.WAKE_LOCK
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ boolean\ setSoftKeyboardShowMode(int)>=android.permission.INTERACT_ACROSS_USERS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ setPairingConfirmation(java.lang.String,boolean)>=android.permission.BLUETOOTH_ADMIN
<android.server.BluetoothService\:\ boolean\ setInputDevicePriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<com.android.wallpaper.galaxy.GalaxyRS\:\ void\ start()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.systemui.statusbar.CommandQueue$Callbacks\:\ void\ setSystemUiVisibility(int,int)>=android.permission.VIBRATE
<com.android.internal.widget.WaveView\:\ void\ dispatchTriggerEvent(int)>=android.permission.VIBRATE
<com.android.systemui.statusbar.tablet.TabletStatusBar\:\ void\ updateNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>=android.permission.VIBRATE
<com.android.phone.PhoneInterfaceManager\:\ boolean\ getDataEnabled(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.DayView\:\ void\ switchViews(boolean)>=android.permission.WRITE_CALENDAR
<android.accounts.AccountManagerService\:\ void\ installNotification(int,android.app.Notification)>=android.permission.VIBRATE
<com.android.internal.widget.PasswordEntryKeyboardView\:\ boolean\ access$400(android.inputmethodservice.KeyboardView,android.view.MotionEvent)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.email.activity.MoveMessageToDialog\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.exchange.EasOutboxService\:\ com.android.exchange.EasResponse\ executePostWithTimeout(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,int,boolean)>=android.permission.WAKE_LOCK
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.DeliveryReportActivity\:\ java.util.Map\ getMmsReportStatus()>=android.permission.READ_SMS
<com.android.contacts.group.GroupEditorFragment\:\ void\ onAccountChosen(com.android.contacts.model.AccountWithDataSet,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wm.WindowManagerService\:\ void\ stopFreezingScreen()>=android.permission.FREEZE_SCREEN
<android.provider.ContactsContract$Directory\:\ void\ notifyDirectoryChange(android.content.ContentResolver)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.ManageCachePage\:\ void\ onProgressComplete(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.app.MovieControllerOverlay\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.contacts.editor.StructuredNameEditorView\:\ void\ switchFromFullNameToStructuredName()>=android.permission.WRITE_CONTACTS
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker$1\:\ void\ onPostExecute(java.lang.Boolean)>=android.permission.BLUETOOTH
<com.android.calendar.alerts.AlertReceiver\:\ android.app.PendingIntent\ createBroadcastMailIntent(android.content.Context,long,java.lang.String)>=android.permission.READ_CALENDAR
<android.nfc.tech.MifareClassic\:\ void\ decrement(int,int)>=android.permission.NFC
<android.preference.VolumePreference\:\ void\ cleanup()>=android.permission.WAKE_LOCK
<android.net.INetworkPolicyManager\:\ android.net.NetworkPolicy[]\ getNetworkPolicies()>=android.permission.READ_PHONE_STATE
<com.android.browser.Controller\:\ com.android.browser.Tab\ createNewTab(boolean,boolean,boolean)>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.TintFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ void\ removeAllDevices()>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ void\ setActivityController(android.app.IActivityController,boolean)>=android.permission.SET_ACTIVITY_WATCHER
<com.android.phone.BluetoothHandsfree\:\ void\ startDebug()>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ boolean\ unbindService(android.app.IServiceConnection)>=android.permission.BROADCAST_STICKY, android.permission.SET_DEBUG_APP, android.permission.START_ANY_ACTIVITY, android.permission.START_TASKS_FROM_RECENTS
<com.android.server.StatusBarManagerService$7\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.EXPAND_STATUS_BAR
<com.android.server.pm.PackageManagerService\:\ android.content.pm.IPackageManager\ main(android.content.Context,boolean,boolean)>=android.permission.WAKE_LOCK
<com.android.browser.Controller\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.mms.transaction.MmsMessageSender\:\ void\ sendReadRec(android.content.Context,java.lang.String,java.lang.String,int)>=android.permission.READ_SMS
<com.android.contacts.group.GroupEditorFragment\:\ void\ bindGroupMetaData(android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<android.test.mock.MockApplication\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.mms.data.WorkingMessage\:\ android.net.Uri\ access$1300(com.google.android.mms.pdu.PduPersister,com.google.android.mms.pdu.SendReq,com.android.mms.model.SlideshowModel,android.net.Uri)>=android.permission.WRITE_SMS
<android.net.wifi.WifiStateMachine\:\ void\ sendNetworkStateChangeBroadcast(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.server.ConnectivityService\:\ void\ sendStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.media.AudioService\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.bluetooth.opp.BluetoothOppTransfer\:\ void\ startObexSession()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getIccSerialNumber(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState\:\ boolean\ turnOffUpstreamMobileConnection()>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothDevice\:\ boolean\ createBondOutOfBand(byte[],byte[])>=android.permission.BLUETOOTH
<com.android.server.NativeDaemonConnector\:\ void\ run()>=android.permission.WAKE_LOCK
<android.speech.tts.TextToSpeech\:\ int\ speak(java.lang.String,int,java.util.HashMap)>=android.permission.BROADCAST_STICKY
<com.android.gallery3d.app.MoviePlayer\:\ void\ pauseVideo()>=android.permission.WAKE_LOCK
<com.android.server.wallpaper.WallpaperManagerService\:\ android.os.ParcelFileDescriptor\ setWallpaper(java.lang.String,java.lang.String,android.graphics.Rect,boolean,android.os.Bundle,int,android.app.IWallpaperManagerCallback,int)>=android.permission.SET_WALLPAPER
<com.android.internal.telephony.DataConnectionTracker\:\ void\ dispose()>=android.permission.BROADCAST_STICKY
<android.filterpacks.imageproc.BitmapOverlayFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.voicedialer.VoiceContact\:\ java.util.List\ getVoiceContacts(android.app.Activity)>=android.permission.WRITE_CONTACTS
<com.android.systemui.recent.RecentsPanelView$3\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.VIBRATE
<android.bluetooth.IBluetooth\:\ java.util.List\ getInputDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<android.support.v4.net.ConnectivityManagerCompatHoneycombMR2\:\ boolean\ isActiveNetworkMetered(android.net.ConnectivityManager)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.service.AttachmentDownloadService\:\ boolean\ canPrefetchForAccount(com.android.emailcommon.provider.Account,java.io.File)>=android.permission.GET_ACCOUNTS
<com.google.common.io.Files\:\ java.util.List\ readLines(java.io.File,java.nio.charset.Charset)>=android.permission.INTERNET
<com.android.settings.DataUsageSummary$ConfirmDataRoamingFragment$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ int\ getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.wm.WindowManagerService\:\ void\ setEventDispatching(boolean)>=android.permission.MANAGE_APP_TOKENS
<android.bluetooth.BluetoothDevice\:\ boolean\ setDeviceOutOfBandData(byte[],byte[])>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.activities.ConfirmAddDetailActivity\:\ void\ startExtraInfoQuery()>=android.permission.WRITE_CONTACTS
<com.android.server.am.BroadcastQueue\:\ void\ scheduleBroadcastsLocked()>=android.permission.WAKE_LOCK
<com.android.browser.WebViewController\:\ void\ onDownloadStart(com.android.browser.Tab,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.app.AlbumSetPage\:\ void\ clearLoadingBit(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.vcard.NotificationImportExportListener\:\ void\ onExportProcessed(com.android.contacts.vcard.ExportRequest,int)>=android.permission.VIBRATE
<android.bluetooth.IBluetooth\:\ boolean\ disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<android.widget.VideoView$2\:\ void\ onPrepared(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<android.os.IPowerManager$Stub\:\ void\ releaseWakeLock(android.os.IBinder,int)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub$Proxy\:\ boolean\ getMobileDataEnabled()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.accessibility.AccessibilityManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$AccountSyncSettingsInAddAccountActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<android.media.MediaPlayer\:\ void\ reset()>=android.permission.WAKE_LOCK
<com.android.soundrecorder.Recorder\:\ void\ signalStateChanged(int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ dispose()>=android.permission.BROADCAST_STICKY
<com.android.calendar.EventInfoFragment\:\ void\ onResume()>=android.permission.READ_CALENDAR
<com.android.contacts.dialpad.DialpadFragment\:\ android.content.Intent\ newFlashIntent()>=android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen\:\ void\ internalAnswerCall()>=android.permission.BLUETOOTH
<com.android.contacts.vcard.ImportVCardActivity$ImportRequestConnection\:\ void\ onServiceConnected(android.content.ComponentName,android.os.IBinder)>=android.permission.READ_SYNC_SETTINGS
<android.net.IConnectivityManager$Stub\:\ android.net.LinkProperties\ getActiveLinkProperties()>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.EventLoader\:\ void\ startBackgroundThread()>=android.permission.READ_CALENDAR
<com.android.mms.data.Contact$ContactsCache$1\:\ void\ run()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.Phone\:\ void\ setBandMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardUpdateMonitor\:\ void\ handleSimStateChange(com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs)>=android.permission.WAKE_LOCK
<com.android.providers.calendar.CalendarProvider2\:\ void\ doUpdateTimezoneDependentFields()>=android.permission.READ_CALENDAR
<com.android.calendar.AllInOneActivity\:\ void\ handleSelectSyncedCalendarsClicked(android.view.View)>=android.permission.WRITE_CALENDAR
<android.content.IContentService$Stub$Proxy\:\ android.content.SyncStatusInfo\ getSyncStatus(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<android.accounts.IAccountManager$Stub\:\ void\ clearPassword(android.accounts.Account)>=android.permission.MANAGE_ACCOUNTS
<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub\:\ boolean\ showSessionForActiveService(android.os.Bundle,int,com.android.internal.app.IVoiceInteractionSessionShowCallback,android.os.IBinder)>=android.permission.ACCESS_VOICE_INTERACTION_SERVICE
<android.media.Ringtone\:\ void\ play()>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ boolean\ isViewServerRunning()>=android.permission.DUMP
<com.android.email.activity.setup.AccountServerBaseFragment$4\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.WAKE_LOCK
<com.android.calendar.EventInfoFragment\:\ void\ createExceptionResponse(long,int)>=android.permission.WRITE_CALENDAR
<android.filterpacks.imageproc.DrawOverlayFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.NetworkManagementService\:\ void\ setInterfaceDown(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.providers.downloads.DownloadThread\:\ void\ updateDatabaseFromHeaders(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.contacts.ContactsApplication\:\ java.lang.Object\ getSystemService(java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.inputmethod.UserDictionaryAddWordFragment\:\ void\ updateSpinner()>=android.permission.READ_USER_DICTIONARY
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ hangup(com.android.internal.telephony.cdma.CdmaConnection)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.CropView$HighlightRectangle\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<android.app.ActivityManagerNative\:\ void\ moveTaskToBack(int)>=android.permission.REORDER_TASKS
<android.test.mock.MockContentResolver\:\ java.util.List\ getCurrentSyncs()>=android.permission.READ_SYNC_STATS
<android.media.MediaRecorder\:\ void\ setAudioSource(int)>=android.permission.RECORD_AUDIO
<android.server.BluetoothService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ initialize(android.os.Bundle,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ pollState()>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ int\ startActivityWithConfig(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>=android.permission.SET_DEBUG_APP
<android.nfc.tech.IsoDep\:\ void\ setTimeout(int)>=android.permission.NFC
<android.media.MediaPlayer\:\ void\ pause()>=android.permission.WAKE_LOCK
<com.android.settings.ApplicationSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.server.LocationManagerService\:\ boolean\ sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION, android.permission.ACCESS_LOCATION_EXTRA_COMMANDS
<com.android.gallery3d.ui.PhotoView\:\ void\ switchToNextImage()>=android.permission.VIBRATE
<com.android.browser.Controller\:\ android.os.Bundle\ createSaveState()>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.SubscriptionController\:\ void\ clearDefaultsForInactiveSubIds()>=android.permission.MODIFY_PHONE_STATE
<com.android.server.wm.WindowManagerService\:\ android.graphics.Bitmap\ screenshotWallpaper()>=android.permission.READ_FRAME_BUFFER
<com.android.email.activity.MessageFileViewFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothDeviceProfileState$BondedDevice\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<android.net.sip.ISipService$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$HeaderAdapter\:\ void\ resume()>=android.permission.BLUETOOTH
<com.android.browser.WallpaperHandler\:\ void\ run()>=android.permission.SET_WALLPAPER
<com.android.inputmethod.latin.LatinIME\:\ void\ resetContactsDictionary(com.android.inputmethod.latin.Dictionary)>=android.permission.WRITE_CONTACTS
<com.android.settings.bluetooth.A2dpProfile\:\ void\ setPreferred(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser\:\ void\ commandsParser()>=android.permission.WRITE_CALENDAR
<com.android.email.activity.setup.MailboxSettings$LoadMailboxTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ boolean\ stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.browser.BaseUi\:\ void\ setUseQuickControls(boolean)>=android.permission.GET_ACCOUNTS
<com.android.server.wallpaper.WallpaperManagerService\:\ void\ setDimensionHints(int,int,java.lang.String)>=android.permission.SET_WALLPAPER_HINTS
<android.webkit.WebViewClassic\:\ void\ setBaseLayer(int,boolean,boolean)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ moveTaskToBack(int)>=android.permission.REORDER_TASKS
<com.android.internal.telephony.sip.SipPhone$SipConnection$1\:\ void\ onCallEstablished(android.net.sip.SipAudioCall)>=android.permission.WAKE_LOCK
<com.android.calendar.month.MonthByWeekFragment\:\ void\ <init>=android.permission.WRITE_CALENDAR
<com.android.camera.ui.SecondLevelIndicatorControlBar\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<com.android.email.service.MailService\:\ boolean\ access$200(com.android.email.service.MailService,com.android.email.Controller,long,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.Settings$5\:\ void\ onStopTrackingTouch(android.widget.SeekBar)>=android.permission.VIBRATE
<android.os.storage.IMountService$Stub\:\ int\ formatVolume(java.lang.String)>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<com.android.browser.SnapshotTab\:\ void\ onNewPicture(android.webkit.WebView,android.graphics.Picture)>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.FlipFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.calendar.event.EditEventFragment\:\ void\ onPause()>=android.permission.WRITE_CALENDAR
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ removeActiveAdmin(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_DEVICE_ADMINS
<com.android.inputmethod.latin.LatinIME\:\ void\ onRefreshKeyboard()>=android.permission.WRITE_CONTACTS
<android.content.IContentService$Stub$Proxy\:\ java.util.List\ getPeriodicSyncs(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.vcard.VCardParserImpl_V30\:\ void\ handleNest()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.BitmapOverlayFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.Ringer$VibratorThread\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ boolean\ stopBinderTrackingAndDump(android.os.ParcelFileDescriptor)>=android.permission.SET_ACTIVITY_WATCHER
<android.net.wifi.IWifiManager$Stub\:\ android.net.wifi.WifiConfiguration\ getWifiApConfiguration()>=android.permission.ACCESS_WIFI_STATE
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ connectAudio()>=android.permission.BLUETOOTH_ADMIN
<com.android.calendar.DayView\:\ void\ onDraw(android.graphics.Canvas)>=android.permission.READ_CALENDAR
<com.android.phone.NotificationMgr\:\ void\ onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.app.PhotoPage$1\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.provider.ContactsContract$Contacts\:\ android.net.Uri\ getLookupUri(long,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<android.speech.IRecognitionService\:\ void\ stopListening(android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<com.android.contacts.socialwidget.SocialWidgetProvider\:\ void\ access$000(android.content.Context,int,android.appwidget.AppWidgetManager,com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.UsimDataDownloadHandler\:\ void\ sendSmsAckForEnvelopeResponse(com.android.internal.telephony.IccIoResult,int,int)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager\:\ void\ setWifiApConfiguration(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ registerServer(android.os.ParcelUuid,android.bluetooth.IBluetoothGattServerCallback)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothA2dp$Stub$Proxy\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.net.NetworkPolicyManagerService\:\ void\ setNetworkPolicies([android.net.NetworkPolicy)>=android.permission.MANAGE_NETWORK_POLICY
<com.android.inputmethod.latin.ExpandableDictionary\:\ void\ blockingReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<android.media.AudioManager\:\ void\ setParameters(java.lang.String)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.nfc.NfcService$TagService\:\ int\ formatNdef(int,byte[])>=android.permission.NFC
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ cancelBondProcess(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<android.filterpacks.base.GLTextureTarget\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.email.Controller$LegacyListener\:\ void\ loadAttachmentStarted(long,long,long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.DayView$GotoBroadcaster\:\ void\ onAnimationEnd(android.view.animation.Animation)>=android.permission.WRITE_CALENDAR
<android.net.sip.SipAudioCall\:\ void\ grabWifiHighPerfLock()>=android.permission.WAKE_LOCK
<android.filterfw.core.FilterGraph\:\ void\ tearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothAdapter\:\ java.lang.String\ getAddress()>=android.permission.BLUETOOTH
<com.android.ex.chips.BaseRecipientAdapter$DefaultFilter\:\ android.widget.Filter$FilterResults\ performFiltering(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<android.content.SyncManager$ActiveSyncContext\:\ void\ close()>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ boolean\ chooseNewDefaultIMELocked()>=android.permission.WRITE_SETTINGS
<android.net.sip.SipAudioCall\:\ boolean\ isWifiOn()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback\:\ void\ onResponse(boolean)>=android.permission.WAKE_LOCK
<android.app.IWallpaperManager\:\ void\ setDimensionHints(int,int)>=android.permission.SET_WALLPAPER_HINTS
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ handleCdmaSubscriptionSource(int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ sendTerminalResponse(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager\:\ void\ sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.server.pm.PackageManagerService$5\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.contacts.editor.SelectAccountDialogFragment\:\ android.app.Dialog\ onCreateDialog(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.exchange.EasOutboxService\:\ android.os.Bundle\ validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.CallLogAdapter$2\:\ void\ onClick(android.view.View)>=android.permission.READ_PHONE_STATE
<com.android.gallery3d.app.AlbumPage$2\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.pm.PackageManagerService\:\ void\ setHomeActivity(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.SET_PREFERRED_APPLICATIONS
<com.android.gallery3d.ui.PhotoView\:\ void\ access$900(com.android.gallery3d.ui.PhotoView,int)>=android.permission.VIBRATE
<com.android.internal.telephony.RIL\:\ void\ setNetworkSelectionModeManual(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.list.PhoneNumberPickerFragment\:\ void\ onClose()>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager$Stub\:\ void\ disconnect()>=android.permission.CHANGE_WIFI_STATE
<android.telephony.SmsManager\:\ boolean\ disableCellBroadcast(int)>=android.permission.RECEIVE_SMS
<com.android.systemui.SystemUI\:\ void\ start()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothNameDialogFragment$2\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ queryCLIP(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.browser.AddBookmarkPage$1\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.GET_ACCOUNTS
<com.android.server.WifiService\:\ void\ startWifi()>=android.permission.CHANGE_WIFI_STATE
<com.android.settings.bluetooth.DevicePickerFragment\:\ void\ removeAllDevices()>=android.permission.BLUETOOTH
<com.android.contacts.list.ContactPickerFragment\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.LocationSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.music.AudioPreview$PreviewPlayer\:\ void\ onPrepared(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ setPropertiesByCarrier()>=android.permission.CHANGE_CONFIGURATION
<android.speech.SpeechRecognizer\:\ void\ startListening(android.content.Intent)>=android.permission.RECORD_AUDIO
<com.android.browser.IntentHandler$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.GET_ACCOUNTS
<android.speech.SpeechRecognizer\:\ void\ putMessage(android.os.Message)>=android.permission.RECORD_AUDIO
<com.android.contacts.test.FragmentTestActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.os.storage.ExternalStorageFormatter\:\ void\ onDestroy()>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ boolean\ requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity$20\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.TransactionService\:\ void\ onNewIntent(android.content.Intent,int)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.BrightnessFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiMulticastEnabled(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.internal.policy.impl.GlobalActions\:\ void\ access$300(com.android.internal.policy.impl.GlobalActions,boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ removeAccessibilityInteractionConnection(android.view.IWindow)>=android.permission.INTERACT_ACROSS_USERS
<com.android.mms.ui.ComposeMessageActivity\:\ void\ access$5600(com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothService\:\ boolean\ cancelPairingUserInput(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.app.IBatteryStats$Stub\:\ long\ getAwakeTimePlugged()>=android.permission.BATTERY_STATS
<com.android.internal.telephony.IPhoneSubInfo$Stub\:\ java.lang.String\ getIccSerialNumber()>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.gsm.SIMFileHandler\:\ void\ updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.bluetooth.opp.BluetoothOppTransferHistory\:\ void\ updateNotificationWhenBtDisabled()>=android.permission.BLUETOOTH
<com.android.server.backup.Trampoline\:\ void\ restoreAtInstall(java.lang.String,int)>=android.permission.BACKUP
<com.android.internal.policy.impl.RecentApplicationsDialog\:\ void\ dismissAndSwitch()>=android.permission.REORDER_TASKS
<com.android.gallery3d.app.DialogPicker\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.RECORD_AUDIO
<android.app.backup.IBackupManager\:\ java.lang.String\ selectBackupTransport(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.mms.transaction.RetrieveTransaction\:\ byte[]\ sendPdu(long,byte[])>=android.permission.CHANGE_NETWORK_STATE
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ addAudio(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods\:\ void\ onGrabbedStateChange(android.view.View,int)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHeadsetService\:\ void\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<com.android.settings.DevelopmentSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ getAvailableNetworks(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.CharSequence\ getOrganizationNameForUser(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.providers.settings.SettingsBackupAgent\:\ void\ onCreate()>=android.permission.ACCESS_WIFI_STATE
<android.media.effect.effects.GrayscaleEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.server.power.PowerManagerService$BinderService\:\ boolean\ setPowerSaveMode(boolean)>=android.permission.DEVICE_POWER
<com.android.exchange.ExchangeService$2\:\ void\ deleteAccountPIMData(long)>=android.permission.WAKE_LOCK
<com.android.email.NotificationController$MessageContentObserver\:\ void\ onChange(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.agenda.AgendaFragment\:\ void\ goTo(com.android.calendar.CalendarController$EventInfo,boolean)>=android.permission.WRITE_CALENDAR
<android.inputmethodservice.KeyboardView\:\ void\ sendAccessibilityEventForUnicodeCharacter(int,int)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.server.wm.WindowManagerService\:\ boolean\ stopViewServer()>=android.permission.DUMP
<com.android.email.service.EmailServiceUtils\:\ boolean\ isExchangeAvailable(android.content.Context)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneProxy\:\ void\ updatePhoneObject(int)>=android.permission.WAKE_LOCK
<com.android.server.DevicePolicyManagerService$MyPackageMonitor\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.phone.sip.SipEditor\:\ void\ access$400(com.android.phone.sip.SipEditor)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ separate()>=android.permission.WAKE_LOCK
<com.android.exchange.EasSyncService\:\ void\ acknowledgeRemoteWipe(com.android.exchange.EasSyncService,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.email.MessagingListener\:\ void\ loadAttachmentFinished(long,long,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.LockPatternKeyguardView$3\:\ void\ forgotPattern(boolean)>=android.permission.GET_ACCOUNTS
<com.android.calendar.DayView\:\ void\ doSingleTapUp(android.view.MotionEvent)>=android.permission.WRITE_CALENDAR
<com.android.contacts.activities.ActionBarAdapter\:\ void\ update()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.sip.SipPhone\:\ void\ notifyDataConnection(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.emailcommon.service.IEmailService$Stub\:\ void\ deleteAccountPIMData(long)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.SmsReceiver\:\ void\ finishStartingService(android.app.Service,int)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.UserDictionary\:\ void\ blockingReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.contacts.list.ShortcutIntentBuilder$ContactLoadingAsyncTask\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.AdnRecordLoader\:\ void\ loadFromEF(int,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ I[]\ supplyPukReportResultForSubscriber(int,java.lang.String,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.inputmethod.latin.LatinIME\:\ void\ updateBigramPredictions()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.sip.SipPhone\:\ void\ setSmscAddress(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ setBatteryState(int,int,int,int,int,int)>=android.permission.BLUETOOTH
<com.android.mms.ui.ClassZeroActivity\:\ void\ access$200(com.android.mms.ui.ClassZeroActivity)>=android.permission.RECEIVE_SMS
<com.android.email.activity.MessageViewFragmentBase\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ hangupAllConnections(com.android.internal.telephony.gsm.GsmCall)>=android.permission.WAKE_LOCK
<com.android.browser.SnapshotTab\:\ void\ postCapture()>=android.permission.GET_ACCOUNTS
<com.android.settings.Settings$DisplaySettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.phone.EmergencyCallbackModeService\:\ void\ onCreate()>=android.permission.VIBRATE
<com.android.browser.CrashRecoveryHandler\:\ void\ startRecovery(android.content.Intent)>=android.permission.GET_ACCOUNTS
<com.android.contacts.activities.AttachPhotoActivity$Listener\:\ void\ onContactLoaded(com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.backup.Trampoline\:\ void\ fullTransportBackup([java.lang.String)>=android.permission.BACKUP
<android.bluetooth.BluetoothDevice\:\ int\ getType()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.AlbumSetPage$MyLoadingListener\:\ void\ onLoadingFinished()>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.app.Gallery\:\ boolean\ onCreateOptionsMenu(android.view.Menu)>=android.permission.NFC
<android.net.wifi.WifiWatchdogStateMachine\:\ void\ access$2400(android.net.wifi.WifiWatchdogStateMachine,boolean)>=android.permission.VIBRATE
<android.telephony.TelephonyManager\:\ java.lang.String\ getDeviceId()>=android.permission.READ_PHONE_STATE
<com.android.contacts.activities.AttachPhotoActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>=android.permission.CHANGE_WIFI_STATE
<android.net.IThrottleManager$Stub$Proxy\:\ long\ getByteCount(java.lang.String,int,int,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.agenda.AgendaListView$2\:\ void\ run()>=android.permission.WRITE_CALENDAR
<android.provider.CalendarContract$EventDays\:\ android.database.Cursor\ query(android.content.ContentResolver,int,int,java.lang.String[])>=android.permission.READ_CALENDAR
<com.android.contacts.ContactSaveService\:\ void\ deliverCallbackOnUiThread(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ disable(boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.ConnectivityService\:\ void\ handleSetNetworkPreference(int)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.PhotoPage$1\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ android.view.accessibility.AccessibilityWindowInfo\ getWindow(int)>=android.permission.INTERACT_ACROSS_USERS
<com.android.contacts.detail.ContactDetailDisplayUtils$StreamPhotoTag\:\ android.net.Uri\ getStreamItemPhotoUri()>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ long\ getVtDataUsage()>=android.permission.READ_NETWORK_USAGE_HISTORY
<com.android.server.wm.WindowManagerService\:\ void\ setRecentsVisibility(boolean)>=android.permission.STATUS_BAR
<com.android.internal.telephony.sip.SipPhone\:\ void\ invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.calendar.EventInfoFragment\:\ void\ access$1000(com.android.calendar.EventInfoFragment,android.view.View)>=android.permission.READ_CALENDAR
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ startScanning()>=android.permission.BLUETOOTH
<com.android.server.location.GpsLocationProvider\:\ void\ xtraDownloadRequest()>=android.permission.WAKE_LOCK
<com.android.contacts.editor.ContactEditorFragment$EntityDeltaComparator\:\ int\ compare(com.android.contacts.model.EntityDelta,com.android.contacts.model.EntityDelta)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.opp.BluetoothOppTransferHistory\:\ void\ clearAllDownloads()>=android.permission.BLUETOOTH
<com.android.contacts.vcard.ImportVCardActivity$ImportRequestConnection\:\ void\ sendImportRequest(java.util.List)>=android.permission.VIBRATE
<android.bluetooth.IBluetoothHeadset\:\ boolean\ startVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.content.SyncManager\:\ void\ sendCancelSyncsMessage(android.accounts.Account,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.music.MusicPicker\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setTTYMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ handleLongPressOnHome()>=android.permission.VIBRATE
<com.android.exchange.ExchangeService$2\:\ android.os.Bundle\ validate(com.android.emailcommon.provider.HostAuth)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ void\ onDeviceAttributesChanged()>=android.permission.BLUETOOTH
<com.android.server.ThrottleService\:\ long\ getPeriodStartTime(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.pm.PackageManagerService\:\ void\ registerMoveCallback(android.content.pm.IPackageMoveObserver)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.server.pm.PackageManagerService\:\ void\ deletePackageAsUser(java.lang.String,android.content.pm.IPackageDeleteObserver,int,int)>=android.permission.DELETE_PACKAGES, android.permission.GRANT_RUNTIME_PERMISSIONS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.REVOKE_RUNTIME_PERMISSIONS, android.permission.SET_PREFERRED_APPLICATIONS
<android.bluetooth.BluetoothHeadset\:\ boolean\ sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.email.service.AccountService$1\:\ void\ notifyLoginFailed(long)>=android.permission.VIBRATE
<com.android.music.IMediaPlaybackService$Stub$Proxy\:\ void\ pause()>=android.permission.WAKE_LOCK
<android.location.ILocationManager$Stub\:\ java.lang.String\ getBestProvider(android.location.Criteria,boolean)>=android.permission.ACCESS_COARSE_LOCATION
<android.net.sip.SipAudioCall$1\:\ void\ onError(android.net.sip.SipSession,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.calendar.DeleteEventHelper\:\ void\ delete(long,long,long,int,java.lang.Runnable)>=android.permission.READ_CALENDAR
<com.android.email.activity.MessageViewFragment\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.ConnectivityService\:\ void\ setAcceptUnvalidated(android.net.Network,boolean,boolean)>=android.permission.ACCESS_NETWORK_STATE, android.permission.CONNECTIVITY_INTERNAL
<com.android.contacts.editor.StructuredNameEditorView\:\ void\ onFieldChanged(java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.BluetoothNameDialogFragment\:\ void\ access$000(com.android.settings.bluetooth.BluetoothNameDialogFragment,java.lang.String)>=android.permission.BLUETOOTH
<com.android.browser.Tab\:\ void\ restoreState(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.email.activity.UIControllerBase\:\ void\ updateMessageOrderManager()>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.base.OutputStreamTarget\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ java.util.Set\ getBondedDevices()>=android.permission.BLUETOOTH
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ enableNoAutoConnect()>=android.permission.BLUETOOTH_ADMIN
<com.android.server.WifiService\:\ void\ checkAndSetNotification()>=android.permission.VIBRATE
<com.android.calendar.event.EditEventView\:\ void\ access$500(com.android.calendar.event.EditEventView)>=android.permission.READ_CALENDAR
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ getCrossProfileCallerIdDisabledForUser(int)>=android.permission.INTERACT_ACROSS_USERS
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ java.util.List\ getCurrentCalls(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.detail.ContactDetailFragment\:\ void\ setData(android.net.Uri,com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.TransactionSafeActivity\:\ void\ onBackPressed()>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.suggestions.SuggestionsView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.WRITE_CONTACTS
<com.android.mms.ui.SlideView\:\ void\ pauseAudio()>=android.permission.WAKE_LOCK
<com.android.settings.nfc.AndroidBeam\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.BLUETOOTH
<com.android.emailcommon.utility.EmailAsyncTask\:\ void\ onSuccess(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.app.ResolverActivity\:\ void\ onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)>=android.permission.BLUETOOTH
<android.net.wifi.p2p.IWifiP2pManager\:\ android.os.Messenger\ getMessenger()>=android.permission.ACCESS_WIFI_STATE
<com.android.emailcommon.service.IEmailService\:\ void\ sendMeetingResponse(long,int)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothHealthProfileHandler\:\ boolean\ connectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ initializeHdmiState()>=android.permission.BROADCAST_STICKY
<android.bluetooth.IBluetooth\:\ int\ getRemoteClass(java.lang.String)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ int\ getInputDevicePriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ hangupWaitingOrBackground(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.util.IState\:\ void\ enter()>=android.permission.BLUETOOTH
<android.net.IThrottleManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaLteUiccRecords\:\ void\ onAllRecordsLoaded()>=android.permission.CHANGE_CONFIGURATION
<com.android.server.am.ActivityManagerService\:\ void\ stopAppSwitches()>=android.permission.BROADCAST_STICKY, android.permission.STOP_APP_SWITCHES
<com.android.inputmethod.latin.LatinIME\:\ void\ onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)>=android.permission.WRITE_CONTACTS
<com.android.email.activity.MessageViewFragmentBase$UpdatePreviewIconTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.CallNotifier\:\ void\ startIncomingCallQuery(com.android.internal.telephony.Connection)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pManager\:\ android.os.Messenger\ getMessenger()>=android.permission.ACCESS_WIFI_STATE
<android.net.wifi.IWifiManager$Stub$Proxy\:\ java.lang.String\ getConfigFile()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.content.ContentService\:\ void\ putCache(java.lang.String,android.net.Uri,android.os.Bundle,int)>=android.permission.CACHE_CONTENT, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.camera.PanoramaActivity\:\ void\ onBackPressed()>=android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AlbumSetPage$1\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<com.android.settings.bluetooth.BluetoothNameDialogFragment\:\ android.app.Dialog\ onCreateDialog(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.server.location.ComprehensiveCountryDetector\:\ void\ runAfterDetection(android.location.Country,android.location.Country,boolean,boolean)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.exchange.EasAccountService\:\ java.lang.String\ acknowledgeProvision(com.android.exchange.EasSyncService,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothDeviceProfileState\:\ boolean\ handleIncomingConnection(int,boolean)>=android.permission.BLUETOOTH
<com.android.commands.bmgr.Bmgr\:\ void\ run(java.lang.String[])>=android.permission.WAKE_LOCK
<com.android.providers.userdictionary.DictionaryBackupAgent\:\ byte[]\ getDictionary()>=android.permission.READ_USER_DICTIONARY
<com.android.providers.contacts.DbModifierWithNotification\:\ long\ insert(android.content.ContentValues)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.server.MountService\:\ void\ addUserKeyAuth(int,int,[byte,[byte)>=android.permission.STORAGE_INTERNAL
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onEnableNewApn()>=android.permission.BROADCAST_STICKY
<com.android.contacts.ContactLoader\:\ void\ onStartLoading()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageViewFragmentBase\:\ void\ access$1900(com.android.email.activity.MessageViewFragmentBase,com.android.emailcommon.provider.EmailContent$Attachment)>=android.permission.ACCESS_NETWORK_STATE
<com.android.ex.variablespeed.MediaPlayerProxy\:\ void\ prepare()>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.ContactsDictionary\:\ boolean\ isValidWord(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.email.service.AttachmentDownloadService$Watchdog$1\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.month.MonthListView\:\ void\ <init>=android.permission.READ_CALENDAR
<com.android.internal.telephony.PhoneSubInfoProxy\:\ java.lang.String\ getDeviceId()>=android.permission.READ_PHONE_STATE
<com.android.server.location.GpsLocationProvider\:\ void\ enable()>=android.permission.WAKE_LOCK
<com.android.browser.XLargeUi\:\ void\ showWeb(boolean)>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ allowIncomingProfileConnect(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH_ADMIN
<android.bluetooth.IBluetooth$Stub\:\ int\ getBluetoothState()>=android.permission.BLUETOOTH
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask\:\ void\ onPostExecute(com.android.contacts.PhoneCallDetails[])>=android.permission.READ_PHONE_STATE
<android.net.wifi.WifiManager\:\ boolean\ stopWifi()>=android.permission.CHANGE_WIFI_STATE
<com.android.contacts.editor.ContactEditorFragment$4\:\ void\ onLoadFinished(android.content.Loader,com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.data.WorkingMessage$3\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.music.MediaPlaybackService$MultiPlayer\:\ void\ pause()>=android.permission.WAKE_LOCK
<android.location.ILocationManager\:\ boolean\ sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>=android.permission.ACCESS_LOCATION_EXTRA_COMMANDS
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ onBondingStateChanged(int)>=android.permission.BLUETOOTH
<com.android.server.MountService$2\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener\:\ void\ onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState\:\ boolean\ turnOnUpstreamMobileConnection(int)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ void\ onUserRemoved(android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerTwoPane\:\ void\ onActivityStart()>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.service.AttachmentDownloadService$DownloadSet\:\ void\ processQueue()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.base.FrameFetch\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.app.ContextImpl$ApplicationContentResolver\:\ void\ setIsSyncable(android.accounts.Account,java.lang.String,int)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ saveCdmaSubscriptionSource(int)>=android.permission.WRITE_SETTINGS
<com.android.settings.SecuritySettings\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ onDownEventInternal(int,int,long)>=android.permission.WRITE_CONTACTS
<com.android.server.am.ActivityManagerService\:\ android.os.Bundle\ getAssistContextExtras(int)>=android.permission.GET_TOP_ACTIVITY_INFO
<android.filterpacks.imageproc.FixedRotationFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.browser.NavScreen\:\ void\ switchToTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<android.net.wifi.IWifiManager\:\ void\ disconnect()>=android.permission.CHANGE_WIFI_STATE
<com.android.email.service.PopImapSyncAdapterService$SyncAdapterImpl\:\ void\ onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.SnapshotBar\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.cdma.CDMAPhone$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.SimSmsInterfaceManager$CellBroadcastRangeManager\:\ boolean\ finishUpdate()>=android.permission.WAKE_LOCK
<com.android.bluetooth.pan.PanService$BluetoothPanBinder\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<com.android.settings.Settings$DataUsageSummaryActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cat.CatService\:\ void\ eventDownload(int,int,int,byte[],boolean)>=android.permission.WAKE_LOCK
<com.android.server.backup.BackupManagerService$ActiveRestoreSession\:\ int\ getAvailableRestoreSets(android.app.backup.IRestoreObserver)>=android.permission.BACKUP
<com.android.calendar.DayView\:\ android.view.View\ switchViews(boolean,float,float,float)>=android.permission.WRITE_CALENDAR
<android.net.wifi.WifiManager\:\ boolean\ startWifi()>=android.permission.CHANGE_WIFI_STATE
<com.android.settings.bluetooth.DevicePickerFragment\:\ void\ initDevicePreference(com.android.settings.bluetooth.BluetoothDevicePreference)>=android.permission.BLUETOOTH
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ParceledListSlice\ queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.calendar.SearchActivity\:\ void\ eventsChanged()>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.RIL\:\ void\ stopDtmf(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ removeAppToken(android.os.IBinder)>=android.permission.MANAGE_APP_TOKENS
<com.android.server.ConnectivityService\:\ boolean\ isNetworkMeteredUnchecked(int)>=android.permission.READ_PHONE_STATE
<com.android.bluetooth.opp.BluetoothOppService\:\ void\ onCreate()>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService$1\:\ void\ onRestrictBackgroundChanged(boolean)>=android.permission.BROADCAST_STICKY
<com.android.browser.WallpaperHandler\:\ java.io.InputStream\ openStream()>=android.permission.INTERNET
<android.bluetooth.IBluetooth$Stub\:\ boolean\ isDiscovering()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth\:\ boolean\ cancelDiscovery()>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.calllog.CallLogAdapter\:\ java.lang.String\ getBetterNumberFromContacts(java.lang.String,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.deskclock.AlarmAlertWakeLock\:\ void\ acquireCpuWakeLock(android.content.Context)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<android.net.wifi.p2p.WifiP2pService\:\ void\ enforceChangePermission()>=android.permission.CHANGE_WIFI_STATE
<android.app.IActivityManager\:\ void\ moveTaskToBack(int)>=android.permission.REORDER_TASKS
<com.android.settings.Settings$WifiSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.contacts.editor.ContactEditorFragment\:\ void\ onSaveCompleted(boolean,int,boolean,android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.music.IMediaPlaybackService\:\ void\ pause()>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ void\ setNetworkPreference(int)>=android.permission.BLUETOOTH
<com.android.browser.SnapshotTab\:\ void\ persistThumbnail()>=android.permission.GET_ACCOUNTS
<android.server.BluetoothService\:\ void\ initProfileState()>=android.permission.BLUETOOTH
<com.android.exchange.adapter.FolderSyncParser\:\ boolean\ parse()>=android.permission.WAKE_LOCK
<com.android.settings.wifi.WifiApEnabler\:\ void\ updateTetherState(java.lang.Object[],java.lang.Object[],java.lang.Object[])>=android.permission.ACCESS_WIFI_STATE
<android.net.sip.ISipService$Stub$Proxy\:\ void\ open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccRecords\:\ void\ onRefresh(boolean,int[])>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ getIMEI(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.SMSDispatcher\:\ void\ dispatch(android.content.Intent,java.lang.String,android.content.BroadcastReceiver)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothA2dp\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.CallDetailActivity\:\ com.android.contacts.PhoneCallDetails\ getPhoneCallDetailsForUri(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothAdapter\:\ int\ getState()>=android.permission.BLUETOOTH
<com.android.bluetooth.map.BluetoothMapService$BluetoothMapBinder\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser\:\ void\ commandsParser()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.pm.PackageManagerService\:\ void\ deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>=android.permission.DELETE_CACHE_FILES, android.permission.INTERACT_ACROSS_USERS_FULL
<android.filterpacks.imageproc.FlipFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService\:\ boolean\ isRegistered(java.lang.String)>=android.permission.USE_SIP
<com.android.gallery3d.ui.GestureRecognizer$Listener\:\ void\ onUp()>=android.permission.VIBRATE
<android.filterpacks.base.FrameStore\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.internal.KeyboardState$SwitchActions\:\ void\ startLongPressTimer(int)>=android.permission.WRITE_CONTACTS
<android.os.IVibratorService$Stub$Proxy\:\ void\ vibratePattern(long[],int,android.os.IBinder)>=android.permission.VIBRATE
<android.location.ILocationManager$Stub\:\ java.util.List\ getProviders(android.location.Criteria,boolean)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.server.wifi.WifiServiceImpl\:\ int\ getAggressiveHandover()>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.DreamSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ byte[]\ readOutOfBandData()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.AutoFixFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.Settings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothPairingDialog\:\ void\ createUserEntryDialog(com.android.settings.bluetooth.CachedBluetoothDeviceManager)>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getIsimChallengeResponse(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.quicksearchbox.google.GoogleSource\:\ com.android.quicksearchbox.SourceResult\ queryExternal(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.service.quicksettings.TileService\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.mms.ui.ComposeMessageActivity$32\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.camera.ui.IndicatorControlWheelContainer\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<com.android.settings.Settings$PowerUsageSummaryActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.sip.SipPhone$SipCall\:\ void\ hangupIfAlive()>=android.permission.WAKE_LOCK
<com.android.exchange.EasSyncService\:\ android.os.Bundle\ validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiWatchdogStateMachine\:\ void\ registerForSettingsChanges()>=android.permission.WRITE_SETTINGS
<android.filterpacks.ui.SurfaceTargetFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.filterpacks.base.OutputStreamTarget\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.phone.ManageConferenceUtils\:\ void\ separateConferenceConnection(int,com.android.internal.telephony.Connection)>=android.permission.ACCESS_WIFI_STATE
<com.android.email.activity.MessageFileViewFragment\:\ void\ updateAttachmentTab()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.util.ThumbnailManager\:\ com.android.mms.util.ItemLoadedFuture\ getVideoThumbnail(android.net.Uri,com.android.mms.util.ItemLoadedCallback)>=android.permission.READ_SYNC_SETTINGS
<android.media.effect.effects.GrainEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<android.provider.ContactsContract$ProfileSyncState\:\ byte[]\ get(android.content.ContentProviderClient,android.accounts.Account)>=android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter\:\ void\ setSyncKey(java.lang.String,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.BrowserBookmarksPage$OpenAllInTabsTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.GET_ACCOUNTS
<com.android.phone.BluetoothHandsfree$10\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.email.activity.MessageViewFragmentBase$LoadAttachmentsTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.SlideEditorActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.WAKE_LOCK
<com.android.server.MountService\:\ void\ unmount(java.lang.String)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<android.media.MediaPlayer\:\ void\ access$300(android.media.MediaPlayer,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.SimPukUnlockScreen\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.contacts.activities.GroupBrowserActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.DataUsage\:\ void\ onCreate(android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.sip.SipService\:\ void\ access$1300(com.android.server.sip.SipService,android.net.sip.SipProfile,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ acknowledgeLastIncomingGsmSms(boolean,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ java.util.List\ getProviders(android.location.Criteria,boolean)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.contacts.SpecialCharSequenceMgr\:\ boolean\ handleChars(android.content.Context,java.lang.String,android.widget.EditText)>=android.permission.READ_PHONE_STATE
<com.android.internal.util.StateMachine$SmHandler\:\ void\ invokeEnterMethods(int)>=android.permission.BLUETOOTH
<com.android.calendar.month.MonthByWeekFragment$1\:\ void\ run()>=android.permission.READ_CALENDAR
<com.android.mms.transaction.SmsReceiverService\:\ void\ handleBootCompleted()>=android.permission.WAKE_LOCK
<com.android.settings.UserDictionarySettings\:\ android.database.Cursor\ createCursor(java.lang.String)>=android.permission.READ_USER_DICTIONARY
<com.android.contacts.activities.ContactEditorActivity\:\ void\ onBackPressed()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ supplyNetworkDepersonalization(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.util.Log$1\:\ void\ onTerribleFailure(java.lang.String,android.util.Log$TerribleFailure)>=android.permission.WAKE_LOCK
<android.speech.IRecognitionService$Stub\:\ void\ cancel(android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<com.android.gallery3d.gadget.WidgetService$PhotoRVFactory\:\ void\ onDataSetChanged()>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.ui.PhotoView$1\:\ void\ onClick(com.android.gallery3d.ui.GLView)>=android.permission.VIBRATE
<com.android.internal.telephony.cdma.CdmaLteUiccRecords\:\ void\ setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.inputmethodservice.KeyboardView\:\ boolean\ onModifiedTouchEvent(android.view.MotionEvent,boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.os.storage.IMountService$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<com.android.server.InputMethodManagerService$InputMethodSettings\:\ void\ saveSubtypeHistory(java.util.List,java.lang.String,java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.internal.app.ChooserActivity\:\ void\ onStop()>=android.permission.WAKE_LOCK
<android.filterpacks.videosink.MediaEncoderFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.quicksearchbox.AppsCorpus\:\ com.android.quicksearchbox.CorpusResult\ getSuggestions(java.lang.String,int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.connectivity.MetricsLoggerService$MetricsLoggerImpl\:\ boolean\ register(android.app.PendingIntent)>=android.permission.DUMP
<com.android.internal.telephony.cdma.CdmaLteUiccFileHandler\:\ void\ loadEFTransparent(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.telephony.SmsManager\:\ void\ downloadMultimediaMessage(android.content.Context,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>=android.permission.RECEIVE_MMS
<android.filterpacks.imageproc.BlendFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.phone.BluetoothHandsfree$11\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.nfc.handover.BluetoothHeadsetHandover\:\ void\ handleIntent(android.content.Intent)>=android.permission.BLUETOOTH
<com.android.camera.VideoCamera\:\ boolean\ updateEffectSelection()>=android.permission.RECORD_AUDIO
<com.android.mms.ui.AudioAttachmentView\:\ void\ startAudio()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumPage\:\ void\ onBackPressed()>=android.permission.ACCESS_NETWORK_STATE
<android.net.IConnectivityManager\:\ void\ startLegacyVpn(com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>=android.permission.BROADCAST_STICKY
<android.app.IWallpaperManager$Stub\:\ void\ setDimensionHints(int,int)>=android.permission.SET_WALLPAPER_HINTS
<android.app.Application\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.phone.sip.SipSettings\:\ void\ handleSipReceiveCallsOption(boolean)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager\:\ android.os.Messenger\ getWifiStateMachineMessenger()>=android.permission.ACCESS_WIFI_STATE
<android.net.wifi.WifiManager\:\ int\ getFrequencyBand()>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.Settings$DateTimeSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.AlbumPage$4\:\ void\ onSingleTapUp(int)>=android.permission.VIBRATE
<com.android.server.pm.PackageManagerService\:\ void\ systemReady()>=android.permission.CHANGE_COMPONENT_ENABLED_STATE, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.interactions.ImportExportDialogFragment\:\ void\ doShareVisibleContacts()>=android.permission.WRITE_CONTACTS
<com.android.settings.Settings\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.server.wifi.WifiServiceImpl\:\ android.net.wifi.WifiConfiguration\ getWifiApConfiguration()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.server.TextServicesManagerService\:\ void\ setCurrentSpellCheckerSubtype(java.lang.String,int)>=android.permission.WRITE_SECURE_SETTINGS
<com.android.browser.GoogleAccountLogin\:\ void\ startLogin()>=android.permission.GET_ACCOUNTS
<android.net.ConnectivityManager\:\ boolean\ setRadios(boolean)>=android.permission.CHANGE_NETWORK_STATE
<android.location.LocationManager\:\ void\ addProximityAlert(double,double,float,long,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.gallery3d.ui.ImportCompleteListener\:\ void\ onProgressComplete(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ setRadioPower(boolean)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ com.android.internal.telephony.CellNetworkScanResult\ getCellNetworkScanResults(int)>=android.permission.MODIFY_PHONE_STATE
<android.accounts.AccountManager$AmsTask\:\ void\ doWork()>=android.permission.GET_ACCOUNTS
<android.location.ILocationManager$Stub\:\ void\ removeTestProvider(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.settings.Settings$InputMethodAndSubtypeEnablerActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ boolean\ enableCellBroadcastRange(int,int)>=android.permission.WAKE_LOCK
<com.android.providers.settings.SettingsHelper\:\ boolean\ restoreValue(java.lang.String,java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.browser.provider.BrowserProvider2$DatabaseHelper\:\ void\ onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ getDataCallList(android.os.Message)>=android.permission.WAKE_LOCK
<android.server.BluetoothA2dpService\:\ boolean\ resumeSink(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.TextServicesManagerService$TextServicesMonitor\:\ void\ onPackageRemoved(java.lang.String,int)>=android.permission.WRITE_SETTINGS
<com.android.contacts.editor.EventFieldEditorView\:\ void\ notifyEditorListener()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.widget.multiwaveview.GlowPadView\:\ void\ vibrate()>=android.permission.WAKE_LOCK
<com.android.mms.transaction.SmsReceiverService\:\ void\ handleSmsSent(android.content.Intent,int)>=android.permission.RECEIVE_SMS
<com.android.camera.PanoramaActivity\:\ boolean\ onCreateOptionsMenu(android.view.Menu)>=android.permission.NFC
<com.android.gallery3d.app.AlbumPage$MyLoadingListener\:\ void\ onLoadingFinished()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.ConnectivityService\:\ void\ startNattKeepalive(android.net.Network,int,android.os.Messenger,android.os.IBinder,java.lang.String,int,java.lang.String)>=android.permission.PACKET_KEEPALIVE_OFFLOAD
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ clearCrossProfileIntentFilters(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.DisplaySettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.BackupManagerService$PerformFullBackupTask\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.wifi.WifiServiceImpl\:\ java.util.List\ getPrivilegedConfiguredNetworks()>=android.permission.ACCESS_WIFI_STATE, android.permission.READ_WIFI_CREDENTIAL
<com.android.calendar.alerts.AlertActivity\:\ void\ onResume()>=android.permission.READ_CALENDAR
<com.android.server.ConnectivityService\:\ android.net.Network[]\ getAllNetworks()>=android.permission.ACCESS_NETWORK_STATE
<android.os.IPowerManager\:\ void\ acquireWakeLock(int,android.os.IBinder,java.lang.String,android.os.WorkSource)>=android.permission.WAKE_LOCK
<com.android.phone.CallerInfoCache$CacheAsyncTask\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ setTimeFromNITZString(java.lang.String,long)>=android.permission.WAKE_LOCK
<com.android.calendar.GoogleCalendarUriIntentFilter\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_CALENDAR
<com.android.email.activity.UIControllerOnePane\:\ void\ updateMessageOrderManager()>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ void\ updateThisDevice(int)>=android.permission.BROADCAST_STICKY
<android.filterpacks.imageproc.FisheyeFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ removeAllDevices()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ dispose()>=android.permission.WAKE_LOCK
<com.google.common.io.CharStreams$4\:\ java.io.Reader\ getInput()>=android.permission.INTERNET
<com.android.server.wifi.WifiServiceImpl\:\ void\ setWifiApConfiguration(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<com.android.providers.downloads.DownloadThread\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.exchange.EasAccountService\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.deskclock.Alarms\:\ void\ saveNextAlarm(android.content.Context,java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.providers.calendar.CalendarAlarmManager\:\ void\ rescheduleMissedAlarms()>=android.permission.READ_CALENDAR
<android.widget.QuickContactBadge$QueryHandler\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.WifiStateMachine$SupplicantStartedState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BROADCAST_STICKY
<android.net.wifi.WifiManager\:\ int\ getWifiState()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.RIL\:\ void\ getPreferredNetworkType(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.net.NetworkStatsService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.ACCESS_NETWORK_STATE
<android.app.IActivityManager\:\ boolean\ shutdown(int)>=android.permission.WAKE_LOCK
<com.android.music.IMediaPlaybackService$Stub\:\ void\ setQueuePosition(int)>=android.permission.WAKE_LOCK
<android.speech.IRecognitionService$Stub\:\ void\ stopListening(android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<com.android.email.activity.MailboxListFragment$FindParentMailboxTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.soundrecorder.Recorder\:\ void\ restoreState(android.os.Bundle)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine$TetheredState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getDeviceId(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.os.storage.StorageManager\:\ void\ disableUsbMassStorage()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setBackupServiceEnabled(android.content.ComponentName,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.activities.TransactionSafeActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.LockSettingsService\:\ void\ setSeparateProfileChallengeEnabled(int,boolean,java.lang.String)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub\:\ void\ registerVoiceInteractionSessionListener(com.android.internal.app.IVoiceInteractionSessionListener)>=android.permission.ACCESS_VOICE_INTERACTION_SERVICE
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ dispose()>=android.permission.WAKE_LOCK
<android.net.wifi.SupplicantStateTracker$UninitializedState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.VibratorService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ onRestrictedStateChanged(android.os.AsyncResult)>=android.permission.VIBRATE
<android.telephony.gsm.SmsManager\:\ void\ sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ refreshSelectedContactUri()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.ITelephony$Stub\:\ java.util.List\ getNeighboringCellInfo()>=android.permission.ACCESS_COARSE_LOCATION
<android.app.ExpandableListActivity\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker\:\ void\ onActualStateChange(android.content.Context,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.net.NetworkStatsService\:\ android.net.NetworkStats\ getDataLayerSnapshotForUid(int)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.email.activity.MailboxFinder$FindMailboxTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.SubtypeSwitcher\:\ void\ updateEnabledSubtypes()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.GsmMmiCode\:\ void\ processCode()>=android.permission.WAKE_LOCK
<com.google.common.io.ByteStreams$5\:\ java.io.InputStream\ getInput()>=android.permission.INTERNET
<com.android.server.pm.PackageManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.CLEAR_APP_CACHE
<com.android.internal.telephony.RIL\:\ void\ getVoiceRadioTechnology(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.widget.WaveView\:\ void\ tryTransitionToStartAttemptState(android.view.MotionEvent)>=android.permission.WAKE_LOCK
<android.nfc.tech.IsoDep\:\ int\ getTimeout()>=android.permission.NFC
<com.android.internal.telephony.ISms\:\ java.util.List\ getAllMessagesFromIccEf()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ getVoiceRegistrationState(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.HidProfile\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.content.SyncManager\:\ void\ sendCheckAlarmsMessage()>=android.permission.WAKE_LOCK
<com.android.nfc.NfcService$NfcServiceHandler\:\ void\ dispatchTagEndpoint(com.android.nfc.DeviceHost$TagEndpoint)>=android.permission.BLUETOOTH
<com.google.common.io.CharStreams$2\:\ java.io.InputStreamReader\ getInput()>=android.permission.INTERNET
<com.android.calendar.event.EditEventView$3\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.READ_CALENDAR
<com.android.server.ConnectivityService\:\ android.net.NetworkQuotaInfo\ getActiveNetworkQuotaInfo()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ addHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)>=android.permission.HDMI_CEC
<android.net.IConnectivityManager$Stub\:\ android.net.NetworkInfo[]\ getAllNetworkInfo()>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.AccountManagerService\:\ void\ addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>=android.permission.MANAGE_ACCOUNTS
<android.nfc.INfcTag$Stub\:\ int\ formatNdef(int,byte[])>=android.permission.NFC
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ reloadDataAndSetSelectedUri(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ clearProfileOwner(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.location.ILocationManager$Stub$Proxy\:\ android.os.Bundle\ getProviderInfo(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<com.google.android.mms.pdu.PduPersister\:\ android.net.Uri\ persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri)>=android.permission.READ_SMS
<com.android.contacts.editor.ContactEditorFragment\:\ boolean\ save(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.editor.TextFieldsEditorView\:\ void\ notifyEditorListener()>=android.permission.READ_SYNC_SETTINGS
<android.nfc.INfcTag\:\ int\ reconnect(int)>=android.permission.NFC
<android.net.sip.SipAudioCall\:\ void\ setSpeakerMode(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.gallery3d.ui.GestureRecognizer$MyGestureListener\:\ boolean\ onSingleTapUp(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.browser.view.ScrollerView\:\ void\ onLayout(boolean,int,int,int,int)>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.GlobalActions$4\:\ boolean\ onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.RECEIVE_BOOT_COMPLETED
<com.android.inputmethod.keyboard.KeyboardActionListener\:\ void\ onPressKey(int)>=android.permission.WRITE_CONTACTS
<com.android.mms.ui.ManageSimMessages\:\ void\ deleteFromSim(android.database.Cursor)>=android.permission.RECEIVE_SMS
<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder\:\ boolean\ registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ setPowerStateToDesired()>=android.permission.WAKE_LOCK
<android.hardware.ISerialManager\:\ java.lang.String[]\ getSerialPorts()>=android.permission.SERIAL_PORT
<com.android.phone.BluetoothHeadsetService$6\:\ boolean\ stopVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.calendar.month.MonthByWeekFragment\:\ void\ setUpAdapter()>=android.permission.READ_CALENDAR
<com.android.settings.MasterClear\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ revertToNitzTime()>=android.permission.BROADCAST_STICKY
<com.android.settings.Settings$StorageSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<android.nfc.INfcAdapterExtras$Stub$Proxy\:\ int\ getCardEmulationRoute(java.lang.String)>=android.permission.NFC
<com.android.server.am.ActivityStack\:\ void\ completeResumeLocked(com.android.server.am.ActivityRecord)>=android.permission.WAKE_LOCK
<com.android.internal.widget.multiwaveview.GlowPadView\:\ void\ handleUp(android.view.MotionEvent)>=android.permission.BLUETOOTH
<com.android.server.pm.PackageManagerService\:\ void\ addPreferredActivity(android.content.IntentFilter,int,[android.content.ComponentName,android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.SET_PREFERRED_APPLICATIONS
<com.android.inputmethod.accessibility.AccessibilityEntityProvider\:\ boolean\ performActionForKey(com.android.inputmethod.keyboard.Key,int,android.os.Bundle)>=android.permission.WRITE_CONTACTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setCertInstallerPackage(android.content.ComponentName,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.statusbar.StatusBarManagerService\:\ void\ disable2ForUser(int,android.os.IBinder,java.lang.String,int)>=android.permission.STATUS_BAR
<com.android.providers.contacts.VoicemailPermissions\:\ void\ checkCallerHasOwnVoicemailAccess()>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.settings.net.DataUsageMeteredSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.server.MountService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<com.android.settings.bluetooth.BluetoothDevicePreference$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH
<android.net.wifi.WifiStateMachine\:\ void\ access$8000(android.net.wifi.WifiStateMachine)>=android.permission.WRITE_SETTINGS
<android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.voicedialer.VoiceDialerActivity$3\:\ void\ run()>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ sendUssdResponse(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageInstallerService\:\ int\ createSession(android.content.pm.PackageInstaller$SessionParams,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.music.MediaPlaybackService$ServiceStub\:\ void\ setQueuePosition(int)>=android.permission.WAKE_LOCK
<com.android.mms.data.WorkingMessage\:\ void\ access$1400(android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>=android.permission.READ_SMS
<com.android.internal.telephony.IccFileHandler\:\ void\ loadEFImgTransparent(int,int,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker\:\ int\ getActualState(android.content.Context)>=android.permission.ACCESS_WIFI_STATE
<com.android.server.WifiService\:\ void\ initializeMulticastFiltering()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.internal.telephony.IccProvider\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>=android.permission.READ_CONTACTS
<com.android.server.LocationManagerService\:\ com.android.internal.location.ProviderProperties\ getProviderProperties(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pNotSupportedState\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ showMessageDetails(com.android.mms.ui.MessageItem)>=android.permission.WRITE_SMS
<android.app.Service\:\ void\ stopSelf()>=android.permission.BROADCAST_STICKY
<com.android.mms.util.Recycler$SmsRecycler\:\ void\ deleteOldMessagesByThreadId(android.content.Context,long)>=android.permission.RECEIVE_SMS
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ float\ getMagnificationCenterX()>=android.permission.INTERACT_ACROSS_USERS
<com.android.emailcommon.service.EmailServiceProxy$2\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<android.nfc.tech.MifareUltralight\:\ byte[]\ transceive(byte[])>=android.permission.NFC
<com.android.gallery3d.app.AlbumSetPage$6\:\ void\ run()>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.ExpandableBinaryDictionary\:\ void\ asyncReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.mms.ui.SlideshowEditActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.WRITE_SMS
<com.android.email.activity.MessageViewFragmentBase\:\ java.io.File\ performAttachmentSave(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.hardware.location.ContextHubService\:\ I[]\ findNanoAppOnHub(int,android.hardware.location.NanoAppFilter)>=android.permission.LOCATION_HARDWARE
<com.android.exchange.EasAccountService\:\ void\ acknowledgeRemoteWipe(com.android.exchange.EasSyncService,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.inputmethod.keyboard.SuddenJumpingTouchEventHandler\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.app.Gallery\:\ void\ startGetContent(android.content.Intent)>=android.permission.ACCESS_NETWORK_STATE
<android.app.WallpaperManager\:\ void\ setResource(int)>=android.permission.SET_WALLPAPER
<android.filterpacks.base.InputStreamSource\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera\:\ void\ onUserInteraction()>=android.permission.RECORD_AUDIO
<com.android.mms.transaction.PushReceiver$ReceivePushTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SMS
<com.android.internal.telephony.PhoneSubInfoProxy\:\ java.lang.String\ getLine1AlphaTag()>=android.permission.READ_PHONE_STATE
<com.android.server.pm.PackageManagerService\:\ void\ installPackageLI(com.android.server.pm.PackageManagerService$InstallArgs,boolean,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>=android.permission.WAKE_LOCK
<com.android.phone.NotificationMgr\:\ void\ updateMwi(boolean)>=android.permission.VIBRATE
<com.android.server.input.InputManagerService\:\ void\ addKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>=android.permission.SET_KEYBOARD_LAYOUT
<com.android.contacts.list.PostalAddressPickerFragment\:\ boolean\ isSyncActive()>=android.permission.READ_SYNC_STATS
<com.android.gallery3d.ui.ScrollBarView\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<com.android.camera.ShutterButton\:\ boolean\ performClick()>=android.permission.RECORD_AUDIO
<android.webkit.HTML5VideoInline\:\ void\ onPrepared(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.musicfx.ControlPanelPicker\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.server.net.NetworkPolicyManagerService\:\ void\ setDeviceIdleMode(boolean)>=android.permission.MANAGE_NETWORK_POLICY
<android.accounts.AccountManager$9\:\ void\ doWork()>=android.permission.MANAGE_ACCOUNTS
<com.android.settings.Settings$DeviceInfoSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneBase\:\ void\ dispose()>=android.permission.WAKE_LOCK
<com.android.server.location.GpsLocationProvider\:\ void\ requestUtcTime()>=android.permission.WAKE_LOCK
<com.android.exchange.ExchangeService$2\:\ void\ hostChanged(long)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ sendEnvelopeWithStatus(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.ContactSaveService\:\ void\ renameGroup(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.BluetoothPermissionActivity\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH
<android.net.wifi.WifiWatchdogStateMachine\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.browser.WebViewController\:\ com.android.browser.Tab\ openTab(java.lang.String,boolean,boolean,boolean)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.RIL\:\ void\ getCLIR(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService\:\ void\ access$2300(com.android.music.MediaPlaybackService)>=android.permission.WAKE_LOCK
<android.os.PowerManager$WakeLock\:\ void\ release(int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IPhoneSubInfo$Stub\:\ java.lang.String\ getVoiceMailAlphaTag()>=android.permission.READ_PHONE_STATE
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ boolean\ startPairing()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ setMute(boolean)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ boolean\ stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>=android.permission.BROADCAST_STICKY, android.permission.SET_DEBUG_APP, android.permission.START_ANY_ACTIVITY, android.permission.START_TASKS_FROM_RECENTS
<com.android.server.pm.PackageManagerService\:\ void\ freeStorageAndNotify(java.lang.String,long,android.content.pm.IPackageDataObserver)>=android.permission.CLEAR_APP_CACHE
<android.app.ContextImpl\:\ void\ sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>=android.permission.BROADCAST_STICKY
<android.server.BluetoothService\:\ boolean\ setDeviceOutOfBandData(java.lang.String,byte[],byte[])>=android.permission.BLUETOOTH_ADMIN
<com.android.bluetooth.pbap.BluetoothPbapService\:\ int\ onStartCommand(android.content.Intent,int,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ exitEmergencyCallbackMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.nfc.INfcAdapterExtras$Stub\:\ android.os.Bundle\ close(java.lang.String,android.os.IBinder)>=android.permission.NFC
<com.android.internal.telephony.sip.SipPhone\:\ void\ dispose()>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ boolean\ connectInputDeviceInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.filterpacks.base.InputStreamSource\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.calendar.agenda.AgendaWindowAdapter\:\ boolean\ queueQuery(int,int,android.text.format.Time,java.lang.String,int,long)>=android.permission.WRITE_CALENDAR
<com.android.settings.bluetooth.BluetoothDevicePreference\:\ void\ onDeviceAttributesChanged()>=android.permission.BLUETOOTH
<com.android.bluetooth.pbap.BluetoothPbapService$1\:\ void\ handleMessage(android.os.Message)>=android.permission.BLUETOOTH_ADMIN
<android.view.IWindowManager$Stub\:\ void\ freezeRotation(int)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ getNeighboringCids(android.os.Message)>=android.permission.WAKE_LOCK
<android.accounts.AccountManager$2\:\ android.accounts.AccountManager$Future2Task\ start()>=android.permission.GET_ACCOUNTS
<com.android.internal.os.BatteryStatsImpl\:\ void\ writeToParcel(android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.server.power.PowerManagerService$BinderService\:\ void\ nap(long)>=android.permission.DEVICE_POWER
<com.android.settings.deviceinfo.Status\:\ void\ setWimaxStatus()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.sip.SipService$AutoRegistrationProcess\:\ void\ stop()>=android.permission.WAKE_LOCK
<com.android.server.net.NetworkPolicyManagerService\:\ void\ enqueueRestrictedNotification(java.lang.String)>=android.permission.VIBRATE
<com.android.server.ConnectivityService\:\ boolean\ getMobileDataEnabled()>=android.permission.ACCESS_NETWORK_STATE
<android.app.ApplicationPackageManager\:\ void\ freeStorage(long,android.content.IntentSender)>=android.permission.CLEAR_APP_CACHE
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ requestIsimAuthentication(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager\:\ int\ tether(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.UIControllerBase\:\ void\ onActivityResume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.LockSettingsService\:\ int\ getStrongAuthForUser(int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<android.filterpacks.imageproc.ColorTemperatureFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ getDataRegistrationState(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary\:\ void\ syncReloadDictionaryInternal()>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.ui.CropView\:\ boolean\ onTouch(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.DownloadHandler\:\ void\ onDownloadStartNoStream(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.mms.ui.ComposeMessageActivity$29\:\ void\ run()>=android.permission.WRITE_CONTACTS
<android.filterpacks.videosrc.MediaSource\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.ThrottleService\:\ int\ getThrottle(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.view.IWindowSession\:\ android.os.IBinder\ prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>=android.permission.WAKE_LOCK
<com.android.emailcommon.service.IEmailService$Stub\:\ void\ updateFolderList(long)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.DataController$DataControllerHandler\:\ void\ run()>=android.permission.GET_ACCOUNTS
<com.android.email.activity.setup.AccountSettingsEditQuickResponsesFragment$QuickResponseFinder\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.server.RecognitionManagerService$MyPackageMonitor\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.policy.impl.PhoneWindowManager$9\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ changeBarringPassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.voicedialer.VoiceDialerActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.WAKE_LOCK
<android.widget.VideoView\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$KeyboardLayoutPickerActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.systemui.media.RingtonePlayer$1\:\ void\ stop(android.os.IBinder)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ setFocusedTask(int)>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.server.am.ActivityManagerService\:\ void\ removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ void\ tetherInterface(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.gallery3d.ui.PhotoView\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.quicksearchbox.google.SearchBaseUrlHelper$1\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.INTERNET
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ boolean\ isForegroundApp(java.lang.String)>=android.permission.GET_TASKS
<com.android.inputmethod.latin.LatinIME\:\ void\ revertCommit(android.view.inputmethod.InputConnection)>=android.permission.WRITE_CONTACTS
<com.android.server.wm.WindowManagerService\:\ void\ keyguardGoingAway(int)>=android.permission.DISABLE_KEYGUARD
<com.android.internal.telephony.CommandsInterface\:\ void\ writeSmsToRuim(int,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.server.BluetoothEventLoop\:\ void\ onDeviceFound(java.lang.String,java.lang.String[])>=android.permission.BLUETOOTH
<com.android.internal.telephony.Connection\:\ void\ proceedAfterWaitChar()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.CachedBluetoothDevice$Callback\:\ void\ onDeviceAttributesChanged()>=android.permission.BLUETOOTH
<android.filterfw.core.Filter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.inputmethod.UserDictionaryAddWordFragment\:\ void\ onPause()>=android.permission.WRITE_USER_DICTIONARY
<com.android.internal.telephony.SubscriptionController\:\ int\ getAllSubInfoCount(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.bluetooth.opp.BluetoothOppService\:\ void\ access$1700(com.android.bluetooth.opp.BluetoothOppService,int)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothA2dp\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.app.ActivityManager\:\ void\ moveTaskToFront(int,int,android.os.Bundle)>=android.permission.BROADCAST_STICKY, android.permission.REORDER_TASKS
<com.android.settings.Settings$StorageUseActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.server.ThrottleService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.le.BluetoothLeAdvertiser\:\ void\ startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>=android.permission.BLUETOOTH
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ void\ sendP2pConnectionChangedBroadcast()>=android.permission.BROADCAST_STICKY
<com.android.internal.policy.impl.SimPukUnlockScreen$1$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.wm.Session\:\ android.os.IBinder\ prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>=android.permission.WAKE_LOCK
<com.android.camera.ui.IndicatorControlBar\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<com.android.music.MediaPlaybackActivity\:\ void\ toggleShuffle()>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ onAccountSelected(long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.detail.ContactDetailUpdatesFragment$2\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ void\ sendGeneralBroadcastDelayed(android.net.NetworkInfo,java.lang.String,int)>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.map.BluetoothMapService$BluetoothMapBinder\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.contacts.editor.PhoneticNameEditorView\:\ void\ onFieldChanged(java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.hdmi.HdmiControlService$BinderService\:\ boolean\ canChangeSystemAudioMode()>=android.permission.HDMI_CEC
<android.nfc.NfcAdapter\:\ void\ dispatch(android.nfc.Tag)>=android.permission.BLUETOOTH
<com.android.settings.Settings$AccessibilitySettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy\:\ java.lang.String\ getDeviceSvn()>=android.permission.READ_PHONE_STATE
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ onBeforeMessageGone()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker$1\:\ void\ onPostExecute(java.lang.Object)>=android.permission.BLUETOOTH
<com.android.settings.SoundSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothA2dp\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<com.android.phone.InCallScreen\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ void\ onCreatePairedDeviceResult(java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ void\ unregisterNetworkFactory(android.os.Messenger)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.nfc.handover.BluetoothHeadsetHandover\:\ void\ startBonding()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.BitmapOverlayFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.browser.NavScreen\:\ void\ close(int)>=android.permission.GET_ACCOUNTS
<android.net.wifi.WifiManager\:\ void\ startWps(android.net.wifi.WpsInfo,android.net.wifi.WifiManager$WpsCallback)>=android.permission.ACCESS_WIFI_STATE, android.permission.CHANGE_WIFI_STATE
<android.server.BluetoothService\:\ void\ handlePanDeviceStateChange(android.bluetooth.BluetoothDevice,int,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.CalendarSettingsActivity$1\:\ void\ run()>=android.permission.GET_ACCOUNTS
<android.net.wifi.WifiManager$MulticastLock\:\ void\ acquire()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<android.view.IWindowManager$Stub$Proxy\:\ void\ thawRotation()>=android.permission.WRITE_SETTINGS
<com.android.gallery3d.ui.SlideshowView\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<android.widget.VideoView\:\ void\ start()>=android.permission.WAKE_LOCK
<com.android.contacts.list.OnContactBrowserActionListener\:\ void\ onFinishAction()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.DataUsageSummary\:\ java.lang.CharSequence\ buildLimitedNetworksString()>=android.permission.READ_PHONE_STATE
<android.net.ConnectivityManager\:\ boolean\ isActiveNetworkMetered()>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.InCallScreen\:\ void\ access$1200(com.android.phone.InCallScreen)>=android.permission.BLUETOOTH
<android.net.sip.ISipService$Stub\:\ void\ setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>=android.permission.USE_SIP
<com.android.mms.ui.SlideshowPresenter\:\ void\ presentAudio(com.android.mms.ui.SlideViewInterface,com.android.mms.model.AudioModel,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.DataConnection$DcDisconnectionErrorCreatingConnection\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.email.activity.MessageViewFragment\:\ void\ onRespondToInvite(int,int)>=android.permission.READ_SYNC_SETTINGS
<android.widget.DateTimeView\:\ void\ onAttachedToWindow()>=android.permission.WRITE_SETTINGS
<com.android.emailcommon.utility.EmailAsyncTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.audio.AudioService\:\ int\ requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback)>=android.permission.MODIFY_PHONE_STATE
<com.android.calendar.DeleteEventHelper$2\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_CALENDAR
<com.android.server.media.projection.MediaProjectionManagerService$BinderService\:\ android.media.projection.MediaProjectionInfo\ getActiveProjectionInfo()>=android.permission.MANAGE_MEDIA_PROJECTION
<android.location.ILocationManager$Stub$Proxy\:\ void\ setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ access$7000(com.android.mms.ui.ComposeMessageActivity,int)>=android.permission.WRITE_SMS
<com.android.settings.bluetooth.BluetoothPairingDialog\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ access$2900(com.android.mms.ui.ComposeMessageActivity,long)>=android.permission.WRITE_SMS
<com.android.server.ThrottleService\:\ long\ getByteCount(java.lang.String,int,int,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.TelephonyRegistry\:\ void\ notifyCellInfoForSubscriber(int,java.util.List)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setPasswordMinimumLowerCase(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.sip.SipService$AutoRegistrationProcess\:\ boolean\ notCurrentSession(android.net.sip.ISipSession)>=android.permission.WAKE_LOCK
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ int\ getPhonebookAccessPermission(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.bluetooth.sap.SapService$SapBinder\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<com.android.browser.DataController$DataControllerHandler\:\ void\ doSaveThumbnail(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<com.android.phone.BluetoothAtPhonebook$1\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<android.speech.tts.TextToSpeech\:\ java.util.Locale\ getDefaultLanguage()>=android.permission.BROADCAST_STICKY
<android.net.nsd.INsdManager\:\ android.os.Messenger\ getMessenger()>=android.permission.INTERNET
<com.android.calendar.AllInOneActivity\:\ void\ onUserLeaveHint()>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.PhoneSubInfo\:\ java.lang.String\ getVoiceMailNumber()>=android.permission.READ_PHONE_STATE
<com.android.server.wifi.WifiServiceImpl\:\ void\ updateWifiLockWorkSource(android.os.IBinder,android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS
<android.net.INetworkPolicyManager$Stub$Proxy\:\ android.net.NetworkQuotaInfo\ getNetworkQuotaInfo(android.net.NetworkState)>=android.permission.ACCESS_NETWORK_STATE
<com.android.exchange.ExchangeService$ConnectivityReceiver$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.google.common.io.InputSupplier\:\ java.lang.Object\ getInput()>=android.permission.INTERNET
<com.android.nfc.NfcService$TagService\:\ android.nfc.Tag\ rediscover(int)>=android.permission.NFC
<com.android.internal.telephony.RIL\:\ void\ send(com.android.internal.telephony.RILRequest)>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ java.lang.String[]\ getRemoteDeviceProperties(java.lang.String)>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager$Stub$Proxy\:\ boolean\ pingSupplicant()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter\:\ void\ onError(com.android.internal.telephony.Connection$DisconnectCause)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cat.IconLoader\:\ void\ loadIcon(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewCallback\:\ void\ pokeWakelock()>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ void\ resetDefaultImeLocked(android.content.Context)>=android.permission.WRITE_SETTINGS
<android.accounts.IAccountManager\:\ java.lang.String\ getPassword(android.accounts.Account)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.server.am.ActivityManagerService\:\ com.android.server.am.ProcessRecord\ startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.ActionModeHandler$3\:\ java.lang.Void\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.NFC
<android.view.VolumePanel\:\ void\ onVibrate()>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageCompose$LoadMessageTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<android.service.dreams.DreamService\:\ void\ finish()>=android.permission.BROADCAST_STICKY
<com.android.calendar.Utils\:\ java.lang.String\ formatMonthYear(android.content.Context,android.text.format.Time)>=android.permission.READ_CALENDAR
<com.android.server.AppOpsService\:\ java.util.List\ getOpsForPackage(int,java.lang.String,[int)>=android.permission.GET_APP_OPS_STATS
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onCdmaDataDetached()>=android.permission.BROADCAST_STICKY
<com.android.server.pm.PackageManagerService\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.calendar.alerts.AlertService\:\ boolean\ updateAlertNotification(android.content.Context)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.sip.SipPhone\:\ void\ requestIsimAuthentication(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.mail.store.ServiceStore\:\ com.android.emailcommon.service.IEmailService\ getService()>=android.permission.READ_PHONE_STATE
<com.android.email.EmailConnectivityManager\:\ void\ waitForConnectivity()>=android.permission.WAKE_LOCK
<com.android.server.TelephonyRegistry\:\ void\ notifyMessageWaitingChangedForPhoneId(int,int,boolean)>=android.permission.MODIFY_PHONE_STATE
<com.google.common.io.Files\:\ byte[]\ toByteArray(java.io.File)>=android.permission.INTERNET
<com.android.mms.ui.MessageUtils$4\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.READ_SMS
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ int\ getProfileConnectionState(com.android.settings.bluetooth.LocalBluetoothProfile)>=android.permission.BLUETOOTH
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler\:\ boolean\ handlePhotoActivityResult(int,int,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.SystemAllowGeolocationOrigins\:\ void\ start()>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.WhitelistDictionary\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<com.android.mms.ui.MmsThumbnailPresenter\:\ void\ presentVideoThumbnail(com.android.mms.ui.SlideViewInterface,com.android.mms.model.VideoModel)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ updateMessageOrderManager()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.list.ContactEntryListFragment\:\ void\ onClose()>=android.permission.READ_SYNC_SETTINGS
<com.android.emailcommon.service.IEmailService\:\ void\ hostChanged(long)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager\:\ int\ getNetworkPreference()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.CallDetailActivity$6\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.WRITE_CALL_LOG
<android.content.SyncManager$6\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ android.os.ParcelFileDescriptor\ connectSocket(android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid,int,int)>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ void\ enableVideoCalling(boolean)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ boolean\ setMagnificationScaleAndCenter(float,float,float,boolean)>=android.permission.INTERACT_ACROSS_USERS
<android.test.IsolatedContext$MockAccountManager\:\ android.accounts.AccountManagerFuture\ getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ showSearchPanel()>=android.permission.VIBRATE
<com.android.server.NetworkManagementService\:\ void\ removeInterfaceFromNetwork(java.lang.String,int)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.contacts.activities.PeopleActivity\:\ void\ onNewIntent(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.LockSettingsService\:\ void\ requireStrongAuth(int,int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<android.content.SyncManager\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.nfc.nxp.NativeNfcManager\:\ void\ notifyTargetDeselected()>=android.permission.BLUETOOTH
<com.android.server.AppOpsService\:\ void\ finishOperation(android.os.IBinder,int,int,java.lang.String)>=android.permission.UPDATE_APP_OPS_STATS
<com.android.internal.telephony.RIL\:\ void\ getPreferredVoicePrivacy(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.activities.PeopleActivity\:\ boolean\ areContactWritableAccountsAvailable()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ explicitCallTransfer(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ConversationList\:\ void\ startAsyncQuery()>=android.permission.READ_SMS
<com.android.inputmethod.latin.UserBinaryDictionary\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<com.android.quicksearchbox.google.AbstractGoogleSource\:\ com.android.quicksearchbox.SourceResult\ queryInternal(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.server.BluetoothA2dpService\:\ java.util.List\ getDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<android.net.sip.SipAudioCall\:\ void\ startAudio()>=android.permission.ACCESS_WIFI_STATE, android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getDeviceIdForPhone(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.ConnectivityService\:\ void\ access$1800(com.android.server.ConnectivityService,int)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardViewManager$KeyguardViewHost\:\ void\ dispatchDraw(android.graphics.Canvas)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ com.android.server.am.ProcessRecord\ addAppLocked(android.content.pm.ApplicationInfo,boolean)>=android.permission.WAKE_LOCK
<com.android.browser.PreloadRequestReceiver\:\ void\ handlePreload(android.content.Context,android.content.Intent)>=android.permission.GET_ACCOUNTS
<android.server.BluetoothService\:\ boolean\ registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)>=android.permission.BLUETOOTH
<com.android.exchange.EasAccountService\:\ void\ sync(com.android.exchange.adapter.AbstractSyncAdapter)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary\:\ void\ loadDictionary()>=android.permission.WRITE_CONTACTS
<android.net.ConnectivityManager\:\ int\ getNetworkPreference()>=android.permission.ACCESS_NETWORK_STATE
<com.android.soundrecorder.Recorder\:\ void\ startPlayback()>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.ScrollBarView\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.WifiService\:\ void\ disconnect()>=android.permission.CHANGE_WIFI_STATE
<android.app.ActivityManagerNative\:\ void\ killAllBackgroundProcesses()>=android.permission.KILL_BACKGROUND_PROCESSES
<com.android.gallery3d.app.MoviePlayer\:\ void\ startVideo()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.RequestPermissionActivity\:\ void\ createDialog()>=android.permission.BLUETOOTH
<com.android.providers.contacts.VoicemailContentProvider\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.browser.Preloader\:\ void\ handlePreloadRequest(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getPasswordMinimumSymbols(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.mms.ui.ComposeMessageActivity\:\ void\ launchMultiplePhonePicker()>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.contacts.CallLogProvider\:\ int\ delete(android.net.Uri,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.server.power.PowerManagerService$BinderService\:\ void\ setAttentionLight(boolean,int)>=android.permission.DEVICE_POWER
<android.content.IContentService$Stub$Proxy\:\ void\ setMasterSyncAutomatically(boolean)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaLteUiccRecords\:\ void\ handleFileUpdate(int)>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerOnePane\:\ boolean\ onBackPressed(boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.DayFragment\:\ void\ eventsChanged()>=android.permission.READ_CALENDAR
<com.android.phone.CallLogAsync$AddCallTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ sendBurstDtmf(java.lang.String,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.LocationSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.music.IMediaPlaybackService$Stub$Proxy\:\ void\ setQueuePosition(int)>=android.permission.WAKE_LOCK
<com.android.contacts.editor.ContactEditorFragment$5\:\ android.content.Loader\ onCreateLoader(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$LocationSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.mms.data.WorkingMessage\:\ boolean\ access$300(com.android.mms.data.WorkingMessage,android.net.Uri)>=android.permission.WRITE_SMS
<com.android.server.am.ActivityManagerService\:\ void\ clearGrantedUriPermissions(java.lang.String,int)>=android.permission.CLEAR_APP_GRANTED_URI_PERMISSIONS
<android.location.ILocationManager$Stub$Proxy\:\ boolean\ isProviderEnabled(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setDataRoamingEnabled(boolean)>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.FisheyeFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.calendar.EventInfoFragment\:\ void\ onDestroyView()>=android.permission.WRITE_CALENDAR
<com.android.inputmethod.latin.AudioAndHapticFeedbackManager\:\ void\ vibrate(android.view.View)>=android.permission.VIBRATE
<com.android.internal.telephony.SMSDispatcher\:\ void\ acknowledgeLastIncomingSms(boolean,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiManager\:\ boolean\ disableNetwork(int)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.ServerThread\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ setPostDialState(com.android.internal.telephony.Connection$PostDialState)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onSetInternalDataEnabled(boolean)>=android.permission.BROADCAST_STICKY
<com.android.server.TextServicesManagerService$TextServicesMonitor\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.wallpaper.grass.GrassRS\:\ void\ start()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.bluetooth.BluetoothEventManager$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.settings.CryptKeeper\:\ void\ onCreate(android.os.Bundle)>=android.permission.WRITE_SETTINGS
<com.android.calendar.CalendarViewAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_CALENDAR
<com.android.browser.BreadCrumbView\:\ void\ notifyController()>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ startDiscovery()>=android.permission.BLUETOOTH_ADMIN
<com.android.server.TelephonyRegistry\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.emailcommon.utility.EmailAsyncTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.common.contacts.BaseEmailAddressAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothService\:\ boolean\ setDiscoverableTimeout(int)>=android.permission.BLUETOOTH
<android.telephony.TelephonyManager\:\ android.telephony.CellLocation\ getCellLocation()>=android.permission.ACCESS_FINE_LOCATION
<android.location.ILocationManager$Stub\:\ void\ addProximityAlert(double,double,float,long,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState\:\ void\ handlePreciseCallStateChange(boolean,com.android.internal.telephony.Connection)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivity\:\ void\ addAttachment(java.lang.String,android.net.Uri,boolean)>=android.permission.READ_SYNC_SETTINGS
<android.location.ILocationManager\:\ void\ requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>=android.permission.ACCESS_COARSE_LOCATION
<android.media.IAudioService$Stub$Proxy\:\ void\ dispatchMediaKeyEventUnderWakelock(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ToGrayFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.filterfw.core.Filter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.BandMode\:\ void\ loadBandList()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.ISms\:\ boolean\ enableCellBroadcastRange(int,int)>=android.permission.WAKE_LOCK
<android.media.IAudioService\:\ void\ startBluetoothSco(android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.phone.PhoneUtils\:\ void\ setMuteInternal(com.android.internal.telephony.Phone,boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ setCdmaRoamingPreference(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.content.pm.IPackageManager$Stub$Proxy\:\ void\ freeStorage(long,android.content.IntentSender)>=android.permission.CLEAR_APP_CACHE
<com.android.phone.sip.SipSettings\:\ void\ addProfile(android.net.sip.SipProfile)>=android.permission.USE_SIP
<com.android.settings.CryptKeeper\:\ void\ encryptionProgressInit()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ separateConnection(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setKeyguardDisabledFeatures(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.email.activity.FragmentInstallable\:\ void\ onInstallFragment(android.app.Fragment)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.nfc.tech.NdefFormatable\:\ void\ reconnect()>=android.permission.NFC
<android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.contacts.activities.PeopleActivity\:\ boolean\ access$300(com.android.contacts.activities.PeopleActivity)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.contacts.ContactsProvider2\:\ void\ outputRawContactsAsVCard(android.net.Uri,java.io.OutputStream,java.lang.String,java.lang.String[])>=android.permission.WRITE_CONTACTS
<android.speech.RecognitionService$RecognitionServiceBinder\:\ void\ startListening(android.content.Intent,android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<com.android.server.WifiService\:\ void\ checkAndStartWifi()>=android.permission.ACCESS_NETWORK_STATE
<com.android.deskclock.Alarms\:\ void\ saveSnoozeAlert(android.content.Context,int,long)>=android.permission.WRITE_SETTINGS
<com.android.gallery3d.app.SlideshowPage$1\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ disableLocationUpdates()>=android.permission.WAKE_LOCK
<com.android.settings.SettingsPreferenceFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ getIMSI(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ void\ verifyIntentFilter(int,int,java.util.List)>=android.permission.INTENT_FILTER_VERIFICATION_AGENT
<android.filterpacks.videoproc.BackDropperFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.pm.PackageManagerService\:\ boolean\ isPackageSuspendedForUser(java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.am.ActivityManagerService\:\ android.app.IActivityContainer\ createVirtualActivityContainer(android.os.IBinder,android.app.IActivityContainerCallback)>=android.permission.MANAGE_ACTIVITY_STACKS
<com.android.settings.bluetooth.A2dpProfile\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.list.AccountFilterActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothGattServer\:\ boolean\ sendResponse(android.bluetooth.BluetoothDevice,int,int,int,[byte)>=android.permission.BLUETOOTH
<com.android.bluetooth.avrcp.AvrcpControllerService$BluetoothAvrcpControllerBinder\:\ void\ sendGroupNavigationCmd(android.bluetooth.BluetoothDevice,int,int)>=android.permission.BLUETOOTH
<com.android.server.content.ContentService\:\ int\ getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.READ_SYNC_SETTINGS
<com.android.exchange.adapter.ItemOperationsParser\:\ void\ parseResponse()>=android.permission.READ_SYNC_SETTINGS
<android.webkit.HTML5VideoFullScreen\:\ void\ prepareForFullScreen()>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine$SoftApStartedState\:\ boolean\ processMessage(android.os.Message)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetooth\:\ boolean\ unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.internal.widget.multiwaveview.GlowPadView\:\ void\ handleCancel(android.view.MotionEvent)>=android.permission.BLUETOOTH
<android.accounts.IAccountManager$Stub\:\ void\ addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>=android.permission.MANAGE_ACCOUNTS
<com.android.mms.util.Recycler$MmsRecycler\:\ void\ deleteMessagesOlderThanDate(android.content.Context,long,long)>=android.permission.WRITE_SMS
<com.android.vcard.VCardEntry$NoteData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.ContactsUtils\:\ boolean\ areContactWritableAccountsAvailable(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ getLine1NumberForDisplay(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.internal.telephony.IccSmsInterfaceManagerProxy\:\ boolean\ disableCellBroadcast(int)>=android.permission.RECEIVE_SMS
<com.android.internal.policy.impl.PatternUnlockScreen\:\ void\ onWindowFocusChanged(boolean)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.PhotoView\:\ boolean\ access$3600(com.android.gallery3d.ui.PhotoView,float,float)>=android.permission.VIBRATE
<com.android.providers.media.MediaScannerService\:\ void\ access$300(com.android.providers.media.MediaScannerService,java.lang.String[],java.lang.String)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.LegacyApiSupport\:\ int\ updatePhotoByDataId(long,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.LockScreen$3\:\ void\ run()>=android.permission.GET_ACCOUNTS
<com.android.calendar.agenda.AgendaWindowAdapter\:\ boolean\ access$1600(com.android.calendar.agenda.AgendaWindowAdapter,com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>=android.permission.WRITE_CALENDAR
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ access$1800(com.android.internal.policy.impl.KeyguardViewMediator,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.SMSDispatcher\:\ void\ dispatchBroadcastMessage(android.telephony.SmsCbMessage)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ void\ cancelDiscovery()>=android.permission.BLUETOOTH
<com.android.server.RecognitionManagerService$MyPackageMonitor\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ cancelBondProcess(java.lang.String)>=android.permission.BLUETOOTH
<com.android.mms.transaction.PushReceiver$ReceivePushTask\:\ java.lang.Void\ doInBackground(android.content.Intent[])>=android.permission.READ_SMS
<android.server.BluetoothEventLoop\:\ void\ onDeviceRemoved(java.lang.String)>=android.permission.BLUETOOTH
<com.android.contacts.activities.GroupBrowserActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.exchange.ExchangeService\:\ void\ serviceRequest(long,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.DateTimeSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.ToRGBFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.calendar.month.MonthWeekEventsView\:\ boolean\ onHoverEvent(android.view.MotionEvent)>=android.permission.READ_CALENDAR
<com.android.emailcommon.utility.EmailAsyncTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.InputMethodManagerService\:\ void\ buildInputMethodListLocked(java.util.ArrayList,java.util.HashMap)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.PhoneProxy\:\ void\ queryCdmaRoamingPreference(android.os.Message)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ImageSlicer\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneApp\:\ void\ access$800(com.android.phone.PhoneApp,android.os.Message)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.mms.data.WorkingMessage\:\ android.net.Uri\ saveAsMms(boolean)>=android.permission.WRITE_SMS
<com.android.music.MediaPlaybackActivity\:\ void\ doPauseResume()>=android.permission.WAKE_LOCK
<com.google.common.io.Resources\:\ java.lang.Object\ readLines(java.net.URL,java.nio.charset.Charset,com.google.common.io.LineProcessor)>=android.permission.INTERNET
<com.android.server.LockSettingsService\:\ long\ getLong(java.lang.String,long,int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE, android.permission.READ_CONTACTS
<android.filterpacks.base.FrameStore\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onRadioAvailable()>=android.permission.BROADCAST_STICKY
<com.android.settings.wifi.WifiSettingsForSetupWizardXL\:\ void\ onConnectButtonPressed()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.ConnectivityService\:\ int\ untether(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE, android.permission.TETHER_PRIVILEGED
<android.nfc.INfcTag\:\ void\ resetTimeouts()>=android.permission.NFC
<android.filterpacks.imageproc.CropRectFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.providers.calendar.CalendarProvider2\:\ int\ deleteFromEventRelatedTable(java.lang.String,android.net.Uri,java.lang.String,java.lang.String[])>=android.permission.READ_CALENDAR
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory\:\ android.net.Uri\ createLoaderUri()>=android.permission.WRITE_CALENDAR
<com.android.mms.ui.MessageItem\:\ void\ access$100(com.android.mms.ui.MessageItem,com.google.android.mms.pdu.EncodedStringValue,android.net.Uri)>=android.permission.READ_SMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ getForceEphemeralUsers(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.PhoneApp$NotificationBroadcastReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.RIL\:\ void\ queryCdmaRoamingPreference(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$PrivacySettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<android.media.RingtoneManager\:\ void\ setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)>=android.permission.WRITE_SETTINGS
<com.android.contacts.editor.ContactEditorFragment\:\ void\ bindPhotoHandler(com.android.contacts.editor.BaseRawContactEditorView,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDeltaList)>=android.permission.WRITE_CONTACTS
<com.android.phone.PhoneUtils\:\ void\ setAudioMode(com.android.internal.telephony.CallManager)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.Invert\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.nfc.INfcAdapterExtras$Stub\:\ android.os.Bundle\ open(java.lang.String,android.os.IBinder)>=android.permission.NFC
<android.location.ILocationManager$Stub\:\ boolean\ sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>=android.permission.ACCESS_LOCATION_EXTRA_COMMANDS
<com.android.email.activity.MessageFileViewFragment\:\ java.io.File\ performAttachmentSave(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.bluetooth.pbap.BluetoothPbapService\:\ void\ access$900(com.android.bluetooth.pbap.BluetoothPbapService)>=android.permission.BLUETOOTH
<com.android.nfc.handover.HandoverManager$HandoverTransfer\:\ void\ updateNotification()>=android.permission.VIBRATE
<com.android.phone.sip.SipEditor$2\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccCard\:\ void\ supplyPin(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.CropView$HighlightRectangle\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<com.android.contacts.activities.JoinContactActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ notifyApnIdUpToCurrent(java.lang.String,int)>=android.permission.BROADCAST_STICKY
<com.android.common.widget.CompositeCursorAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.music.IMediaPlaybackService\:\ void\ setRepeatMode(int)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ToRGBFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ setScanMode(int,int)>=android.permission.BLUETOOTH
<com.android.calendar.agenda.AgendaFragment\:\ void\ search(java.lang.String,android.text.format.Time)>=android.permission.WRITE_CALENDAR
<com.android.contacts.model.AccountTypeManagerImpl\:\ void\ onStatusChanged(int)>=android.permission.READ_SYNC_SETTINGS
<android.content.ISyncAdapter$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ int\ stopUsingNetworkFeature(com.android.server.ConnectivityService$FeatureUser,boolean)>=android.permission.BLUETOOTH
<android.view.WindowManagerPolicy\:\ void\ notifyLidSwitchChanged(long,boolean)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME\:\ void\ commitCurrentAutoCorrection(int,android.view.inputmethod.InputConnection)>=android.permission.WRITE_CONTACTS
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingInvitationState\:\ boolean\ processMessage(android.os.Message)>=android.permission.GET_TASKS
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.settings.TetherSettings$TetherChangeReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<android.location.ILocationManager\:\ void\ removeTestProvider(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.email.activity.MessageFileViewFragment\:\ void\ onOpenAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.music.MediaPlaybackService\:\ void\ prev()>=android.permission.WAKE_LOCK
<com.android.settings.NsdEnabler\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WRITE_SETTINGS
<android.bluetooth.BluetoothAdapter\:\ android.bluetooth.le.BluetoothLeScanner\ getBluetoothLeScanner()>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHandsfree$VendorSpecificCommandHandler\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.email.activity.MessageViewFragmentBase\:\ void\ reloadUiFromMessage(com.android.emailcommon.provider.EmailContent$Message,boolean)>=android.permission.READ_PHONE_STATE
<android.net.IConnectivityManager$Stub\:\ android.net.LinkProperties\ getLinkProperties(int)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothTetheringDataTracker\:\ boolean\ teardown()>=android.permission.BLUETOOTH
<com.android.settings.widget.SettingsAppWidgetProvider\:\ void\ toggleBrightness(android.content.Context)>=android.permission.WRITE_SETTINGS
<android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl\:\ android.content.Entity\ next()>=android.permission.READ_CALENDAR
<com.android.contacts.activities.ContactDetailActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.music.AudioPreview$PreviewPlayer\:\ void\ stayAwake(boolean)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ void\ setInterfaceQuota(java.lang.String,long)>=android.permission.CONNECTIVITY_INTERNAL
<android.content.IContentService$Stub\:\ boolean\ getMasterSyncAutomatically()>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.NotificationTransaction\:\ byte[]\ getPdu(java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<android.net.wifi.WifiStateMachine$TetheringState\:\ boolean\ processMessage(android.os.Message)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.TetherSettings\:\ void\ access$300(com.android.settings.TetherSettings)>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ sendCDMAFeatureCode(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.exchange.adapter.AbstractSyncAdapter\:\ boolean\ isSyncable()>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.LatinIME\:\ void\ launchSettingsClass(java.lang.Class)>=android.permission.WRITE_CONTACTS
<com.android.emailcommon.Device\:\ java.lang.String\ getDeviceId(android.content.Context)>=android.permission.READ_PHONE_STATE
<android.filterpacks.imageproc.SaturateFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.telephony.TelephonyManager\:\ java.lang.String\ getIccAuthentication(int,int,java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.month.MonthByWeekFragment\:\ void\ updateMonthHighlight(android.widget.AbsListView)>=android.permission.WRITE_CALENDAR
<android.nfc.INfcTag$Stub$Proxy\:\ android.nfc.Tag\ rediscover(int)>=android.permission.NFC
<android.bluetooth.IBluetoothHeadset\:\ boolean\ isAudioConnected(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ supplyIccPuk(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$24\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask\:\ void\ doWork()>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.SubscriptionController\:\ int\ setDisplayNumber(java.lang.String,int)>=android.permission.MODIFY_PHONE_STATE
<com.android.calendar.EventInfoFragment$11\:\ void\ onClick(android.view.View)>=android.permission.WRITE_CALENDAR
<com.android.server.content.ContentService\:\ void\ addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.mms.ui.MessageListAdapter\:\ com.android.mms.ui.MessageItem\ getCachedMessageItem(java.lang.String,long,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ boolean\ connectHeadsetInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.SettingsLicenseActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.INTERNET
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ setSmscAddress(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.ITelephonyRegistry$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.inputmethod.KeyboardLayoutPickerFragment\:\ void\ onPause()>=android.permission.BLUETOOTH
<android.app.ActivityManagerNative\:\ void\ setLockScreenShown(boolean)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.ReadRecTransaction\:\ byte[]\ getPdu(java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<android.location.ILocationManager\:\ boolean\ addGpsStatusListener(android.location.IGpsStatusListener)>=android.permission.ACCESS_FINE_LOCATION
<com.android.contacts.interactions.ContactDeletionInteraction\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothService\:\ boolean\ notifyIncomingA2dpConnection(java.lang.String,boolean)>=android.permission.BLUETOOTH
<com.android.music.MediaPlaybackService\:\ void\ play()>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ access$3800(com.android.mms.ui.ComposeMessageActivity,long)>=android.permission.WRITE_SMS
<android.media.effect.effects.NegativeEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.contacts.activities.ContactSelectionActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaCall\:\ void\ hangupIfAlive()>=android.permission.WAKE_LOCK
<com.android.email.activity.setup.AccountSecurity$1\:\ void\ run()>=android.permission.VIBRATE
<com.android.server.usb.UsbSettingsManager$MyPackageMonitor\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<android.nfc.INfcTag$Stub\:\ android.nfc.TransceiveResult\ transceive(int,byte[],boolean)>=android.permission.NFC
<com.android.gallery3d.ui.SlideshowView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.editor.PhotoActionPopup$1\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageOrderManager$LoadMessageListTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.media.AudioService\:\ void\ access$1300(android.media.AudioService,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneProxy\:\ void\ deleteAndCreatePhone(int)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ void\ scanDirLI(java.io.File,int,int,long)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ java.lang.String[]\ listTetheredInterfaces()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ onClose()>=android.permission.READ_SYNC_SETTINGS
<android.hardware.location.ActivityRecognitionHardware\:\ boolean\ isActivitySupported(java.lang.String)>=android.permission.LOCATION_HARDWARE
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler\:\ void\ setSubtypeAutoSelectionEnabled(java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<com.android.music.IMediaPlaybackService$Stub\:\ void\ pause()>=android.permission.WAKE_LOCK
<android.service.dreams.DreamService\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary\:\ void\ asyncReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<android.location.ILocationManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.ACCESS_LOCATION_EXTRA_COMMANDS
<com.android.emailcommon.service.EmailServiceProxy$13\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<android.location.ILocationManager\:\ void\ setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.phone.InCallTouchUi\:\ void\ updateInCallControls(com.android.internal.telephony.CallManager)>=android.permission.BLUETOOTH
<com.android.bluetooth.pbap.BluetoothPbapService\:\ void\ stopObexServerSession()>=android.permission.BLUETOOTH
<android.media.AudioService\:\ void\ disconnectBluetoothSco(int)>=android.permission.BLUETOOTH
<com.android.internal.widget.multiwaveview.MultiWaveView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<android.accounts.AccountManager$3\:\ void\ doWork()>=android.permission.GET_ACCOUNTS
<android.net.wifi.WifiStateMachine$DriverUnloadedState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.telephony.IPhoneSubInfo$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_PHONE_STATE
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory\:\ void\ initLoader(java.lang.String)>=android.permission.WRITE_CALENDAR
<com.android.camera.Camera\:\ void\ createCameraScreenNail(boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.BluetoothNameDialogFragment\:\ void\ setDeviceName(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.ThrottleService$DataRecorder\:\ void\ checkForSubscriberId()>=android.permission.READ_PHONE_STATE
<com.android.phone.PhoneUtils$2\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WAKE_LOCK
<android.speech.SpeechRecognizer\:\ void\ access$100(android.speech.SpeechRecognizer)>=android.permission.RECORD_AUDIO
<android.webkit.WebViewClassic\:\ void\ init(java.util.Map,boolean)>=android.permission.INTERNET
<android.app.ContextImpl$ApplicationContentResolver\:\ android.content.SyncStatusInfo\ getSyncStatus(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.server.InputMethodManagerService\:\ void\ access$900(com.android.server.InputMethodManagerService)>=android.permission.WRITE_SETTINGS
<com.android.contacts.socialwidget.SocialWidgetProvider$1\:\ void\ onLoadComplete(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.sip.SipSettings\:\ void\ retrieveSipLists()>=android.permission.USE_SIP
<android.filterpacks.base.FrameSource\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ checkSelection()>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothA2dp\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.emailcommon.utility.Utility$ForEachAccount\:\ void\ onPostExecute(java.lang.Long[])>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary\:\ void\ loadDictionaryAsync()>=android.permission.WRITE_CONTACTS
<com.android.contacts.NfcHandler\:\ void\ register(android.app.Activity,com.android.contacts.detail.ContactDetailFragment)>=android.permission.NFC
<com.android.browser.Controller\:\ com.android.browser.Tab\ openIncognitoTab()>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetooth\:\ boolean\ setInputDevicePriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<android.filterpacks.base.FrameFetch\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactPickerFragment\:\ void\ setSearchMode(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.ContactSelectionActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.Phone\:\ void\ sendBurstDtmf(java.lang.String,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneBase\:\ void\ queryAvailableBandMode(android.os.Message)>=android.permission.WAKE_LOCK
<android.webkit.HTML5VideoFullScreen\:\ void\ pauseAndDispatch(android.webkit.HTML5VideoViewProxy)>=android.permission.WAKE_LOCK
<android.app.NativeActivity\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.browser.SuggestionsAdapter\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ setVisible(boolean)>=android.permission.BLUETOOTH
<com.android.settings.ApplicationSettings\:\ void\ setAdvancedSettingsEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.music.AudioPreview\:\ void\ onUserLeaveHint()>=android.permission.WAKE_LOCK
<com.android.email.activity.setup.AccountSettingsFragment\:\ void\ onPause()>=android.permission.WRITE_SYNC_SETTINGS
<com.android.calendar.alerts.NotificationMgr\:\ void\ notify(int,com.android.calendar.alerts.AlertService$NotificationWrapper)>=android.permission.VIBRATE
<com.android.emailcommon.service.IPolicyService\:\ void\ setAccountPolicy(long,com.android.emailcommon.provider.Policy,java.lang.String)>=android.permission.VIBRATE
<android.net.wifi.WifiManager\:\ void\ cancelWps(android.net.wifi.WifiManager$WpsCallback)>=android.permission.ACCESS_WIFI_STATE, android.permission.CHANGE_WIFI_STATE
<java.net.ServerSocket\:\ void\ bind(java.net.SocketAddress)>=android.permission.INTERNET
<com.android.internal.telephony.RIL\:\ void\ queryFacilityLock(java.lang.String,java.lang.String,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.provider.UserDictionary$Words\:\ void\ addWord(android.content.Context,java.lang.String,int,int)>=android.permission.WRITE_USER_DICTIONARY
<com.android.settings.net.DataUsageMeteredSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.Phone$DataState)>=android.permission.BROADCAST_STICKY
<com.android.internal.policy.impl.AccountUnlockScreen\:\ void\ onResume()>=android.permission.WAKE_LOCK
<com.android.internal.content.PackageMonitor\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.LocationManagerService$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.providers.calendar.CalendarAlarmManager\:\ void\ scheduleNextAlarmLocked(android.database.sqlite.SQLiteDatabase,com.android.providers.calendar.CalendarProvider2)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ access$100(com.android.internal.telephony.gsm.GsmConnection)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneApp$PhoneAppBroadcastReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.settings.Settings$BluetoothSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.pbap.BluetoothPbapService$SocketAcceptThread\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.server.sip.SipService\:\ void\ open(android.net.sip.SipProfile,java.lang.String)>=android.permission.USE_SIP
<com.android.contacts.list.ContactListFilterControllerImpl\:\ void\ setContactListFilter(com.android.contacts.list.ContactListFilter,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.contacts.LegacyApiSupport\:\ int\ updatePhones(long,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.ContactSaveService\:\ void\ deleteGroup(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.widget.multiwaveview.MultiWaveView$2\:\ void\ onAnimationEnd(android.animation.Animator)>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ releaseWakeLock()>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ int\ getDataNetworkType(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.net.sip.ISipService\:\ void\ close(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ com.android.phone.InCallControlState\ getUpdatedInCallControlState()>=android.permission.BLUETOOTH
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMemberFilter\:\ android.widget.Filter$FilterResults\ performFiltering(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.email.activity.setup.AccountSettingsEditQuickResponsesFragment$QuickResponseFinder\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.deskclock.AlarmAlert\:\ void\ access$000(com.android.deskclock.AlarmAlertFullScreen)>=android.permission.WRITE_SETTINGS
<android.filterpacks.text.StringSource\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.CropView$FaceHighlightView\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ access$2900(com.android.systemui.statusbar.phone.PhoneStatusBar)>=android.permission.VIBRATE
<com.android.settings.TetherSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.browser.DataController$DataControllerHandler\:\ void\ doLoadThumbnail(com.android.browser.Tab)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.settings.widget.SettingsAppWidgetProvider\:\ void\ updateWidget(android.content.Context)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.PhotoView\:\ void\ checkHideUndoBar(int)>=android.permission.VIBRATE
<com.android.mms.util.Recycler$MmsRecycler\:\ void\ deleteMessagesForThread(android.content.Context,long,int)>=android.permission.WRITE_SMS
<com.android.bluetooth.pbap.BluetoothPbapObexServer\:\ int\ pullPhonebook(byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.HeaderSet,javax.obex.Operation,java.lang.String)>=android.permission.READ_CALL_LOG
<android.server.BluetoothA2dpService\:\ void\ access$300(android.server.BluetoothA2dpService,android.bluetooth.BluetoothDevice,int,int)>=android.permission.BLUETOOTH
<com.android.contacts.list.OnContactBrowserActionListener\:\ void\ onSelectionChange()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.GsmConnection\:\ boolean\ processPostDialChar(char)>=android.permission.WAKE_LOCK
<android.media.AudioManager\:\ void\ stopBluetoothSco()>=android.permission.BLUETOOTH, android.permission.MODIFY_AUDIO_SETTINGS
<com.android.internal.widget.multiwaveview.MultiWaveView\:\ void\ access$300(com.android.internal.widget.multiwaveview.MultiWaveView,int,float,float)>=android.permission.VIBRATE
<com.android.server.appwidget.AppWidgetServiceImpl\:\ void\ unbindRemoteViewsService(java.lang.String,int,android.content.Intent)>=android.permission.BIND_APPWIDGET
<com.android.phone.PhoneInterfaceManager\:\ boolean\ nvResetConfig(int)>=android.permission.MODIFY_PHONE_STATE
<com.android.mms.data.Conversation\:\ void\ dumpSmsTable(android.content.Context)>=android.permission.RECEIVE_SMS
<com.android.contacts.activities.GroupDetailActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.dialpad.DialpadFragment\:\ boolean\ fillDigitsIfNecessary(android.content.Intent)>=android.permission.READ_PHONE_STATE
<android.net.wifi.WifiStateMachine$SupplicantStoppingState\:\ void\ enter()>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.pbap.BluetoothPbapVcardManager\:\ int\ composeAndSendVCards(javax.obex.Operation,java.lang.String,boolean,java.lang.String,boolean)>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.ServiceStateTracker\:\ boolean\ processPendingRadioPowerOffAfterDataOff()>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ setDebugApp(java.lang.String,boolean,boolean)>=android.permission.SET_DEBUG_APP
<com.android.internal.telephony.CommandsInterface\:\ void\ getSmscAddress(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.input.InputManagerService\:\ int\ isInTabletMode()>=android.permission.TABLET_MODE
<android.filterpacks.base.RetargetFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.am.ActivityManagerService\:\ void\ hang(android.os.IBinder,boolean)>=android.permission.SET_ACTIVITY_WATCHER
<android.server.BluetoothAdapterStateMachine$Switching\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.contacts.voicemail.VoicemailPlaybackPresenter\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.contacts.list.LegacyContactListAdapter\:\ android.net.Uri\ getPersonUri(int)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothEventLoop\:\ void\ onInputDeviceConnectionResult(java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ void\ setNetworkPreference(int)>=android.permission.BLUETOOTH
<android.server.BluetoothA2dpService\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.inputmethodservice.InputMethodService\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.app.backup.BackupAgentHelper\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<android.inputmethodservice.KeyboardView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.providers.contacts.VoicemailContentProvider\:\ android.os.ParcelFileDescriptor\ openFile(android.net.Uri,java.lang.String)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ access$2700(com.android.mms.ui.ComposeMessageActivity,android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ access$700(com.android.server.am.ActivityManagerService,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.camera.Camera\:\ void\ access$1300(com.android.camera.Camera)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.calendar.alerts.AlertUtils\:\ java.lang.String\ formatTimeLocation(android.content.Context,long,boolean,java.lang.String)>=android.permission.READ_CALENDAR
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ reportFailedPasswordAttempt(int)>=android.permission.BIND_DEVICE_ADMIN, android.permission.INTERACT_ACROSS_USERS_FULL
<android.filterpacks.imageproc.BrightnessFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.vcard.VCardEntry$BirthdayData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<com.google.common.io.Resources\:\ void\ copy(java.net.URL,java.io.OutputStream)>=android.permission.INTERNET
<android.net.sip.ISipService\:\ android.net.sip.ISipSession\ createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>=android.permission.USE_SIP
<com.android.exchange.EasAccountService\:\ com.android.exchange.EasResponse\ sendHttpClientPost(java.lang.String,byte[])>=android.permission.WAKE_LOCK
<android.content.pm.IPackageManager$Stub\:\ void\ freeStorage(long,android.content.IntentSender)>=android.permission.CLEAR_APP_CACHE
<com.android.settings.bluetooth.HeadsetProfile\:\ int\ getPreferred(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.net.IConnectivityManager$Stub$Proxy\:\ android.net.LinkProperties\ getLinkProperties(int)>=android.permission.ACCESS_NETWORK_STATE
<android.server.BluetoothService\:\ boolean\ disconnectSink(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ void\ dispatchPortAddressedPdus(byte[][],int)>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ int\ getInputDevicePriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.net.NetworkPolicyManagerService$4\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.READ_PHONE_STATE
<com.android.bluetooth.pbap.BluetoothPbapObexServer\:\ void\ <init>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.ITelephonyRegistry$Stub\:\ void\ notifyDataConnectionFailed(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<android.net.IThrottleManager$Stub\:\ long\ getPeriodStartTime(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.policy.impl.KeyguardScreenCallback\:\ void\ pokeWakelock()>=android.permission.WAKE_LOCK
<android.net.sip.SipManager\:\ void\ setRegistrationListener(java.lang.String,android.net.sip.SipRegistrationListener)>=android.permission.USE_SIP
<android.provider.Contacts$People\:\ void\ markAsContacted(android.content.ContentResolver,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.DevicePickerFragment\:\ void\ onBluetoothStateChanged(int)>=android.permission.BLUETOOTH
<android.accounts.AccountManagerService\:\ void\ hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.opp.BluetoothOppService\:\ void\ updateShare(android.database.Cursor,int,boolean)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ void\ sendIdleJobTrigger()>=android.permission.BROADCAST_STICKY, android.permission.SET_ACTIVITY_WATCHER
<android.net.wifi.IWifiManager$Stub\:\ void\ setCountryCode(java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ acceptCall()>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ updateSearchPanel()>=android.permission.VIBRATE
<com.android.contacts.detail.ContactLoaderFragment\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.MessagingListener\:\ void\ loadAttachmentStarted(long,long,long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.net.NetworkStatsService\:\ void\ setUidForeground(int,boolean)>=android.permission.MODIFY_NETWORK_ACCOUNTING
<com.android.server.ConnectivityService\:\ void\ reportNetworkConnectivity(android.net.Network,boolean)>=android.permission.ACCESS_NETWORK_STATE, android.permission.INTERNET
<android.app.INotificationManager$Stub$Proxy\:\ void\ enqueueNotification(java.lang.String,int,android.app.Notification,int[])>=android.permission.VIBRATE
<com.android.server.VibratorService\:\ void\ onInputDeviceChanged(int)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ColorTemperatureFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME\:\ void\ handleClose()>=android.permission.WRITE_CONTACTS
<com.android.calendar.DeleteEventHelper\:\ void\ delete(long,long,long,int)>=android.permission.READ_CALENDAR
<com.android.internal.telephony.IccFileHandler\:\ void\ loadEFLinearFixedAll(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$30\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<android.app.WallpaperManager\:\ void\ clear(int)>=android.permission.SET_WALLPAPER
<android.telephony.gsm.SmsManager\:\ java.util.ArrayList\ divideMessage(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.InCallScreen\:\ void\ onDialerOpen(boolean)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothSocket\:\ void\ initSocketFromFdNative(int)>=android.permission.BLUETOOTH
<com.android.server.accessibility.AccessibilityManagerService\:\ java.util.List\ getInstalledAccessibilityServiceList(int)>=android.permission.INTERACT_ACROSS_USERS
<com.android.browser.BrowserBookmarksPage\:\ boolean\ handleContextItem(int,int,int)>=android.permission.GET_ACCOUNTS
<android.server.BluetoothHealthProfileHandler\:\ boolean\ disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<android.content.CursorEntityIterator\:\ android.content.Entity\ next()>=android.permission.READ_CALENDAR
<com.android.server.VibratorService$VibrateThread\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.contacts.list.EmailAddressPickerFragment\:\ void\ onClose()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.setup.AccountSettingsFragment\:\ void\ access$800(com.android.email.activity.setup.AccountSettingsFragment)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<android.net.IConnectivityManager$Stub$Proxy\:\ boolean\ requestRouteToHost(int,int)>=android.permission.CHANGE_NETWORK_STATE
<com.android.browser.UI\:\ void\ showWeb(boolean)>=android.permission.GET_ACCOUNTS
<android.test.IsolatedContext\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ launchMultiplePhonePicker()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.RotateFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.app.ContextImpl$ApplicationContentResolver\:\ void\ setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getVoiceMailNumber(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.bluetooth.BluetoothGattServer\:\ boolean\ notifyCharacteristicChanged(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothGattCharacteristic,boolean)>=android.permission.BLUETOOTH
<com.android.server.pm.PackageManagerService\:\ boolean\ getApplicationHiddenSettingAsUser(java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_USERS
<com.android.mms.transaction.SendTransaction\:\ byte[]\ sendPdu(long,byte[])>=android.permission.CHANGE_NETWORK_STATE
<com.android.email.GroupMessagingListener\:\ void\ synchronizeMailboxFailed(long,long,java.lang.Exception)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.appwidget.AppWidgetServiceImpl\:\ android.widget.RemoteViews\ getAppWidgetViews(java.lang.String,int)>=android.permission.BIND_APPWIDGET
<com.android.exchange.adapter.EmailSyncAdapter\:\ void\ getAutomaticLookback()>=android.permission.READ_SYNC_SETTINGS
<com.android.music.MediaPlaybackService\:\ void\ doAutoShuffleUpdate()>=android.permission.WAKE_LOCK
<android.app.IActivityManager\:\ void\ killBackgroundProcesses(java.lang.String)>=android.permission.RESTART_PACKAGES
<android.view.IWindowManager$Stub\:\ void\ setForcedDisplaySize(int,int)>=android.permission.WAKE_LOCK
<com.google.common.io.CharStreams\:\ java.util.List\ readLines(com.google.common.io.InputSupplier)>=android.permission.INTERNET
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ cleanUpConnection(boolean,com.android.internal.telephony.ApnContext)>=android.permission.BROADCAST_STICKY
<com.android.providers.contacts.VoicemailContentProvider\:\ void\ checkAndAddSourcePackageIntoValues(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.settings.DisplaySettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<android.speech.tts.TextToSpeech\:\ android.speech.tts.Voice\ getVoice()>=android.permission.BROADCAST_STICKY
<com.android.phone.BluetoothHandsfree\:\ int\ getAudioState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.mms.ui.SlideViewInterface\:\ void\ pauseAudio()>=android.permission.WAKE_LOCK
<android.os.IVibratorService$Stub$Proxy\:\ void\ vibrate(long,android.os.IBinder)>=android.permission.WAKE_LOCK
<android.nfc.INfcAdapter$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.PhotoPage\:\ void\ onBackPressed()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.BluetoothPermissionActivity\:\ void\ showPhonebookDialog()>=android.permission.BLUETOOTH
<com.android.mms.data.WorkingMessage\:\ java.lang.String\ readDraftSmsMessage(com.android.mms.data.Conversation)>=android.permission.RECEIVE_SMS
<android.net.wifi.WifiManager\:\ boolean\ startScanActive()>=android.permission.CHANGE_WIFI_STATE
<com.android.settings.users.UserSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.settings.accounts.AccountPreferenceBase\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.StateManager\:\ void\ notifyActivityResult(int,int,android.content.Intent)>=android.permission.VIBRATE
<com.android.browser.Controller\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.GET_ACCOUNTS
<com.android.mms.data.WorkingMessage\:\ void\ updateDraftMmsMessage(android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>=android.permission.READ_SMS
<com.android.email.Controller$1\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.DefaultContactListAdapter\:\ android.net.Uri\ getContactUri(int,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<android.media.MediaScannerConnection$1\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.webkit.HTML5VideoView\:\ void\ reprepareData(android.webkit.HTML5VideoViewProxy)>=android.permission.WAKE_LOCK
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy\:\ boolean\ onHoverKey(com.android.inputmethod.keyboard.Key,android.view.MotionEvent)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.RIL\:\ void\ sendSMS(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaLteUiccRecords\:\ void\ setLocaleFromCsim()>=android.permission.CHANGE_CONFIGURATION
<android.media.MediaPlayer\:\ void\ stayAwake(boolean)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.FixedRotationFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.filterpacks.numeric.SinWaveFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.wifi.p2p.WifiP2pServiceImpl\:\ void\ setMiracastMode(int)>=android.permission.CONNECTIVITY_INTERNAL
<android.accounts.AccountAuthenticatorActivity\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.filterpacks.imageproc.LomoishFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.AccessibilitySettings\:\ void\ handleToggleLargeTextPreferenceClick()>=android.permission.CHANGE_CONFIGURATION
<com.android.settings.bluetooth.DockEventReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ boolean\ ensurePaired()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ disconnect(com.android.settings.bluetooth.LocalBluetoothProfile)>=android.permission.BLUETOOTH
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker\:\ void\ setImageViewResources(android.content.Context,android.widget.RemoteViews)>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ void\ setPairable()>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhone\:\ void\ invokeOemRilRequestRaw(byte[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.CallDetailActivityQueryHandler\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.internal.telephony.cdma.CdmaConnection\:\ boolean\ update(com.android.internal.telephony.DriverCall)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub$Proxy\:\ int\ getWifiApEnabledState()>=android.permission.ACCESS_WIFI_STATE
<android.content.ContentService\:\ boolean\ isSyncActive(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<android.server.BluetoothA2dpService\:\ void\ adjustOtherSinkPriorities(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.app.ExpandableListActivity\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.mms.data.WorkingMessage\:\ void\ access$1500(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,java.lang.String)>=android.permission.WRITE_SMS
<com.android.internal.telephony.sip.SipPhone$SipCall\:\ com.android.internal.telephony.Connection\ dial(java.lang.String)>=android.permission.USE_SIP
<android.net.wifi.IWifiManager$Stub\:\ int\ getFrequencyBand()>=android.permission.ACCESS_WIFI_STATE
<android.media.IAudioService\:\ void\ dispatchMediaKeyEvent(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary\:\ boolean\ isValidWord(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$3\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.server.BackupManagerService$PerformRestoreTask\:\ void\ execute()>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.CallLogFragment\:\ void\ updateOnExit()>=android.permission.WRITE_CALL_LOG
<com.android.settings.Settings$UserDictionarySettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.server.BackupManagerService\:\ android.app.IBackupAgent\ bindToAgentSynchronous(android.content.pm.ApplicationInfo,int)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ int\ getRadioAccessFamily(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.VibratorService\:\ void\ access$400(com.android.server.VibratorService)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageCompose$LoadMessageTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<android.net.IConnectivityManager$Stub\:\ java.lang.String[]\ getTetherableWifiRegexs()>=android.permission.ACCESS_NETWORK_STATE
<android.nfc.INfcAdapterExtras$Stub$Proxy\:\ android.os.Bundle\ close(java.lang.String,android.os.IBinder)>=android.permission.NFC
<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder\:\ java.util.List\ getConnectedHealthDevices()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.GestureRecognizer$MyDownUpListener\:\ void\ onDown(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.email.activity.MessageViewFragmentBase$ReloadMessageTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<android.app.ActivityManager\:\ java.util.List\ getRecentTasks(int,int)>=android.permission.GET_TASKS
<com.android.server.am.ActivityManagerService\:\ void\ requestServiceBindingsLocked(com.android.server.am.ServiceRecord)>=android.permission.WAKE_LOCK
<android.net.nsd.INsdManager\:\ void\ setEnabled(boolean)>=android.permission.WRITE_SETTINGS
<android.net.IConnectivityManager$Stub$Proxy\:\ java.lang.String[]\ getTetheredIfacePairs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.model.AccountTypeManagerImpl\:\ com.android.contacts.model.AccountTypeManager\ createAccountTypeManager(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.IccLockSettings\:\ void\ onPinEntered(com.android.settings.EditPinPreference,boolean)>=android.permission.WAKE_LOCK
<android.media.MediaRecorder\:\ void\ setVideoSource(int)>=android.permission.CAMERA
<com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener\:\ void\ onPhotoSelected(android.graphics.Bitmap)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.BluetoothHandsfree\:\ void\ closeConnectedSco()>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ setGsmBroadcastActivation(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.DocumentaryFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ getEsn(int)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.internal.widget.PasswordEntryKeyboardHelper\:\ void\ handleShift()>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.server.WifiService\:\ void\ releaseMulticastLock()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.gallery3d.ui.PhotoView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ boolean\ getAutoConnect(com.android.settings.bluetooth.LocalBluetoothProfile)>=android.permission.BLUETOOTH
<com.android.common.widget.GroupingListAdapter\:\ void\ bindGroupView(android.view.View,android.content.Context,android.database.Cursor,int,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.location.ComprehensiveCountryDetector\:\ void\ stopLocationBasedDetector()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.server.pm.ShutdownThread\:\ void\ reboot(android.content.Context,java.lang.String,boolean)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager\:\ java.lang.String[]\ getTetherableBluetoothRegexs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.transaction.SmsSingleRecipientSender\:\ java.lang.String\ getOutgoingServiceCenter(long)>=android.permission.RECEIVE_SMS
<com.android.contacts.list.JoinContactListFragment\:\ void\ finish()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ int\ tether(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE, android.permission.TETHER_PRIVILEGED
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ boolean\ access$900(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Messenger,java.lang.String,boolean)>=android.permission.GET_TASKS
<com.android.internal.telephony.CallManager\:\ boolean\ sendBurstDtmf(java.lang.String,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothPairingDialog\:\ android.view.View\ createView(com.android.settings.bluetooth.CachedBluetoothDeviceManager)>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager\:\ void\ initializeMulticastFiltering()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.phone.SimContacts\:\ void\ importOneSimContact(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ setArcMode(boolean)>=android.permission.HDMI_CEC
<android.net.wifi.WifiStateMachine$SoftApStartedState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ proceedAfterWaitChar()>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.tablet.TabletStatusBar\:\ void\ hideSearchPanel()>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ getPreferredNetworkType(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumPage\:\ void\ onUpPressed()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.calllog.CallLogFragment\:\ void\ callSelectedEntry()>=android.permission.WRITE_CONTACTS
<com.android.nfc.NfcService\:\ void\ onSeEmvCardRemoval()>=android.permission.BLUETOOTH
<com.android.exchange.ExchangeService\:\ void\ deleteAccountPIMData(long)>=android.permission.READ_CALENDAR
<com.android.server.wm.WindowManagerService\:\ void\ systemReady()>=android.permission.WAKE_LOCK
<android.nfc.INfcTag\:\ int\ setTimeout(int,int)>=android.permission.NFC
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ onCancelEvent(int,int,long)>=android.permission.WRITE_CONTACTS
<com.android.server.wm.Session\:\ int\ add(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>=android.permission.SYSTEM_ALERT_WINDOW
<android.bluetooth.BluetoothInputDevice\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ int\ getDiscoverableTimeout()>=android.permission.BLUETOOTH
<com.android.nfc.P2pEventListener\:\ void\ onP2pHandoverNotSupported()>=android.permission.VIBRATE
<com.android.settings.accounts.AccountSyncSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.internal.telephony.IIccPhoneBook$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ java.lang.String[]\ getTetherableUsbRegexs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.BluetoothEventManager$BondStateChangedHandler\:\ void\ showUnbondMessage(android.content.Context,java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothDeviceFilter$UnbondedDeviceFilter\:\ boolean\ matches(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.gallery3d.data.LocationClustering\:\ void\ run(com.android.gallery3d.data.MediaSet)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.AccelerometerListener$1\:\ void\ onSensorChanged(android.hardware.SensorEvent)>=android.permission.BLUETOOTH
<com.android.calendar.agenda.AgendaListView\:\ void\ refresh(boolean)>=android.permission.WRITE_CALENDAR
<android.media.MediaScanner$MyMediaScannerClient\:\ void\ setSettingIfNotSet(java.lang.String,android.net.Uri,long)>=android.permission.WRITE_SETTINGS
<com.android.browser.Controller\:\ void\ onResume()>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ enforceCanManageCaCerts(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_CA_CERTIFICATES
<com.android.contacts.list.ContactListAdapter\:\ android.net.Uri\ getContactUri(int,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.month.MonthByWeekFragment\:\ void\ handleEvent(com.android.calendar.CalendarController$EventInfo)>=android.permission.WRITE_CALENDAR
<com.android.server.ConnectivityService\:\ void\ access$1000(com.android.server.ConnectivityService,android.net.NetworkInfo)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.group.GroupBrowseListFragment\:\ android.view.View\ onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.UiModeManagerService\:\ void\ adjustStatusBarCarModeLocked()>=android.permission.VIBRATE
<android.media.effect.effects.BackDropperEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<android.nfc.INfcAdapter$Stub$Proxy\:\ boolean\ disableNdefPush()>=android.permission.BLUETOOTH
<android.accounts.IAccountManager\:\ void\ confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)>=android.permission.MANAGE_ACCOUNTS
<com.android.contacts.voicemail.VoicemailPlaybackPresenter\:\ void\ access$2200(com.android.contacts.voicemail.VoicemailPlaybackPresenter,int,int)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine\:\ void\ access$11300(android.net.wifi.WifiStateMachine,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.settings.Settings$RunningServicesActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.server.am.ActivityManagerService\:\ void\ restart()>=android.permission.SET_ACTIVITY_WATCHER
<com.google.common.io.Files\:\ void\ copy(java.io.File,java.nio.charset.Charset,com.google.common.io.OutputSupplier)>=android.permission.INTERNET
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<com.android.browser.preferences.AccessibilityPreferencesFragment\:\ void\ onCreate(android.os.Bundle)>=android.permission.INTERNET
<com.android.server.input.InputManagerService\:\ void\ setTouchCalibrationForInputDevice(java.lang.String,int,android.hardware.input.TouchCalibration)>=android.permission.SET_INPUT_CALIBRATION
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ enableAccessibilityService(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS
<android.accounts.AccountManager\:\ android.accounts.AccountManagerFuture\ getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.settings.tts.TtsEngineSettingsFragment\:\ void\ updateVoiceDetails()>=android.permission.WRITE_SETTINGS
<android.server.BluetoothHealthProfileHandler\:\ android.os.ParcelFileDescriptor\ getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<android.service.dreams.IDreamManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WRITE_SETTINGS
<android.location.ILocationManager\:\ java.lang.String\ getBestProvider(android.location.Criteria,boolean)>=android.permission.ACCESS_COARSE_LOCATION
<android.app.TabActivity\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.email.activity.MessageListFragment\:\ void\ autoRefreshStaleMailbox()>=android.permission.READ_SYNC_SETTINGS
<com.android.camera.VideoCamera\:\ void\ access$2100(com.android.camera.VideoCamera)>=android.permission.RECORD_AUDIO
<com.android.settings.Settings$SpellCheckersSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.internal.telephony.UiccSmsController\:\ boolean\ copyMessageToIccEfForSubscriber(int,java.lang.String,int,[byte,[byte)>=android.permission.RECEIVE_SMS, android.permission.SEND_SMS
<com.android.contacts.interactions.PhoneNumberInteraction\:\ void\ access$200(android.content.Context,java.lang.String,com.android.contacts.interactions.PhoneNumberInteraction$InteractionType,java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.providers.contacts.VoicemailContentProvider\:\ int\ delete(android.net.Uri,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.email.activity.UIControllerTwoPane\:\ void\ onMessageNotExists()>=android.permission.ACCESS_NETWORK_STATE
<com.android.camera.VideoCamera\:\ void\ onSharedPreferenceChanged()>=android.permission.RECORD_AUDIO
<com.android.internal.widget.LockPatternView\:\ void\ handleActionDown(android.view.MotionEvent)>=android.permission.GET_ACCOUNTS
<com.android.email.AttachmentInfo\:\ void\ <init>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.NativeDaemonConnector\:\ void\ listenToSocket()>=android.permission.WAKE_LOCK
<com.android.phone.CallCard\:\ void\ displayMainCallStatus(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>=android.permission.BLUETOOTH
<com.android.launcher2.SmoothPagedView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.server.sip.SipSessionGroup\:\ void\ process(java.util.EventObject)>=android.permission.WAKE_LOCK
<android.nfc.tech.Ndef\:\ boolean\ makeReadOnly()>=android.permission.NFC
<com.android.development.Connectivity\:\ void\ onRoutedSocketRequest()>=android.permission.CHANGE_NETWORK_STATE
<android.provider.Browser\:\ void\ deleteHistoryTimeFrame(android.content.ContentResolver,long,long)>=android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager\:\ void\ invalidateAuthToken(java.lang.String,java.lang.String)>=android.permission.MANAGE_ACCOUNTS
<android.location.LocationManager\:\ boolean\ addNmeaListener(android.location.GpsStatus$NmeaListener)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<android.media.IRingtonePlayer\:\ void\ playAsync(android.net.Uri,boolean,int)>=android.permission.WAKE_LOCK
<com.android.phone.InCallTouchUi\:\ void\ onGrabbedStateChange(android.view.View,int)>=android.permission.BLUETOOTH
<android.telephony.TelephonyManager\:\ int\ getSimState()>=android.permission.ACCESS_NETWORK_STATE
<android.net.ConnectivityManager\:\ android.net.LinkProperties\ getLinkProperties(android.net.Network)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ void\ startConfirmDeviceCredentialIntent(android.content.Intent)>=android.permission.MANAGE_ACTIVITY_STACKS
<com.android.browser.homepages.RequestHandler\:\ void\ run()>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.settings.tts.TextToSpeechSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.exchange.utility.CalendarUtilities\:\ com.android.emailcommon.provider.EmailContent$Message\ createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.emailcommon.provider.Account)>=android.permission.READ_CALENDAR
<com.android.contacts.interactions.ImportExportDialogFragment\:\ boolean\ access$000(com.android.contacts.interactions.ImportExportDialogFragment,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.wifi.WpsDialog\:\ void\ access$200(com.android.settings.wifi.WpsDialog,android.content.Context,android.content.Intent)>=android.permission.ACCESS_WIFI_STATE
<com.android.gallery3d.app.CropImage$SaveOutput\:\ android.content.Intent\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.SET_WALLPAPER
<com.android.server.power.PowerManagerService$BinderService\:\ void\ setTemporaryScreenBrightnessSettingOverride(int)>=android.permission.DEVICE_POWER
<android.app.IActivityManager\:\ java.util.List\ getTasks(int,int,android.app.IThumbnailReceiver)>=android.permission.GET_TASKS
<com.android.phone.InCallScreen\:\ void\ onPhoneStateChanged(android.os.AsyncResult)>=android.permission.BLUETOOTH
<com.android.server.am.BatteryStatsService\:\ void\ noteStartAudio(int)>=android.permission.UPDATE_DEVICE_STATS
<android.filterpacks.base.FrameStore\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.am.ActivityManagerService\:\ boolean\ isInHomeStack(int)>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.contacts.model.AccountTypeManagerImpl\:\ java.util.Map\ access$400(com.android.contacts.model.AccountTypeManagerImpl,android.content.Context)>=android.permission.WRITE_CONTACTS
<com.android.server.ConsumerIrService\:\ I[]\ getCarrierFrequencies()>=android.permission.TRANSMIT_IR
<android.webkit.HTML5VideoInline\:\ void\ prepareDataAndDisplayMode(android.webkit.HTML5VideoViewProxy)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ launchAssistLongPressAction()>=android.permission.VIBRATE
<com.android.internal.telephony.ISms$Stub$Proxy\:\ boolean\ disableCellBroadcastRange(int,int)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupNegotiationState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.contacts.editor.TextFieldsEditorView\:\ void\ onTypeSelectionChange(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageViewFragmentBase\:\ void\ onPostLoadBody()>=android.permission.ACCESS_NETWORK_STATE
<android.server.search.SearchManagerService\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.deskclock.AlarmClock$AlarmTimeAdapter$1\:\ void\ onClick(android.view.View)>=android.permission.WRITE_SETTINGS
<android.net.sip.SipManager\:\ void\ close(java.lang.String)>=android.permission.USE_SIP
<com.android.contacts.group.GroupEditorFragment\:\ void\ onDoneClicked()>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager\:\ android.os.Messenger\ getWifiServiceMessenger()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.sip.SipService\:\ void\ restartPortMappingLifetimeMeasurement(android.net.sip.SipProfile,int)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ProfileAndContactsLoader\:\ android.database.Cursor\ loadInBackground()>=android.permission.WRITE_CONTACTS
<com.android.settings.wifi.WpsDialog\:\ void\ handleEvent(android.content.Context,android.content.Intent)>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ void\ maybeEnableFallback(android.content.Context)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ onSignalStrengthResult(android.os.AsyncResult)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onVoiceCallEnded()>=android.permission.BROADCAST_STICKY
<com.android.settings.BrightnessPreference\:\ void\ showDialog(android.os.Bundle)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ sendDtmf(char)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ onRemoteDisconnect(int)>=android.permission.WAKE_LOCK
<android.provider.Settings$Secure\:\ boolean\ putFloat(android.content.ContentResolver,java.lang.String,float)>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.DuotoneFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.am.BatteryStatsService\:\ void\ noteVibratorOn(int,long)>=android.permission.UPDATE_DEVICE_STATS
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ dialMemory(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ com.android.internal.telephony.Connection\ dialThreeWay(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.appwidget.AppWidgetServiceImpl\:\ boolean\ hasBindAppWidgetPermission(java.lang.String,int)>=android.permission.MODIFY_APPWIDGET_BIND_PERMISSIONS
<com.android.phone.PhoneUtils\:\ boolean\ answerAndEndHolding(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ onUserSwitched(int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ getCDMASubscription(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.music.AudioPreview\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneUtils\:\ boolean\ activateSpeakerIfDocked(com.android.internal.telephony.Phone)>=android.permission.BLUETOOTH
<com.android.server.InputMethodManagerService\:\ boolean\ setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.PhoneApp\:\ void\ updateInCallScreen()>=android.permission.BLUETOOTH
<android.app.ActivityGroup\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.phone.InCallTouchUi\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.BLUETOOTH
<com.android.server.WifiService\:\ boolean\ acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<android.speech.tts.AudioPlaybackHandler$MessageLoop\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ startTimerRecording(int,int,[byte)>=android.permission.HDMI_CEC
<com.android.internal.policy.impl.GlobalActions$1\:\ void\ onToggle(boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ boolean\ setCellBroadcastActivation(boolean)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityStack\:\ int\ startActivityMayWait(android.app.IApplicationThread,int,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int)>=android.permission.CHANGE_CONFIGURATION
<com.android.internal.telephony.UiccSmsController\:\ void\ sendStoredText(int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.READ_EXTERNAL_STORAGE, android.permission.SEND_SMS, android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState\:\ void\ access$1800(com.android.phone.BluetoothHandsfree$BluetoothPhoneState,boolean,com.android.internal.telephony.Connection)>=android.permission.BLUETOOTH
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ addDescriptor(int,android.os.ParcelUuid,int)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.MoviePlayer\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IIccPhoneBook\:\ boolean\ updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.contacts.list.PhoneNumberPickerFragment\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.RequestPermissionHelperActivity\:\ boolean\ parseIntent()>=android.permission.BLUETOOTH
<com.android.browser.GoogleAccountLogin\:\ void\ startLoginIfNeeded(android.app.Activity,java.lang.Runnable)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onSetUserDataEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.contacts.vcard.ImportProcessor\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ supplyIccPin(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.emailcommon.service.IEmailService\:\ int\ searchMessages(long,com.android.emailcommon.service.SearchParams,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.TileImageView\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<android.server.BluetoothHealthProfileHandler\:\ void\ onHealthDeviceChannelChanged(java.lang.String,java.lang.String,boolean)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth\:\ boolean\ cancelBondProcess(java.lang.String)>=android.permission.BLUETOOTH
<com.android.mms.data.Conversation\:\ long\ ensureThreadId()>=android.permission.READ_SMS
<com.android.browser.UrlInputView\:\ void\ onSelect(java.lang.String,int,java.lang.String)>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetooth\:\ android.os.ParcelUuid[]\ getUuids()>=android.permission.BLUETOOTH
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onResetDone(android.os.AsyncResult)>=android.permission.BROADCAST_STICKY
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ dispatchMediaKeyRepeatWithWakeLock(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.development.AccountsTester$2\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.ManageSimMessages\:\ boolean\ onContextItemSelected(android.view.MenuItem)>=android.permission.RECEIVE_SMS
<com.android.contacts.list.PhoneFavoriteFragment\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.CallCard\:\ void\ onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.AllInOneActivity$3\:\ void\ run()>=android.permission.READ_CALENDAR
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.server.power.PowerManagerService$BinderService\:\ void\ acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.internal.widget.LockScreenWidgetCallback\:\ void\ userActivity(android.view.View)>=android.permission.WAKE_LOCK
<com.android.settings.SettingsPreferenceFragment\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ int\ stopUsingNetworkFeature(int,java.lang.String)>=android.permission.BLUETOOTH
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ installMessageViewFragment(com.android.email.activity.MessageViewFragment)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ int\ getPackageProcessState(java.lang.String,java.lang.String)>=android.permission.PACKAGE_USAGE_STATS
<android.filterpacks.imageproc.SimpleImageFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccCard\:\ void\ setIccLockEnabled(boolean,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.location.ILocationManager$Stub\:\ void\ requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>=android.permission.ACCESS_COARSE_LOCATION
<android.media.IAudioService\:\ void\ setMode(int,android.os.IBinder)>=android.permission.BLUETOOTH
<android.content.MutableContextWrapper\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.server.pm.PackageManagerService\:\ boolean\ isPackageAvailable(java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.vcard.NotificationImportExportListener\:\ void\ onImportParsed(com.android.contacts.vcard.ImportRequest,int,com.android.vcard.VCardEntry,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.MountService\:\ java.lang.String\ getSecureContainerPath(java.lang.String)>=android.permission.ASEC_ACCESS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary\:\ void\ loadDictionary()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.CommandsInterface\:\ void\ getLastDataCallFailCause(android.os.Message)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.BitmapSource\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.exchange.ExchangeService\:\ void\ releaseMailbox(long)>=android.permission.WAKE_LOCK
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ startMultiAdvertising(int,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseSettings)>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.editor.StructuredNameEditorView\:\ void\ onOptionalFieldVisibilityChange()>=android.permission.READ_SYNC_SETTINGS
<android.media.AudioManager\:\ void\ adjustStreamVolume(int,int,int)>=android.permission.BLUETOOTH
<com.android.email.activity.UIControllerOnePane\:\ void\ onMessageNotExists()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.DevicePickerFragment\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onRoamingOn()>=android.permission.BROADCAST_STICKY
<com.android.emailcommon.utility.EmailAsyncTask$1\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.widget.TransportControlView\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothA2dp$Stub$Proxy\:\ java.util.List\ getDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.Invert\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.IccSmsInterfaceManager\:\ void\ sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.server.am.ActivityRecord$Token\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.settings.accounts.AccountSyncSettings\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.JoinContactListAdapter\:\ android.net.Uri\ getContactUri(int,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.deskclock.Alarms\:\ void\ enableAlert(android.content.Context,com.android.deskclock.Alarm,long)>=android.permission.WRITE_SETTINGS
<com.android.browser.provider.BrowserProvider\:\ android.net.Uri\ insert(android.net.Uri,android.content.ContentValues)>=android.permission.GET_ACCOUNTS
<com.android.calendar.alerts.AlertReceiver\:\ android.app.Notification$Builder\ makeBasicNotificationBuilder(android.content.Context,java.lang.String,java.lang.String,long,long,long,int,boolean,boolean,boolean)>=android.permission.READ_CALENDAR
<com.android.contacts.list.PostalAddressPickerFragment\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.BrowserHistoryPage\:\ boolean\ onContextItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ setStatusBarDisabled(android.content.ComponentName,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.Settings$StorageSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.server.AlarmManagerService$ResultReceiver\:\ void\ onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>=android.permission.WAKE_LOCK
<android.filterpacks.videoproc.BackDropperFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaLteUiccFileHandler\:\ void\ loadEFLinearFixedAll(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService$CompatMediaPlayer\:\ void\ stop()>=android.permission.WAKE_LOCK
<com.android.server.input.InputManagerService\:\ void\ tryPointerSpeed(int)>=android.permission.SET_POINTER_SPEED
<com.android.settings.bluetooth.HidProfile\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ setPowerStateToDesired()>=android.permission.WAKE_LOCK
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ void\ sendConnectionStateChange(android.bluetooth.BluetoothDevice,int,int,int)>=android.permission.BLUETOOTH
<com.android.browser.NavigationBarPhone\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.email.activity.setup.AccountSettingsFragment\:\ void\ saveSettings()>=android.permission.WRITE_SYNC_SETTINGS
<android.media.AudioService\:\ void\ queueMsgUnderWakeLock(android.os.Handler,int,int,int,java.lang.Object,int)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree\:\ void\ audioOff()>=android.permission.BLUETOOTH
<android.app.ListActivity\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.internal.telephony.IntRangeManager\:\ boolean\ finishUpdate()>=android.permission.WAKE_LOCK
<com.android.mms.transaction.SmsSingleRecipientSender\:\ boolean\ sendMessage(long)>=android.permission.SEND_SMS
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.gsm.GSMPhone\:\ boolean\ handleCallHoldIncallSupplementaryService(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.wm.InputMonitor\:\ long\ interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>=android.permission.GET_ACCOUNTS
<android.content.pm.IPackageManager\:\ boolean\ setInstallLocation(int)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.PhoneBase\:\ void\ notifyDataConnectionFailed(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ cancelDiscovery()>=android.permission.BLUETOOTH_ADMIN
<com.android.mms.ui.MessageListItem\:\ void\ updateAvatarView(java.lang.String,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.statusbar.phone.StatusBarWindowView\:\ boolean\ dispatchKeyEvent(android.view.KeyEvent)>=android.permission.VIBRATE
<android.server.BluetoothService\:\ boolean\ connectHeadset(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.NsdService$NsdStateMachine$DisabledState\:\ void\ enter()>=android.permission.BROADCAST_STICKY
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ disconnectPanDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.list.DefaultContactListAdapter\:\ android.net.Uri\ getContactUri(int,android.database.Cursor,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.contacts.VoicemailPermissions\:\ boolean\ packageHasOwnVoicemailAccess(java.lang.String)>=com.android.voicemail.permission.ADD_VOICEMAIL
<android.content.IContentService\:\ void\ setIsSyncable(android.accounts.Account,java.lang.String,int)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.bluetooth.a2dpsink.A2dpSinkService$BluetoothA2dpSinkBinder\:\ boolean\ isA2dpPlaying(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.providers.calendar.CalendarProvider2\:\ void\ verifyAccounts()>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.latin.DictionaryCollection\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<com.android.internal.policy.impl.GlobalActions$ToggleAction\:\ void\ onToggle(boolean)>=android.permission.WRITE_SETTINGS
<com.android.gallery3d.app.AbstractGalleryActivity\:\ void\ onUserInteraction()>=android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.MenuExecutor\:\ void\ onProgressComplete(int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetooth\:\ java.util.List\ getHealthDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.PosterizeFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.SpecialCharSequenceMgr\:\ boolean\ handleIMEIDisplay(android.content.Context,java.lang.String,boolean)>=android.permission.READ_PHONE_STATE
<com.android.calendar.EventInfoFragment\:\ void\ access$1900(com.android.calendar.EventInfoFragment,android.view.View)>=android.permission.WRITE_CONTACTS
<com.android.providers.downloads.DownloadService\:\ com.android.providers.downloads.DownloadInfo\ access$600(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo$Reader,long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.providers.calendar.CalendarProvider2\:\ void\ updateEventAttendeeStatus(android.database.sqlite.SQLiteDatabase,android.content.ContentValues)>=android.permission.READ_CALENDAR
<com.android.gallery3d.app.GalleryActionBar$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.IIccPhoneBook\:\ int[]\ getAdnRecordsSize(int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ setVoiceMessageWaiting(int,int)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$29\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.settings.Settings$DevelopmentSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.app.PhotoPage\:\ void\ onStateResult(int,int,android.content.Intent)>=android.permission.VIBRATE
<com.android.contacts.list.AccountFilterActivity$FilterLoader\:\ java.util.List\ loadInBackground()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.UiccSmsController\:\ boolean\ enableCellBroadcastForSubscriber(int,int,int)>=android.permission.RECEIVE_SMS
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ notifySignalStrength()>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.PhoneProxy\:\ void\ setCdmaRoamingPreference(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.service.MailService$6\:\ void\ run(java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ boolean\ showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.PhoneBase\:\ void\ restoreSavedNetworkSelection(android.os.Message)>=android.permission.WAKE_LOCK
<android.net.sip.SipManager\:\ void\ open(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener)>=android.permission.USE_SIP
<android.bluetooth.IBluetoothA2dp$Stub$Proxy\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ requestIsimAuthentication(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.exchange.EasOutboxService\:\ com.android.exchange.EasResponse\ sendHttpClientPost(java.lang.String,byte[])>=android.permission.WAKE_LOCK
<com.android.email.activity.setup.AccountSettingsFragment$LoadAccountTask\:\ void\ onPostExecute(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.exchange.ContactsSyncAdapterService\:\ void\ access$000(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>=android.permission.READ_SYNC_SETTINGS
<android.media.AsyncPlayer\:\ void\ play(android.content.Context,android.net.Uri,boolean,android.media.AudioAttributes)>=android.permission.WAKE_LOCK
<com.android.browser.BreadCrumbView\:\ void\ popView()>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ updateActivityLockScreenState()>=android.permission.WAKE_LOCK
<android.net.wifi.WifiManager\:\ java.lang.String\ getConfigFile()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.PhoneSubInfo\:\ java.lang.String\ getDeviceSvn()>=android.permission.READ_PHONE_STATE
<com.android.systemui.statusbar.phone.PhoneStatusBar$ExpandedDialog\:\ boolean\ dispatchKeyEvent(android.view.KeyEvent)>=android.permission.VIBRATE
<com.android.gallery3d.ui.PhotoView\:\ void\ resetToFirstPicture()>=android.permission.VIBRATE
<com.android.server.appwidget.AppWidgetServiceImpl\:\ android.content.IntentSender\ createAppWidgetConfigIntentSender(java.lang.String,int,int)>=android.permission.BIND_APPWIDGET
<com.android.server.NsdService\:\ void\ setEnabled(boolean)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ screenTurnedOff(int)>=android.permission.WAKE_LOCK
<com.android.mms.ui.SlideshowPresenter\:\ void\ presentRegionMedia(com.android.mms.ui.SlideViewInterface,com.android.mms.model.RegionMediaModel,boolean)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.CropImage$LoadBitmapDataTask\:\ java.lang.Object\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ void\ unpairDevice()>=android.permission.BLUETOOTH
<android.view.IWindowSession$Stub\:\ android.os.IBinder\ prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.SIMFileHandler\:\ void\ loadEFTransparent(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.PowerManagerService$10\:\ void\ run()>=android.permission.WAKE_LOCK
<android.net.TrafficStats\:\ void\ startDataProfiling(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<android.view.ContextThemeWrapper\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.settings.bluetooth.BluetoothNameDialogFragment$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.contacts.list.ContactEntryListFragment\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.Tab\:\ void\ removeFromTree()>=android.permission.GET_ACCOUNTS
<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl\:\ void\ startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker\:\ int\ getActualState(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.service.AccountService$1\:\ java.lang.String\ getDeviceId()>=android.permission.READ_PHONE_STATE
<android.filterpacks.videosink.MediaEncoderFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.gallery3d.app.SlideshowPage$ShuffleSource\:\ long\ reload()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ registerPackageChangeAndBootCompletedBroadcastReceiver()>=android.permission.RECEIVE_BOOT_COMPLETED
<android.nfc.tech.IsoDep\:\ byte[]\ transceive(byte[],boolean)>=android.permission.NFC
<com.android.phone.BluetoothHandsfree\:\ void\ expectCallStart()>=android.permission.WAKE_LOCK
<com.android.server.accounts.AccountManagerService\:\ void\ finishSessionAsUser(android.accounts.IAccountManagerResponse,android.os.Bundle,boolean,android.os.Bundle,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.DreamSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wifi.WifiServiceImpl\:\ void\ addToBlacklist(java.lang.String)>=android.permission.CHANGE_WIFI_STATE
<com.android.wallpaper.grass.GrassRS$TimezoneTracker\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.DevelopmentSettings\:\ void\ writeDebuggerOptions()>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ setCdmaRoamingPreference(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth\:\ java.lang.String\ getName()>=android.permission.BLUETOOTH
<com.android.phone.AccelerometerListener$OrientationListener\:\ void\ orientationChanged(int)>=android.permission.BLUETOOTH
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.browser.BrowserWebView\:\ void\ <init>=android.permission.INTERNET
<android.server.BluetoothService\:\ void\ dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ boolean\ nvWriteCdmaPrl([byte)>=android.permission.MODIFY_PHONE_STATE
<com.android.settings.RingerVolumePreference\:\ void\ onDialogClosed(boolean)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ setProfileOwner(android.content.ComponentName,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<android.test.mock.MockContentResolver\:\ boolean\ getMasterSyncAutomatically()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.WifiService\:\ void\ access$1300(com.android.server.WifiService)>=android.permission.VIBRATE
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ saveRingtone(long)>=android.permission.WRITE_SMS
<com.android.internal.widget.WaveView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.test.SimulatedCommands\:\ void\ setCurrentPreferredNetworkType()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DockService\:\ void\ applyBtSettings(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<com.android.settings.DataUsageSummary\:\ void\ updateAppDetail()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.wm.WindowManagerService\:\ void\ setTvPipVisibility(boolean)>=android.permission.STATUS_BAR
<com.android.settings.tts.TtsEngineSettingsFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ reloadDataAndSetSelectedUri(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.TabBar$TabView\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<android.app.ContextImpl$ApplicationContentResolver\:\ void\ setMasterSyncAutomatically(boolean)>=android.permission.WRITE_SYNC_SETTINGS
<android.location.LocationManager\:\ boolean\ sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION, android.permission.ACCESS_LOCATION_EXTRA_COMMANDS
<com.android.calendar.DeleteEventHelper\:\ void\ access$1200(com.android.calendar.DeleteEventHelper,int)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageFileViewFragment\:\ void\ onPostLoadBody()>=android.permission.ACCESS_NETWORK_STATE
<com.android.music.MediaPlaybackService$CompatMediaPlayer\:\ void\ pause()>=android.permission.WAKE_LOCK
<com.android.browser.Controller\:\ com.android.browser.Tab\ openTab(java.lang.String,boolean,boolean,boolean,com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<com.android.browser.UrlHandler\:\ boolean\ shouldOverrideUrlLoading(com.android.browser.Tab,android.webkit.WebView,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.contacts.ContactLoader\:\ java.lang.Object\ loadInBackground()>=android.permission.READ_SYNC_SETTINGS
<android.media.AudioService\:\ void\ access$6000(android.media.AudioService,int,int,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.nfc.DeviceHost$DeviceHostListener\:\ void\ onRemoteEndpointDiscovered(com.android.nfc.DeviceHost$TagEndpoint)>=android.permission.BLUETOOTH
<com.android.server.NetworkManagementService\:\ void\ startInterfaceForwarding(java.lang.String,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.DataConnectionTracker\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.settings.bluetooth.BluetoothPairingDialog\:\ void\ onPair(java.lang.String)>=android.permission.BLUETOOTH_ADMIN
<android.test.IsolatedContext$MockAccountManager\:\ android.accounts.AccountManagerFuture\ getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.server.am.ActivityManagerService\:\ void\ deleteActivityContainer(android.app.IActivityContainer)>=android.permission.MANAGE_ACTIVITY_STACKS
<com.android.server.NotificationManagerService$SettingsObserver\:\ void\ observe()>=android.permission.WRITE_SETTINGS
<android.net.wifi.IWifiManager$Stub\:\ void\ setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>=android.permission.CHANGE_WIFI_STATE
<android.filterpacks.imageproc.GrainFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.music.IMediaPlaybackService$Stub\:\ void\ openFile(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.PhotoView$MyGestureListener\:\ boolean\ onFling(float,float)>=android.permission.VIBRATE
<com.android.internal.telephony.cat.CatService\:\ void\ handleRilMsg(com.android.internal.telephony.cat.RilMessage)>=android.permission.WAKE_LOCK
<com.android.gallery3d.util.ReverseGeocoder\:\ android.location.Address\ lookupAddress(double,double,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.exchange.adapter.AccountSyncAdapter\:\ void\ <init>=android.permission.READ_CALENDAR
<com.android.settings.TetherSettings\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.BLUETOOTH
<com.android.server.PowerManagerService\:\ void\ releaseWakeLock(android.os.IBinder,int)>=android.permission.WAKE_LOCK
<com.android.settings.RingerVolumePreference\:\ void\ onBindDialogView(android.view.View)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaLteUiccFileHandler\:\ void\ getEFLinearRecordSize(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.ContactSaveService\:\ void\ clearPrimary(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.net.NetworkStatsService\:\ void\ incrementOperationCount(int,int,int)>=android.permission.MODIFY_NETWORK_ACCOUNTING
<com.android.contacts.activities.ContactSelectionActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.CallerInfoCache$CacheAsyncTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.tablet.TabletStatusBar\:\ void\ showSearchPanel()>=android.permission.VIBRATE
<android.provider.Contacts$People\:\ android.database.Cursor\ queryGroups(android.content.ContentResolver,long)>=android.permission.WRITE_CONTACTS
<android.content.IContentService$Stub\:\ int\ getIsSyncable(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.vcard.VCardParserImpl_V21\:\ boolean\ parseItem()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.setup.MailboxSettings$2\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.widget.PasswordEntryKeyboardHelper\:\ void\ onKey(int,int[])>=android.permission.MODIFY_AUDIO_SETTINGS
<android.location.ILocationManager$Stub\:\ void\ setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.phone.EmergencyCallbackModeService\:\ void\ access$200(com.android.phone.EmergencyCallbackModeService,long)>=android.permission.VIBRATE
<com.android.calendar.selectcalendars.SelectCalendarsSyncFragment\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.camera.PanoramaActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothHeadset\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.am.CoreSettingsObserver\:\ void\ beginObserveCoreSettings()>=android.permission.WRITE_SETTINGS
<com.android.mms.ui.ComposeMessageActivity$35\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy\:\ boolean\ enableCellBroadcastRange(int,int)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.DuotoneFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.bluetooth.opp.BluetoothOppBtEnablingActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.SIMRecords\:\ void\ setVoiceMessageWaiting(int,int)>=android.permission.WAKE_LOCK
<android.hardware.input.InputManager\:\ void\ setPointerSpeed(android.content.Context,int)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.cat.IconLoader\:\ void\ loadIcons(int[],android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ setFrequencyBand(int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.systemui.SystemUI\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.VIBRATE
<com.android.gallery3d.app.MoviePlayer\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.WAKE_LOCK
<android.provider.BrowserContract$SyncState\:\ byte[]\ get(android.content.ContentProviderClient,android.accounts.Account)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.phone.CallNotifier$1\:\ void\ onCallForwardingIndicatorChanged(boolean)>=android.permission.VIBRATE
<com.android.calendar.CalendarViewAdapter\:\ void\ <init>=android.permission.READ_CALENDAR
<com.android.server.ThrottleService$DataRecorder\:\ void\ record()>=android.permission.READ_PHONE_STATE
<com.android.bluetooth.avrcp.AvrcpControllerService$BluetoothAvrcpControllerBinder\:\ android.media.session.PlaybackState\ getPlaybackState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.StatusBarManagerService\:\ void\ collapse()>=android.permission.EXPAND_STATUS_BAR
<com.android.gallery3d.app.StateManager\:\ void\ startState(java.lang.Class,android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetooth\:\ boolean\ connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<com.android.settings.DateTimeSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.editor.ContactEditorFragment$4\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ void\ phoneStateChanged(int,int,int,java.lang.String,int)>=android.permission.BLUETOOTH_ADMIN, android.permission.MODIFY_PHONE_STATE
<android.filterpacks.imageproc.ImageCombineFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.phone.InCallScreen\:\ void\ requestUpdateScreen()>=android.permission.BLUETOOTH
<android.telephony.TelephonyManager\:\ java.lang.String\ getSimSerialNumber()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.transaction.MessagingNotification$3\:\ void\ onPostExecute(java.lang.Object)>=android.permission.VIBRATE
<android.net.IConnectivityManager$Stub\:\ boolean\ setRadios(boolean)>=android.permission.CHANGE_NETWORK_STATE
<com.android.server.ConnectivityService\:\ com.android.internal.net.VpnConfig\ getVpnConfig(int)>=android.permission.CONTROL_VPN, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.provision.DefaultActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.WRITE_SETTINGS
<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder\:\ boolean\ virtualUnplug(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub\:\ boolean\ activeServiceSupportsLaunchFromKeyguard()>=android.permission.ACCESS_VOICE_INTERACTION_SERVICE
<com.android.browser.Controller\:\ void\ setActiveTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ setDeviceOutOfBandData(java.lang.String,byte[],byte[])>=android.permission.BLUETOOTH_ADMIN
<android.bluetooth.BluetoothHealth\:\ boolean\ registerSinkAppConfiguration(java.lang.String,int,android.bluetooth.BluetoothHealthCallback)>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiSettingsForSetupWizardXL\:\ void\ refreshAccessPoints(boolean)>=android.permission.ACCESS_WIFI_STATE
<android.bluetooth.BluetoothDevice\:\ android.bluetooth.BluetoothSocket\ createRfcommSocket(int)>=android.permission.BLUETOOTH
<com.android.email.SecurityPolicy\:\ void\ onDeviceAdminReceiverMessage(android.content.Context,int)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$28\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.calendar.alerts.AlertService\:\ void\ dismissOldAlerts(android.content.Context)>=android.permission.WRITE_CALENDAR
<com.android.server.RecognitionManagerService$MyPackageMonitor\:\ void\ onSomePackagesChanged()>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.ExpandableBinaryDictionary\:\ void\ loadDictionary()>=android.permission.WRITE_CONTACTS
<com.android.providers.downloads.RealSystemFacade\:\ void\ postNotification(long,android.app.Notification)>=android.permission.VIBRATE
<com.android.browser.DownloadHandler$1\:\ void\ run()>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.Controller$9\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.server.am.ActivityManagerService\:\ boolean\ navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>=android.permission.SET_DEBUG_APP, android.permission.START_ANY_ACTIVITY, android.permission.START_TASKS_FROM_RECENTS
<com.android.contacts.group.GroupBrowseListAdapter\:\ android.net.Uri\ getGroupUriFromId(long)>=android.permission.READ_SYNC_SETTINGS
<com.android.music.MediaPlaybackService$ServiceStub\:\ void\ next()>=android.permission.WAKE_LOCK
<com.android.calendar.DayView\:\ void\ access$5100(com.android.calendar.DayView,android.view.MotionEvent)>=android.permission.READ_CALENDAR
<android.bluetooth.IBluetooth\:\ java.lang.String\ getRemoteName(java.lang.String)>=android.permission.BLUETOOTH
<com.android.calendar.CalendarController\:\ void\ sendEvent(java.lang.Object,com.android.calendar.CalendarController$EventInfo)>=android.permission.WRITE_CALENDAR
<android.os.storage.IMountService$Stub\:\ int\ mountVolume(java.lang.String)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.inputmethod.latin.LatinIME$UIHandler\:\ void\ onStartInputView(android.view.inputmethod.EditorInfo,boolean)>=android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ notifyInvalidSelection()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.NonPhoneActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.tv.TvInputManagerService$BinderService\:\ boolean\ captureFrame(java.lang.String,android.view.Surface,android.media.tv.TvStreamConfig,int)>=android.permission.CAPTURE_TV_INPUT
<com.android.server.MountService\:\ void\ partitionPublic(java.lang.String)>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<com.android.gallery3d.app.MoviePlayer\:\ void\ access$1200(com.android.gallery3d.app.MoviePlayer)>=android.permission.WAKE_LOCK
<com.android.email.SingleRunningTask\:\ void\ runInternal(java.lang.Object)>=android.permission.WAKE_LOCK
<android.content.ContentService\:\ android.content.IContentService\ main(android.content.Context,boolean)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactEntryListFragment\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<android.net.IThrottleManager$Stub$Proxy\:\ java.lang.String\ getHelpUri()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.AdnRecordLoader\:\ void\ updateEF(com.android.internal.telephony.AdnRecord,int,int,int,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactListAdapter\:\ void\ bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.vcard.ImportProcessor\:\ void\ onEntryCreated(com.android.vcard.VCardEntry)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ android.net.Uri\ getContactUriForPhoneNumber(java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.data.WorkingMessage\:\ boolean\ loadFromUri(android.net.Uri)>=android.permission.WRITE_SMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ long\ getMaximumTimeToLockForUserAndProfiles(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.inputmethod.latin.spellcheck.DictionaryPool\:\ com.android.inputmethod.latin.spellcheck.DictAndProximity\ take()>=android.permission.WRITE_CONTACTS
<com.android.mms.transaction.ReadRecTransaction\:\ byte[]\ sendPdu(byte[])>=android.permission.CHANGE_NETWORK_STATE
<com.android.bluetooth.pbap.BluetoothPbapService$2\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.nfc.handover.HandoverManager\:\ android.nfc.NdefMessage\ tryHandoverRequest(android.nfc.NdefMessage)>=android.permission.BLUETOOTH
<com.android.settings.Settings$WifiP2pSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.mms.transaction.SmsReceiverService\:\ void\ messageFailedToSend(android.net.Uri,int)>=android.permission.VIBRATE
<android.filterpacks.base.FrameBranch\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothHeadset\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.email.service.AttachmentDownloadService$ServiceCallback\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothHeadset\:\ boolean\ acceptIncomingConnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.Settings$ManageApplicationsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.providers.contacts.VoicemailCleanupService\:\ void\ handleIntentInternal(android.content.Intent,android.content.ContentResolver)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ onActivityCreated()>=android.permission.NFC
<com.android.settings.bluetooth.DockService\:\ void\ onCreate()>=android.permission.BLUETOOTH
<com.android.settings.DockSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.pbap.BluetoothPbapObexServer\:\ int\ onGet(javax.obex.Operation)>=android.permission.READ_CALL_LOG
<android.filterpacks.base.CallbackFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.NetworkManagementService\:\ void\ setIpForwardingEnabled(boolean)>=android.permission.CONNECTIVITY_INTERNAL
<android.net.wifi.WifiStateMachine$SoftApStoppingState\:\ boolean\ processMessage(android.os.Message)>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.opp.BluetoothOppService\:\ void\ startListener()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onRadioAvailable()>=android.permission.BROADCAST_STICKY
<android.webkit.HTML5Audio\:\ void\ setDataSource(java.lang.String)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothInputDevice\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.net.http.RequestQueue\:\ void\ access$300(android.net.http.RequestQueue)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ onBondingDockConnect()>=android.permission.BLUETOOTH
<com.android.commands.pm.Pm\:\ void\ runSetInstallLocation()>=android.permission.WRITE_SETTINGS
<android.webkit.HTML5VideoFullScreen\:\ void\ access$500(android.webkit.HTML5VideoFullScreen)>=android.permission.WAKE_LOCK
<com.android.calendar.event.EditEventFragment$Done\:\ void\ run()>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.cdma.CdmaLteUiccRecords\:\ void\ getSpnFsm(boolean,android.os.AsyncResult)>=android.permission.WAKE_LOCK
<com.android.calendar.agenda.AgendaAdapter\:\ void\ bindView(android.view.View,android.content.Context,android.database.Cursor)>=android.permission.READ_CALENDAR
<com.android.email.activity.MessageViewFragment\:\ void\ onOpenAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.filterpacks.imageproc.ContrastFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.browser.WebViewController\:\ void\ onReceivedTitle(com.android.browser.Tab,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ notifyOffApnsOfAvailability(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.contacts.vcard.ImportVCardActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ void\ handleInetConditionChange(int,int)>=android.permission.BROADCAST_STICKY
<com.android.music.MediaPlaybackService$CompatMediaPlayer\:\ void\ release()>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothDeviceProfileState\:\ void\ sendConnectionAccessIntent()>=android.permission.WAKE_LOCK
<com.android.commands.uiautomator.Launcher$Command\:\ void\ run(java.lang.String[])>=android.permission.WRITE_SETTINGS
<com.android.server.sip.SipService$AutoRegistrationProcess\:\ void\ onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DockService\:\ void\ handleUnexpectedDisconnect(android.bluetooth.BluetoothDevice,com.android.settings.bluetooth.LocalBluetoothProfile,int)>=android.permission.BLUETOOTH
<android.view.IApplicationToken$Stub$Proxy\:\ boolean\ keyDispatchingTimedOut()>=android.permission.WAKE_LOCK
<android.net.DhcpStateMachine$WaitBeforeRenewalState\:\ void\ exit()>=android.permission.WAKE_LOCK
<com.android.server.content.ContentService\:\ void\ setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.WRITE_SYNC_SETTINGS
<com.android.internal.telephony.gsm.UsimPhoneBookManager\:\ void\ readIapFileAndWait(int)>=android.permission.WAKE_LOCK
<com.android.bluetooth.sap.SapService$SapBinder\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.providers.contacts.ContactsProvider2\:\ android.accounts.Account\ getDefaultAccount()>=android.permission.GET_ACCOUNTS
<com.android.email.activity.UIControllerBase\:\ void\ onRespondedToInvite(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.exchange.EasOutboxService\:\ void\ acknowledgeRemoteWipe(com.android.exchange.EasSyncService,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.settings.SubSettings\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.server.am.ActivityRecord$Token\:\ boolean\ keyDispatchingTimedOut()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhone$SipConnection$1\:\ void\ onCallHeld(android.net.sip.SipAudioCall)>=android.permission.WAKE_LOCK
<android.filterpacks.text.StringSource\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ editSmsMessageItem(com.android.mms.ui.MessageItem)>=android.permission.RECEIVE_SMS
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ addDeviceEventListener(android.hardware.hdmi.IHdmiDeviceEventListener)>=android.permission.HDMI_CEC
<com.android.camera.ui.EffectSettingPopup$Listener\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<android.provider.CalendarContract$CalendarAlerts\:\ boolean\ alarmExists(android.content.ContentResolver,long,long,long)>=android.permission.READ_CALENDAR
<android.accounts.IAccountManager\:\ void\ editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>=android.permission.MANAGE_ACCOUNTS
<com.android.phone.BluetoothHeadsetService$6\:\ boolean\ startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.phone.InCallScreen\:\ void\ internalResolveIntent(android.content.Intent)>=android.permission.BLUETOOTH
<com.android.commands.pm.Pm\:\ void\ run(java.lang.String[])>=android.permission.WRITE_SETTINGS
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnabledState\:\ boolean\ processMessage(android.os.Message)>=android.permission.WRITE_SETTINGS
<com.android.exchange.ExchangeService\:\ void\ waitForConnectivity()>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.ScreenNail\:\ void\ draw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.sip.SipPhoneFactory\:\ com.android.internal.telephony.sip.SipPhone\ makePhone(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier)>=android.permission.CHANGE_CONFIGURATION
<com.android.internal.telephony.CommandsInterface\:\ void\ acknowledgeLastIncomingCdmaSms(boolean,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.google.common.io.CharStreams\:\ java.lang.StringBuilder\ toStringBuilder(com.google.common.io.InputSupplier)>=android.permission.INTERNET
<com.android.server.pm.PackageManagerService\:\ void\ updateExternalMediaStatusInner(boolean,boolean)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothHeadset$Stub\:\ java.util.List\ getDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.nfc.NfcService$NfcServiceHandler\:\ boolean\ llcpActivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>=android.permission.VIBRATE
<com.android.server.MountService\:\ void\ setUsbMassStorageEnabled(boolean)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.internal.policy.impl.KeyguardViewBase\:\ void\ verifyUnlock()>=android.permission.GET_ACCOUNTS
<com.android.browser.Tab\:\ void\ postCapture()>=android.permission.GET_ACCOUNTS
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener\:\ void\ onSelectionChange()>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.RecipientsAdapter\:\ android.database.Cursor\ runQueryOnBackgroundThread(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy\:\ void\ start()>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ onUserInteraction()>=android.permission.WRITE_SMS
<android.net.sip.ISipService$Stub\:\ android.net.sip.ISipSession\ createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>=android.permission.USE_SIP
<android.accounts.IAccountManager$Stub$Proxy\:\ void\ setPassword(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.server.pm.ShutdownThread$5\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.browser.BrowserWebViewFactory\:\ android.webkit.WebView\ instantiateWebView(android.util.AttributeSet,int,boolean)>=android.permission.INTERNET
<android.nfc.NfcAdapter\:\ void\ disableForegroundDispatchInternal(android.app.Activity,boolean)>=android.permission.NFC
<com.android.settings.bluetooth.CachedBluetoothDeviceManager\:\ void\ onUuidChanged(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.email.activity.MessageList$1\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.RecoverySystemService$BinderService\:\ boolean\ uncrypt(java.lang.String,android.os.IRecoverySystemProgressListener)>=android.permission.RECOVERY
<android.bluetooth.BluetoothAdapter\:\ boolean\ isEnabled()>=android.permission.BLUETOOTH
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler\:\ com.android.contacts.model.EntityDeltaList\ getDeltaForAttachingPhotoToContact()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ void\ createDevicePreference(com.android.settings.bluetooth.CachedBluetoothDevice)>=android.permission.BLUETOOTH
<com.android.calendar.agenda.AgendaWindowAdapter\:\ void\ <init>=android.permission.READ_CALENDAR
<com.android.inputmethod.keyboard.PointerTracker\:\ boolean\ callListenerOnPressAndCheckKeyboardLayoutChange(com.android.inputmethod.keyboard.Key)>=android.permission.WRITE_CONTACTS
<com.android.providers.calendar.CalendarProvider2\:\ int\ updateEventRelatedTable(android.net.Uri,java.lang.String,boolean,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>=android.permission.READ_CALENDAR
<com.android.gallery3d.app.PhotoPage\:\ void\ onCreate(android.os.Bundle,android.os.Bundle)>=android.permission.NFC
<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder\:\ boolean\ connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<com.android.bluetooth.opp.BluetoothOppNotification\:\ void\ updateIncomingFileConfirmNotification()>=android.permission.VIBRATE
<com.android.phone.BluetoothHandsfree\:\ void\ access$1300(com.android.phone.BluetoothHandsfree)>=android.permission.BLUETOOTH
<com.android.browser.AddBookmarkPage$EditBookmarkInfoLoader\:\ java.lang.Object\ loadInBackground()>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.server.MountService\:\ boolean\ isConvertibleToFBE()>=android.permission.STORAGE_INTERNAL
<android.nfc.tech.NfcF\:\ void\ setTimeout(int)>=android.permission.NFC
<android.net.INetworkPolicyManager$Stub\:\ void\ setNetworkPolicies(android.net.NetworkPolicy[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.IIccPhoneBook$Stub\:\ java.util.List\ getAdnRecordsInEf(int)>=android.permission.WAKE_LOCK
<android.webkit.HTML5VideoViewProxy\:\ void\ play(java.lang.String,int,int)>=android.permission.WAKE_LOCK
<com.android.contacts.widget.IndexerListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.nfc.DeviceHost$DeviceHostListener\:\ void\ onCardEmulationAidSelected(byte[])>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.WhitelistDictionary\:\ void\ blockingReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.server.am.ActivityManagerService\:\ void\ startSystemLockTaskMode(int)>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.mms.data.Conversation\:\ void\ cacheAllThreads(android.content.Context)>=android.permission.READ_SMS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ onScreenTurnedOn(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ queryCdmaRoamingPreference(android.os.Message)>=android.permission.WAKE_LOCK
<android.service.quicksettings.TileService\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.filterpacks.imageproc.AlphaBlendFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ queryAvailableBandMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ closeDialpadInternal(boolean)>=android.permission.BLUETOOTH
<com.android.contacts.preference.ContactsPreferences\:\ void\ registerChangeListener(com.android.contacts.preference.ContactsPreferences$ChangeListener)>=android.permission.WRITE_SETTINGS
<com.android.browser.AutofillHandler\:\ void\ asyncLoadFromDb()>=android.permission.WRITE_CONTACTS
<android.app.ActivityManagerNative\:\ void\ wakingUp()>=android.permission.WAKE_LOCK
<android.filterpacks.base.NullFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.contacts.list.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WRITE_CONTACTS
<android.net.wifi.WifiManager\:\ boolean\ isP2pSupported()>=android.permission.ACCESS_WIFI_STATE
<com.android.email.activity.UIControllerBase\:\ void\ onBeforeMessageGone()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.accounts.AccountPreferenceBase\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.UndoBarView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.WifiManager$WifiLock\:\ void\ finalize()>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener\:\ void\ onPatternCellAdded(java.util.List)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteStopAudio(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ onDeviceBondStateChanged(com.android.settings.bluetooth.CachedBluetoothDevice,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ boolean\ handlePinMmi(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ConversationList\:\ void\ createNewMessage()>=android.permission.WRITE_SMS
<android.media.AudioService\:\ void\ setMode(int,android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.bluetooth.sap.SapService$SapBinder\:\ boolean\ isConnected(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ android.content.pm.ParceledListSlice\ getRecentTasks(int,int,int)>=android.permission.GET_DETAILED_TASKS, android.permission.GET_TASKS, android.permission.REAL_GET_TASKS
<com.android.email.activity.MessageViewFragmentBase$UpdatePreviewIconTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.LatinIME\:\ void\ resetEntireInputState()>=android.permission.WRITE_CONTACTS
<com.android.server.WifiService\:\ void\ setWifiApConfiguration(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<com.android.launcher2.AppsCustomizePagedView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<android.content.SyncManager\:\ void\ scheduleSyncOperation(android.content.SyncOperation)>=android.permission.WAKE_LOCK
<com.android.camera.VideoCamera\:\ void\ startPreview()>=android.permission.RECORD_AUDIO
<com.android.calendar.alerts.QuickResponseActivity$QueryThread\:\ void\ run()>=android.permission.READ_CALENDAR
<android.service.dreams.DreamService\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.server.backup.BackupManagerService$ActiveRestoreSession\:\ int\ restoreSome(long,android.app.backup.IRestoreObserver,[java.lang.String)>=android.permission.BACKUP
<com.android.phone.BluetoothHandsfree$30\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<android.net.wifi.IWifiManager$Stub\:\ boolean\ removeNetwork(int)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.LocationManagerService\:\ void\ setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.server.wm.WindowManagerService\:\ android.content.res.Configuration\ updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>=android.permission.MANAGE_APP_TOKENS
<com.android.server.wm.WindowAnimator\:\ void\ testTokenMayBeDrawnLocked()>=android.permission.WAKE_LOCK
<com.android.email.MessagingController\:\ void\ sendPendingMessagesSynchronous(com.android.emailcommon.provider.Account,long)>=android.permission.VIBRATE
<com.android.email.ControllerResultUiThreadWrapper$4\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.PhoneNotifier\:\ void\ notifyDataConnection(com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.Phone$DataState)>=android.permission.BROADCAST_STICKY
<com.android.phone.sip.SipSettings$2$1\:\ void\ run()>=android.permission.USE_SIP
<com.android.email.activity.UIControllerOnePane\:\ void\ showAccountSpecificWarning(long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.util.List\ getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.inputmethod.latin.suggestions.SuggestionsView$2\:\ void\ onPressKey(int)>=android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.DefaultVoicemailNotifier\:\ void\ updateNotification(android.net.Uri)>=android.permission.READ_CALL_LOG
<com.android.providers.calendar.CalendarProvider2\:\ void\ access$300(com.android.providers.calendar.CalendarProvider2)>=android.permission.GET_ACCOUNTS
<android.net.wifi.WifiWatchdogStateMachine\:\ boolean\ access$3200(android.net.wifi.WifiWatchdogStateMachine)>=android.permission.INTERNET
<com.android.server.DeviceIdleController$BinderService\:\ void\ addPowerSaveWhitelistApp(java.lang.String)>=android.permission.DEVICE_POWER
<com.android.server.am.ActivityManagerService\:\ void\ requestBugReport(int)>=android.permission.DUMP
<com.android.commands.am.Am\:\ void\ runSetDebugApp()>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.sip.SipCommandInterface\:\ void\ onRadioAvailable()>=android.permission.WAKE_LOCK
<android.test.RenamingDelegatingContext\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.internal.telephony.Phone\:\ void\ setTTYMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.systemui.recent.RecentsPanelView\:\ void\ dismiss()>=android.permission.VIBRATE
<com.android.server.wifi.WifiServiceImpl\:\ void\ factoryReset()>=android.permission.CHANGE_WIFI_STATE, android.permission.CONNECTIVITY_INTERNAL
<com.android.contacts.dialpad.DialpadFragment\:\ boolean\ onLongClick(android.view.View)>=android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask\:\ void\ onPostExecute(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothService\:\ boolean\ connectSink(java.lang.String)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.GLView\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaLteUiccRecords\:\ void\ onRefresh(boolean,int[])>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ queryTTYMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageViewFragmentBase\:\ void\ onOpenAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.settings.Settings\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.providers.applications.ApplicationsProvider$MyPackageMonitor\:\ void\ onPackageRemoved(java.lang.String,int)>=android.permission.WRITE_SETTINGS
<android.server.BluetoothHealthProfileHandler\:\ boolean\ connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.settings.DataUsageSummary$3\:\ void\ onTabChanged(java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.email.MessagingController$11\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.LocationManagerService\:\ void\ requestLocationUpdatesLocked(java.lang.String,long,float,boolean,com.android.server.LocationManagerService$Receiver)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.server.MountService\:\ int\ formatVolume(java.lang.String)>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ int\ access$3900(com.android.mms.ui.ComposeMessageActivity,long,boolean)>=android.permission.WRITE_SMS
<android.bluetooth.BluetoothAdapter\:\ android.bluetooth.BluetoothServerSocket\ listenUsingEncryptedRfcommWithServiceRecord(java.lang.String,java.util.UUID)>=android.permission.BLUETOOTH
<com.android.server.pm.PackageManagerService\:\ void\ clearCrossProfileIntentFilters(int,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.content.SyncManager$SyncHandler\:\ long\ maybeStartNextSyncLocked()>=android.permission.WAKE_LOCK
<android.net.sip.SipManager\:\ android.net.sip.SipProfile[]\ getListOfProfiles()>=android.permission.USE_SIP
<android.nfc.tech.NfcA\:\ void\ close()>=android.permission.NFC
<android.server.BluetoothAdapterStateMachine\:\ void\ finishSwitchingOff()>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.SIMFileHandler\:\ void\ loadEFLinearFixed(int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.backup.Trampoline\:\ int\ requestBackup([java.lang.String,android.app.backup.IBackupObserver)>=android.permission.BACKUP
<com.android.settings.widget.ChartDataUsageView$DataUsageChartListener\:\ void\ onLimitChanged()>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothGatt\:\ void\ abortReliableWrite()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.MovieActivity$1\:\ void\ <init>=android.permission.WAKE_LOCK
<android.filterpacks.videosrc.MediaSource\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.emailcommon.utility.EmailAsyncTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothGatt\:\ boolean\ setCharacteristicNotification(android.bluetooth.BluetoothGattCharacteristic,boolean)>=android.permission.BLUETOOTH
<android.content.ContentResolver\:\ android.content.SyncInfo\ getCurrentSync()>=android.permission.READ_SYNC_STATS
<android.service.dreams.DreamManagerService\:\ void\ setDreamComponent(android.content.ComponentName)>=android.permission.WRITE_SETTINGS
<com.android.email.activity.UIControllerOnePane\:\ void\ doAutoAdvance()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.SoundSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.PhotoView\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.NetworkManagementService\:\ boolean\ getIpForwardingEnabled()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.providers.media.RingtonePickerActivity\:\ void\ stopAnyPlayingRingtone()>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine$SupplicantStartingState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ deviceSelect(int,android.hardware.hdmi.IHdmiControlCallback)>=android.permission.HDMI_CEC
<com.android.settings.Settings$SpellCheckersSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.ui.SelectionManager\:\ void\ toggle(com.android.gallery3d.data.Path)>=android.permission.VIBRATE
<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter\:\ void\ doSaveAction()>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.DataConnection\:\ void\ tearDownData(java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothPermissionActivity\:\ android.view.View\ createConnectionDialogView()>=android.permission.BLUETOOTH
<com.android.contacts.detail.ContactDetailFragment\:\ android.view.View\ onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.music.MediaPlaybackService\:\ void\ onDestroy()>=android.permission.WAKE_LOCK
<com.android.bluetooth.pbap.BluetoothPbapReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ notifyServiceStateChanged(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<com.android.calendar.DayView\:\ void\ init(android.content.Context)>=android.permission.READ_CALENDAR
<com.android.mms.ui.ComposeMessageActivity\:\ void\ access$7000(com.android.mms.ui.ComposeMessageActivity,int)>=android.permission.WRITE_SMS
<android.nfc.INfcAdapterExtras$Stub\:\ int\ getCardEmulationRoute(java.lang.String)>=android.permission.NFC
<com.android.server.pm.PackageManagerService\:\ boolean\ canForwardTo(android.content.Intent,java.lang.String,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ requestIsimAuthentication(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$3\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.bluetooth.pbap.BluetoothPbapService\:\ void\ access$1100(com.android.bluetooth.pbap.BluetoothPbapService)>=android.permission.BLUETOOTH
<com.android.camera.VideoCamera\:\ void\ onBackPressed()>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.Phone\:\ void\ setSmscAddress(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.TetherSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.SimUnlockScreen\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.WAKE_LOCK
<android.content.ContentService\:\ boolean\ getMasterSyncAutomatically()>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.downloads.DownloadThread\:\ void\ writeDataToDestination(com.android.providers.downloads.DownloadThread$State,byte[],int)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.webkit.WebIconDatabaseClassic\:\ void\ releaseIconForPageUrl(java.lang.String)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.server.ThrottleService$SettingsObserver\:\ void\ register(android.content.Context)>=android.permission.WRITE_SETTINGS
<com.android.browser.AddBookmarkPage\:\ void\ onRootFolderFound(long)>=android.permission.GET_ACCOUNTS
<android.nfc.NfcAdapter\:\ boolean\ enableNdefPush()>=android.permission.BLUETOOTH
<com.android.internal.telephony.ServiceStateTracker\:\ void\ reRegisterNetwork(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ setForcedDisplaySize(int,int,int)>=android.permission.WRITE_SECURE_SETTINGS
<com.android.contacts.activities.GroupEditorActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$AccountSyncSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker\:\ void\ toggleState(android.content.Context)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardUpdateMonitor\:\ void\ handleUserChanged(int)>=android.permission.GET_ACCOUNTS
<android.media.effect.effects.LomoishEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiOn()>=android.permission.UPDATE_DEVICE_STATS
<com.android.settings.vpn2.VpnSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.webkit.HTML5VideoInline\:\ void\ prepareDataCommon(android.webkit.HTML5VideoViewProxy)>=android.permission.WAKE_LOCK
<com.android.calendar.AllInOneActivity\:\ void\ configureActionBar(int)>=android.permission.READ_CALENDAR
<android.filterfw.core.Filter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.SlotView\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<android.preference.VolumePreference$SeekBarVolumizer\:\ void\ startSample()>=android.permission.WAKE_LOCK
<com.android.settings.ApplicationSettings\:\ void\ handleUpdateAppInstallLocation(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.settings.bluetooth.BluetoothNameDialogFragment$3\:\ boolean\ onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>=android.permission.BLUETOOTH
<com.android.server.content.ContentService\:\ void\ setMasterSyncAutomaticallyAsUser(boolean,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.WRITE_SYNC_SETTINGS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ confirmDeleteThread(long)>=android.permission.READ_SMS
<com.android.contacts.calllog.CallLogFragment\:\ void\ updateOnEntry()>=android.permission.WRITE_CALL_LOG
<com.android.internal.telephony.CommandsInterface\:\ void\ hangupForegroundResumeBackground(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.EmailConnectivityManager\:\ boolean\ hasConnectivity()>=android.permission.ACCESS_NETWORK_STATE
<android.content.IContentService$Stub$Proxy\:\ boolean\ getSyncAutomatically(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.SubscriptionController\:\ void\ setDefaultDataSubId(int)>=android.permission.MODIFY_PHONE_STATE
<com.android.settings.DevelopmentSettings\:\ void\ resetDebuggerOptions()>=android.permission.WRITE_SETTINGS
<com.android.settings.tts.TtsEngineSettingsFragment$1$1\:\ void\ run()>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ void\ setBluetoothTethering(boolean)>=android.permission.BLUETOOTH
<com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.contacts.list.EmailAddressPickerFragment\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener\:\ void\ onUseAsPrimaryChosen()>=android.permission.READ_SYNC_SETTINGS
<android.provider.ContactsContract$RawContacts$EntityIteratorImpl\:\ java.lang.Object\ next()>=android.permission.READ_CALENDAR
<com.android.inputmethod.latin.ExpandableDictionary\:\ void\ loadDictionaryAsync()>=android.permission.WRITE_CONTACTS
<com.android.contacts.activities.AttachPhotoActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.ContrastFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ performIdleMaintenance()>=android.permission.SET_ACTIVITY_WATCHER
<com.android.soundrecorder.Recorder\:\ void\ stopPlayback()>=android.permission.WAKE_LOCK
<com.android.contacts.ContactsUtils\:\ android.net.Uri\ getCallUri(java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.inputmethod.latin.ExpandableBinaryDictionary$AsyncReloadDictionaryTask\:\ void\ run()>=android.permission.WRITE_CONTACTS
<android.media.IMediaScannerListener\:\ void\ scanCompleted(java.lang.String,android.net.Uri)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.app.IWallpaperManager$Stub$Proxy\:\ void\ setDimensionHints(int,int)>=android.permission.SET_WALLPAPER_HINTS
<com.android.mms.ui.MessageUtils\:\ boolean\ isLocalNumber(java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ loadMessageContent()>=android.permission.WRITE_SMS
<com.android.mms.transaction.PrivilegedSmsReceiver\:\ void\ beginStartingService(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.server.RecognitionManagerService\:\ void\ systemReady()>=android.permission.WRITE_SETTINGS
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker\:\ void\ onActualStateChange(android.content.Context,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<android.test.IsolatedContext$MockAccountManager\:\ android.accounts.AccountManagerFuture\ hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.internal.widget.SlidingTab\:\ void\ setGrabbedState(int)>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService\:\ void\ setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>=android.permission.USE_SIP
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler\:\ void\ setNumberOfPairedDevices(int)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ boolean\ setRemoteOutOfBandData(java.lang.String)>=android.permission.BLUETOOTH_ADMIN
<android.view.View\:\ boolean\ startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ void\ detachPppd(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.contacts.preference.ContactsPreferences\:\ void\ setDisplayOrder(int)>=android.permission.WRITE_SETTINGS
<android.webkit.HTML5Audio\:\ void\ onPrepared(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.SaturateFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ void\ access$3100(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,boolean)>=android.permission.BROADCAST_STICKY
<com.android.server.am.ActivityManagerService\:\ void\ setLockScreenShown(boolean,boolean)>=android.permission.DEVICE_POWER
<android.media.AudioService\:\ void\ stopBluetoothSco(android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.SimPukUnlockScreen\:\ void\ onResume()>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.LockPatternKeyguardView$1\:\ void\ run()>=android.permission.GET_ACCOUNTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.CharSequence\ getOrganizationName(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.view.IWindowManager$Stub\:\ void\ exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.latin.ContactsBinaryDictionary\:\ boolean\ hasContentChanged()>=android.permission.WRITE_CONTACTS
<com.android.systemui.ImageWallpaper$DrawableEngine\:\ void\ onOffsetsChanged(float,float,float,float,int,int)>=android.permission.SET_WALLPAPER
<com.android.contacts.list.DirectoryListLoader\:\ java.lang.Object\ loadInBackground()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.GsmServiceStateTracker$2\:\ void\ onChange(boolean)>=android.permission.BROADCAST_STICKY
<com.android.phone.CallNotifier\:\ void\ onUnknownConnectionAppeared(android.os.AsyncResult)>=android.permission.BLUETOOTH
<com.android.contacts.activities.ContactSelectionActivity\:\ boolean\ onQueryTextChange(java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ setKeyguardDisabled(android.content.ComponentName,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.editor.StructuredNameEditorView\:\ void\ notifyEditorListener()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.UiccSmsController\:\ void\ sendStoredMultipartText(int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)>=android.permission.READ_EXTERNAL_STORAGE, android.permission.SEND_SMS, android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.internal.telephony.DataConnection$DcDisconnectingState\:\ void\ enter()>=android.permission.BLUETOOTH
<android.net.IConnectivityManager\:\ void\ reportInetCondition(int,int)>=android.permission.BROADCAST_STICKY
<com.android.contacts.calllog.CallLogFragment\:\ void\ startVoicemailStatusQuery()>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.server.am.ActivityManagerService\:\ void\ resizePinnedStack(android.graphics.Rect,android.graphics.Rect)>=android.permission.MANAGE_ACTIVITY_STACKS
<com.android.settings.Settings$ManageApplicationsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.mms.transaction.RetrieveTransaction\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.camera.Camera\:\ void\ restorePreferences()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setUserProvisioningState(int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<com.android.exchange.EasAccountService\:\ android.os.Bundle\ tryAutodiscover(java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<android.filterfw.core.AsyncRunner\:\ void\ close()>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ getCdmaEriTextForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.settings.Settings$VpnSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.calendar.widget.CalendarAppWidgetModel\:\ com.android.calendar.widget.CalendarAppWidgetModel$EventInfo\ populateEventInfo(long,boolean,long,long,int,int,java.lang.String,java.lang.String,int,int)>=android.permission.READ_CALENDAR
<com.android.server.am.BatteryStatsService\:\ void\ noteInteractive(boolean)>=android.permission.UPDATE_DEVICE_STATS
<com.android.internal.policy.impl.RecentApplicationsDialog\:\ void\ reloadButtons()>=android.permission.GET_TASKS
<com.android.systemui.media.NotificationPlayer\:\ void\ play(android.content.Context,android.net.Uri,boolean,int)>=android.permission.WAKE_LOCK
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ removeHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)>=android.permission.HDMI_CEC
<com.android.mms.data.WorkingMessage\:\ void\ preSendSmsWorker(com.android.mms.data.Conversation,java.lang.String,java.lang.String)>=android.permission.RECEIVE_SMS
<android.net.sip.SipManager\:\ android.net.sip.SipSession\ createSipSession(android.net.sip.SipProfile,android.net.sip.SipSession$Listener)>=android.permission.USE_SIP
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler\:\ void\ startLongPressTimer(int)>=android.permission.WRITE_CONTACTS
<com.android.bluetooth.opp.BluetoothOppService$UpdateThread\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.contacts.list.ContactEntryListAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothPbap\:\ android.bluetooth.BluetoothDevice\ getClient()>=android.permission.BLUETOOTH
<android.nfc.INfcAdapter$Stub$Proxy\:\ void\ dispatch(android.nfc.Tag)>=android.permission.BLUETOOTH
<android.webkit.WebViewClassic\:\ void\ drawContent(android.graphics.Canvas)>=android.permission.WAKE_LOCK
<com.android.camera.ui.InLineSettingItem\:\ boolean\ changeIndex(int)>=android.permission.RECORD_AUDIO
<com.android.server.am.ActivityManagerService\:\ void\ appNotResponding(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService$CompatMediaPlayer\:\ void\ start()>=android.permission.WAKE_LOCK
<android.media.AsyncPlayer\:\ void\ startSound(android.media.AsyncPlayer$Command)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.SubtypeSwitcher\:\ void\ updateAllParameters()>=android.permission.WRITE_CONTACTS
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ initDevicePreference(com.android.settings.bluetooth.BluetoothDevicePreference)>=android.permission.BLUETOOTH
<com.android.settings.Settings$HeaderAdapter\:\ void\ <init>=android.permission.BLUETOOTH
<android.webkit.WebViewClassic\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.contacts.list.OnContactBrowserActionListener\:\ void\ onViewContactAction(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.BluetoothHandsfree$29\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.browser.DownloadTouchIcon\:\ void\ storeIcon(android.graphics.Bitmap)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ onConnectedInOrOut()>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub$Proxy\:\ android.net.NetworkState[]\ getAllNetworkState()>=android.permission.ACCESS_NETWORK_STATE
<android.media.effect.effects.FlipEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity$12\:\ void\ run()>=android.permission.WRITE_SMS
<com.android.internal.telephony.DataConnectionTracker\:\ void\ notifyApnIdUpToCurrent(java.lang.String,int)>=android.permission.BROADCAST_STICKY
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler\:\ void\ startKeyRepeatTimer(com.android.inputmethod.keyboard.PointerTracker,long)>=android.permission.WRITE_CONTACTS
<android.net.sip.ISipService\:\ boolean\ isRegistered(java.lang.String)>=android.permission.USE_SIP
<com.android.email.activity.MessageOrderManager$LoadMessageListTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ android.content.ComponentName\ setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.am.ActivityManagerService\:\ android.content.Context\ main(int)>=android.permission.WRITE_SETTINGS
<android.service.voice.VoiceInteractionService\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.browser.AddBookmarkPage$1\:\ void\ onLoadFinished(android.content.Loader,com.android.browser.AddBookmarkPage$EditBookmarkInfo)>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService\:\ void\ startUsingContactsDictionaryLocked()>=android.permission.WRITE_CONTACTS
<com.android.contacts.test.FragmentTestActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothAdapter\:\ boolean\ changeApplicationBluetoothState(boolean,android.bluetooth.BluetoothAdapter$BluetoothStateChangeCallback)>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHandsfree$12\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.browser.BrowserWebViewFactory\:\ android.webkit.WebView\ createWebView(boolean)>=android.permission.INTERNET
<com.android.gallery3d.ui.ActionModeHandler$1\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.providers.contacts.ProfileProvider\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>=android.permission.READ_PROFILE
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ disableLocationUpdates()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ supplyIccPukForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.detail.ContactDetailLayoutController\:\ void\ showContactWithoutUpdates()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.vcard.ImportVCardActivity$VCardScanThread\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.inputmethod.keyboard.KeyboardActionListener\:\ boolean\ onCustomRequest(int)>=android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogFragment\:\ void\ setMenuVisibility(boolean)>=android.permission.READ_CALL_LOG
<com.android.settings.SubSettings\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<android.filterpacks.base.FrameFetch\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.calendar.alerts.AlertReceiver\:\ com.android.calendar.alerts.AlertService$NotificationWrapper\ makeDigestNotification(android.content.Context,java.util.ArrayList,java.lang.String,boolean)>=android.permission.READ_CALENDAR
<com.android.server.ConnectivityService\:\ void\ handleConnect(android.net.NetworkInfo)>=android.permission.BLUETOOTH
<com.android.camera.ActivityBase\:\ boolean\ onCreateOptionsMenu(android.view.Menu)>=android.permission.NFC
<android.server.BluetoothA2dpService$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ notifyApnIdUpToCurrent(java.lang.String,com.android.internal.telephony.ApnContext,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.inputmethod.latin.UserBinaryDictionary\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.LatinIME\:\ void\ pickSuggestionManuallyWhileInBatchEdit(int,java.lang.CharSequence,int,int,android.view.inputmethod.InputConnection)>=android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.DefaultVoicemailNotifier$DefaultNewCallsQuery\:\ com.android.contacts.calllog.DefaultVoicemailNotifier$NewCall[]\ query()>=android.permission.READ_CALL_LOG
<android.bluetooth.BluetoothAdapter\:\ android.bluetooth.BluetoothServerSocket\ listenUsingEncryptedRfcommOn(int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ access$100(com.android.internal.telephony.gsm.GsmServiceStateTracker)>=android.permission.SET_TIME_ZONE
<com.android.email.Preferences\:\ boolean\ shouldShowRequireManualSync(android.content.Context,com.android.emailcommon.provider.Account)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.data.Contact$ContactsCache\:\ com.android.mms.data.Contact\ getContactInfo(com.android.mms.data.Contact)>=android.permission.WRITE_CONTACTS
<android.bluetooth.BluetoothA2dp\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.calendar.CalendarUtils$TimeZoneUtils\:\ java.lang.String\ formatDateRange(android.content.Context,long,long,int)>=android.permission.READ_CALENDAR
<com.android.settings.BrightnessPreference\:\ void\ setBrightness(int,boolean)>=android.permission.WRITE_SETTINGS
<android.app.ApplicationPackageManager\:\ void\ getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>=android.permission.GET_PACKAGE_SIZE
<com.android.providers.contacts.VoicemailCleanupService\:\ void\ onHandleIntent(android.content.Intent)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.phone.BluetoothHandsfree$20\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<android.bluetooth.BluetoothDevice\:\ boolean\ setRemoteOutOfBandData()>=android.permission.BLUETOOTH_ADMIN
<com.android.phone.PhoneInterfaceManager\:\ void\ enforceCallPermission()>=android.permission.CALL_PHONE
<com.android.settings.bluetooth.DockService\:\ void\ createDialog(android.bluetooth.BluetoothDevice,int,int)>=android.permission.BLUETOOTH
<android.os.SystemVibrator\:\ void\ vibrate(int,java.lang.String,long,android.media.AudioAttributes)>=android.permission.VIBRATE
<com.android.mms.ui.MessageUtils$3$1\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.music.QueryBrowserActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.WRITE_SETTINGS
<com.android.server.WifiService\:\ void\ setCountryCode(java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.RedEyeFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.GLRootView\:\ void\ onDrawFrame(javax.microedition.khronos.opengles.GL10)>=android.permission.RECORD_AUDIO
<com.android.settings.vpn2.VpnSettings\:\ void\ connect(com.android.settings.vpn2.VpnProfile)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.activities.ConfirmAddDetailActivity\:\ void\ startDisambiguationQuery(java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ pollCallsWhenSafe()>=android.permission.WAKE_LOCK
<android.content.ContentResolver\:\ android.content.SyncStatusInfo\ getSyncStatus(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<android.server.BluetoothService\:\ int\ getBondState(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.input.InputManagerService\:\ java.lang.String\ getDeviceAlias(java.lang.String)>=android.permission.BLUETOOTH
<com.android.phone.EmergencyCallbackModeService\:\ void\ resetEcmTimer(android.os.AsyncResult)>=android.permission.VIBRATE
<com.android.internal.telephony.RIL\:\ void\ setMute(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<android.accounts.AccountManagerService\:\ void\ checkReadAccountsPermission()>=android.permission.GET_ACCOUNTS
<android.telephony.SmsManager\:\ boolean\ copyMessageToIcc(byte[],byte[],int)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.ExpandableBinaryDictionary\:\ void\ syncReloadDictionaryInternal()>=android.permission.WRITE_CONTACTS
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker$1\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.BLUETOOTH
<com.android.calendar.alerts.AlertReceiver\:\ void\ beginStartingService(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.content.ISyncAdapter$Stub\:\ void\ startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean)>=android.permission.WAKE_LOCK
<android.view.IWindowSession$Stub\:\ int\ add(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>=android.permission.SYSTEM_ALERT_WINDOW
<android.media.effect.effects.CrossProcessEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ startLongPressTimer(com.android.inputmethod.keyboard.Key)>=android.permission.WRITE_CONTACTS
<android.bluetooth.IBluetooth\:\ boolean\ removeBond(java.lang.String)>=android.permission.BLUETOOTH_ADMIN
<android.bluetooth.IBluetooth$Stub\:\ java.lang.String\ getAddress()>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ separateConnection(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ fetchName()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.AlbumPicker\:\ void\ onResume()>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ powerOffRadioSafely(com.android.internal.telephony.DataConnectionTracker)>=android.permission.WAKE_LOCK
<android.media.IAudioService$Stub\:\ void\ setMode(int,android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ void\ enforceAccessPermission()>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.MailboxListFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<android.app.TabActivity\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ boolean\ updateCurrentCarrierInProvider(java.lang.String)>=android.permission.SET_TIME_ZONE
<android.location.ILocationManager$Stub$Proxy\:\ java.util.List\ getProviders(android.location.Criteria,boolean)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$PlaybackPositionListener\:\ void\ onStopTrackingTouch(android.widget.SeekBar)>=android.permission.WAKE_LOCK
<com.android.providers.downloads.DownloadThread\:\ java.io.InputStream\ openResponseEntity(com.android.providers.downloads.DownloadThread$State,org.apache.http.HttpResponse)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.list.PostalAddressPickerFragment\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<android.filterfw.core.SyncRunner\:\ void\ close()>=android.permission.WAKE_LOCK
<com.android.nfc.handover.HandoverManager$HandoverTransfer\:\ void\ updateStateAndNotification(int)>=android.permission.VIBRATE
<com.android.server.accessibility.AccessibilityManagerService\:\ android.os.IBinder\ getWindowToken(int,int)>=getWindowToken
<com.android.browser.GoogleAccountLogin\:\ void\ invalidateTokens()>=android.permission.GET_ACCOUNTS
<com.android.server.media.MediaSessionRecord$SessionStub\:\ void\ setFlags(int)>=android.permission.MODIFY_PHONE_STATE
<android.nfc.INfcTag$Stub\:\ android.nfc.NdefMessage\ ndefRead(int)>=android.permission.NFC
<com.google.common.io.Files\:\ void\ move(java.io.File,java.io.File)>=android.permission.INTERNET
<com.android.exchange.EasOutboxService\:\ com.android.exchange.EasResponse\ postAutodiscover(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,boolean)>=android.permission.WAKE_LOCK
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ removeSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>=android.permission.HDMI_CEC
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager\:\ java.util.List\ getAdnRecordsInEf(int)>=android.permission.WAKE_LOCK
<android.location.ILocationManager$Stub\:\ void\ setTestProviderEnabled(java.lang.String,boolean)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.server.InputMethodManagerService$MyPackageMonitor\:\ void\ onPackageRemoved(java.lang.String,int)>=android.permission.WRITE_SETTINGS
<android.webkit.HTML5VideoView\:\ void\ onPrepared(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothAdapter\:\ void\ setDiscoverableTimeout(int)>=android.permission.BLUETOOTH
<com.android.inputmethod.keyboard.LatinKeyboardView\:\ boolean\ openMoreKeysKeyboardIfRequired(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>=android.permission.WRITE_CONTACTS
<com.android.contacts.activities.PhotoSelectionActivity$4\:\ void\ onAnimationEnd(android.animation.Animator)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ handleVolumeKey(int,int)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ void\ access$2000(com.android.server.ConnectivityService)>=android.permission.WRITE_SETTINGS
<com.android.server.CertBlacklister\:\ void\ registerObservers(android.content.ContentResolver)>=android.permission.WRITE_SETTINGS
<com.android.exchange.adapter.EmailSyncAdapter\:\ void\ setSyncKey(java.lang.String,boolean)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.VignetteFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.BlackWhiteFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService\:\ android.os.Messenger\ getMessenger()>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.Settings$StorageUseActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.ui.CropView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.data.WorkingMessage\:\ void\ access$700(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>=android.permission.RECEIVE_SMS
<com.android.server.UiModeManagerService$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.CHANGE_CONFIGURATION
<android.location.ILocationManager\:\ void\ clearTestProviderStatus(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<android.os.PowerManager$WakeLock\:\ void\ acquireLocked()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.RuimFileHandler\:\ void\ loadEFImgLinearFixed(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ void\ removeVpnUidRanges(int,[android.net.UidRange)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.inputmethod.keyboard.internal.KeyboardState\:\ void\ onLongPressTimeout(int)>=android.permission.VIBRATE
<com.android.settings.bluetooth.A2dpProfile\:\ boolean\ isPreferred(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.GLView$OnClickListener\:\ void\ onClick(com.android.gallery3d.ui.GLView)>=android.permission.VIBRATE
<com.android.contacts.editor.ContactEditorFragment\:\ void\ onJoinCompleted(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wm.WindowManagerService\:\ void\ shutdown()>=android.permission.WAKE_LOCK
<com.android.settings.Utils\:\ java.lang.String\ getDefaultIpAddresses(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.location.CountryDetectorBase\:\ void\ stop()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.policy.impl.PhoneWindowManager\:\ int\ interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ void\ access$4400(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.net.wifi.p2p.WifiP2pConfig,boolean)>=android.permission.GET_TASKS
<com.android.phone.CallNotifier\:\ void\ onCdmaCallWaitingReject()>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothAdapter\:\ boolean\ isMultipleAdvertisementSupported()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothEnabler\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.BLUETOOTH
<com.android.internal.telephony.DataConnection\:\ void\ onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)>=android.permission.WAKE_LOCK
<com.android.bluetooth.opp.BluetoothOppService$BluetoothShareContentObserver\:\ void\ onChange(boolean)>=android.permission.BLUETOOTH
<com.android.settings.DataUsageSummary\:\ void\ setRestrictBackground(boolean)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onCleanUpConnection(boolean,int,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.voicedialer.VoiceDialerActivity$2\:\ void\ run()>=android.permission.VIBRATE
<com.android.internal.telephony.CommandsInterface\:\ void\ hangupWaitingOrBackground(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.net.NetworkPolicyManagerService\:\ android.net.NetworkPolicy[]\ getNetworkPolicies(java.lang.String)>=android.permission.MANAGE_NETWORK_POLICY, android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.calendar.agenda.AgendaWindowAdapter\:\ void\ refresh(android.text.format.Time,long,java.lang.String,boolean,boolean)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.gsm.GsmCallTracker\:\ com.android.internal.telephony.Connection\ dial(java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageViewFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.backup.BackupManagerService$ActiveRestoreSession\:\ int\ restorePackage(java.lang.String,android.app.backup.IRestoreObserver)>=android.permission.BACKUP
<android.nfc.tech.MifareClassic\:\ boolean\ authenticate(int,byte[],boolean)>=android.permission.NFC
<com.android.systemui.power.PowerUI\:\ void\ playLowBatterySound()>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothGatt\:\ boolean\ readDescriptor(android.bluetooth.BluetoothGattDescriptor)>=android.permission.BLUETOOTH
<com.android.server.connectivity.Tethering\:\ void\ access$900(com.android.server.connectivity.Tethering)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.PhoneSubInfo\:\ java.lang.String\ getDeviceId()>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.IccRecords\:\ void\ setVoiceMessageWaiting(int,int)>=android.permission.WAKE_LOCK
<android.accounts.AccountManager$6\:\ void\ doWork()>=android.permission.USE_CREDENTIALS
<com.android.email.activity.UIControllerTwoPane\:\ void\ doAutoAdvance()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$DeviceAdminSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.contacts.editor.TextFieldsEditorView\:\ void\ onOptionalFieldVisibilityChange()>=android.permission.READ_SYNC_SETTINGS
<android.location.LocationManager\:\ java.util.List\ getProviders(android.location.Criteria,boolean)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.server.am.BatteryStatsService\:\ android.os.ParcelFileDescriptor\ getStatisticsStream()>=android.permission.BATTERY_STATS
<android.media.effect.effects.BackDropperEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.PhotoDataAdapter\:\ java.lang.Object\ executeAndWait(java.util.concurrent.Callable)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.deviceinfo.Status\:\ void\ setWifiStatus()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.cdma.RuimRecords\:\ void\ handleRuimRefresh(com.android.internal.telephony.IccRefreshResponse)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onDataStateChanged(android.os.AsyncResult)>=android.permission.BROADCAST_STICKY
<com.android.contacts.editor.ContactEditorFragment\:\ void\ bindEditors()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.Phone\:\ void\ setCdmaSubscription(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.exchange.adapter.EmailSyncAdapter\:\ int\ getEstimate(java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.location.GpsLocationProvider\:\ void\ sendMessage(int,int,java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getVoiceMailAlphaTagForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.net.wifi.WifiManager\:\ android.os.Messenger\ getWifiServiceMessenger()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.wm.WindowManagerService\:\ void\ performLayoutAndPlaceSurfacesLocked()>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ int\ getVoiceNetworkTypeForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.media.effect.effects.DuotoneEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.RIL\:\ void\ access$000(com.android.internal.telephony.RIL,boolean)>=android.permission.WAKE_LOCK
<com.android.settings.DevelopmentSettings\:\ void\ setPrefsEnabledState(boolean)>=android.permission.READ_EXTERNAL_STORAGE
<com.android.gallery3d.ui.PhotoView$MyGestureListener\:\ void\ onUp()>=android.permission.VIBRATE
<com.android.internal.telephony.IPhoneSubInfo\:\ java.lang.String\ getLine1AlphaTag()>=android.permission.READ_PHONE_STATE
<com.android.email.service.MailService\:\ void\ setupAccountManagerAccount(android.content.Context,com.android.emailcommon.provider.Account,boolean,boolean,boolean,android.accounts.AccountManagerCallback)>=android.permission.GET_ACCOUNTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ reportSuccessfulFingerprintAttempt(int)>=android.permission.BIND_DEVICE_ADMIN, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.browser.OpenDownloadReceiver$1\:\ void\ run()>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.phone.InCallScreen\:\ void\ internalHangup()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ sendBurstDtmf(java.lang.String,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$SoundSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.mms.ui.QuickContactDivot\:\ void\ assignContactFromPhone(java.lang.String,boolean)>=android.permission.WRITE_CONTACTS
<android.net.wifi.WifiStateTracker\:\ boolean\ setRadio(boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.LocationManagerService\:\ void\ reportLocation(android.location.Location,boolean)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION, android.permission.INSTALL_LOCATION_PROVIDER
<com.android.internal.os.BatteryStatsImpl\:\ void\ doPlugLocked(long,long)>=android.permission.BLUETOOTH
<com.android.nfc.NfcDispatcher\:\ boolean\ dispatchTag(android.nfc.Tag)>=android.permission.BLUETOOTH
<android.net.wifi.WifiWatchdogStateMachine$RssiMonitoringState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread\:\ void\ run()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothHeadset\:\ boolean\ startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.content.SyncManager\:\ void\ access$700(android.content.SyncManager,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.camera.VideoCamera$MyBroadcastReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.IPhoneSubInfo$Stub\:\ java.lang.String\ getDeviceSvn()>=android.permission.READ_PHONE_STATE
<com.android.email.activity.UIControllerBase\:\ void\ onActivityStart()>=android.permission.ACCESS_NETWORK_STATE
<com.android.camera.ActivityBase$MyAppBridge\:\ void\ switchWithCaptureAnimation(int)>=android.permission.VIBRATE
<com.android.server.am.ActivityManagerService\:\ void\ skipPendingBroadcastLocked(int)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteSyncFinish(java.lang.String,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.browser.Tab\:\ void\ deleteThumbnail()>=android.permission.GET_ACCOUNTS
<com.android.server.backup.Trampoline\:\ void\ clearBackupData(java.lang.String,java.lang.String)>=android.permission.BACKUP
<com.android.server.pm.PackageManagerService\:\ boolean\ isPermissionRevokedByPolicy(java.lang.String,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.provider.CallLog$Calls\:\ android.net.Uri\ addCall(com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,long,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.model.EntityDelta\:\ void\ buildDiff(java.util.ArrayList)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.Controller$5\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.ex.variablespeed.VariableSpeed\:\ void\ stopAndStartPlayingAgain(com.android.ex.variablespeed.MediaPlayerDataSource)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ boolean\ dispatchKeyEvent(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.providers.downloads.DownloadInfo\:\ void\ sendIntentIfRequested()>=android.permission.WRITE_EXTERNAL_STORAGE
<android.media.AudioManager\:\ int\ setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.SIMRecords\:\ void\ handleSimRefresh(com.android.internal.telephony.IccRefreshResponse)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhoneBase\:\ com.android.internal.telephony.Connection\ dial(java.lang.String,com.android.internal.telephony.UUSInfo)>=android.permission.USE_SIP
<com.android.commands.bmgr.Bmgr\:\ void\ doWipe()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onRadioOffOrNotAvailable()>=android.permission.BROADCAST_STICKY
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary\:\ void\ generateBinaryDictionary()>=android.permission.WRITE_CONTACTS
<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper\:\ boolean\ isHardwareDetected(long,java.lang.String)>=android.permission.USE_FINGERPRINT
<com.android.providers.contacts.VoicemailContentProvider\:\ android.net.Uri\ insert(android.net.Uri,android.content.ContentValues)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.server.pm.PackageManagerService\:\ void\ scanAvailableAsecs()>=android.permission.WAKE_LOCK
<com.android.contacts.activities.PeopleActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$PowerUsageSummaryActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ access$3000(com.android.mms.ui.ComposeMessageActivity,long)>=android.permission.WRITE_SMS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ setRemoteOutOfBandData(java.lang.String)>=android.permission.BLUETOOTH_ADMIN
<com.android.settings.DreamSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.contacts.list.ContactBrowseListFragment\:\ boolean\ isSyncActive()>=android.permission.READ_SYNC_STATS
<android.filterpacks.imageproc.ToRGBAFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.hdmi.HdmiControlService$BinderService\:\ java.util.List\ getPortInfo()>=android.permission.HDMI_CEC
<com.android.internal.policy.impl.FaceUnlock\:\ void\ handleCancel()>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiControllerActivity(android.net.wifi.WifiActivityEnergyInfo)>=android.permission.UPDATE_DEVICE_STATS
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ repositionNavigationBar()>=android.permission.VIBRATE
<android.bluetooth.IBluetooth$Stub$Proxy\:\ java.util.List\ getInputDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.providers.contacts.ContactsProvider2\:\ int\ deleteData(long,java.lang.String[])>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothService\:\ int\ getDeviceServiceChannelForUuid(java.lang.String,android.os.ParcelUuid)>=android.permission.BLUETOOTH
<com.android.providers.calendar.CalendarReceiver$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ disableAccessibilityService(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS
<android.bluetooth.BluetoothDevice\:\ java.lang.String\ getName()>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.ExpandableDictionary\:\ void\ <init>=android.permission.WRITE_CONTACTS
<android.media.AudioService$AudioHandler\:\ void\ access$4700(android.media.AudioService$AudioHandler,android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneBase\:\ void\ requestIsimAuthentication(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter\:\ void\ onTextInput(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.Phone\:\ void\ enableEnhancedVoicePrivacy(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$6\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHandsfree$11\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.emailcommon.service.EmailServiceProxy$9\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ int\ getTetherApnRequired()>=android.permission.MODIFY_PHONE_STATE
<com.android.phone.SipCallOptionHandler\:\ void\ createSipPhoneIfNeeded(android.net.sip.SipProfile)>=android.permission.USE_SIP
<com.android.phone.PhoneInterfaceManager\:\ java.util.List\ getAllCellInfo()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.IccProvider\:\ boolean\ deleteIccRecordFromEf(int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.server.power.PowerManagerService$BinderService\:\ void\ boostScreenBrightness(long)>=android.permission.DEVICE_POWER
<com.android.systemui.statusbar.phone.PhoneStatusBar$5\:\ boolean\ onTouch(android.view.View,android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.settings.SettingsPreferenceFragment\:\ void\ onPrepareOptionsMenu(android.view.Menu)>=android.permission.READ_SYNC_STATS
<com.android.phone.PhoneInterfaceManager\:\ void\ carrierActionSetRadioEnabled(int,boolean)>=android.permission.MODIFY_PHONE_STATE
<com.android.settings.inputmethod.InputMethodPreference\:\ void\ setChecked(boolean)>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.AutoFixFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.DevicePolicyManagerService\:\ void\ wipeDataLocked(int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ void\ handleServiceCategoryProgramData(com.android.internal.telephony.cdma.SmsMessage)>=android.permission.WAKE_LOCK
<com.android.browser.BrowserHistoryPage$3\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.GET_ACCOUNTS
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ access$500(com.android.server.accessibility.AccessibilityManagerService,java.lang.String,java.util.Set)>=android.permission.WRITE_SETTINGS
<com.android.music.MediaPlaybackService\:\ boolean\ open(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.camera.ActivityBase\:\ void\ gotoGallery()>=android.permission.VIBRATE
<com.android.server.DeviceStorageMonitorService\:\ void\ cancelFullNotification()>=android.permission.BROADCAST_STICKY
<com.android.mms.data.Conversation\:\ java.lang.String\ verifySingleRecipient(android.content.Context,long,java.lang.String)>=android.permission.READ_SMS
<android.bluetooth.IBluetooth\:\ java.util.List\ getConnectedHealthDevices()>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager$Stub\:\ void\ setFrequencyBand(int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setCallWaiting(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setPasswordQuality(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.interactions.ImportExportDialogFragment\:\ void\ access$100(com.android.contacts.interactions.ImportExportDialogFragment)>=android.permission.WRITE_CONTACTS
<com.android.music.MediaPlaybackService\:\ void\ closeExternalStorageFiles(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.browser.AddBookmarkPage\:\ android.content.Loader\ onCreateLoader(int,android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.contacts.list.LegacyPhoneNumberListAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothPbap$Stub$Proxy\:\ android.bluetooth.BluetoothDevice\ getClient()>=android.permission.BLUETOOTH
<com.android.providers.settings.SettingsBackupAgent\:\ void\ onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>=android.permission.CHANGE_CONFIGURATION
<com.android.email.activity.MailboxFinder$FindMailboxTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.UndoBarView\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.MountService\:\ void\ onDaemonConnected()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.LocalBluetoothProfileManager$PanStateChangedHandler\:\ void\ onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.filterpacks.base.FrameBranch\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.UserBinaryDictionary\:\ void\ loadDictionary()>=android.permission.WRITE_CONTACTS
<com.android.browser.Tab$7\:\ void\ onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ haveSomethingToCopyToSDCard(long)>=android.permission.WRITE_SMS
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ separate(com.android.internal.telephony.cdma.CdmaConnection)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ getEnhancedVoicePrivacy(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ startDelayedRetry(com.android.internal.telephony.DataConnection$FailCause,java.lang.String,int)>=android.permission.BROADCAST_STICKY
<com.android.server.wm.WindowManagerService\:\ void\ setHoldScreenLocked(boolean)>=android.permission.WAKE_LOCK
<com.android.systemui.usb.UsbConfirmActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothPermissionRequest\:\ boolean\ checkUserChoice()>=android.permission.BLUETOOTH
<android.media.IAudioService$Stub$Proxy\:\ void\ setWiredDeviceConnectionState(int,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ void\ setDnsConfigurationForNetwork(int,[java.lang.String,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<android.net.IThrottleManager\:\ int\ getThrottle(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.WirelessSettings\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.browser.PieControl$1\:\ void\ onLayout(int,int,boolean)>=android.permission.GET_ACCOUNTS
<android.app.backup.IBackupManager$Stub$Proxy\:\ java.lang.String\ selectBackupTransport(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.browser.AutofillHandler$LoadFromDb\:\ void\ run()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.RIL\:\ void\ getIccCardStatus(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.inputmethod.KeyboardLayoutPickerFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.content.IContentService\:\ void\ removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ setSystemUiVisibility(int,int)>=android.permission.VIBRATE
<com.android.exchange.adapter.AbstractSyncAdapter\:\ void\ cleanup()>=android.permission.READ_SYNC_SETTINGS
<com.android.music.TrackBrowserActivity\:\ boolean\ onContextItemSelected(android.view.MenuItem)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onRoamingOn()>=android.permission.BROADCAST_STICKY
<android.nfc.INfcAdapter$Stub$Proxy\:\ android.nfc.INfcAdapterExtras\ getNfcAdapterExtrasInterface(java.lang.String)>=android.permission.NFC
<com.android.server.NetworkManagementService\:\ void\ unregisterObserver(android.net.INetworkManagementEventObserver)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.email.service.AttachmentDownloadService$DownloadSet\:\ void\ access$800(com.android.email.service.AttachmentDownloadService$DownloadSet)>=android.permission.READ_SYNC_SETTINGS
<android.test.IsolatedContext$MockAccountManager\:\ void\ clearPassword(android.accounts.Account)>=android.permission.MANAGE_ACCOUNTS
<com.android.contacts.list.PhoneNumberPickerFragment\:\ void\ setQueryString(java.lang.String,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState\:\ void\ enter()>=android.permission.ACCESS_NETWORK_STATE
<android.net.nsd.INsdManager$Stub\:\ android.os.Messenger\ getMessenger()>=android.permission.INTERNET
<android.filterpacks.text.ToUpperCase\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ void\ unloadMediaPackages(java.util.HashMap,int[],boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getIsimImpi()>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask\:\ void\ onPostExecute(java.lang.Object)>=android.permission.READ_PHONE_STATE
<com.android.server.wm.WindowManagerService\:\ void\ setNewConfiguration(android.content.res.Configuration)>=android.permission.WAKE_LOCK
<com.android.server.power.PowerManagerService$BinderService\:\ void\ crash(java.lang.String)>=android.permission.REBOOT
<com.android.mms.ui.ConversationListAdapter\:\ void\ onContentChanged()>=android.permission.READ_SMS
<com.android.calendar.event.EditEventFragment\:\ void\ startQuery()>=android.permission.READ_CALENDAR
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ notifyDefaultData(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.browser.Controller\:\ com.android.browser.Tab\ openTabToHomePage()>=android.permission.GET_ACCOUNTS
<com.android.providers.downloads.DownloadThread\:\ void\ reportProgress(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.vcard.VCardEntry$NicknameData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.MessagingListener\:\ void\ synchronizeMailboxFailed(long,long,java.lang.Exception)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.downloads.StorageManager\:\ void\ access$100(com.android.providers.downloads.StorageManager)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.server.InputMethodManagerService$InputMethodSettings\:\ void\ putSelectedSubtype(int)>=android.permission.WRITE_SETTINGS
<com.android.server.print.PrintManagerService$PrintManagerImpl\:\ void\ cancelPrintJob(android.print.PrintJobId,int,int)>=com.android.printspooler.permission.ACCESS_ALL_PRINT_JOBS
<com.android.music.MediaPlaybackService$ServiceStub\:\ void\ play()>=android.permission.WAKE_LOCK
<android.media.effect.effects.ColorTemperatureEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.calendar.month.SimpleDayPickerFragment\:\ void\ setUpAdapter()>=android.permission.READ_CALENDAR
<com.android.email.activity.MessageViewFragment$Callback\:\ void\ onMessageSetUnread()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ isForwardable(long)>=android.permission.WRITE_SMS
<com.android.email.activity.MessageFileView$LoadFilenameTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory\:\ void\ onCreate()>=android.permission.WRITE_CALENDAR
<com.android.systemui.statusbar.tablet.TabletStatusBar\:\ void\ createAndAddWindows()>=android.permission.BLUETOOTH
<com.android.contacts.editor.ContactEditorFragment\:\ void\ bindEditorsForNewContact(com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountType)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.WiredAccessoryObserver\:\ void\ onUEvent(android.os.UEventObserver$UEvent)>=android.permission.WAKE_LOCK
<android.webkit.WebViewFragment\:\ android.view.View\ onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>=android.permission.INTERNET
<com.android.internal.policy.impl.LockPatternKeyguardView$3\:\ void\ goToUnlockScreen()>=android.permission.WAKE_LOCK
<com.android.systemui.SearchPanelView\:\ void\ startAssistActivity()>=android.permission.VIBRATE
<com.android.browser.TabControl\:\ com.android.browser.Tab\ createNewTab(boolean)>=android.permission.GET_ACCOUNTS
<android.net.wifi.WifiManager\:\ boolean\ isScanAlwaysAvailable()>=android.permission.ACCESS_WIFI_STATE
<com.android.browser.TabControl\:\ boolean\ setCurrentTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isUninstallBlocked(android.content.ComponentName,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.webkit.HTML5VideoView\:\ void\ prepareDataCommon(android.webkit.HTML5VideoViewProxy)>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ boolean\ switchToLastInputMethod(android.os.IBinder)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.WRITE_SECURE_SETTINGS
<com.android.email.activity.setup.AccountSetupNames$2\:\ java.lang.String\ doInBackground(java.lang.Void[])>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.CallContactActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ getEnhancedVoicePrivacy(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.BaseCommands\:\ void\ setCurrentPreferredNetworkType()>=android.permission.WAKE_LOCK
<com.android.contacts.group.GroupBrowseListAdapter\:\ void\ setCursor(android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.google.common.io.Files\:\ java.lang.String\ readFirstLine(java.io.File,java.nio.charset.Charset)>=android.permission.INTERNET
<android.os.storage.IMountService\:\ void\ shutdown(android.os.storage.IMountShutdownObserver)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.bluetooth.pbap.BluetoothPbapService\:\ boolean\ initSocket()>=android.permission.BLUETOOTH
<com.android.internal.telephony.DefaultPhoneNotifier\:\ void\ doNotifyDataConnection(com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.Phone$DataState)>=android.permission.BROADCAST_STICKY
<com.android.server.ConnectivityService\:\ android.net.NetworkInfo[]\ getAllNetworkInfo()>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.BluetoothHandsfree\:\ void\ connectScoThread()>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ boolean\ onTrySetupData(com.android.internal.telephony.ApnContext)>=android.permission.BROADCAST_STICKY
<com.android.server.content.ContentService\:\ java.util.List\ getCurrentSyncsAsUser(int)>=android.permission.GET_ACCOUNTS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.READ_SYNC_STATS
<android.nfc.NfcAdapter\:\ void\ setBeamPushUrisCallback(android.nfc.NfcAdapter$CreateBeamUrisCallback,android.app.Activity)>=android.permission.NFC
<android.filterpacks.imageproc.ToRGBFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.contacts.list.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask\:\ void\ loadPhoto()>=android.permission.WRITE_CONTACTS
<com.android.server.NetworkManagementService\:\ void\ enableIpv6(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.browser.NetworkStateHandler$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.net.NetworkPolicyManagerService\:\ void\ factoryReset(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL, android.permission.MANAGE_NETWORK_POLICY, android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.mms.transaction.ReadRecTransaction\:\ byte[]\ sendPdu(byte[],java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<com.android.launcher2.WallpaperChooserDialogFragment\:\ void\ access$000(com.android.launcher2.WallpaperChooserDialogFragment,int)>=android.permission.SET_WALLPAPER
<com.android.contacts.vcard.ImportProcessor\:\ void\ runInternal()>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.opp.BluetoothOppManager\:\ void\ disableBluetooth()>=android.permission.BLUETOOTH_ADMIN
<com.android.quicksearchbox.AppsCorpus\:\ com.android.quicksearchbox.SuggestionCursor\ getSuggestions(java.lang.String,int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.ConnectivityService\:\ java.lang.String[]\ getTetherableWifiRegexs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.Controller$14\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.phone.CallCard\:\ void\ displaySecondaryCallStatus(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>=android.permission.WRITE_CONTACTS
<android.net.wifi.WifiStateMachine$DriverStartedState\:\ boolean\ processMessage(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.content.ContentService\:\ int\ getIsSyncable(android.accounts.Account,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ registerUserSwitchObserver(android.app.IUserSwitchObserver,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.server.BluetoothAdapterProperties\:\ java.lang.String\ getProperty(java.lang.String)>=android.permission.BLUETOOTH
<android.speech.tts.TextToSpeech\:\ int\ isLanguageAvailable(java.util.Locale)>=android.permission.BROADCAST_STICKY
<com.android.providers.contacts.DbModifierWithNotification\:\ void\ notifyVoicemailChange(android.net.Uri,java.util.Set,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.exchange.EasAccountService\:\ com.android.exchange.EasResponse\ executePostWithTimeout(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,int)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ void\ addIdleTimer(java.lang.String,int,int)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.policy.impl.KeyguardScreenCallback\:\ void\ takeEmergencyCallAction()>=android.permission.WAKE_LOCK
<com.android.calendar.event.EditEventView\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter$QueryHandler$1\:\ void\ onClick(android.view.View)>=android.permission.WRITE_CALENDAR
<com.android.gallery3d.ui.SelectionManager\:\ void\ enterSelectionMode()>=android.permission.VIBRATE
<android.location.ILocationManager$Stub\:\ android.os.Bundle\ getProviderInfo(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onDataSetupComplete(android.os.AsyncResult)>=android.permission.WAKE_LOCK
<android.app.IAlarmManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.SET_TIME_ZONE
<android.bluetooth.IBluetooth$Stub\:\ int\ getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)>=android.permission.BLUETOOTH
<com.android.calendar.month.MonthByWeekAdapter\:\ boolean\ onTouch(android.view.View,android.view.MotionEvent)>=android.permission.WRITE_CALENDAR
<com.android.inputmethod.latin.WhitelistDictionary\:\ void\ loadDictionaryAsync()>=android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.ContactInfoHelper\:\ com.android.contacts.calllog.ContactInfo\ queryContactInfoForSipAddress(java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager$Stub\:\ void\ releaseMulticastLock()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ updateSpnDisplay()>=android.permission.BROADCAST_STICKY
<android.net.sip.ISipService$Stub\:\ void\ open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>=android.permission.WAKE_LOCK
<com.android.contacts.list.JoinContactListAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.SearchActivity\:\ boolean\ onQueryTextSubmit(java.lang.String)>=android.permission.WRITE_CALENDAR
<com.android.server.InputMethodManagerService\:\ boolean\ shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.media.effect.effects.BitmapOverlayEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.contacts.list.CustomContactListFilterActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.DrawOverlayFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.gallery3d.data.DownloadCache$DownloadTask\:\ java.lang.Object\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.INTERNET
<com.android.commands.monkey.Monkey\:\ int\ run(java.lang.String[])>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ToGrayFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.phone.CdmaSubscriptionListPreference$CdmaSubscriptionButtonHandler\:\ void\ handleSetCdmaSubscriptionMode(android.os.Message)>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.StraightenFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.DeviceIdleController$BinderService\:\ long\ addPowerSaveTempWhitelistAppForMms(java.lang.String,int,java.lang.String)>=android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST
<android.bluetooth.BluetoothHeadset\:\ boolean\ startVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.server.am.BatteryStatsService\:\ void\ notePhoneDataConnectionState(int,boolean)>=android.permission.UPDATE_DEVICE_STATS
<com.android.car.pm.CarPackageManagerService\:\ void\ setAppBlockingPolicy(java.lang.String,android.car.content.pm.CarAppBlockingPolicy,int)>=android.car.permission.CONTROL_APP_BLOCKING
<com.android.bluetooth.pbap.BluetoothPbapService\:\ void\ createPbapNotification(java.lang.String)>=android.permission.VIBRATE
<com.android.server.wm.WindowManagerService\:\ boolean\ updateRotationUncheckedLocked(boolean)>=android.permission.WAKE_LOCK
<com.android.calendar.month.MonthByWeekFragment\:\ void\ onCreate(android.os.Bundle)>=android.permission.WRITE_CALENDAR
<com.android.phone.PhoneInterfaceManager\:\ void\ toggleRadioOnOff()>=android.permission.MODIFY_PHONE_STATE
<com.android.internal.telephony.PhoneBase\:\ void\ invokeOemRilRequestRaw(byte[],android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub\:\ android.net.wifi.WifiInfo\ getConnectionInfo()>=android.permission.ACCESS_WIFI_STATE
<com.android.email.Controller$7\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.LocationManagerService$SettingsObserver\:\ void\ update(java.util.Observable,java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.gallery3d.gadget.MediaSetSource\:\ android.graphics.Bitmap\ getImage(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.music.MediaPlaybackService\:\ int\ getNextPosition(boolean)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.VignetteFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$10\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<android.provider.Browser\:\ java.lang.String[]\ getVisitedHistory(android.content.ContentResolver)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<android.content.SyncManager$ActiveSyncContext\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.launcher2.AppsCustomizePagedView\:\ boolean\ onLongClick(android.view.View)>=android.permission.VIBRATE
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment\:\ void\ onResume()>=android.permission.READ_CALENDAR
<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub\:\ int\ deleteKeyphraseSoundModel(int,java.lang.String)>=android.permission.MANAGE_VOICE_KEYPHRASES
<com.android.contacts.activities.ActionBarAdapter$Listener\:\ void\ onSelectedTabChanged()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.app.AlbumPage\:\ void\ onSelectionModeChange(int)>=android.permission.WAKE_LOCK
<com.android.emailcommon.service.IEmailService$Stub\:\ void\ startSync(long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.wifi.AdvancedWifiSettings\:\ void\ initPreferences()>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.IAccountManager\:\ void\ setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.server.am.ActivityManagerService\:\ void\ cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord,int)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$3\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.internal.app.IBatteryStats\:\ long\ getAwakeTimeBattery()>=android.permission.BATTERY_STATS
<com.android.server.LocationManagerService$Receiver\:\ boolean\ callLocationChangedLocked(android.location.Location)>=android.permission.WAKE_LOCK
<com.android.settings.wifi.WifiSettings\:\ void\ handleEvent(android.content.Context,android.content.Intent)>=android.permission.ACCESS_WIFI_STATE
<com.android.server.input.InputManagerService\:\ int\ interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ internalAnswerAndEnd()>=android.permission.BLUETOOTH
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ detectAndSendKey(com.android.inputmethod.keyboard.Key,int,int)>=android.permission.WRITE_CONTACTS
<android.content.SyncManager$SyncHandler\:\ long\ scheduleReadyPeriodicSyncs()>=android.permission.WAKE_LOCK
<com.android.calendar.SearchActivity\:\ void\ search(java.lang.String,android.text.format.Time)>=android.permission.WRITE_CALENDAR
<com.android.gallery3d.app.AlbumSetPage\:\ void\ onBackPressed()>=android.permission.ACCESS_NETWORK_STATE
<android.provider.ContactsContract$Groups$EntityIteratorImpl\:\ java.lang.Object\ next()>=android.permission.READ_CALENDAR
<android.bluetooth.IBluetooth$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ setAndBroadcastNetworkSetTime(long)>=android.permission.BROADCAST_STICKY
<com.android.mms.transaction.Observer\:\ void\ update(com.android.mms.transaction.Observable)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.PhotoPage\:\ boolean\ switchWithCaptureAnimation(int)>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ handleRadioNotAvailable()>=android.permission.WAKE_LOCK
<android.content.pm.IPackageManager$Stub\:\ void\ freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>=android.permission.CLEAR_APP_CACHE
<com.android.gallery3d.ui.CropView$HighlightRectangle\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.PhoneInterfaceManager\:\ boolean\ endCall()>=android.permission.CALL_PHONE
<android.provider.Settings$System\:\ boolean\ putConfiguration(android.content.ContentResolver,android.content.res.Configuration)>=android.permission.WRITE_SETTINGS
<com.android.settings.WirelessSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.settings.deviceinfo.Memory\:\ void\ access$100(com.android.settings.deviceinfo.Memory)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.mms.ui.MmsThumbnailPresenter$1\:\ void\ onItemLoaded(java.lang.Object,java.lang.Throwable)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.LockSettingsService\:\ boolean\ checkVoldPassword(int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.phone.BluetoothAtPhonebook\:\ boolean\ queryPhonebook(java.lang.String,com.android.phone.BluetoothAtPhonebook$PhonebookResult)>=android.permission.READ_CALL_LOG
<com.android.emailcommon.service.IEmailService$Stub$Proxy\:\ void\ deleteAccountPIMData(long)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity$BackgroundQueryHandler\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.WRITE_SMS
<com.android.contacts.activities.TransactionSafeActivity\:\ android.app.Dialog\ onCreateDialog(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.CallNotifier\:\ void\ sendCdmaCallWaitingReject()>=android.permission.WRITE_CONTACTS
<com.android.calendar.event.AttendeesView\:\ void\ onClick(android.view.View)>=android.permission.WRITE_CONTACTS
<com.android.settings.Settings$UserDictionarySettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.app.PhotoPage\:\ void\ onUpPressed()>=android.permission.ACCESS_NETWORK_STATE
<com.android.providers.downloads.DownloadThread\:\ void\ handleEndOfStream(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.InCallTouchUi\:\ void\ onClick(android.view.View)>=android.permission.BLUETOOTH
<com.android.settings.Settings$ManageAccountsSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.camera.EffectsRecorder\:\ void\ startPreview()>=android.permission.RECORD_AUDIO
<com.android.email.activity.MessageViewFragmentBase$LoadAttachmentsTask\:\ void\ onSuccess(com.android.emailcommon.provider.EmailContent$Attachment[])>=android.permission.ACCESS_NETWORK_STATE
<android.webkit.HTML5Audio\:\ void\ onAudioFocusChange(int)>=android.permission.WAKE_LOCK
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker\:\ void\ toggleState(android.content.Context)>=android.permission.BLUETOOTH
<com.android.contacts.model.AccountTypeManagerImpl$1\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.launcher2.Workspace\:\ void\ setWallpaperDimension()>=android.permission.SET_WALLPAPER_HINTS
<com.android.internal.telephony.CommandsInterface\:\ void\ supplyIccPinForApp(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.IThrottleManager$Stub$Proxy\:\ int\ getThrottle(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.display.DisplayManagerService$BinderService\:\ void\ stopWifiDisplayScan()>=android.permission.CONFIGURE_WIFI_DISPLAY
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ void\ access$200(com.android.internal.policy.impl.LockPatternKeyguardView,com.android.internal.policy.impl.LockPatternKeyguardView$Mode,boolean)>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ requestCloseSpcErrorNotice(long)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.BlendFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ removeKeyPair(android.content.ComponentName,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.CallNotifier$1\:\ void\ onMessageWaitingIndicatorChanged(boolean)>=android.permission.VIBRATE
<com.android.nfc.NfcService\:\ void\ sendMockNdefTag(android.nfc.NdefMessage)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.HidProfile\:\ int\ getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ finalize()>=android.permission.WAKE_LOCK
<com.android.nfc.NfcService$NfcAdapterExtrasService\:\ void\ authenticate(java.lang.String,byte[])>=android.permission.NFC
<com.android.commands.bmgr.Bmgr\:\ void\ main(java.lang.String[])>=android.permission.WAKE_LOCK
<android.net.sip.SipAudioCall\:\ void\ close(boolean)>=android.permission.WAKE_LOCK
<com.android.systemui.recent.RecentsPanelView\:\ void\ hide(boolean)>=android.permission.VIBRATE
<com.android.voicedialer.CommandRecognizerEngine\:\ void\ recognize(com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)>=android.permission.READ_CALL_LOG
<com.android.settings.ConfirmLockPassword$ConfirmLockPasswordFragment\:\ android.view.View\ onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.location.ILocationManager\:\ android.location.Location\ getLastKnownLocation(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<android.webkit.HTML5VideoViewProxy$VideoPlayer\:\ void\ pauseAndDispatch()>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ boolean\ allowIncomingProfileConnect(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.widget.LockPatternView\:\ void\ notifyCellAdded()>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ void\ updateProvidersLocked()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumPage\:\ void\ access$1200(com.android.gallery3d.app.AlbumPage,int)>=android.permission.VIBRATE
<android.net.sip.SipManager\:\ android.net.sip.SipSession\ getSessionFor(android.content.Intent)>=android.permission.USE_SIP
<com.android.internal.policy.impl.PhoneWindowManager\:\ int\ checkAddPermission(android.view.WindowManager$LayoutParams)>=android.permission.SYSTEM_ALERT_WINDOW
<com.android.email.activity.EmailActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.NFC
<com.android.mms.ui.MessageListAdapter\:\ void\ onContentChanged()>=android.permission.WRITE_SMS
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.ACCESS_WIFI_STATE
<com.android.calendar.alerts.AlertService\:\ void\ rescheduleMissedAlarms(android.content.ContentResolver,android.content.Context,android.app.AlarmManager)>=android.permission.READ_CALENDAR
<android.test.RenamingDelegatingContext\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.sip.SipPhone$SipCall\:\ void\ rejectCall()>=android.permission.WAKE_LOCK
<com.android.server.TelephonyRegistry\:\ void\ checkListenerPermission(int)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.MccTable\:\ void\ setTimezoneFromMccIfNeeded(android.content.Context,int)>=android.permission.SET_TIME_ZONE
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ sendResponse(int,java.lang.String,int,int,int,[byte)>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ <init>=android.permission.CHANGE_CONFIGURATION
<com.android.server.print.PrintManagerService$PrintManagerImpl\:\ void\ addPrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int,int)>=com.android.printspooler.permission.ACCESS_ALL_PRINT_JOBS
<com.android.settings.bluetooth.BluetoothEventManager$DockEventHandler\:\ void\ onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ setSystemAudioMute(boolean)>=android.permission.HDMI_CEC
<com.android.server.NetworkManagementService\:\ android.net.NetworkStats\ getNetworkStatsUidDetail(int)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ dispatchPortAddressedPdus(byte[][],int)>=android.permission.WAKE_LOCK
<android.server.BluetoothAdapterStateMachine$BluetoothOn\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<android.server.BluetoothA2dpService\:\ boolean\ isConnectSinkFeasible(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.Settings$ApplicationSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setVoiceMessageWaiting(int,int)>=android.permission.WAKE_LOCK
<com.android.browser.NavScreen\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<android.filterpacks.text.ToUpperCase\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.nfc.NfcAdapter\:\ void\ enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])>=android.permission.NFC
<com.android.server.location.LocationBasedCountryDetector\:\ void\ setCountryListener(android.location.CountryListener)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.browser.Controller$SaveSnapshotTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler$2\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ queryAvailableBandMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.PanProfile\:\ int\ getConnectionStatus(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.LocationManagerService\:\ void\ clearTestProviderStatus(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.accessibility.AccessibilityManagerService\:\ java.util.List\ getEnabledAccessibilityServiceList(int,int)>=android.permission.INTERACT_ACROSS_USERS
<com.android.phone.OtaUtils\:\ void\ onOtaProvisionStatusChanged(android.os.AsyncResult)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityStack\:\ void\ updateTransitLocked(int,android.os.Bundle)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteConnectivityChanged(int,java.lang.String)>=android.permission.UPDATE_DEVICE_STATS
<com.android.server.usb.UsbService\:\ boolean\ hasDefaults(java.lang.String,int)>=android.permission.MANAGE_USB
<com.android.server.ConnectivityService\:\ void\ access$2300(com.android.server.ConnectivityService,android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.exchange.adapter.AbstractSyncAdapter\:\ void\ setSyncKey(java.lang.String,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.media.NotificationPlayer\:\ void\ releaseWakeLock()>=android.permission.WAKE_LOCK
<com.android.mms.data.Conversation\:\ boolean\ loadFromThreadId(long,boolean)>=android.permission.READ_SMS
<android.test.RenamingDelegatingContext\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ writeDescriptor(int,java.lang.String,int,int,int,[byte)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_PRIVILEGED
<com.android.camera.VideoCamera\:\ void\ setPreviewTexture()>=android.permission.RECORD_AUDIO
<com.android.settings.bluetooth.DevicePickerFragment\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.phone.InCallScreen\:\ void\ setInCallScreenMode(com.android.phone.InCallUiState$InCallScreenMode)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ setDataOnRoamingEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.mms.ui.SlideEditorActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.WAKE_LOCK
<android.nfc.INfcAdapterExtras\:\ void\ setCardEmulationRoute(java.lang.String,int)>=android.permission.NFC
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ android.content.pm.ParceledListSlice\ retrieveSecurityLogs(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ notifyDataConnectionFailed(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.nfc.NfcService\:\ void\ sendMessage(int,java.lang.Object)>=android.permission.BLUETOOTH
<android.media.AudioRecord\:\ void\ <init>=android.permission.RECORD_AUDIO
<android.bluetooth.BluetoothDeviceProfileState$IncomingHid\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<android.filterpacks.performance.ThroughputFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.PhotoView\:\ void\ snapback()>=android.permission.VIBRATE
<com.android.inputmethod.latin.ExpandableBinaryDictionary\:\ void\ access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>=android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogQueryHandler\:\ void\ markNewCallsAsOld()>=android.permission.WRITE_CALL_LOG
<com.android.browser.Tab\:\ void\ putInBackground()>=android.permission.GET_ACCOUNTS
<android.hardware.fingerprint.FingerprintManager\:\ boolean\ isHardwareDetected()>=android.permission.USE_FINGERPRINT
<com.android.contacts.test.FragmentTestActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$PrivacySettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.server.am.ActivityManagerService\:\ boolean\ forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,int)>=android.permission.WAKE_LOCK
<android.app.DownloadManager\:\ android.net.Uri\ getUriForDownloadedFile(long)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.app.TabActivity\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.internal.util.StateMachine$SmHandler$QuittingState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.pm.PackageManagerService\:\ void\ freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>=android.permission.CLEAR_APP_CACHE
<com.android.contacts.editor.EventFieldEditorView\:\ void\ clearAllFields()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.usb.UsbService\:\ void\ clearUsbDebuggingKeys()>=android.permission.MANAGE_USB
<com.android.phone.NotificationMgr\:\ void\ updateNotificationAndLaunchIncomingCallUi()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.ISms\:\ boolean\ copyMessageToIccEf(int,byte[],byte[])>=android.permission.WAKE_LOCK
<com.android.server.content.ContentService\:\ java.lang.String[]\ getSyncAdapterPackagesForAuthorityAsUser(java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ getNeighboringCids(android.os.Message)>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ boolean\ disable(boolean)>=android.permission.BLUETOOTH_ADMIN
<android.bluetooth.IBluetoothA2dp\:\ boolean\ allowIncomingConnect(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.gallery3d.app.ActivityState\:\ void\ onStateResult(int,int,android.content.Intent)>=android.permission.VIBRATE
<com.android.internal.telephony.SMSDispatcher\:\ void\ dispatchPortAddressedPdus(byte[][],int)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneUtils\:\ boolean\ hangupActiveCall(com.android.internal.telephony.Call)>=android.permission.WAKE_LOCK
<com.android.server.BluetoothManagerService\:\ java.lang.String\ getAddress()>=android.permission.BLUETOOTH, android.permission.LOCAL_MAC_ADDRESS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ rejectCall()>=android.permission.WAKE_LOCK
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ createBond(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN, android.permission.BLUETOOTH_PRIVILEGED
<com.android.phone.CdmaSystemSelectListPreference$MyHandler\:\ void\ resetCdmaRoamingModeToDefault()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ resetRadio(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getSubscriberId(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.provider.CallLog$Calls\:\ void\ removeExpiredEntries(android.content.Context)>=android.permission.WRITE_CALL_LOG
<com.android.gallery3d.ui.ScrollBarView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ access$700(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>=android.permission.WRITE_SMS
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ void\ wakeWhenReadyTq(int)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.TintFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.DuotoneFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.list.PhoneNumberPickerFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ crashApplication(int,int,java.lang.String,java.lang.String)>=android.permission.FORCE_STOP_PACKAGES
<android.net.NetworkIdentity\:\ android.net.NetworkIdentity\ buildNetworkIdentity(android.content.Context,android.net.NetworkState)>=android.permission.READ_PHONE_STATE
<android.bluetooth.BluetoothDevice\:\ java.lang.String\ getAlias()>=android.permission.BLUETOOTH
<com.android.phone.PhoneUtils\:\ boolean\ answerAndEndActive(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>=android.permission.BLUETOOTH
<com.android.mms.data.Conversation\:\ void\ blockingMarkAllMmsMessagesAsSeen(android.content.Context)>=android.permission.WRITE_SMS
<com.android.server.LockSettingsService\:\ void\ resetKeyStore(int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.settings.LocationSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.OtaUtils\:\ void\ cleanOtaScreen(boolean)>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.ContactsBinaryDictionary\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<com.android.server.am.ActivityManagerService\:\ void\ bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.ProfileProvider\:\ int\ deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[])>=android.permission.WRITE_PROFILE
<com.android.calendar.Utils\:\ java.lang.String\ formatDateRange(android.content.Context,long,long,int)>=android.permission.READ_CALENDAR
<android.content.ContextWrapper\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.music.IMediaPlaybackService$Stub\:\ void\ play()>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ void\ checkPendingNotification()>=android.permission.WRITE_SMS
<android.net.ConnectivityManager\:\ int\ untether(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.wifi.WifiAPITest$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.CHANGE_WIFI_STATE
<com.android.music.MediaPlaybackService$ServiceStub\:\ void\ enqueue(long[],int)>=android.permission.WAKE_LOCK
<android.speech.tts.TtsEngines\:\ void\ updateLocalePrefForEngine(java.lang.String,java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.mms.ui.MessageUtils\:\ java.lang.String\ getMultimediaMessageDetails(android.content.Context,android.database.Cursor,int)>=android.permission.WRITE_SMS
<com.android.phone.EmergencyCallHelper\:\ void\ onDisconnect(android.os.Message)>=android.permission.BLUETOOTH
<com.android.server.sip.SipService\:\ android.net.sip.ISipSession\ getPendingSession(java.lang.String,java.lang.String)>=android.permission.USE_SIP
<android.app.backup.BackupAgentHelper\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<android.bluetooth.IBluetooth$Stub\:\ java.lang.String[]\ listBonds()>=android.permission.BLUETOOTH
<com.android.internal.telephony.IccCard\:\ void\ access$200(com.android.internal.telephony.IccCard,android.os.AsyncResult)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ addNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>=android.permission.VIBRATE
<com.android.settings.deviceinfo.Status\:\ void\ onPause()>=android.permission.ACCESS_NETWORK_STATE
<android.webkit.HTML5VideoFullScreen\:\ void\ reset()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumSetPage$1\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.NetworkManagementService\:\ void\ addInterfaceToNetwork(java.lang.String,int)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.IPhoneSubInfo\:\ java.lang.String\ getIccSerialNumber()>=android.permission.READ_PHONE_STATE
<com.android.bluetooth.avrcp.AvrcpControllerService$BluetoothAvrcpControllerBinder\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<com.android.calendar.CalendarController$EventHandler\:\ void\ eventsChanged()>=android.permission.WRITE_CALENDAR
<android.provider.Settings$Secure\:\ boolean\ putLong(android.content.ContentResolver,java.lang.String,long)>=android.permission.WRITE_SETTINGS
<com.android.systemui.statusbar.tablet.TabletStatusBar\:\ android.view.View\ makeStatusBarView()>=android.permission.BLUETOOTH
<android.server.BluetoothEventLoop\:\ void\ onDisplayPasskey(java.lang.String,int,int)>=android.permission.BLUETOOTH
<com.android.server.WifiService\:\ void\ setNotificationVisible(boolean,int,boolean,int)>=android.permission.VIBRATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setActivePasswordState(int,int,int,int,int,int,int,int,int)>=android.permission.BIND_DEVICE_ADMIN, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.mms.transaction.RetrieveTransaction\:\ byte[]\ sendPdu(long,byte[],java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<com.android.gallery3d.app.SlideshowDataAdapter\:\ com.android.gallery3d.data.MediaItem\ access$500(com.android.gallery3d.app.SlideshowDataAdapter)>=android.permission.ACCESS_NETWORK_STATE
<android.filterfw.core.SyncRunner\:\ int\ step()>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager\:\ java.util.List\ getAdnRecordsInEf(int)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ void\ answerRingingCall()>=android.permission.MODIFY_PHONE_STATE
<android.bluetooth.BluetoothHeadset\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHeadsetService\:\ void\ getSdpRecordsAndConnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth\:\ int\ getProfileConnectionState(int)>=android.permission.BLUETOOTH
<android.net.sip.SipManager\:\ void\ unregister(android.net.sip.SipProfile,android.net.sip.SipRegistrationListener)>=android.permission.USE_SIP
<com.android.contacts.model.EntityModifier\:\ void\ migrateStateForNewContact(android.content.Context,com.android.contacts.model.EntityDelta,com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountType,com.android.contacts.model.AccountType)>=android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.ContactsSyncAdapter\:\ boolean\ isSyncable()>=android.permission.READ_SYNC_SETTINGS
<com.android.camera.ActivityBase\:\ void\ onCreate(android.os.Bundle)>=android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageEncoder\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.email.activity.MessageOrderManager$PostingCallback$2\:\ void\ run()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getDeviceSvnUsingSubId(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.audio.AudioService\:\ void\ stopBluetoothSco(android.os.IBinder)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.browser.Controller$SaveSnapshotTask\:\ java.lang.Long\ doInBackground(java.lang.Void[])>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ onRegisterKey(com.android.inputmethod.keyboard.Key)>=android.permission.WRITE_CONTACTS
<android.webkit.HTML5Audio\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.HeadsetProfile\:\ int\ getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.calllog.CallLogAdapter\:\ void\ updateCallLogContactInfoCache(java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo,com.android.contacts.calllog.ContactInfo)>=android.permission.WRITE_CALL_LOG
<android.content.SyncManager$9\:\ void\ onStatusChanged(int)>=android.permission.WAKE_LOCK
<com.android.email.activity.ActionBarController\:\ void\ access$800(com.android.email.activity.ActionBarController,int)>=android.permission.ACCESS_NETWORK_STATE
<android.provider.Browser\:\ void\ clearHistory(android.content.ContentResolver)>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ exitKeyguardSecurely(android.view.WindowManagerPolicy$OnKeyguardExitResult)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.os.BatteryStatsImpl\:\ void\ setOnBattery(boolean,int,int)>=android.permission.BLUETOOTH
<android.net.wifi.WifiWatchdogStateMachine$WalledGardenCheckState\:\ boolean\ processMessage(android.os.Message)>=android.permission.INTERNET
<com.android.server.accessibility.AccessibilityManagerService$2\:\ void\ onChange(boolean)>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetooth\:\ byte[]\ readOutOfBandData()>=android.permission.BLUETOOTH
<com.android.server.DevicePolicyManagerService$MyPackageMonitor\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.MountService\:\ void\ destroyUserStorage(java.lang.String,int,int)>=android.permission.STORAGE_INTERNAL
<com.android.settings.bluetooth.BluetoothEventManager$NameChangedHandler\:\ void\ onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ boolean\ supplyPinForSubscriber(int,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.quicksearchbox.ui.ContactBadge\:\ void\ assignContactFromPhone(java.lang.String,boolean)>=android.permission.WRITE_CONTACTS
<android.bluetooth.BluetoothDevice\:\ boolean\ removeBond()>=android.permission.BLUETOOTH_ADMIN
<com.android.providers.calendar.CalendarProviderIntentService\:\ void\ onHandleIntent(android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.CallLogAdapter\:\ void\ enqueueRequest(java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wm.WindowManagerService\:\ void\ setAnimationScale(int,float)>=android.permission.SET_ANIMATION_SCALE
<android.bluetooth.IBluetooth$Stub$Proxy\:\ int\ getRemoteClass(java.lang.String)>=android.permission.BLUETOOTH
<android.media.AudioService$ScoClient\:\ void\ clearCount(boolean)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.TileImageView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<android.test.mock.MockContentResolver\:\ boolean\ isSyncPending(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<android.app.INotificationManager\:\ void\ enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[])>=android.permission.VIBRATE
<android.inputmethodservice.InputMethodService\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.settings.vpn2.VpnSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.settings.net.UidDetailProvider\:\ com.android.settings.net.UidDetail\ buildUidDetail(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.BluetoothHandsfree$14\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<android.app.ApplicationPackageManager\:\ void\ freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>=android.permission.CLEAR_APP_CACHE
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ disableLocationUpdates()>=android.permission.WAKE_LOCK
<com.android.exchange.EasOutboxService\:\ void\ sync(com.android.exchange.adapter.AbstractSyncAdapter)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ boolean\ bindBackupAgent(android.content.pm.ApplicationInfo,int)>=android.permission.WAKE_LOCK
<com.android.contacts.quickcontact.QuickContactActivity$5\:\ void\ onLoadFinished(android.content.Loader,com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isCallerApplicationRestrictionsManagingPackage()>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.Connection\:\ void\ hangup()>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ boolean\ addGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener,java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ clearBlacklist()>=android.permission.CHANGE_WIFI_STATE
<android.net.wifi.IWifiManager\:\ void\ setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ getDeviceId(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.mms.ui.MessageListAdapter\:\ void\ bindView(android.view.View,android.content.Context,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.deskclock.AlarmClock\:\ void\ access$100(com.android.deskclock.AlarmClock,boolean,com.android.deskclock.Alarm)>=android.permission.WRITE_SETTINGS
<com.android.mms.ui.ComposeMessageActivity\:\ int\ getDrmMimeSavedStringRsrc(long,boolean)>=android.permission.WRITE_SMS
<android.nfc.INfcAdapterExtras\:\ android.os.Bundle\ close(java.lang.String,android.os.IBinder)>=android.permission.NFC
<com.android.settings.users.UserDetailsSettings\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.BLUETOOTH
<android.media.effect.effects.TintEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.SelectionManager\:\ void\ selectAll()>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ queueNextSignalStrengthPoll()>=android.permission.WAKE_LOCK
<android.app.IActivityManager\:\ void\ goingToSleep()>=android.permission.WAKE_LOCK
<com.android.commands.am.Am\:\ void\ runClearDebugApp()>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary\:\ boolean\ hasContentChanged()>=android.permission.WRITE_CONTACTS
<android.net.wifi.WifiStateMachine$SupplicantStoppingState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.systemui.statusbar.tablet.TabletStatusBarView\:\ boolean\ onInterceptTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.deskclock.AlarmKlaxon\:\ void\ startAlarm(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ boolean\ updateCurrentCarrierInProvider(java.lang.String)>=android.permission.SET_TIME_ZONE
<android.speech.tts.TextToSpeech\:\ int\ playEarcon(java.lang.String,int,android.os.Bundle,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.browser.view.BasePieView\:\ void\ layout(int,int,boolean,float,int)>=android.permission.GET_ACCOUNTS
<com.android.phone.BluetoothHandsfree$27\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.nfc.NfcService$TagService\:\ int\ ndefWrite(int,android.nfc.NdefMessage)>=android.permission.NFC
<com.android.internal.widget.PasswordEntryKeyboardView\:\ void\ setKeyboard(android.inputmethodservice.Keyboard)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.server.location.GpsLocationProvider\:\ void\ requestRefLocation(int)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.server.am.ActivityManagerService\:\ boolean\ isUserRunning(int,int)>=android.permission.INTERACT_ACROSS_USERS
<com.android.contacts.editor.LabeledEditorView\:\ void\ onOptionalFieldVisibilityChange()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.ITelephonyRegistry\:\ void\ notifyDataConnectionFailed(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.inputmethod.pinyin.SoftKeyboardView\:\ com.android.inputmethod.pinyin.SoftKey\ onKeyPress(int,int,com.android.inputmethod.pinyin.SkbContainer$LongPressTimer,boolean)>=android.permission.VIBRATE
<com.android.internal.telephony.MccTable\:\ void\ setLocaleFromMccIfNeeded(android.content.Context,int)>=android.permission.CHANGE_CONFIGURATION
<com.android.server.ConnectivityService\:\ void\ setAvoidUnvalidated(android.net.Network)>=android.permission.ACCESS_NETWORK_STATE, android.permission.CONNECTIVITY_INTERNAL
<com.android.contacts.detail.ContactLoaderFragment\:\ void\ loadUri(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.base.FrameStore\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.SlideshowPage\:\ boolean\ onItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.PhoneBase\:\ void\ setPropertiesByCarrier()>=android.permission.CHANGE_CONFIGURATION
<android.net.IConnectivityManager\:\ java.lang.String[]\ getTetheringErroredIfaces()>=android.permission.ACCESS_NETWORK_STATE
<android.content.ContentResolver\:\ boolean\ getMasterSyncAutomatically()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.NsdService$NsdStateMachine$EnabledState\:\ void\ enter()>=android.permission.BROADCAST_STICKY
<com.android.browser.UrlHandler$RLZTask\:\ void\ onPostExecute(java.lang.Object)>=android.permission.GET_ACCOUNTS
<com.android.providers.contacts.VoicemailTable$Delegate\:\ int\ delete(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.calendar.DayView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ void\ sendRawPdu(byte[],byte[],android.app.PendingIntent,android.app.PendingIntent,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.ActionModeHandler$3\:\ java.lang.Object\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.NFC
<com.android.soundrecorder.Recorder\:\ boolean\ onError(android.media.MediaPlayer,int,int)>=android.permission.WAKE_LOCK
<com.android.server.input.InputManagerService\:\ void\ systemReady(android.server.BluetoothService)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothHeadset$Stub\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ onContactUriQueryFinished(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.ITelephonyRegistry$Stub\:\ void\ notifySignalStrength(android.telephony.SignalStrength)>=android.permission.BROADCAST_STICKY
<com.android.settings.Settings$SpellCheckersSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.browser.Controller$7\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.cdma.CDMAPhone\:\ com.android.internal.telephony.Connection\ dial(java.lang.String)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothHealth\:\ java.util.List\ getDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.server.TelephonyRegistry\:\ void\ notifyDisconnectCause(int,int)>=android.permission.MODIFY_PHONE_STATE
<com.android.internal.telephony.gsm.GsmCall\:\ void\ hangupIfAlive()>=android.permission.WAKE_LOCK
<android.app.Application\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.server.InputMethodManagerService\:\ void\ addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.am.ActivityManagerService\:\ void\ forceStopPackage(java.lang.String,int)>=android.permission.FORCE_STOP_PACKAGES
<com.android.server.MountService\:\ void\ fixateNewestUserKeyAuth(int)>=android.permission.STORAGE_INTERNAL
<com.android.emailcommon.service.AccountServiceProxy$6\:\ void\ run()>=android.permission.READ_PHONE_STATE
<com.android.email.NotificationController\:\ void\ showAccountNotification(com.android.emailcommon.provider.Account,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)>=android.permission.VIBRATE
<com.android.soundrecorder.SoundRecorder$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.DeviceStorageMonitorService\:\ void\ access$000(com.android.server.DeviceStorageMonitorService,boolean)>=android.permission.CLEAR_APP_CACHE
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnabledState\:\ void\ enter()>=android.permission.BROADCAST_STICKY
<com.android.ex.variablespeed.VariableSpeed\:\ void\ seekTo(int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ enableLocationUpdates()>=android.permission.WAKE_LOCK
<com.android.internal.app.IBatteryStats$Stub$Proxy\:\ void\ noteBluetoothOn()>=android.permission.BLUETOOTH
<com.android.server.LockSettingsService\:\ com.android.internal.widget.VerifyCredentialResponse\ verifyPattern(java.lang.String,long,int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ boolean\ createIncomingConnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ notifyScreenOnLocked(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>=android.permission.WAKE_LOCK
<com.android.settings.CryptKeeper\:\ void\ setupUi()>=android.permission.WAKE_LOCK
<com.android.server.input.InputManagerService\:\ void\ showMissingKeyboardLayoutNotification()>=android.permission.VIBRATE
<com.android.browser.view.PieMenu$PieView\:\ void\ layout(int,int,boolean,float,int)>=android.permission.GET_ACCOUNTS
<android.net.wifi.IWifiManager\:\ android.net.wifi.WifiConfiguration\ getWifiApConfiguration()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.SMSDispatcher\:\ void\ sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager\:\ android.net.NetworkInfo\ getActiveNetworkInfo()>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.service.MailService$2\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<android.media.AudioService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.phone.InCallScreen\:\ void\ dontAddVoiceMailNumber()>=android.permission.BLUETOOTH
<com.android.providers.telephony.SmsProvider\:\ android.database.Cursor\ getAllMessagesFromIcc()>=android.permission.RECEIVE_SMS
<com.android.soundrecorder.Recorder\:\ void\ setState(int)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ resizeStack(int,android.graphics.Rect,boolean,boolean,boolean,int)>=android.permission.MANAGE_ACTIVITY_STACKS
<com.android.nfc.NfcService\:\ void\ onCardEmulationDeselected()>=android.permission.BLUETOOTH
<com.android.bluetooth.pbap.BluetoothPbapObexServer\:\ int\ sendVcardListingXml(int,javax.obex.Operation,int,int,java.lang.String,java.lang.String)>=android.permission.READ_CALL_LOG
<com.android.music.IMediaPlaybackService$Stub\:\ void\ prev()>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ killApplicationWithUid(java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ void\ requestModemActivityInfo(android.os.ResultReceiver)>=android.permission.MODIFY_PHONE_STATE
<com.android.browser.UiController\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.calendar.AllInOneActivity$2\:\ void\ run()>=android.permission.READ_CALENDAR
<com.android.contacts.editor.ContactEditorFragment$2\:\ void\ onRequest(int)>=android.permission.READ_SYNC_SETTINGS
<android.location.LocationManager\:\ void\ _requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.LocationListener,android.os.Looper)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.server.BootReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.provider.BrowserProvider\:\ android.database.Cursor\ doSuggestQuery(java.lang.String,java.lang.String[],boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$UserDictionarySettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.SlotView$Listener\:\ void\ onLongTap(int)>=android.permission.VIBRATE
<com.android.server.AppOpsService\:\ int\ noteOperation(int,int,java.lang.String)>=android.permission.UPDATE_APP_OPS_STATS
<android.media.AudioManager\:\ void\ setStreamVolume(int,int,int)>=android.permission.BLUETOOTH
<com.android.contacts.editor.TextFieldsEditorView\:\ void\ onLabelRebuilt()>=android.permission.READ_SYNC_SETTINGS
<android.filterfw.core.GraphRunner\:\ void\ close()>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.RotationToggle\:\ void\ onAttachedToWindow()>=android.permission.WRITE_SETTINGS
<com.android.server.BackupManagerService\:\ void\ restoreAtInstall(java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.contacts.group.GroupEditorFragment$2\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wm.WindowManagerService\:\ void\ setFocusedApp(android.os.IBinder,boolean)>=android.permission.MANAGE_APP_TOKENS
<android.server.BluetoothService\:\ java.util.List\ getConnectedInputDevices()>=android.permission.BLUETOOTH
<com.android.contacts.vcard.ProcessorBase\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.BlendFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ nvReadItem(int)>=android.permission.MODIFY_PHONE_STATE
<android.filterpacks.imageproc.SimpleImageFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.view.IWindowSession$Stub$Proxy\:\ int\ addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)>=android.permission.SYSTEM_ALERT_WINDOW
<com.android.phone.PhoneApp\:\ void\ updatePhoneState(com.android.internal.telephony.Phone$State)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.ScrollBarView\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Utils\:\ int\ getTetheringLabel(android.net.ConnectivityManager)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothDevice\:\ android.bluetooth.BluetoothSocket\ createInsecureRfcommSocketToServiceRecord(java.util.UUID)>=android.permission.BLUETOOTH
<android.net.wifi.WifiStateMachine$TetheringState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.net.wifi.WifiManager\:\ boolean\ isDeviceToApRttSupported()>=android.permission.ACCESS_WIFI_STATE
<android.bluetooth.BluetoothDeviceProfileState$BondedDevice\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.exchange.EasAccountService\:\ void\ sendMeetingResponse(com.android.exchange.MeetingResponseRequest)>=android.permission.WAKE_LOCK
<com.android.internal.app.ChooserActivity\:\ void\ onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)>=android.permission.BLUETOOTH
<com.android.settings.AccessibilitySettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.CHANGE_CONFIGURATION
<com.android.exchange.adapter.EmailSyncAdapter$EasEmailSyncParser\:\ boolean\ parse()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ setSmscAddress(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.data.Conversation\:\ void\ startQueryForAll(android.content.AsyncQueryHandler,int)>=android.permission.READ_SMS
<com.android.contacts.interactions.PhoneNumberInteraction\:\ void\ onLoadComplete(android.content.Loader,java.lang.Object)>=android.permission.READ_PHONE_STATE
<com.google.common.io.ByteStreams$5\:\ java.lang.Object\ getInput()>=android.permission.INTERNET
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ switchUser(android.content.ComponentName,android.os.UserHandle)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.providers.calendar.CalendarAlarmManager\:\ void\ acquireScheduleNextAlarmWakeLock()>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth\:\ int\ getPanDeviceConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1\:\ void\ onPressKey(int)>=android.permission.WRITE_CONTACTS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ int\ getBluetoothState()>=android.permission.BLUETOOTH
<com.android.mms.data.WorkingMessage\:\ void\ updateSendStats(com.android.mms.data.Conversation)>=android.permission.READ_SYNC_SETTINGS
<android.net.sip.SipManager\:\ void\ open(android.net.sip.SipProfile)>=android.permission.USE_SIP
<com.android.gallery3d.app.SlideshowPage$SequentialSource\:\ long\ reload()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.RIL\:\ void\ rejectCall(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.wallpaper.fall.FallRS\:\ void\ start()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.phone.PhoneInterfaceManager\:\ boolean\ handlePinMmi(java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<android.filterpacks.imageproc.BrightnessFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.inputmethod.InputMethodAndLanguageSettings\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ sendDtmf(char)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ void\ addProximityAlert(double,double,float,long,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.emailcommon.service.IEmailService$Stub\:\ int\ searchMessages(long,com.android.emailcommon.service.SearchParams,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary\:\ void\ startDictionaryLoadingTaskLocked()>=android.permission.WRITE_CONTACTS
<com.android.nfc.NfcService$NfcAdapterExtrasService\:\ android.os.Bundle\ open(java.lang.String,android.os.IBinder)>=android.permission.NFC
<com.android.server.am.ActivityStack\:\ void\ stopIfSleepingLocked()>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactListAdapter\:\ android.net.Uri\ getFirstContactUri()>=android.permission.READ_SYNC_SETTINGS
<android.net.IConnectivityManager$Stub$Proxy\:\ java.lang.String[]\ getTetherableUsbRegexs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.soundrecorder.Recorder$OnStateChangedListener\:\ void\ onStateChanged(int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ boolean\ handleEctIncallSupplementaryService(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.statusbar.StatusBarManagerService\:\ void\ registerStatusBar(com.android.internal.statusbar.IStatusBar,java.util.List,java.util.List,[int,java.util.List,android.graphics.Rect,android.graphics.Rect)>=android.permission.STATUS_BAR_SERVICE
<android.filterpacks.text.StringSource\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ void\ call(java.lang.String,java.lang.String)>=android.permission.CALL_PHONE
<android.bluetooth.IBluetoothHeadset$Stub\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.CropFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.wifi.WifiServiceImpl\:\ android.net.DhcpInfo\ getDhcpInfo()>=android.permission.ACCESS_WIFI_STATE
<android.location.ILocationListener$Stub$Proxy\:\ void\ onLocationChanged(android.location.Location)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.PrivilegedSmsReceiver\:\ void\ onReceiveWithPrivilege(android.content.Context,android.content.Intent,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmCallTracker\:\ com.android.internal.telephony.Connection\ dial(java.lang.String,com.android.internal.telephony.UUSInfo)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary\:\ int\ getContactCount()>=android.permission.WRITE_CONTACTS
<com.android.settings.bluetooth.LocalBluetoothProfile\:\ boolean\ isPreferred(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.DataUsageSummary$1\:\ void\ onPostExecute(java.lang.Void)>=android.permission.READ_PHONE_STATE
<android.app.WallpaperManager\:\ void\ suggestDesiredDimensions(int,int)>=android.permission.SET_WALLPAPER_HINTS
<com.android.settings.TetherSettings\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.accounts.ManageAccountsSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.settings.accounts.AccountPreferenceBase$1$1\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.SmsStorageMonitor$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ void\ shutdownMobileRadios()>=android.permission.MODIFY_PHONE_STATE
<com.android.mms.transaction.TransactionService\:\ void\ update(com.android.mms.transaction.Observable)>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.ContactsBinaryDictionary\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<com.android.contacts.ContactLoader\:\ void\ loadDirectoryMetaData(com.android.contacts.ContactLoader$Result)>=android.permission.WRITE_CONTACTS
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ prepareEmptyView()>=android.permission.READ_SYNC_STATS
<android.content.ContentResolver\:\ void\ setMasterSyncAutomatically(boolean)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.contacts.ContactsActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.DeviceIdleController$BinderService\:\ void\ exitIdle(java.lang.String)>=android.permission.DEVICE_POWER
<com.android.internal.telephony.RIL\:\ void\ access$200(com.android.internal.telephony.RIL)>=android.permission.WAKE_LOCK
<com.android.server.WifiService\:\ boolean\ saveConfiguration()>=android.permission.CHANGE_WIFI_STATE
<com.android.mms.transaction.SmsReceiverService\:\ void\ access$300(com.android.mms.transaction.SmsReceiverService,android.content.Intent)>=android.permission.RECEIVE_SMS
<android.hardware.location.ContextHubService\:\ int\ registerCallback(android.hardware.location.IContextHubCallback)>=android.permission.LOCATION_HARDWARE
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ProviderInfo\ getProviderInfo(android.content.ComponentName,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.browser.SnapshotTab$LoadData\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.internal.telephony.SubscriptionController\:\ int\ getActiveSubInfoCount(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.contacts.list.PhoneNumberListAdapter\:\ android.net.Uri\ getDataUri(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CallerInfoAsyncQuery\:\ com.android.internal.telephony.CallerInfoAsyncQuery\ startQuery(int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>=android.permission.WRITE_CONTACTS
<android.net.http.RequestQueue\:\ void\ enablePlatformNotifications()>=android.permission.ACCESS_NETWORK_STATE
<android.server.BluetoothService\:\ boolean\ fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)>=android.permission.BLUETOOTH
<android.app.ExpandableListActivity\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.server.am.BroadcastQueue$AppNotResponding\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ handleExitEmergencyCallbackMode(android.os.Message)>=android.permission.BROADCAST_STICKY
<com.android.phone.EmergencyCallbackModeExitDialog$4\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothDeviceProfileState\:\ boolean\ processCommand(int)>=android.permission.BLUETOOTH
<com.android.browser.UiController\:\ com.android.browser.SnapshotTab\ createNewSnapshotTab(long,boolean)>=android.permission.GET_ACCOUNTS
<com.android.calendar.alerts.AlertAdapter\:\ void\ bindView(android.view.View,android.content.Context,android.database.Cursor)>=android.permission.READ_CALENDAR
<com.android.inputmethod.latin.suggestions.SuggestionsView$2\:\ boolean\ onCustomRequest(int)>=android.permission.WRITE_CONTACTS
<android.nfc.INfcTag$Stub$Proxy\:\ int\ connect(int,int)>=android.permission.NFC
<com.android.settings.Settings$RunningServicesActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ConfirmAddDetailActivity\:\ void\ access$300(com.android.contacts.activities.ConfirmAddDetailActivity,com.android.contacts.model.EntityDeltaList)>=android.permission.READ_SYNC_SETTINGS
<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy\:\ void\ seekTo(int)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageViewFragmentBase\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$InputMethodAndSubtypeEnablerActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.pinyin.SkbContainer\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.contacts.list.ShortcutIntentBuilder$ContactLoadingAsyncTask\:\ void\ loadPhoto()>=android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.Suggest\:\ void\ initWhitelistAndAutocorrectAndPool(android.content.Context,java.util.Locale)>=android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.accounts.AccountManager$5\:\ android.accounts.AccountManagerFuture\ start()>=android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ boolean\ isConnected()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.GestureRecognizer$Listener\:\ boolean\ onSingleTapUp(float,float)>=android.permission.VIBRATE
<android.content.ISyncAdapter\:\ void\ startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.EmergencyDialer\:\ boolean\ onLongClick(android.view.View)>=android.permission.VIBRATE
<com.android.settings.DataUsageSummary$ConfirmDataDisableFragment$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.BluetoothHandsfree$11\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.providers.downloads.Helpers\:\ java.lang.String\ generateSaveFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,long,boolean,com.android.providers.downloads.StorageManager)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.hardware.ISerialManager$Stub\:\ java.lang.String[]\ getSerialPorts()>=android.permission.SERIAL_PORT
<com.android.internal.telephony.ITelephony\:\ boolean\ disableDataConnectivity()>=android.permission.CHANGE_NETWORK_STATE
<com.android.camera.PanoramaActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.RECORD_AUDIO
<com.android.settings.wifi.AdvancedWifiSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ createBond(java.lang.String)>=android.permission.BLUETOOTH
<com.android.exchange.EasOutboxService\:\ com.android.exchange.provider.GalResult\ searchGal(android.content.Context,long,java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ access$2800(com.android.mms.ui.ComposeMessageActivity,long)>=android.permission.WRITE_SMS
<com.android.internal.policy.impl.PhoneWindowManager$15\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhone\:\ com.android.internal.telephony.Connection\ dial(java.lang.String,com.android.internal.telephony.UUSInfo)>=android.permission.USE_SIP
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ powerOffRadioSafely(com.android.internal.telephony.DataConnectionTracker)>=android.permission.WAKE_LOCK
<com.android.server.VibratorService\:\ void\ vibratePattern(int,java.lang.String,[long,int,int,android.os.IBinder)>=android.permission.UPDATE_APP_OPS_STATS, android.permission.VIBRATE
<com.android.phone.CallNotifier\:\ void\ access$000(com.android.phone.CallNotifier,boolean)>=android.permission.VIBRATE
<com.android.deskclock.AlarmReceiver\:\ void\ handleIntent(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.camera.VideoCamera\:\ boolean\ onCreateOptionsMenu(android.view.Menu)>=android.permission.NFC
<android.net.ConnectivityManager\:\ android.net.LinkProperties\ getActiveLinkProperties()>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.PhoneUtils\:\ void\ setAudioMode()>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ restoreSavedNetworkSelection(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ boolean\ handleCallWaitingIncallSupplementaryService(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ statusBarVisibilityChanged(int)>=android.permission.STATUS_BAR
<android.webkit.HTML5Audio\:\ void\ play()>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService$10\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.providers.downloads.DownloadThread\:\ int\ readFromResponse(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,byte[],java.io.InputStream)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.PanProfile\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.app.backup.IBackupManager\:\ void\ setBackupEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.ethernet.EthernetServiceImpl\:\ void\ setConfiguration(android.net.IpConfiguration)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.PhoneFactory\:\ void\ makeDefaultPhones(android.content.Context)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.LomoishFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.SimUnlockScreen$TouchInput\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.AccountUnlockScreen\:\ void\ asyncCheckPassword()>=android.permission.WAKE_LOCK
<com.android.internal.app.IBatteryStats\:\ void\ noteBluetoothOn()>=android.permission.BLUETOOTH
<com.android.server.am.BatteryStatsService\:\ void\ noteStartVideo(int)>=android.permission.UPDATE_DEVICE_STATS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ cancelPairingUserInput(java.lang.String)>=android.permission.BLUETOOTH
<com.android.deskclock.AlarmKlaxon\:\ int\ onStartCommand(android.content.Intent,int,int)>=android.permission.WAKE_LOCK
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ access$300(com.android.server.accessibility.AccessibilityManagerService)>=android.permission.WRITE_SETTINGS
<android.test.IsolatedContext\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.browser.NavigationBarTablet\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccessibilitySettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.server.LockSettingsService\:\ void\ unregisterStrongAuthTracker(android.app.trust.IStrongAuthTracker)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.internal.telephony.IccSmsInterfaceManagerProxy\:\ boolean\ copyMessageToIccEf(int,byte[],byte[])>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ boolean\ isEnabled()>=android.permission.BLUETOOTH
<com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread\:\ com.android.contacts.vcard.ImportRequest\ constructImportRequest(byte[],android.net.Uri,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.BluetoothDevicePreference\:\ void\ <init>=android.permission.BLUETOOTH
<android.net.wifi.p2p.IWifiP2pManager$Stub\:\ android.os.Messenger\ getMessenger()>=android.permission.ACCESS_WIFI_STATE
<com.android.bluetooth.a2dpsink.A2dpSinkService$BluetoothA2dpSinkBinder\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.phone.InCallScreenShowActivation\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.SimpleImageFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.calendar.CalendarViewAdapter$1\:\ void\ run()>=android.permission.READ_CALENDAR
<com.android.internal.telephony.cdma.RuimFileHandler\:\ void\ loadEFImgTransparent(int,int,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.phone.NavigationBarView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<android.accounts.IAccountManager$Stub$Proxy\:\ void\ confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)>=android.permission.MANAGE_ACCOUNTS
<com.android.phone.InCallScreen\:\ void\ access$600(com.android.phone.InCallScreen)>=android.permission.BLUETOOTH
<com.android.music.MediaPlaybackActivity\:\ void\ cycleRepeat()>=android.permission.WAKE_LOCK
<com.android.server.appwidget.AppWidgetServiceImpl\:\ boolean\ bindAppWidgetId(java.lang.String,int,int,android.content.ComponentName,android.os.Bundle)>=android.permission.BIND_APPWIDGET
<android.nfc.INfcAdapterExtras\:\ android.os.Bundle\ open(java.lang.String,android.os.IBinder)>=android.permission.NFC
<com.android.phone.CallCard\:\ void\ updateRingingCall(com.android.internal.telephony.CallManager)>=android.permission.BLUETOOTH
<com.android.settings.Settings\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getNaiForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.internal.telephony.PhoneBase\:\ void\ sendBurstDtmf(java.lang.String,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ boolean\ addGnssMeasurementsListener(android.location.IGnssMeasurementsListener,java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.phone.BluetoothHeadsetService$6\:\ boolean\ createIncomingConnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.widget.WaveView\:\ void\ waveUpdateFrame(float,float,boolean)>=android.permission.VIBRATE
<com.android.internal.telephony.RIL\:\ void\ setBandMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.test.FragmentTestActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.UserHistoryDictionary\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<com.android.phone.CallNotifier$InCallTonePlayer\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.PhotoView\:\ void\ notifyDataChange(int[],int,int)>=android.permission.VIBRATE
<com.android.contacts.list.ContactEntryListFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.TetherSettings\:\ void\ startProvisioningIfNecessary(int)>=android.permission.BLUETOOTH
<com.android.server.MountService\:\ int\ fixPermissionsSecureContainer(java.lang.String,int,java.lang.String)>=android.permission.ASEC_CREATE
<com.android.vcard.VCardEntry$AndroidCustomData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$VpnSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.exchange.ExchangeService$2\:\ void\ sendMeetingResponse(long,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.UIControllerOnePane\:\ void\ onActivityStart()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.MountService\:\ void\ setVolumeNickname(java.lang.String,java.lang.String)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.server.LockSettingsService\:\ void\ setLockPassword(java.lang.String,java.lang.String,int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.phone.PhoneApp\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ onRemoteDisconnect(int)>=android.permission.WAKE_LOCK
<android.server.BluetoothA2dpService\:\ void\ access$100(android.server.BluetoothA2dpService)>=android.permission.BLUETOOTH
<android.os.SystemVibrator\:\ void\ vibrate(int,java.lang.String,[long,int,android.media.AudioAttributes)>=android.permission.VIBRATE
<com.android.bluetooth.opp.BluetoothOppTransferHistory\:\ void\ openCompleteTransfer()>=android.permission.BLUETOOTH
<com.android.email.activity.MessageViewFragmentBase$LoadAttachmentsTask\:\ void\ onSuccess(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.PhoneInterfaceManager\:\ void\ silenceRingerInternal()>=android.permission.BLUETOOTH
<com.android.calendar.alerts.AlertService$NotificationMgrWrapper\:\ void\ notify(int,com.android.calendar.alerts.AlertService$NotificationWrapper)>=android.permission.VIBRATE
<com.android.browser.Tab$3\:\ void\ createWindow(boolean,android.os.Message)>=android.permission.GET_ACCOUNTS
<android.bluetooth.BluetoothA2dp\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ android.os.ParcelFileDescriptor\ getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ updateNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>=android.permission.VIBRATE
<com.android.email.activity.setup.AccountServerBaseFragment\:\ void\ saveSettingsAfterEdit()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumDataLoader\:\ java.lang.Object\ access$1700(com.android.gallery3d.app.AlbumDataLoader,java.util.concurrent.Callable)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ pollState()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.BlackWhiteFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneApp\:\ void\ handleServiceStateChanged(android.content.Intent)>=android.permission.VIBRATE
<android.filterpacks.imageproc.DuotoneFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.email.SecurityPolicy\:\ void\ deleteSecuredAccounts(android.content.Context)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity$34\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.base.FrameStore\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onEnableApn(int,int)>=android.permission.BROADCAST_STICKY
<com.android.settings.bluetooth.BluetoothDeviceFilter$PanuFilter\:\ boolean\ matches(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.detail.ContactLoaderFragment$1\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$BluetoothSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.settings.Settings$SpellCheckersSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.contacts.vcard.NfcImportVCardActivity\:\ com.android.contacts.vcard.ImportRequest\ createImportRequest()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.CrossProcessFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.bluetooth.BluetoothAdapter\:\ android.bluetooth.BluetoothServerSocket\ listenUsingInsecureRfcommWithServiceRecord(java.lang.String,java.util.UUID)>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ java.util.List\ getNeighboringCellInfo()>=android.permission.ACCESS_COARSE_LOCATION
<android.filterpacks.base.InputStreamSource\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.DevelopmentSettings\:\ void\ writeCpuUsageOptions()>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ onUpEventInternal()>=android.permission.WRITE_CONTACTS
<com.android.contacts.util.NotifyingAsyncQueryHandler$AsyncQueryListener\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.media.RingtonePlayer$Client\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.contacts.list.JoinContactListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$DevelopmentSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<android.location.ILocationManager\:\ void\ requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub$Proxy\:\ void\ requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.ITelephony$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.CALL_PHONE
<com.android.server.am.ActivityManagerService\:\ android.content.Intent\ getIntentForIntentSender(android.content.IIntentSender)>=android.permission.GET_INTENT_SENDER_INTENT
<android.net.sip.ISipService$Stub$Proxy\:\ void\ setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>=android.permission.USE_SIP
<com.android.internal.statusbar.IStatusBarService\:\ void\ collapse()>=android.permission.EXPAND_STATUS_BAR
<com.android.server.WifiService\:\ void\ startScan(boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.settings.Settings$DateTimeSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.phone.NotificationMgr$QueryHandler\:\ void\ onImageLoadComplete(int,android.graphics.drawable.Drawable,android.graphics.Bitmap,java.lang.Object)>=android.permission.VIBRATE
<com.android.email.activity.MessageViewFragmentBase$LoadBodyTask\:\ void\ onSuccess(java.lang.String[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.TetherSettings\:\ void\ initWifiTethering()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.Call\:\ void\ hangupIfAlive()>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothA2dp\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.emailcommon.utility.EmailAsyncTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread\:\ void\ finalize()>=android.permission.WAKE_LOCK
<android.app.NotificationManager\:\ void\ notify(int,android.app.Notification)>=android.permission.VIBRATE
<com.android.email.SecurityPolicy\:\ void\ policiesRequired(long)>=android.permission.VIBRATE
<com.android.email.activity.MessageViewFragment\:\ void\ access$1900(com.android.email.activity.MessageViewFragmentBase,com.android.emailcommon.provider.EmailContent$Attachment)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.DeviceInfoSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.app.WallpaperManager\:\ int\ setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean)>=android.permission.SET_WALLPAPER
<android.net.sip.ISipService$Stub$Proxy\:\ android.net.sip.ISipSession\ getPendingSession(java.lang.String)>=android.permission.USE_SIP
<com.android.server.connectivity.MetricsLoggerService$MetricsLoggerImpl\:\ long\ logEvent(android.net.ConnectivityMetricsEvent)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.mms.ui.ManageSimMessages\:\ void\ access$600(com.android.mms.ui.ManageSimMessages)>=android.permission.RECEIVE_SMS
<com.android.settings.Settings$ManageApplicationsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.phone.CallerInfoCache\:\ void\ startAsyncCache()>=android.permission.WAKE_LOCK
<com.android.server.accounts.AccountManagerService\:\ android.accounts.Account[]\ getAccountsByTypeForPackage(java.lang.String,java.lang.String,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.NotificationMgr\:\ void\ showDataDisconnectedRoaming()>=android.permission.VIBRATE
<com.android.internal.telephony.SubscriptionController\:\ java.util.List\ getAllSubInfoList(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.ContextImpl$ApplicationContentResolver\:\ boolean\ isSyncActive(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.exchange.ExchangeService$2\:\ void\ startSync(long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.emailcommon.service.IEmailService$Stub$Proxy\:\ void\ loadAttachment(long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.ActivityState\:\ boolean\ onCreateActionBar(android.view.Menu)>=android.permission.NFC
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ editMmsMessageItem(com.android.mms.ui.MessageItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.LocationManagerService\:\ boolean\ addGpsStatusListener(android.location.IGpsStatusListener)>=android.permission.ACCESS_FINE_LOCATION
<com.android.inputmethod.latin.UserHistoryDictionary\:\ com.android.inputmethod.latin.UserHistoryDictionary\ getInstance(android.content.Context,java.lang.String,int,android.content.SharedPreferences)>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.ui.PhotoView$MyGestureListener\:\ void\ onDown(float,float)>=android.permission.VIBRATE
<android.media.effect.effects.FisheyeEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.email.activity.UIControllerBase\:\ void\ onRefresh()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ void\ systemReady()>=android.permission.WRITE_SETTINGS
<com.android.email.Controller\:\ com.android.emailcommon.service.IEmailService\ getServiceForAccount(long)>=android.permission.READ_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState\:\ boolean\ turnOffUpstreamMobileConnection()>=android.permission.BLUETOOTH
<com.android.internal.telephony.IccSmsInterfaceManagerProxy\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.calendar.month.SimpleWeeksAdapter\:\ void\ init()>=android.permission.READ_CALENDAR
<android.net.sip.ISipService$Stub$Proxy\:\ boolean\ isRegistered(java.lang.String)>=android.permission.USE_SIP
<com.android.contacts.activities.ContactDetailActivity\:\ void\ onAttachFragment(android.app.Fragment)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.accounts.AccountManagerService\:\ void\ copyAccountToUser(android.accounts.IAccountManagerResponse,android.accounts.Account,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.calendar.SearchActivity\:\ void\ onNewIntent(android.content.Intent)>=android.permission.WRITE_CALENDAR
<com.android.soundrecorder.SoundRecorder\:\ void\ onCreate(android.os.Bundle)>=android.permission.WAKE_LOCK
<com.android.server.content.ContentService\:\ void\ syncAsUser(android.content.SyncRequest,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.telephony.SmsManager\:\ void\ injectSmsPdu([byte,java.lang.String,android.app.PendingIntent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.policy.impl.LockPatternKeyguardViewProperties\:\ com.android.internal.policy.impl.KeyguardViewBase\ createKeyguardView(android.content.Context,com.android.internal.policy.impl.KeyguardViewCallback,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardWindowController)>=android.permission.GET_ACCOUNTS
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ queryDisplayStatus(android.hardware.hdmi.IHdmiControlCallback)>=android.permission.HDMI_CEC
<android.view.IWindowManager\:\ void\ freezeRotation(int)>=android.permission.WRITE_SETTINGS
<android.net.wifi.WifiWatchdogStateMachine$OnlineState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.inputmethod.keyboard.KeyboardActionListener\:\ void\ onTextInput(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<android.net.wifi.WifiStateMachine\:\ boolean\ access$16000(android.net.wifi.WifiStateMachine,java.util.ArrayList)>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.statusbar.policy.BrightnessController\:\ void\ setMode(int)>=android.permission.WRITE_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ setProcessLimit(int)>=android.permission.SET_PROCESS_LIMIT
<com.android.internal.telephony.CommandsInterface\:\ void\ queryCLIP(android.os.Message)>=android.permission.WAKE_LOCK
<android.media.browse.MediaBrowser\:\ void\ disconnect()>=android.permission.BROADCAST_STICKY
<android.server.BluetoothService\:\ boolean\ disconnectPanDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.filterpacks.base.FrameSource\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.systemui.SwipeHelper$Callback\:\ void\ onChildDismissed(android.view.View)>=android.permission.VIBRATE
<com.android.server.location.ComprehensiveCountryDetector\:\ void\ startLocationBasedDetector(android.location.CountryListener)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.contacts.editor.ContactEditorUtils\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.accounts.AddAccountSettings\:\ void\ addAccount(java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onActionIntentReconnectAlarm(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.settings.quicklaunch.QuickLaunchSettings\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_SETTINGS
<com.android.settings.tts.TtsEngineSettingsFragment\:\ void\ updateLanguageTo(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$ManageApplicationsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.exchange.adapter.ItemOperationsParser\:\ void\ parseFetch()>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.ImageWallpaper$DrawableEngine\:\ void\ onVisibilityChanged(boolean)>=android.permission.SET_WALLPAPER
<com.android.email.service.MailService\:\ void\ refreshSyncReports()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener\:\ void\ onRemovePictureChosen()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.service.MailService$1\:\ void\ run()>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothDeviceProfileState$IncomingHid\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ notifyDataConnection(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onDisconnectDone(int,android.os.AsyncResult)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$18\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<android.location.LocationManager\:\ void\ requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.phone.InCallTouchUi$2\:\ void\ onAnimationStart(android.animation.Animator)>=android.permission.BLUETOOTH
<com.android.contacts.editor.TextFieldsEditorView\:\ void\ onFieldChanged(java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.interactions.PhoneNumberInteraction\:\ void\ performAction(java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfo\:\ java.lang.String\ getSubscriberId()>=android.permission.READ_PHONE_STATE
<com.android.browser.provider.SnapshotProvider\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ startScan(int,boolean,android.bluetooth.le.ScanSettings,java.util.List,android.os.WorkSource,java.util.List,java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION, android.permission.BLUETOOTH_ADMIN, android.permission.BLUETOOTH_PRIVILEGED, android.permission.PEERS_MAC_ADDRESS, android.permission.UPDATE_DEVICE_STATS
<com.android.internal.app.IBatteryStats$Stub$Proxy\:\ long\ getAwakeTimeBattery()>=android.permission.BATTERY_STATS
<com.android.exchange.EasOutboxService\:\ boolean\ setupService()>=android.permission.READ_SYNC_SETTINGS
<android.net.DhcpStateMachine$RunningState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.browser.search.OpenSearchSearchEngine\:\ android.database.Cursor\ getSuggestions(android.content.Context,java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.sip.SipSettings$7\:\ void\ run()>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub$Proxy\:\ java.lang.String\ getRemoteName(java.lang.String)>=android.permission.BLUETOOTH
<com.android.providers.contacts.ContactsProvider2\:\ int\ updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.Controller$10\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.cdma.RuimRecords\:\ void\ fetchRuimRecords()>=android.permission.WAKE_LOCK
<com.android.phone.PhoneUtils\:\ boolean\ startNewCall(com.android.internal.telephony.CallManager)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.settings.bluetooth.BluetoothDeviceFilter$AudioFilter\:\ boolean\ matches(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.launcher2.PagedView\:\ boolean\ onInterceptTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.server.usb.UsbDeviceManager\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$DockSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.server.am.ActivityManagerService$9$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.mms.transaction.SendTransaction\:\ byte[]\ getPdu(java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<com.android.settings.widget.SettingsAppWidgetProvider$SettingsObserver\:\ void\ startObserving()>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ setSmscAddress(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ sendStandby(int,int)>=android.permission.HDMI_CEC
<com.android.server.pm.PackageManagerService\:\ boolean\ deleteSystemPackageLI(android.content.pm.PackageParser$Package,int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>=android.permission.WAKE_LOCK
<com.android.server.usb.UsbDeviceManager$UsbHandler\:\ void\ updateAudioSourceFunction()>=android.permission.BROADCAST_STICKY
<com.android.inputmethod.keyboard.KeyboardView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ boolean\ setupData(com.android.internal.telephony.ApnContext)>=android.permission.BROADCAST_STICKY
<android.bluetooth.BluetoothPan\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.nfc.INfcTag$Stub\:\ int\ setTimeout(int,int)>=android.permission.NFC
<android.provider.VoicemailContract$Voicemails\:\ android.net.Uri\ buildSourceUri(java.lang.String)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.internal.telephony.CommandsInterface\:\ void\ setNetworkSelectionModeAutomatic(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.vcard.VCardService\:\ void\ handleImportRequest(java.util.List,com.android.contacts.vcard.VCardImportExportListener)>=android.permission.VIBRATE
<com.android.calendar.EventInfoFragment\:\ void\ updateCalendar(android.view.View)>=android.permission.READ_CALENDAR
<com.android.settings.DevelopmentSettings\:\ void\ writeImmediatelyDestroyActivitiesOptions()>=android.permission.WRITE_SETTINGS
<com.android.contacts.list.EmailAddressListAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.NetworkScoreService\:\ void\ registerNetworkScoreCache(int,android.net.INetworkScoreCache)>=android.permission.BROADCAST_NETWORK_PRIVILEGED
<com.android.server.UiModeManagerService\:\ void\ systemReady()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.providers.calendar.CalendarProvider2\:\ java.lang.String\ getOriginalSyncId(long)>=android.permission.READ_CALENDAR
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ conference()>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ android.net.NetworkStats\ getNetworkStatsSummaryXt()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.server.usb.UsbService\:\ android.hardware.usb.UsbPortStatus\ getPortStatus(java.lang.String)>=android.permission.MANAGE_USB
<com.android.server.InputMethodManagerService$InputMethodSettings\:\ void\ putSelectedInputMethod(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.gallery3d.ui.EdgeView\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<com.android.email.activity.UIControllerOnePane\:\ void\ switchAccount(long,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.policy.impl.LockScreen\:\ void\ onResume()>=android.permission.WAKE_LOCK
<android.provider.Browser\:\ void\ addSearchUrl(android.content.ContentResolver,java.lang.String)>=android.permission.GET_ACCOUNTS
<android.location.ILocationManager\:\ void\ addProximityAlert(double,double,float,long,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.contacts.list.EmailAddressPickerFragment\:\ void\ setQueryString(java.lang.String,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.BrowserSettings\:\ void\ clearHistory()>=android.permission.GET_ACCOUNTS
<com.android.phone.BluetoothHeadsetService\:\ void\ setState(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<com.android.mms.data.WorkingMessage\:\ com.android.mms.data.WorkingMessage\ load(com.android.mms.ui.ComposeMessageActivity,android.net.Uri)>=android.permission.WRITE_SMS
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ addNavigationBar()>=android.permission.VIBRATE
<android.app.ContextImpl\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.bluetooth.IBluetooth$Stub\:\ boolean\ setName(java.lang.String)>=android.permission.BLUETOOTH
<android.net.sip.ISipService\:\ android.net.sip.SipProfile[]\ getListOfProfiles()>=android.permission.USE_SIP
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ addCachedDevices()>=android.permission.BLUETOOTH
<com.android.server.am.ActivityStack\:\ void\ moveTaskToFrontLocked(com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle)>=android.permission.WAKE_LOCK
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$StartStopButtonListener\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.providers.downloads.DownloadThread\:\ void\ notifyThroughDatabase(int,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.net.IConnectivityManager$Stub\:\ int\ startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.browser.Controller\:\ void\ createSubWindow(com.android.browser.Tab)>=android.permission.INTERNET
<com.android.gallery3d.data.ComboAlbum\:\ long\ reload()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.widget.multiwaveview.MultiWaveView\:\ void\ doFinish()>=android.permission.VIBRATE
<com.android.server.accessibility.AccessibilityManagerService$5\:\ void\ onChange(boolean)>=android.permission.WRITE_SETTINGS
<android.nfc.INfcAdapter$Stub$Proxy\:\ void\ setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>=android.permission.NFC
<com.android.vcard.VCardParserImpl_V21\:\ boolean\ parseOneVCard()>=android.permission.READ_SYNC_SETTINGS
<com.android.nfc.nxp.NativeNfcManager\:\ void\ notifySeApduReceived(byte[])>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getMsisdn(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ endServiceDeclaration(int)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ android.net.LinkProperties\ getLinkPropertiesForType(int)>=android.permission.ACCESS_NETWORK_STATE
<android.server.BluetoothService\:\ int\ getPanDeviceConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.view.ContextThemeWrapper\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<android.bluetooth.BluetoothInputDevice\:\ boolean\ isEnabled()>=android.permission.BLUETOOTH
<android.net.ConnectivityManager\:\ void\ registerDefaultNetworkCallback(android.net.ConnectivityManager$NetworkCallback)>=android.permission.ACCESS_NETWORK_STATE, android.permission.ACCESS_WIFI_STATE, android.permission.CHANGE_NETWORK_STATE
<android.bluetooth.BluetoothAdapter\:\ boolean\ startDiscovery()>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.mms.data.Contact\:\ android.net.Uri\ getUri()>=android.permission.READ_SYNC_SETTINGS
<com.android.music.IMediaPlaybackService\:\ void\ stop()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.FillLightFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ invokeOemRilRequestRaw(byte[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ reRegisterNetwork(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ hangup()>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.PhotoView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.preferences.WebsiteSettingsFragment$SiteAdapter$UpdateFromBookmarksDbTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.email.service.MailService$ControllerResults\:\ void\ updateMailboxCallback(com.android.emailcommon.mail.MessagingException,long,long,int,int,java.util.ArrayList)>=android.permission.READ_SYNC_SETTINGS
<android.location.ILocationManager$Stub$Proxy\:\ boolean\ addGpsStatusListener(android.location.IGpsStatusListener)>=android.permission.ACCESS_FINE_LOCATION
<com.android.contacts.editor.RawContactEditorView\:\ void\ setPhotoBitmap(android.graphics.Bitmap)>=android.permission.WRITE_CONTACTS
<com.android.phone.CallNotifier$EmergencyTonePlayerVibrator\:\ void\ access$300(com.android.phone.CallNotifier$EmergencyTonePlayerVibrator)>=android.permission.VIBRATE
<com.android.browser.provider.BrowserProvider\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.MountService\:\ int\ decryptStorage(java.lang.String)>=android.permission.CRYPT_KEEPER
<com.android.internal.telephony.gsm.GsmCallTracker\:\ com.android.internal.telephony.Connection\ dial(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.accounts.AccountManagerService\:\ android.accounts.Account[]\ getAccounts(java.lang.String,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.CountryDetectorService$2\:\ void\ run()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ connect(boolean)>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager$Stub\:\ void\ reconnect()>=android.permission.CHANGE_WIFI_STATE
<com.android.nfc.NfcService$TagService\:\ android.nfc.TransceiveResult\ transceive(int,byte[],boolean)>=android.permission.NFC
<com.android.emailcommon.utility.EmailAsyncTask$InnerTask\:\ void\ onPostExecute(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ registerListener(android.net.INetworkPolicyListener)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.voicedialer.CommandRecognizerEngine\:\ void\ setupGrammar()>=android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary\:\ void\ syncReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.emailcommon.service.IPolicyService$Stub\:\ void\ setAccountPolicy(long,com.android.emailcommon.provider.Policy,java.lang.String)>=android.permission.VIBRATE
<com.android.providers.contacts.ContactsProvider2\:\ android.database.Cursor\ queryLocal(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,long,android.os.CancellationSignal)>=android.permission.READ_SYNC_SETTINGS
<android.app.ContextImpl\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.server.am.ActivityManagerService\:\ void\ setFrontActivityScreenCompatMode(int)>=android.permission.SET_SCREEN_COMPATIBILITY
<com.android.mms.ui.ComposeMessageActivity\:\ void\ startMsgListQuery()>=android.permission.WRITE_SMS
<com.android.server.TelephonyRegistry\:\ void\ notifyDataActivity(int)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setOrganizationColor(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.net.wifi.IWifiManager$Stub$Proxy\:\ boolean\ saveConfiguration()>=android.permission.CHANGE_WIFI_STATE
<com.android.internal.telephony.RIL\:\ void\ getLastCallFailCause(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.DevelopmentSettings\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothHeadset\:\ boolean\ acceptIncomingConnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiSettings\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ boolean\ removeBond(java.lang.String)>=android.permission.BLUETOOTH_ADMIN
<android.accounts.AccountManagerService\:\ void\ checkManageAccountsOrUseCredentialsPermissions()>=android.permission.MANAGE_ACCOUNTS
<com.android.calendar.month.MonthWeekEventsView\:\ void\ drawEvents(android.graphics.Canvas)>=android.permission.READ_CALENDAR
<com.android.deskclock.SetAlarm\:\ void\ saveAndExit()>=android.permission.WRITE_SETTINGS
<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallbackImpl\:\ void\ onUserChanged(int)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.PhoneSubInfo\:\ java.lang.String\ getLine1AlphaTag()>=android.permission.READ_PHONE_STATE
<android.net.wifi.WifiStateMachine$DriverStoppedState\:\ boolean\ processMessage(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.inputmethod.keyboard.internal.KeyboardState\:\ void\ onPressKey(int,boolean,int)>=android.permission.WRITE_CONTACTS
<com.android.browser.UrlHandler\:\ boolean\ startActivityForUrl(com.android.browser.Tab,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.app.SlideshowPage\:\ boolean\ onCreateActionBar(android.view.Menu)>=android.permission.NFC
<com.android.nfc.TechListChooserActivity\:\ void\ onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)>=android.permission.BLUETOOTH
<com.android.calendar.agenda.AgendaFragment$2\:\ void\ run()>=android.permission.WRITE_CALENDAR
<android.app.backup.IBackupManager$Stub\:\ void\ restoreAtInstall(java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ void\ drawTopPanel(boolean)>=android.permission.READ_SYNC_SETTINGS
<android.webkit.HTML5VideoInline\:\ void\ pause()>=android.permission.WAKE_LOCK
<com.android.email.service.AttachmentDownloadService$ServiceCallback\:\ void\ loadAttachmentStatus(long,long,int,int)>=android.permission.VIBRATE
<com.android.settings.Settings$AccountSyncSettingsInAddAccountActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.SimUnlockScreen\:\ void\ onResume()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.email.service.PolicyService$1\:\ void\ policiesRequired(long)>=android.permission.VIBRATE
<android.filterpacks.imageproc.ImageStitcher\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ setRemoteAlias(java.lang.String,java.lang.String)>=android.permission.BLUETOOTH
<com.android.phone.BluetoothAtPhonebook\:\ boolean\ checkAccessPermission()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothEventManager$ClassChangedHandler\:\ void\ onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getCompleteVoiceMailNumber()>=android.permission.CALL_PRIVILEGED
<com.android.phone.BluetoothHandsfree$28\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothPairingRequest\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.phone.PhoneUtils\:\ void\ separateCall(com.android.internal.telephony.Connection)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ queryCallForwardStatus(int,int,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteFullWifiLockReleased(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.systemui.statusbar.phone.PhoneStatusBarView\:\ boolean\ onInterceptTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.gallery3d.ui.EdgeView\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<android.provider.Settings$System\:\ void\ setShowGTalkServiceStatus(android.content.ContentResolver,boolean)>=android.permission.WRITE_SETTINGS
<com.android.providers.contacts.LegacyApiSupport\:\ int\ updateGroups(long,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.inputmethod.UserDictionaryAddWordFragment\:\ void\ onResume()>=android.permission.READ_USER_DICTIONARY
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory\:\ void\ onLoadComplete(android.content.Loader,android.database.Cursor)>=android.permission.READ_CALENDAR
<com.android.contacts.activities.GroupDetailActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.detail.ContactDetailUpdatesFragment\:\ com.android.contacts.model.AccountType\ getAccountTypeForStreamItemEntry(com.android.contacts.util.StreamItemEntry)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ boolean\ connectAudio()>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<android.bluetooth.BluetoothSocket\:\ void\ connect()>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ handleWakeWhenReady(int)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AbstractGalleryActivity\:\ void\ onPause()>=android.permission.RECORD_AUDIO
<com.android.settings.Settings$ApplicationSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.latin.ContactsBinaryDictionary\:\ int\ getContactCount()>=android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity\:\ void\ setMainPane(android.app.FragmentTransaction,int,int,long,boolean)>=android.permission.WRITE_CALENDAR
<com.android.phone.BluetoothHandsfree$20\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.settings.RadioInfo$22\:\ void\ onItemSelected(android.widget.AdapterView,android.view.View,int,long)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ java.lang.String[]\ getTetheredIfaces()>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetooth\:\ boolean\ notifyIncomingConnection(java.lang.String,boolean)>=android.permission.BLUETOOTH
<com.android.internal.telephony.DataConnectionTracker\:\ void\ notifyApnIdDisconnected(java.lang.String,int)>=android.permission.BROADCAST_STICKY
<com.android.internal.widget.multiwaveview.MultiWaveView\:\ void\ handleMove(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.internal.policy.impl.GlobalActions\:\ void\ changeAirplaneModeSystemSetting(boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ onRadioAvailable()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccRecords\:\ void\ setVoiceCallForwardingFlag(int,boolean)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.CropImage$SaveOutput\:\ java.lang.Object\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.SET_WALLPAPER
<com.android.ex.variablespeed.VariableSpeed\:\ void\ prepare()>=android.permission.WAKE_LOCK
<android.nfc.INfcAdapterExtras$Stub$Proxy\:\ void\ authenticate(java.lang.String,byte[])>=android.permission.NFC
<com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay\:\ void\ buildDiff(java.util.ArrayList)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$AccessibilitySettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.opp.BluetoothOppTransferActivity\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy\:\ void\ notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.LinkCapabilities,int,boolean)>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.opp.BluetoothOppTransferHistory$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isUninstallInQueue(java.lang.String)>=android.permission.MANAGE_DEVICE_ADMINS
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ int\ getDiscoverableTimeout()>=android.permission.BLUETOOTH
<com.android.email.activity.MessageViewFragmentBase$1\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.FixedRotationFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.location.LocationBasedCountryDetector\:\ java.util.List\ getEnabledProviders()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.browser.OpenDownloadReceiver\:\ void\ onReceiveAsync(android.content.Context,long)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>=android.permission.WAKE_LOCK
<com.android.contacts.activities.ConfirmAddDetailActivity$PersistTask\:\ java.lang.Integer\ doInBackground(com.android.contacts.model.EntityDeltaList[])>=android.permission.READ_SYNC_SETTINGS
<android.speech.IRecognitionService$Stub$Proxy\:\ void\ stopListening(android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<android.net.sip.ISipService$Stub$Proxy\:\ void\ open(android.net.sip.SipProfile)>=android.permission.USE_SIP
<android.net.ThrottleManager\:\ int\ getCliffLevel(java.lang.String,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$InputMethodAndLanguageSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder\:\ boolean\ isA2dpPlaying(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ supplyIccPin2(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.GLRoot$OnGLIdleListener\:\ boolean\ onGLIdle(com.android.gallery3d.ui.GLCanvas,boolean)>=android.permission.RECORD_AUDIO
<android.bluetooth.IBluetoothHeadset\:\ boolean\ stopVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ enableLocationUpdates()>=android.permission.WAKE_LOCK
<android.nfc.INfcTag$Stub$Proxy\:\ int\ reconnect(int)>=android.permission.NFC
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ stopDtmf()>=android.permission.WAKE_LOCK
<com.android.email.GroupMessagingListener\:\ void\ loadAttachmentStarted(long,long,long,boolean)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.contacts.ContactSaveService$2\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$DisplaySettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.calendar.AgendaWindowAdapter\:\ android.net.Uri\ buildQueryUri(int,int)>=android.permission.WRITE_CALENDAR
<com.android.server.RecoverySystemService$BinderService\:\ boolean\ setupBcb(java.lang.String)>=android.permission.RECOVERY
<android.bluetooth.IBluetooth$Stub\:\ java.util.List\ getPanDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.contacts.list.AccountFilterActivity$FilterListAdapter\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.DialtactsActivity\:\ void\ onBackPressed()>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.ComposeMessageActivity\:\ void\ access$5800(com.android.mms.ui.ComposeMessageActivity,java.lang.String,android.net.Uri,boolean)>=android.permission.READ_SYNC_SETTINGS
<android.accounts.AccountAuthenticatorActivity\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.google.common.io.ByteStreams$4\:\ java.io.InputStream\ getInput()>=android.permission.INTERNET
<com.android.gallery3d.app.SlideshowPage\:\ void\ access$100(com.android.gallery3d.app.SlideshowPage)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.EmergencyCallHelper\:\ void\ scheduleRetryOrBailOut()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.MoviePlayer\:\ void\ playVideo()>=android.permission.WAKE_LOCK
<com.android.email.service.MailService\:\ com.android.email.service.MailService$AccountSyncReport\ access$300(com.android.email.service.MailService,long,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.ChangeIccPinScreen$2\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhone\:\ void\ getEnhancedVoicePrivacy(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ void\ editMmsMessageItem(com.android.mms.ui.MessageItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.KeyguardViewBase\:\ void\ onScreenTurnedOn()>=android.permission.GET_ACCOUNTS
<android.filterpacks.videosrc.MediaSource\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$StorageUseActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.pbap.BluetoothPbapService\:\ void\ parseIntent(android.content.Intent)>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ access$400(com.android.internal.telephony.RIL,android.os.Parcel)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiManager\:\ void\ setCountryCode(java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.job.JobSchedulerService$JobSchedulerStub\:\ int\ schedule(android.app.job.JobInfo)>=android.permission.CONNECTIVITY_INTERNAL, android.permission.RECEIVE_BOOT_COMPLETED
<com.android.phone.BluetoothHandsfree$2\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ boolean\ isConnectedProfile(com.android.settings.bluetooth.LocalBluetoothProfile)>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ java.lang.String\ getProperty(java.lang.String,boolean)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothGatt\:\ boolean\ beginReliableWrite()>=android.permission.BLUETOOTH
<com.android.browser.BrowserActivity\:\ void\ onNewIntent(android.content.Intent)>=android.permission.GET_ACCOUNTS
<com.android.browser.Controller$Download\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.gallery3d.app.Gallery\:\ void\ startViewAction(android.content.Intent)>=android.permission.ACCESS_NETWORK_STATE
<android.content.ContentResolver\:\ void\ removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.WRITE_SYNC_SETTINGS
<com.google.common.io.CharStreams\:\ java.lang.String\ toString(com.google.common.io.InputSupplier)>=android.permission.INTERNET
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ addPreferencesForActivity()>=android.permission.BLUETOOTH
<com.android.mms.ui.NoConfirmationSendService\:\ void\ onHandleIntent(android.content.Intent)>=android.permission.RECEIVE_SMS
<com.android.settings.BrightnessPreference\:\ void\ onRestoreInstanceState(android.os.Parcelable)>=android.permission.WRITE_SETTINGS
<android.accounts.AccountManager$3\:\ android.accounts.AccountManager$Future2Task\ start()>=android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ConfirmAddDetailActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.PhoneNumberPickerFragment\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.nfc.INfcTag$Stub$Proxy\:\ int\ close(int)>=android.permission.NFC
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary\:\ void\ blockingReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.camera.ActivityBase\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ saveRingtone(long)>=android.permission.WRITE_SMS
<com.android.server.InputMethodManagerService\:\ android.view.inputmethod.InputMethodSubtype\ getCurrentInputMethodSubtype()>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.CommandsInterface\:\ void\ getDataRegistrationState(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.calendar.CalendarEventModel\:\ void\ <init>=android.permission.READ_CALENDAR
<android.server.BluetoothInputProfileHandler\:\ boolean\ connectInputDeviceInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.phone.PhoneUtils\:\ com.android.phone.PhoneUtils$CallerInfoToken\ startGetCallerInfo(android.content.Context,com.android.internal.telephony.Connection,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>=android.permission.WRITE_CONTACTS
<android.media.effect.effects.DocumentaryEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity$33\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ showLocked()>=android.permission.WAKE_LOCK
<android.media.AudioService\:\ void\ access$2300(android.media.AudioService,int)>=android.permission.BROADCAST_STICKY
<com.android.camera.PanoramaActivity\:\ void\ gotoGallery()>=android.permission.VIBRATE
<com.android.server.VibratorService\:\ void\ onInputDeviceAdded(int)>=android.permission.WAKE_LOCK
<android.server.BluetoothEventLoop\:\ void\ onRequestOobData(java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.server.VibratorService\:\ void\ cancelVibrate(android.os.IBinder)>=android.permission.VIBRATE
<com.android.phone.PhoneUtils\:\ void\ mergeCalls()>=android.permission.BLUETOOTH
<android.accounts.AccountManager$AmsTask$Response\:\ void\ onResult(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.settings.DateTimeSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.camera.ui.EffectSettingPopup\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.RECORD_AUDIO
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ onDevicePreferenceClick(com.android.settings.bluetooth.BluetoothDevicePreference)>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getIccSimChallengeResponse(int,int,int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.net.wifi.IWifiManager\:\ android.net.wifi.WifiInfo\ getConnectionInfo()>=android.permission.ACCESS_WIFI_STATE
<com.android.providers.contacts.LegacyApiSupport\:\ int\ update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothInputProfileHandler\:\ void\ handleInputDevicePropertyChange(java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<com.android.gallery3d.app.AlbumSetDataLoader\:\ java.lang.Object\ access$1900(com.android.gallery3d.app.AlbumSetDataLoader,java.util.concurrent.Callable)>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.LatinIME$3\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_CONTACTS
<com.android.server.input.InputManagerService\:\ long\ interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.ui.GLView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ void\ killAllBackgroundProcesses()>=android.permission.KILL_BACKGROUND_PROCESSES
<com.android.contacts.calllog.CallLogListItemHelper\:\ void\ setPhoneCallDetails(com.android.contacts.calllog.CallLogListItemViews,com.android.contacts.PhoneCallDetails,boolean)>=android.permission.READ_PHONE_STATE
<com.android.music.IMediaPlaybackService$Stub\:\ void\ stop()>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine\:\ void\ stopTethering()>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.WifiStateMachine\:\ boolean\ startTethering(java.util.ArrayList)>=android.permission.ACCESS_NETWORK_STATE
<android.app.IActivityManager\:\ void\ unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>=android.permission.BROADCAST_STICKY
<com.android.server.am.ActivityManagerService\:\ android.app.IActivityContainer\ createStackOnDisplay(int)>=android.permission.MANAGE_ACTIVITY_STACKS
<com.android.internal.widget.multiwaveview.GlowPadView\:\ void\ switchToState(int,float,float)>=android.permission.BLUETOOTH
<com.android.settings.applications.RunningServiceDetails$ActiveDetail\:\ void\ onClick(android.view.View)>=android.permission.RESTART_PACKAGES
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ reportKeyguardSecured(int)>=android.permission.BIND_DEVICE_ADMIN, android.permission.INTERACT_ACROSS_USERS_FULL
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatingState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.MountService\:\ int\ destroySecureContainer(java.lang.String,boolean)>=android.permission.ASEC_DESTROY
<com.android.settings.Settings$WifiSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.ui.ActionModeHandler$ActionModeListener\:\ boolean\ onActionItemClicked(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getMsisdnForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.quicksearchbox.SingleSourceCorpus\:\ com.android.quicksearchbox.CorpusResult\ getSuggestions(java.lang.String,int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.HeadsetBase$1\:\ void\ run()>=android.permission.BLUETOOTH
<android.net.wifi.WifiWatchdogStateMachine\:\ void\ setWalledGardenNotificationVisible(boolean)>=android.permission.VIBRATE
<com.android.contacts.dialog.ClearFrequentsDialog$1$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.ContactDetailActivity$3$1\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.ActionBarController$3\:\ void\ onLoaderReset(android.content.Loader)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.transaction.PushReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.contacts.SplitAggregateView\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<com.android.server.pm.PackageManagerService\:\ android.content.pm.PackageParser$Package\ access$1400(com.android.server.pm.PackageManagerService,java.io.File,int,int,long)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.ExpandableDictionary$LoadDictionaryTask\:\ void\ run()>=android.permission.WRITE_CONTACTS
<com.android.providers.contacts.DbModifierWithNotification\:\ long\ insert(java.lang.String,java.lang.String,android.content.ContentValues)>=com.android.voicemail.permission.ADD_VOICEMAIL
<android.media.AudioService$ScoClient\:\ void\ decCount()>=android.permission.BLUETOOTH
<com.android.emailcommon.service.IEmailService$Stub\:\ void\ sendMeetingResponse(long,int)>=android.permission.READ_SYNC_SETTINGS
<android.net.IConnectivityManager\:\ int\ stopUsingNetworkFeature(int,java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ void\ handleDeprecatedGlobalHttpProxy()>=android.permission.WRITE_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ getCdmaPrlVersion(int)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.widget.QuickContactBadge\:\ void\ onClick(android.view.View)>=android.permission.WRITE_CONTACTS
<com.android.server.ConnectivityService\:\ void\ enforceChangePermission()>=android.permission.CHANGE_NETWORK_STATE
<com.android.emailcommon.service.IEmailServiceCallback\:\ void\ loadAttachmentStatus(long,long,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.model.AccountTypeManager\:\ com.android.contacts.model.AccountTypeManager\ createAccountTypeManager(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.launcher2.SmoothPagedView\:\ boolean\ onInterceptTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.contacts.list.EmailAddressPickerFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.sip.SipSettings\:\ void\ access$800(com.android.phone.sip.SipSettings)>=android.permission.USE_SIP
<com.android.exchange.EasAccountService\:\ void\ messageMoveRequest(com.android.exchange.MessageMoveRequest)>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.IntentProvider$1\:\ android.content.Intent\ getIntent(android.content.Context)>=android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.AccountSetupNames$2\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment\:\ void\ handleEvent(com.android.calendar.CalendarController$EventInfo)>=android.permission.READ_CALENDAR
<com.android.browser.provider.BrowserProvider2$DatabaseHelper\:\ void\ enableSync(android.database.sqlite.SQLiteDatabase)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.LocationManagerService\:\ java.lang.String\ getBestProvider(android.location.Criteria,boolean)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<android.filterpacks.imageproc.ColorTemperatureFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.uiautomator.core.UiAutomatorBridge\:\ void\ disconnect()>=android.permission.WRITE_SETTINGS
<com.android.providers.contacts.ContactsProvider2\:\ int\ deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[])>=android.permission.READ_SYNC_SETTINGS
<android.webkit.WebIconDatabaseClassic$EventHandler\:\ void\ bulkRequestIcons(android.os.Message)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.settings.inputmethod.UserDictionaryList\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth\:\ int\ getInputDevicePriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.net.IConnectivityManager\:\ int\ untether(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.MessageViewFragmentBase$ReloadMessageTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.OtaUtils\:\ void\ onClickOtaEndButton()>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ java.lang.String[]\ listBonds()>=android.permission.BLUETOOTH
<com.android.mms.ui.ConversationList\:\ boolean\ onContextItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.pm.PackageManagerService\:\ int\ getMoveStatus(int)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.email.Controller\:\ void\ searchMore(long)>=android.permission.READ_SYNC_SETTINGS
<com.android.music.MediaPlaybackService$ServiceStub\:\ void\ prev()>=android.permission.WAKE_LOCK
<android.net.sip.SipManager\:\ boolean\ isRegistered(java.lang.String)>=android.permission.USE_SIP
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiRunningChanged(android.os.WorkSource,android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS
<android.location.ILocationManager$Stub\:\ void\ setTestProviderLocation(java.lang.String,android.location.Location)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ conference()>=android.permission.WAKE_LOCK
<android.app.Application\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.deskclock.AlarmPreference\:\ void\ onSaveRingtone(android.net.Uri)>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetoothA2dp$Stub\:\ boolean\ isA2dpPlaying(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.settings.AirplaneModeEnabler\:\ void\ resume()>=android.permission.WRITE_SETTINGS
<android.net.INetworkPolicyManager$Stub$Proxy\:\ void\ setRestrictBackground(boolean)>=android.permission.READ_PHONE_STATE
<android.accounts.AccountManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.GET_ACCOUNTS
<android.nfc.tech.MifareClassic\:\ boolean\ authenticateSectorWithKeyB(int,byte[])>=android.permission.NFC
<com.android.server.statusbar.StatusBarManagerService\:\ void\ setImeWindowStatus(android.os.IBinder,int,int,boolean)>=android.permission.STATUS_BAR
<com.android.server.BackupManagerService$PerformBackupTask\:\ void\ finalizeBackup()>=android.permission.WAKE_LOCK
<com.android.exchange.ExchangeService$5\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ acceptCall()>=android.permission.WAKE_LOCK
<com.android.settings.BandMode\:\ void\ onCreate(android.os.Bundle)>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ boolean\ setInputMethodEnabledLocked(java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<com.android.phone.CallController\:\ com.android.phone.Constants$CallStatusCode\ placeCallInternal(android.content.Intent)>=android.permission.BLUETOOTH
<com.android.server.InputMethodManagerService\:\ boolean\ access$300(com.android.server.InputMethodManagerService)>=android.permission.WRITE_SETTINGS
<android.bluetooth.BluetoothHeadset\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<com.android.server.PowerManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.mms.ui.MmsThumbnailPresenter$1\:\ void\ onItemLoaded(com.android.mms.util.ThumbnailManager$ImageLoaded,java.lang.Throwable)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.IIccPhoneBook$Stub\:\ boolean\ updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.ActivityState\:\ void\ onCreate(android.os.Bundle,android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.BluetoothHandsfree\:\ void\ access$3600(com.android.phone.BluetoothHandsfree)>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService$SipSessionGroupExt\:\ void\ onConnectivityChanged(boolean)>=android.permission.WAKE_LOCK
<com.android.providers.downloads.DownloadService\:\ void\ updateDownload(com.android.providers.downloads.DownloadInfo$Reader,com.android.providers.downloads.DownloadInfo,long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.policy.impl.LockPatternKeyguardView$3\:\ void\ pokeWakelock(int)>=android.permission.WAKE_LOCK
<com.android.exchange.ExchangeService\:\ long\ checkMailboxes()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.PeopleActivity\:\ void\ updateFragmentsVisibility()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ pollState()>=android.permission.WAKE_LOCK
<com.android.systemui.ImageWallpaper$DrawableEngine$WallpaperObserver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.SET_WALLPAPER
<android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.mms.ui.SlideshowPresenter\:\ void\ present(com.android.mms.util.ItemLoadedCallback)>=android.permission.WAKE_LOCK
<android.app.NotificationManager\:\ void\ notify(java.lang.String,int,android.app.Notification)>=android.permission.VIBRATE
<com.android.contacts.voicemail.VoicemailPlaybackPresenter\:\ void\ postSuccessfulPrepareActions()>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.camera.ui.BasicSettingPopup\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AlbumDataLoader\:\ void\ resume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.ui.GestureRecognizer$MyGestureListener\:\ boolean\ onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>=android.permission.VIBRATE
<com.android.server.location.LocationProviderInterface\:\ void\ removeListener(int)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumSetPage\:\ void\ onSingleTapUp(int)>=android.permission.VIBRATE
<com.android.server.ServerThread$1\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.emailcommon.service.IEmailService$Stub$Proxy\:\ void\ stopSync(long)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactPickerFragment\:\ void\ finish()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ void\ binderDied()>=android.permission.WRITE_SETTINGS
<android.net.INetworkStatsService$Stub\:\ android.net.NetworkStats\ getDataLayerSnapshotForUid(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ int\ getMessageAccessPermission(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ setFilter(com.android.contacts.list.ContactListFilter,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$BluetoothSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.app.SlideshowPage\:\ void\ onStateResult(int,int,android.content.Intent)>=android.permission.VIBRATE
<com.android.settings.AccessibilitySettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.internal.widget.PasswordEntryKeyboardView\:\ boolean\ onHoverEvent(android.view.MotionEvent)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.server.connectivity.MetricsLoggerService$MetricsLoggerImpl\:\ android.net.ConnectivityMetricsEvent[]\ getEvents(android.net.ConnectivityMetricsEvent$Reference)>=android.permission.DUMP
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ void\ updateScreen(com.android.internal.policy.impl.LockPatternKeyguardView$Mode,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper\:\ java.util.List\ getEnrolledFingerprints(int,java.lang.String)>=android.permission.USE_FINGERPRINT
<android.app.backup.IBackupManager$Stub\:\ void\ setAutoRestore(boolean)>=android.permission.WRITE_SETTINGS
<com.android.mms.ui.ComposeMessageActivity$23\:\ void\ run()>=android.permission.WRITE_SMS
<android.filterfw.core.SyncRunner\:\ boolean\ performStep()>=android.permission.RECORD_AUDIO
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker\:\ void\ setCurrentState(android.content.Context,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.statusbar.policy.ToggleSlider\:\ void\ onStartTrackingTouch(android.widget.SeekBar)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ dispose()>=android.permission.BROADCAST_STICKY
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.pm.PackageManagerService\:\ boolean\ isEphemeralApplication(java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.BluetoothHeadsetService\:\ void\ onDestroy()>=android.permission.BLUETOOTH
<com.android.settings.inputmethod.UserDictionaryList\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ java.lang.String\ getAlwaysOnVpnPackage(int)>=android.permission.CONNECTIVITY_INTERNAL, android.permission.CONTROL_VPN, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.CommandsInterface\:\ void\ handleCallSetupRequestFromSim(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState\:\ void\ enter()>=android.permission.BLUETOOTH
<android.accounts.IAccountManager\:\ void\ setUserData(android.accounts.Account,java.lang.String,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1\:\ void\ onCodeInput(int,int,int)>=android.permission.WRITE_CONTACTS
<com.android.settings.BandMode$1\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.WAKE_LOCK
<com.android.contacts.editor.ContactEditorFragment\:\ void\ doSaveAction()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isProvisioningAllowed(java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.policy.impl.KeyguardViewBase\:\ boolean\ interceptMediaKey(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ void\ clearTestProviderLocation(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.phone.PhoneInterfaceManager\:\ int\ invokeOemRilRequestRaw([byte,[byte)>=android.permission.MODIFY_PHONE_STATE
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ getCdmaMin(int)>=android.permission.MODIFY_PHONE_STATE
<android.media.Ringtone\:\ void\ destroyLocalPlayer()>=android.permission.WAKE_LOCK
<com.android.server.dreams.DreamManagerService$BinderService\:\ void\ awaken()>=android.permission.WRITE_DREAM_STATE
<com.android.server.pm.PackageManagerService\:\ int\ getPermissionFlags(java.lang.String,java.lang.String,int)>=android.permission.GRANT_RUNTIME_PERMISSIONS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.REVOKE_RUNTIME_PERMISSIONS
<com.android.mms.util.Recycler$MmsRecycler\:\ boolean\ checkForThreadsOverLimit(android.content.Context)>=android.permission.RECEIVE_SMS
<com.android.calendar.EventInfoFragment\:\ void\ updateResponse(long,long,int)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.RIL\:\ void\ queryCallForwardStatus(int,int,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothPermissionActivity\:\ void\ onPositive()>=android.permission.BLUETOOTH
<com.android.internal.telephony.SMSDispatcher\:\ void\ sendRawPdu(byte[],byte[],android.app.PendingIntent,android.app.PendingIntent,java.lang.String)>=android.permission.WAKE_LOCK
<android.app.ActivityManagerNative\:\ void\ setDebugApp(java.lang.String,boolean,boolean)>=android.permission.WRITE_SETTINGS
<com.android.browser.TabControl\:\ void\ recreateWebView(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker\:\ void\ requestStateChange(android.content.Context,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.BluetoothHandsfree$15\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<android.filterpacks.imageproc.ImageStitcher\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.bluetooth.AtCommandHandler\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiSupplicantStateChanged(int,boolean)>=android.permission.UPDATE_DEVICE_STATS
<com.android.phone.PhoneInterfaceManager\:\ boolean\ isSimPinEnabled()>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.CommandsInterface\:\ void\ getBasebandVersion(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.detail.ContactLoaderFragment$1\:\ void\ onLoadFinished(android.content.Loader,com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.Tab$3\:\ void\ onRequestFocus(android.webkit.WebView)>=android.permission.GET_ACCOUNTS
<com.android.contacts.list.JoinContactListFragment\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.SlideshowPage\:\ void\ resume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.ims.IsimUiccRecords\:\ int\ fetchIsimRecords(com.android.internal.telephony.IccFileHandler,android.os.Handler)>=android.permission.WAKE_LOCK
<android.app.AliasActivity\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.filterpacks.base.ObjectSource\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.ManageCachePage$4\:\ void\ onLongTap(int)>=android.permission.VIBRATE
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ connectInputDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.exchange.EasAccountService\:\ void\ sync()>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothGatt\:\ boolean\ discoverServices()>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneNotifier\:\ void\ notifyDataConnectionFailed(com.android.internal.telephony.Phone,java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.gallery3d.app.MoviePlayer\:\ void\ onResume()>=android.permission.WAKE_LOCK
<com.android.mms.transaction.SendTransaction\:\ byte[]\ sendPdu(byte[],java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<com.android.gallery3d.app.MovieActivity$1\:\ void\ onReplay()>=android.permission.WAKE_LOCK
<com.android.browser.PhoneUi\:\ void\ showWeb(boolean)>=android.permission.GET_ACCOUNTS
<com.android.music.MediaPlaybackService$ServiceStub\:\ int\ removeTracks(int,int)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ android.net.NetworkCapabilities[]\ getDefaultNetworkCapabilitiesForUser(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.activities.ActionBarAdapter$Listener\:\ void\ onAction(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.AlbumPicker\:\ void\ onPause()>=android.permission.RECORD_AUDIO
<com.android.systemui.statusbar.BaseStatusBar\:\ com.android.systemui.statusbar.StatusBarIconView\ addNotificationViews(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onSetUserDataEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$PowerUsageSummaryActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.server.MmsServiceBroker$BinderService\:\ void\ sendMessage(int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.mms.util.DraftCache\:\ void\ access$000(com.android.mms.util.DraftCache)>=android.permission.READ_SMS
<com.android.nfc.handover.HandoverManager$HandoverPowerManager\:\ boolean\ isBluetoothEnabled()>=android.permission.BLUETOOTH
<android.app.TabActivity\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.server.VibratorService$Vibration\:\ void\ binderDied()>=android.permission.WAKE_LOCK
<android.filterpacks.ui.SurfaceRenderFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.wallpaper.WallpaperManagerService\:\ void\ clearWallpaper(java.lang.String,int,int)>=android.permission.SET_WALLPAPER
<com.android.server.am.BatteryStatsService\:\ void\ noteJobFinish(java.lang.String,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ isDrmRingtoneWithRights(long)>=android.permission.WRITE_SMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ getScreenCaptureDisabled(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.list.ShortcutIntentBuilder$LoadingAsyncTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WRITE_CONTACTS
<android.filterpacks.imageproc.CropFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.mms.util.ThumbnailManager$ThumbnailTask$1\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.GSMPhone\:\ boolean\ handleMultipartyIncallSupplementaryService(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ void\ registerSuggestionSpansForNotification([android.text.style.SuggestionSpan)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onCleanUpConnection(boolean,int,java.lang.String)>=android.permission.BROADCAST_STICKY
<android.speech.tts.TextToSpeech\:\ int\ playSilentUtterance(long,int,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.settings.Settings$InputMethodAndLanguageSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.settings.Settings$WirelessSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneProxy\:\ void\ setSmscAddress(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.os.storage.IMountService\:\ int\ formatVolume(java.lang.String)>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<android.net.wifi.WifiStateMachine$DriverUnloadingState$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.music.IMediaPlaybackService$Stub\:\ void\ enqueue(long[],int)>=android.permission.WAKE_LOCK
<com.android.internal.widget.multiwaveview.GlowPadView\:\ void\ handleDown(android.view.MotionEvent)>=android.permission.BLUETOOTH
<com.android.contacts.CallContactActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.app.IBatteryStats$Stub\:\ void\ noteBluetoothOn()>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ revertToNitzTimeZone()>=android.permission.SET_TIME_ZONE
<android.net.TrafficStats\:\ android.net.NetworkStats\ getDataLayerSnapshotForUid(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.RIL\:\ void\ sendCdmaSms(byte[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.wifi.WifiServiceImpl\:\ void\ enableVerboseLogging(int)>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.BluetoothHandsfree$20\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<android.widget.VideoView\:\ void\ setVideoPath(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.email.provider.AccountReconciler\:\ boolean\ reconcileAccountsInternal(android.content.Context,java.util.List,android.accounts.Account[],android.content.Context,boolean)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$ManageApplicationsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.calendar.alerts.AlertReceiver\:\ android.database.Cursor\ getEventCursor(android.content.Context,long)>=android.permission.READ_CALENDAR
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ access$2100(com.android.internal.policy.impl.KeyguardViewMediator,boolean)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.DatabaseModifier\:\ int\ update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.nfc.NfcService\:\ void\ enforceNfceeAdminPerm(java.lang.String)>=android.permission.NFC
<android.filterpacks.imageproc.VignetteFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.browser.view.PieStackView\:\ void\ layout(int,int,boolean,float,int)>=android.permission.GET_ACCOUNTS
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory$2\:\ void\ run()>=android.permission.WRITE_CALENDAR
<android.net.sip.ISipService\:\ android.net.sip.ISipSession\ getPendingSession(java.lang.String)>=android.permission.USE_SIP
<android.app.IActivityManager\:\ void\ setLockScreenShown(boolean)>=android.permission.WAKE_LOCK
<com.android.server.audio.AudioService\:\ java.lang.String\ registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback,boolean)>=android.permission.MODIFY_AUDIO_ROUTING
<com.android.server.LocationManagerService\:\ void\ access$600(com.android.server.LocationManagerService)>=android.permission.WAKE_LOCK
<android.provider.Contacts$People\:\ android.net.Uri\ addToGroup(android.content.ContentResolver,long,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.inputmethod.InputMethodAndLanguageSettings\:\ void\ updateUserDictionaryPreference(android.preference.Preference)>=android.permission.READ_USER_DICTIONARY
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ notifyDataConnectionFailed(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.ServiceStateTracker\:\ void\ enableLocationUpdates()>=android.permission.WAKE_LOCK
<com.android.server.location.CountryDetectorBase\:\ void\ setCountryListener(android.location.CountryListener)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.contacts.ContactsActivity\:\ android.app.Dialog\ onCreateDialog(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothService\:\ boolean\ isBondingFeasible(java.lang.String)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.NetworkManagementService\:\ void\ setPermission(java.lang.String,[int)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.server.am.BatteryStatsService\:\ void\ noteJobStart(java.lang.String,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.settings.Settings$AccountSyncSettingsInAddAccountActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage\:\ void\ switchToDefaultView(boolean)>=android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.GET_ACCOUNTS
<com.android.server.am.BroadcastQueue\:\ boolean\ sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ setDataRoamingEnabled(boolean)>=android.permission.WRITE_SETTINGS
<android.net.wifi.IWifiManager$Stub\:\ boolean\ setWifiEnabled(boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.internal.telephony.IPhoneSubInfo\:\ java.lang.String\ getSubscriberId()>=android.permission.READ_PHONE_STATE
<android.net.wifi.IWifiManager\:\ boolean\ enableNetwork(int,boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.LocationManagerService\:\ void\ addProximityAlertLocked(double,double,float,long,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION
<android.widget.VideoView$6\:\ void\ surfaceChanged(android.view.SurfaceHolder,int,int,int)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$InactiveState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager\:\ void\ enforceReceiveAndSend(java.lang.String)>=android.permission.RECEIVE_SMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getStorageEncryptionStatus(java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.mms.ui.ComposeMessageActivity\:\ void\ saveDraft(boolean)>=android.permission.RECEIVE_SMS
<android.filterpacks.videosrc.CameraSource\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.group.GroupDetailFragment\:\ void\ bindGroupMetaData(android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1\:\ void\ onCodeInput(int,int,int)>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.app.ManageCachePage$1\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<android.media.effect.effects.GrayscaleEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ boolean\ requestAssistScreenshot(com.android.internal.app.IAssistScreenshotReceiver)>=android.permission.READ_FRAME_BUFFER
<com.android.soundrecorder.SoundRecorder$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothPermissionActivity\:\ java.lang.String\ createPhonebookDisplayText()>=android.permission.BLUETOOTH
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask\:\ void\ onPostExecute(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.avrcp.AvrcpControllerService$BluetoothAvrcpControllerBinder\:\ void\ sendPassThroughCmd(android.bluetooth.BluetoothDevice,int,int)>=android.permission.BLUETOOTH
<com.android.mms.ui.DeliveryReportActivity\:\ java.util.List\ getReportItems()>=android.permission.RECEIVE_SMS
<com.android.music.MediaPlaybackService$ServiceStub\:\ void\ stop()>=android.permission.WAKE_LOCK
<com.android.phone.OtaUtils\:\ void\ otaShowProgramSuccessDialog()>=android.permission.BLUETOOTH
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler\:\ void\ startLongPressTimer(com.android.inputmethod.keyboard.PointerTracker)>=android.permission.WRITE_CONTACTS
<com.android.email.activity.MessageViewFragment$Callback\:\ void\ onRespondedToInvite(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.InCallScreen\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.BLUETOOTH
<com.android.settings.AccessibilitySettings\:\ void\ handleToggleSpeakPasswordPreferenceClick()>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$TetherSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ beginReliableWrite(int,java.lang.String)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.AlbumPage$5\:\ boolean\ onActionItemClicked(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.nfc.snep.SnepServer\:\ boolean\ handleRequest(com.android.nfc.snep.SnepMessenger,com.android.nfc.snep.SnepServer$Callback)>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneSubInfoProxy\:\ java.lang.String\ getVoiceMailAlphaTag()>=android.permission.READ_PHONE_STATE
<com.android.inputmethod.latin.SubtypeSwitcher\:\ void\ init(com.android.inputmethod.latin.LatinIME)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.WifiService\:\ android.os.Messenger\ getWifiStateMachineMessenger()>=android.permission.ACCESS_WIFI_STATE
<com.android.calendar.AllInOneActivity\:\ void\ onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>=android.permission.WRITE_CALENDAR
<com.android.email.activity.MessageViewFragmentBase$LoadBodyTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.PhoneSubInfo\:\ java.lang.String\ getVoiceMailAlphaTag()>=android.permission.READ_PHONE_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getPasswordMinimumUpperCase(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.camera.VideoCamera\:\ void\ onCancelBgTraining(android.view.View)>=android.permission.RECORD_AUDIO
<com.android.server.NetworkManagementService\:\ void\ clearInterfaceAddresses(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask\:\ void\ onSuccess(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.month.SimpleDayPickerFragment\:\ void\ onCreate(android.os.Bundle)>=android.permission.WRITE_CALENDAR
<com.android.calendar.event.AttendeesView\:\ void\ addAttendees(java.util.ArrayList)>=android.permission.WRITE_CONTACTS
<com.android.bluetooth.map.BluetoothMapService$BluetoothMapBinder\:\ android.bluetooth.BluetoothDevice\ getClient()>=android.permission.BLUETOOTH
<com.android.browser.Controller\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.GET_ACCOUNTS
<com.android.phone.CallNotifier\:\ void\ onResendMute()>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.settings.Settings$SoundSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.settings.Settings$WirelessSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.music.IMediaPlaybackService$Stub$Proxy\:\ void\ setShuffleMode(int)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub\:\ boolean\ acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>=android.permission.WAKE_LOCK
<com.android.providers.downloads.StorageManager\:\ void\ findSpace(java.io.File,long,int)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.bluetooth.IBluetoothA2dp$Stub\:\ boolean\ suspendSink(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.ImageCombineFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.bluetooth.BluetoothDeviceProfileState\:\ void\ sendConnectionAccessRemovalIntent()>=android.permission.WAKE_LOCK
<com.android.phone.sip.SipSettings\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.USE_SIP
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ queueNextSignalStrengthPoll()>=android.permission.WAKE_LOCK
<com.android.internal.widget.multiwaveview.GlowPadView\:\ boolean\ onHoverEvent(android.view.MotionEvent)>=android.permission.BLUETOOTH
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$3\:\ void\ onPostExecute(java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.calendar.alerts.SnoozeAlarmsService\:\ void\ onHandleIntent(android.content.Intent)>=android.permission.WRITE_CALENDAR
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)>=android.permission.BLUETOOTH
<com.android.contacts.activities.GroupEditorActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.ResizeFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ long\ getPasswordExpirationTimeout(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.bluetooth.IBluetoothHeadset\:\ boolean\ createIncomingConnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.VibratorService\:\ void\ access$1200(com.android.server.VibratorService,long)>=android.permission.VIBRATE
<com.android.phone.BluetoothHandsfree$27\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.bluetooth.opp.BluetoothOppManager\:\ boolean\ isEnabled()>=android.permission.BLUETOOTH
<com.android.mms.transaction.TransactionService$ServiceHandler\:\ boolean\ processTransaction(com.android.mms.transaction.Transaction)>=android.permission.BLUETOOTH
<com.android.internal.telephony.MmiCode\:\ void\ cancel()>=android.permission.WAKE_LOCK
<android.accounts.AccountManagerService\:\ void\ clearPassword(android.accounts.Account)>=android.permission.MANAGE_ACCOUNTS
<com.android.server.am.ActivityManagerService\:\ void\ appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>=android.permission.WAKE_LOCK
<com.android.uiautomator.core.UiDevice\:\ void\ freezeRotation()>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.Connection\:\ void\ proceedAfterWildChar(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$AccountSyncSettingsInAddAccountActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.music.AudioPreview\:\ void\ stopPlayback()>=android.permission.WAKE_LOCK
<com.android.deskclock.SettingsActivity\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.vcard.VCardParserImpl_V40\:\ void\ parseItems()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.os.BatteryStatsImpl\:\ void\ doUnplugLocked(long,long)>=android.permission.BLUETOOTH
<com.android.server.InputMethodManagerService$InputMethodSettings\:\ void\ appendAndPutEnabledInputMethodLocked(java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<android.server.BluetoothService\:\ int\ getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.nfc.INfcTag\:\ int\ getTimeout(int)>=android.permission.NFC
<com.android.vcard.VCardEntryHandler\:\ void\ onEntryCreated(com.android.vcard.VCardEntry)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.SlideViewInterface\:\ void\ stopAudio()>=android.permission.WAKE_LOCK
<android.server.search.SearchManagerService$MyPackageMonitor\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ removeContentProviderExternal(java.lang.String,android.os.IBinder)>=android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY
<com.android.mms.ui.ComposeMessageActivity$DiscardDraftListener\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.RECEIVE_SMS
<com.android.internal.telephony.ITelephony$Stub$Proxy\:\ boolean\ enableDataConnectivity()>=android.permission.CHANGE_NETWORK_STATE
<android.bluetooth.BluetoothAdapter\:\ android.util.Pair\ readOutOfBandData()>=android.permission.BLUETOOTH
<com.android.server.WifiService\:\ int\ getPersistedWifiState()>=android.permission.WRITE_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isAdminActive(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.media.AudioService$ScoClient\:\ void\ incCount()>=android.permission.BLUETOOTH
<android.accounts.AccountManager$4\:\ void\ doWork()>=android.permission.MANAGE_ACCOUNTS
<com.android.server.wm.WindowAnimator\:\ void\ performAnimationsLocked()>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ notePhoneState(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.browser.provider.BrowserProvider\:\ int\ update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.phone.sip.SipEditor\:\ void\ saveAndRegisterProfile(android.net.sip.SipProfile)>=android.permission.WAKE_LOCK
<com.android.mms.ui.SearchActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SMS
<android.bluetooth.IBluetooth\:\ int\ getInputDeviceConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.mms.transaction.RetrieveTransaction\:\ void\ sendAcknowledgeInd(com.google.android.mms.pdu.RetrieveConf)>=android.permission.CHANGE_NETWORK_STATE
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl\:\ void\ setSpeakerPhoneOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.settings.Settings$WifiP2pSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AndroidBeamSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.internal.app.LocalePicker$LocaleSelectionListener\:\ void\ onLocaleSelected(java.util.Locale)>=android.permission.CHANGE_CONFIGURATION
<com.android.gallery3d.ui.GLView\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.sip.SipPhone$SipCall\:\ void\ hangup()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ initSstIcc()>=android.permission.WRITE_SETTINGS
<com.android.mms.ui.AudioAttachmentView\:\ void\ reset()>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ boolean\ setAlwaysOnVpnPackage(int,java.lang.String,boolean)>=android.permission.CONNECTIVITY_INTERNAL, android.permission.CONTROL_VPN, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.email.activity.setup.AccountSetupOptions\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_PHONE_STATE
<com.android.server.input.InputManagerService\:\ void\ notifyLidSwitchChanged(long,boolean)>=android.permission.WAKE_LOCK
<com.android.exchange.EasAccountService\:\ int\ parsePingResult(java.io.InputStream,android.content.ContentResolver,java.util.HashMap)>=android.permission.READ_SYNC_SETTINGS
<com.android.vcard.VCardEntry$InsertOperationConstrutor\:\ boolean\ onElement(com.android.vcard.VCardEntry$EntryElement)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onRoamingOff()>=android.permission.BROADCAST_STICKY
<android.bluetooth.IBluetooth\:\ int\ getBluetoothState()>=android.permission.BLUETOOTH
<com.google.common.io.Resources\:\ java.lang.String\ toString(java.net.URL,java.nio.charset.Charset)>=android.permission.INTERNET
<com.android.server.am.BatteryStatsService\:\ void\ noteResetBleScan()>=android.permission.UPDATE_DEVICE_STATS
<android.test.mock.MockContentResolver\:\ int\ getIsSyncable(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<android.provider.ContactsContract$ProfileSyncState\:\ android.util.Pair\ getWithUri(android.content.ContentProviderClient,android.accounts.Account)>=android.permission.WRITE_CONTACTS
<android.media.AudioService\:\ void\ dispatchMediaKeyEvent(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ void\ clearDefaultNetId()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.settings.fuelgauge.PowerUsageSummary\:\ void\ processMiscUsage()>=android.permission.BLUETOOTH
<android.nfc.NfcActivityManager\:\ void\ requestNfcServiceCallback(boolean)>=android.permission.NFC
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask\:\ void\ run(android.accounts.AccountManagerFuture)>=android.permission.GET_ACCOUNTS
<com.android.vcard.VCardParserImpl_V30\:\ boolean\ parseItem()>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.SipCallOptionHandler\:\ boolean\ isNetworkConnected()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.CommandsInterface\:\ void\ switchWaitingOrHoldingAndActive(android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth\:\ boolean\ setName(java.lang.String)>=android.permission.BLUETOOTH
<com.android.development.SyncAdapterDriver\:\ void\ startSync(java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.DreamComponentPreference$2\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ setCallWaiting(boolean,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.providers.downloads.DownloadProvider\:\ android.net.Uri\ insert(android.net.Uri,android.content.ContentValues)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.server.LocationManagerService$Receiver\:\ void\ onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessagesAdapter$SearchCursorLoader\:\ java.lang.Object\ loadInBackground()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ boolean\ setCellBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[])>=android.permission.WAKE_LOCK
<com.android.email.MessagingListener\:\ void\ checkMailFinished(android.content.Context,long,long,long)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.SharpenFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.mms.ui.ManageSimMessages$1\:\ void\ onChange(boolean)>=android.permission.RECEIVE_SMS
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter\:\ void\ onCodeInput(int,int,int)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.sip.SipPhone\:\ void\ notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.Phone$DataState)>=android.permission.BROADCAST_STICKY
<android.net.wifi.IWifiManager$Stub\:\ android.os.Messenger\ getWifiStateMachineMessenger()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.accounts.AccountManagerService\:\ void\ removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.AutoFixFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothPairingDialog\:\ void\ createConfirmationDialog(com.android.settings.bluetooth.CachedBluetoothDeviceManager)>=android.permission.BLUETOOTH
<com.android.server.location.LocationProviderInterface\:\ void\ enable()>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothManager\:\ android.bluetooth.BluetoothGattServer\ openGattServer(android.content.Context,android.bluetooth.BluetoothGattServerCallback)>=android.permission.BLUETOOTH
<com.android.contacts.list.PhoneNumberPickerFragment\:\ void\ setSearchMode(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ boolean\ teardown(android.net.NetworkStateTracker)>=android.permission.BLUETOOTH
<android.server.BluetoothA2dpService\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter\:\ void\ onError(android.net.sip.SipAudioCall,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.usb.UsbService\:\ void\ setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)>=android.permission.MANAGE_USB
<com.android.server.net.NetworkStatsService\:\ void\ access$700(com.android.server.net.NetworkStatsService,int)>=android.permission.WAKE_LOCK
<com.android.nfc.NfcService$TagService\:\ int\ close(int)>=android.permission.NFC
<com.android.exchange.EasOutboxService\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager\:\ boolean\ updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.camera.VideoCamera\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.soundrecorder.SoundRecorder\:\ void\ onStateChanged(int)>=android.permission.WAKE_LOCK
<android.provider.ContactsContract$Contacts\:\ android.net.Uri\ getLookupUri(android.content.ContentResolver,android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<android.view.IWindowManager$Stub$Proxy\:\ void\ clearForcedDisplaySize()>=android.permission.WAKE_LOCK
<com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion\:\ java.util.ArrayList\ asList(java.lang.String[])>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ void\ onBluetoothStateChanged(int)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ haveSomethingToCopyToSDCard(long)>=android.permission.WRITE_SMS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ setMute(boolean)>=android.permission.WAKE_LOCK
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.ISms$Stub\:\ boolean\ enableCellBroadcastRange(int,int)>=android.permission.WAKE_LOCK
<com.android.server.net.NetworkPolicyManagerService\:\ void\ setRestrictBackground(boolean)>=android.permission.MANAGE_NETWORK_POLICY
<com.android.contacts.list.ShortcutIntentBuilder$LoadingAsyncTask\:\ void\ loadPhoto()>=android.permission.WRITE_CONTACTS
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ createDevicePreference(com.android.settings.bluetooth.CachedBluetoothDevice)>=android.permission.BLUETOOTH
<com.android.email.activity.MessageFileView$LoadFilenameTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.RequestPermissionActivity\:\ void\ proceedAndFinish()>=android.permission.BLUETOOTH
<com.android.browser.SnapshotTab\:\ boolean\ createSubWindow()>=android.permission.INTERNET
<com.android.emailcommon.service.IAccountService\:\ void\ notifyLoginFailed(long)>=android.permission.VIBRATE
<com.android.server.LockSettingsService\:\ void\ registerStrongAuthTracker(android.app.trust.IStrongAuthTracker)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.settings.Settings$KeyboardLayoutPickerActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.mms.transaction.MessagingNotification$3\:\ void\ onPostExecute(java.lang.Integer)>=android.permission.VIBRATE
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager\:\ boolean\ updateMessageOnIccEf(int,int,byte[])>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ java.lang.String\ getName()>=android.permission.BLUETOOTH
<com.android.launcher2.Launcher\:\ boolean\ onLongClick(android.view.View)>=android.permission.VIBRATE
<android.content.IContentService$Stub$Proxy\:\ java.util.List\ getCurrentSyncs()>=android.permission.READ_SYNC_STATS
<android.nfc.INfcAdapterExtras$Stub\:\ void\ authenticate(java.lang.String,byte[])>=android.permission.NFC
<com.android.settings.fuelgauge.BatteryHistoryPreference\:\ void\ onBindView(android.view.View)>=android.permission.ACCESS_NETWORK_STATE
<com.google.common.io.MultiReader\:\ int\ read(char[],int,int)>=android.permission.INTERNET
<com.android.launcher2.Workspace\:\ void\ beginDragShared(android.view.View,com.android.launcher2.DragSource)>=android.permission.VIBRATE
<com.android.contacts.list.ProviderStatusWatcher\:\ void\ notifyListeners()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.deviceinfo.UsbSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.settings.inputmethod.UserDictionaryList\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper\:\ void\ cancelEnrollment(android.os.IBinder)>=android.permission.MANAGE_FINGERPRINT
<android.filterpacks.imageproc.ContrastFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.calendar.month.SimpleDayPickerFragment\:\ void\ setMonthDisplayed(android.text.format.Time,boolean)>=android.permission.WRITE_CALENDAR
<android.accounts.IAccountManager$Stub\:\ java.lang.String\ getPassword(android.accounts.Account)>=android.permission.AUTHENTICATE_ACCOUNTS
<android.net.sip.SipAudioCall\:\ void\ onError(int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.ManageCachePage\:\ boolean\ onItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.pbap.BluetoothPbapService$2\:\ void\ disconnect()>=android.permission.BLUETOOTH_ADMIN
<android.accounts.AccountManager\:\ void\ addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>=android.permission.GET_ACCOUNTS
<com.android.phone.ADNList\:\ boolean\ onContextItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ fetchBtClass()>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhone$SipConnection\:\ void\ dial()>=android.permission.USE_SIP
<com.android.providers.downloads.DownloadThread\:\ void\ transferData(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,byte[],java.io.InputStream)>=android.permission.ACCESS_NETWORK_STATE
<com.android.vcard.VCardParserImpl_V40\:\ void\ handleNest()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.RadioInfo\:\ void\ onPause()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.app.AlertActivity\:\ void\ onStop()>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ android.os.Bundle\ _getProviderInfoLocked(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.providers.media.MediaProvider\:\ android.net.Uri\ getAlbumArtOutputUri(com.android.providers.media.MediaProvider$DatabaseHelper,android.database.sqlite.SQLiteDatabase,long,android.net.Uri)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.location.LocationManager\:\ android.location.Location\ getLastKnownLocation(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.mms.ui.ViewInterface\:\ void\ reset()>=android.permission.WAKE_LOCK
<android.media.IAudioService$Stub$Proxy\:\ void\ setBluetoothScoOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.camera.VideoCamera\:\ void\ onThumbnailClicked(android.view.View)>=android.permission.VIBRATE
<com.android.server.location.LocationBasedCountryDetector\:\ void\ registerListener(java.lang.String,android.location.LocationListener)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener\:\ void\ onPatternDetected(java.util.List)>=android.permission.WAKE_LOCK
<com.android.server.SerialService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.SERIAL_PORT
<com.android.internal.telephony.SubscriptionController\:\ void\ setDefaultSmsSubId(int)>=android.permission.MODIFY_PHONE_STATE
<com.android.launcher2.Workspace\:\ void\ startDrag(com.android.launcher2.CellLayout$CellInfo)>=android.permission.VIBRATE
<com.android.server.NetworkManagementService\:\ void\ setDefaultNetId(int)>=android.permission.CONNECTIVITY_INTERNAL
<android.media.AudioManager\:\ void\ setMicrophoneMute(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<com.android.server.content.ContentService\:\ boolean\ getMasterSyncAutomatically()>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.READ_SYNC_SETTINGS
<com.android.emailcommon.service.IPolicyService$Stub$Proxy\:\ void\ setAccountPolicy(long,com.android.emailcommon.provider.Policy,java.lang.String)>=android.permission.VIBRATE
<com.android.gallery3d.ui.ActionModeHandler\:\ boolean\ onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.util.Recycler$SmsRecycler\:\ boolean\ checkForThreadsOverLimit(android.content.Context)>=android.permission.RECEIVE_SMS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ java.lang.String\ getObjectPathFromAddress(java.lang.String)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.AbstractGalleryActivity\:\ void\ onBackPressed()>=android.permission.RECORD_AUDIO
<com.android.mms.util.DownloadManager\:\ java.lang.String\ getMessage(android.net.Uri)>=android.permission.WRITE_SMS
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy\:\ boolean\ updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.contacts.editor.SelectAccountDialogFragment$Listener\:\ void\ onAccountChosen(com.android.contacts.model.AccountWithDataSet,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.accounts.AccountManager\:\ void\ setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.internal.telephony.IccCard\:\ void\ handleIccCardStatus(com.android.internal.telephony.IccCardStatus)>=android.permission.WAKE_LOCK
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ setMessageAccessPermission(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH_PRIVILEGED
<com.android.contacts.group.GroupDetailFragment$2\:\ android.content.Loader\ onCreateLoader(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.nfc.tech.NfcV\:\ void\ connect()>=android.permission.NFC
<android.net.IConnectivityManager\:\ android.net.NetworkInfo\ getNetworkInfo(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.statusbar.StatusBarManagerService\:\ void\ clearNotificationEffects()>=android.permission.STATUS_BAR_SERVICE
<com.android.settings.Settings$KeyboardLayoutPickerActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.latin.UserBinaryDictionary\:\ void\ asyncReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.voicedialer.VoiceDialerActivity\:\ void\ onDestroy()>=android.permission.BLUETOOTH
<com.android.settings.Settings$CryptKeeperSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetoothHeadset\:\ boolean\ disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.bluetooth.sap.SapService$SapBinder\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ android.os.ParcelUuid[]\ getUuids()>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ addAttachment(java.lang.String,android.net.Uri,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.emailcommon.service.IAccountService$Stub\:\ java.lang.String\ getDeviceId()>=android.permission.READ_PHONE_STATE
<android.view.IApplicationToken$Stub\:\ boolean\ keyDispatchingTimedOut()>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ setProcessForeground(android.os.IBinder,int,boolean)>=android.permission.SET_PROCESS_LIMIT
<android.inputmethodservice.KeyboardView\:\ boolean\ onLongPress(android.inputmethodservice.Keyboard$Key)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.mms.transaction.NotificationPlayer\:\ void\ play(android.content.Context,android.net.Uri,boolean,int,float)>=android.permission.WAKE_LOCK
<android.hardware.location.ContextHubService\:\ int\ sendMessage(int,int,android.hardware.location.ContextHubMessage)>=android.permission.LOCATION_HARDWARE
<com.android.server.ethernet.EthernetServiceImpl\:\ boolean\ isAvailable()>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.ui.MenuExecutor$ProgressListener\:\ void\ onProgressComplete(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ void\ dispatch(android.content.Intent,java.lang.String,android.content.BroadcastReceiver)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ updateSearchPanel()>=android.permission.VIBRATE
<android.net.IConnectivityManager$Stub$Proxy\:\ void\ requestNetworkTransitionWakelock(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.contacts.vcard.VCardImportExportListener\:\ void\ onImportCanceled(com.android.contacts.vcard.ImportRequest,int)>=android.permission.VIBRATE
<com.android.launcher2.PagedViewWithDraggableItems\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.internal.telephony.CallTracker\:\ void\ handlePollCalls(android.os.AsyncResult)>=android.permission.WAKE_LOCK
<com.android.settings.DataUsageSummary$WarningEditorFragment$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.exchange.EasOutboxService\:\ com.android.exchange.EasResponse\ sendPing(byte[],int)>=android.permission.WAKE_LOCK
<com.android.quicksearchbox.util.HttpHelper\:\ java.lang.String\ get(java.lang.String,java.util.Map)>=android.permission.INTERNET
<android.net.wifi.IWifiManager$Stub$Proxy\:\ android.net.DhcpInfo\ getDhcpInfo()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.policy.impl.PhoneWindowManager\:\ boolean\ interceptFallback(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService$MyExecutor\:\ void\ execute(java.lang.Runnable)>=android.permission.WAKE_LOCK
<android.nfc.tech.NdefFormatable\:\ void\ connect()>=android.permission.NFC
<android.accounts.IAccountManager$Stub$Proxy\:\ boolean\ addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.nfc.NfcService$TagService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.NFC
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ int\ getSimAccessPermission(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.bluetooth.map.BluetoothMapService$BluetoothMapBinder\:\ boolean\ isConnected(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.exchange.adapter.AccountSyncAdapter\:\ void\ setSyncKey(java.lang.String,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.UIControllerBase\:\ void\ onActivityCreated()>=android.permission.NFC
<android.bluetooth.BluetoothHeadset\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHandsfree\:\ boolean\ initiateScoUsingVirtualVoiceCall()>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.RecentApplicationsDialog\:\ void\ switchTo(com.android.internal.policy.impl.RecentApplicationsDialog$RecentTag)>=android.permission.REORDER_TASKS
<android.filterfw.core.AsyncRunner$AsyncRunnerTask\:\ void\ onPostExecute(android.filterfw.core.AsyncRunner$RunnerResult)>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ boolean\ connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ pollStateDone()>=android.permission.SET_TIME_ZONE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ resetPassword(java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.usb.UsbService\:\ void\ allowUsbDebugging(boolean,java.lang.String)>=android.permission.MANAGE_USB
<com.android.mms.ui.ManageSimMessages\:\ void\ copyToPhoneMemory(android.database.Cursor)>=android.permission.RECEIVE_SMS
<android.media.AudioService\:\ void\ access$3000(android.media.AudioService,android.os.Handler,int,int,int,java.lang.Object,int)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.HeadsetProfile\:\ void\ setPreferred(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.ToPackedGrayFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.gallery3d.app.SlideshowPage\:\ void\ onCreate(android.os.Bundle,android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ handleNotificationError(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification,java.lang.String)>=android.permission.VIBRATE
<com.android.settings.DataUsageSummary$10\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.wm.WindowManagerService\:\ void\ startAppFreezingScreenLocked(com.android.server.wm.AppWindowToken,int)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ClassZeroActivity\:\ void\ saveMessage()>=android.permission.RECEIVE_SMS
<android.bluetooth.BluetoothProfileState$StableState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.email.activity.MessageListFragment\:\ void\ onSendPendingMessages()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.Phone\:\ void\ getPreferredNetworkType(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.calendar.CalendarController\:\ void\ sendEventRelatedEvent(java.lang.Object,long,long,long,long,int,int,long)>=android.permission.WRITE_CALENDAR
<com.android.server.NetworkManagementService\:\ void\ setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.settings.DataUsageSummary$UidDetailTask\:\ void\ bindView(com.android.settings.net.UidDetailProvider,com.android.settings.DataUsageSummary$AppItem,android.view.View)>=android.permission.ACCESS_NETWORK_STATE
<com.android.nfc.nxp.NativeNfcManager\:\ void\ notifyTransactionListeners(byte[])>=android.permission.BLUETOOTH
<com.android.browser.BrowserActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactEditorActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.UsimPhoneBookManager\:\ void\ readPbrFileAndWait()>=android.permission.WAKE_LOCK
<com.android.camera.ui.InLineSettingSwitch$1\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.RECORD_AUDIO
<android.content.ContentService\:\ java.util.List\ getCurrentSyncs()>=android.permission.READ_SYNC_STATS
<com.android.systemui.statusbar.policy.NetworkController\:\ void\ <init>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.app.PickerActivity\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.RECORD_AUDIO
<android.os.storage.IMountService$Stub$Proxy\:\ void\ unmountVolume(java.lang.String,boolean,boolean)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.gallery3d.data.FilterTypeSet\:\ long\ reload()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.transaction.MessagingNotification\:\ void\ updateNotification(android.content.Context,boolean,int)>=android.permission.VIBRATE
<com.android.settings.DataUsageSummary\:\ boolean\ isMobilePolicySplit()>=android.permission.ACCESS_NETWORK_STATE
<com.android.nfc.P2pLinkManager$2\:\ com.android.nfc.snep.SnepMessage\ doGet(int,android.nfc.NdefMessage)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothPermissionRequest\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.settings.Settings$StorageUseActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.server.am.ActivityRecord\:\ void\ windowsVisible()>=android.permission.WAKE_LOCK
<com.android.mms.ui.SlideViewInterface\:\ void\ setVideo(java.lang.String,android.net.Uri)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<com.android.bluetooth.map.BluetoothMapService$BluetoothMapBinder\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.app.ActivityManagerNative\:\ void\ goingToSleep()>=android.permission.WAKE_LOCK
<com.android.commands.monkey.Monkey\:\ int\ runMonkeyCycles()>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$DevelopmentSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.ComposeMessageActivity\:\ void\ initialize(android.os.Bundle,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.event.EditEventView\:\ void\ setModification(int)>=android.permission.READ_CALENDAR
<com.android.mms.ui.ConversationListItem\:\ void\ updateAvatarView()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.NotificationController\:\ void\ showSecurityNeededNotification(com.android.emailcommon.provider.Account)>=android.permission.VIBRATE
<com.android.settings.wifi.WifiStatusTest\:\ void\ handleScanResultsAvailable()>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.PhoneInterfaceManager\:\ boolean\ disableDataConnectivity()>=android.permission.MODIFY_PHONE_STATE
<com.android.inputmethod.latin.Dictionary\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<com.android.server.MountService\:\ int\ verifyEncryptionPassword(java.lang.String)>=android.permission.CRYPT_KEEPER
<com.android.server.wm.WindowManagerService\:\ void\ addWindowToken(android.os.IBinder,int)>=android.permission.MANAGE_APP_TOKENS
<com.android.gallery3d.app.AlbumPicker\:\ void\ onBackPressed()>=android.permission.RECORD_AUDIO
<com.android.server.sip.SipService\:\ android.net.sip.SipProfile[]\ getListOfProfiles(java.lang.String)>=android.permission.USE_SIP
<com.android.gallery3d.ui.CropView$FaceHighlightView\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isAccessibilityServicePermittedByAdmin(android.content.ComponentName,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.bluetooth.BluetoothPairingDialog\:\ void\ createConsentDialog(com.android.settings.bluetooth.CachedBluetoothDeviceManager)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ access$1500(com.android.internal.policy.impl.KeyguardViewMediator)>=android.permission.WAKE_LOCK
<com.android.vcard.VCardParserImpl_V40\:\ void\ parseOne(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.GeneralPreferences\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_CALENDAR
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ setDataOnRoamingEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.phone.BluetoothHandsfree$28\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<android.net.INetworkPolicyManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.transaction.RetryScheduler\:\ boolean\ isConnected()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.wifi.WifiSettingsForSetupWizardXL\:\ void\ showDisconnectedState(java.lang.String)>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.CommandsInterface\:\ void\ setCdmaRoamingPreference(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.content.IContentService$Stub\:\ void\ setMasterSyncAutomatically(boolean)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.server.VibratorService$VibrateThread\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.app.NetInitiatedActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.DevicePickerFragment\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ void\ registerUidObserver(android.app.IUidObserver,int)>=android.permission.SET_ACTIVITY_WATCHER
<com.android.wallpaper.walkaround.WalkAroundWallpaper\:\ void\ startCamera()>=android.permission.CAMERA
<com.android.mms.ui.ComposeMessageActivity\:\ void\ access$4500(com.android.mms.ui.ComposeMessageActivity,boolean)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.FixedRotationFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ sendDTMF(android.bluetooth.BluetoothDevice,byte)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getPasswordMinimumLetters(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.media.AudioService$2\:\ void\ onServiceConnected(int,android.bluetooth.BluetoothProfile)>=android.permission.BLUETOOTH
<com.android.server.wm.WindowManagerService\:\ void\ clearForcedDisplaySize(int)>=android.permission.WRITE_SECURE_SETTINGS
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isSecurityLoggingEnabled(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.filterpacks.base.OutputStreamTarget\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ checkPendingNotification()>=android.permission.WRITE_SMS
<android.filterpacks.videosrc.SurfaceTextureTarget\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.uiautomator.core.UiDevice\:\ void\ setRotationNatural()>=android.permission.WRITE_SETTINGS
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ persistComponentNamesToSettingLocked(java.lang.String,java.util.Set)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ handlePollCalls(android.os.AsyncResult)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.ActivityState\:\ boolean\ onItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getLine1AlphaTag(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.providers.downloads.RealSystemFacade\:\ boolean\ isNetworkRoaming()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onSetDependencyMet(java.lang.String,boolean)>=android.permission.BROADCAST_STICKY
<android.view.IWindowManager\:\ void\ reenableKeyguard(android.os.IBinder)>=android.permission.DISABLE_KEYGUARD
<com.android.browser.view.BookmarkExpandableView\:\ void\ onTop(com.android.browser.BreadCrumbView,int,java.lang.Object)>=android.permission.GET_ACCOUNTS
<com.android.calendar.EventInfoFragment\:\ void\ updateEvent(android.view.View)>=android.permission.READ_CALENDAR
<com.android.phone.PhoneInterfaceManager\:\ boolean\ setRadio(boolean)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ uninstallPackageWithActiveAdmins(java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_DEVICE_ADMINS, android.permission.MANAGE_USERS
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String[]\ getPcscfAddress(java.lang.String,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.browser.UiController\:\ com.android.browser.Tab\ openTab(java.lang.String,boolean,boolean,boolean)>=android.permission.GET_ACCOUNTS
<com.android.mms.data.Conversation\:\ void\ startQuery(android.content.AsyncQueryHandler,int,java.lang.String)>=android.permission.READ_SMS
<com.android.inputmethod.latin.SubtypeSwitcher\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ enableEnhancedVoicePrivacy(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DockEventReceiver\:\ void\ finishStartingService(android.app.Service,int)>=android.permission.WAKE_LOCK
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ android.graphics.Region\ getMagnificationRegion()>=android.permission.INTERACT_ACROSS_USERS
<android.media.AudioManager\:\ void\ setStreamMute(int,boolean)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.CropView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.NetworkManagementService\:\ void\ setDnsForwarders(android.net.Network,[java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.settings.DateTimeSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.server.LocationManagerService\:\ void\ loadProvidersLocked()>=android.permission.WAKE_LOCK
<android.app.ActivityManagerNative\:\ void\ setProcessLimit(int)>=android.permission.WAKE_LOCK
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ dial(android.bluetooth.BluetoothDevice,java.lang.String)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ endReliableWrite(int,java.lang.String,boolean)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothEnabler\:\ void\ setSwitch(android.widget.Switch)>=android.permission.BLUETOOTH
<com.android.phone.CallNotifier\:\ void\ restartRinger()>=android.permission.VIBRATE
<android.test.IsolatedContext$MockAccountManager\:\ android.accounts.AccountManagerFuture\ editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.calendar.event.EditEventHelper\:\ boolean\ saveEvent(com.android.calendar.CalendarEventModel,com.android.calendar.CalendarEventModel,int)>=android.permission.WRITE_CALENDAR
<android.nfc.INfcTag$Stub$Proxy\:\ int\ ndefMakeReadOnly(int)>=android.permission.NFC
<com.android.server.wifi.WifiServiceImpl\:\ void\ reassociate()>=android.permission.CHANGE_WIFI_STATE
<com.android.inputmethod.latin.Suggest\:\ com.android.inputmethod.latin.SuggestedWords\ getBigramPredictions(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.bluetooth.map.BluetoothMapService$BluetoothMapBinder\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<com.android.phone.BluetoothAtPhonebook\:\ void\ handleAccessPermissionResult(android.content.Intent)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.LockPatternKeyguardView$4\:\ void\ onUserChanged(int)>=android.permission.GET_ACCOUNTS
<com.android.settings.Settings\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.DataConnectionTracker$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setPasswordHistoryLength(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ int\ dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ killServicesLocked(com.android.server.am.ProcessRecord,boolean)>=android.permission.WAKE_LOCK
<android.media.MediaPlayer\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.ManageCachePage\:\ void\ onPause()>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.Controller$Download\:\ void\ saveDataUri()>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.providers.settings.SettingsBackupAgent\:\ void\ onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>=android.permission.CHANGE_CONFIGURATION
<com.android.internal.telephony.SubscriptionController\:\ java.util.List\ getActiveSubscriptionInfoList(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.net.wifi.SupplicantStateTracker\:\ void\ access$200(android.net.wifi.SupplicantStateTracker,android.net.wifi.SupplicantState,boolean)>=android.permission.BROADCAST_STICKY
<android.net.wifi.IWifiManager$Stub\:\ boolean\ enableNetwork(int,boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.browser.Preloader$PreloaderSession\:\ void\ <init>=android.permission.GET_ACCOUNTS
<com.android.quicksearchbox.util.JavaNetHttpHelper\:\ java.lang.String\ get(java.lang.String,java.util.Map)>=android.permission.INTERNET
<com.android.settings.Settings$LocalePickerActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.browser.Controller\:\ void\ onPageFinished(com.android.browser.Tab)>=android.permission.WAKE_LOCK
<android.server.BluetoothPanProfileHandler\:\ boolean\ disconnectPanServerDevices()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ setTimeFromNITZString(java.lang.String,long)>=android.permission.WAKE_LOCK
<com.android.contacts.list.PostalAddressPickerFragment\:\ void\ onItemClick(int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wm.WindowManagerService\:\ void\ disableKeyguard(android.os.IBinder,java.lang.String)>=android.permission.DISABLE_KEYGUARD
<android.content.MutableContextWrapper\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.browser.AddBookmarkPage\:\ void\ onTop(com.android.browser.BreadCrumbView,int,java.lang.Object)>=android.permission.GET_ACCOUNTS
<android.media.IRingtonePlayer$Stub\:\ void\ stop(android.os.IBinder)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ int\ getCalculatedPreferredNetworkType(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub\:\ java.lang.String\ getMsisdn()>=android.permission.READ_PHONE_STATE
<com.android.contacts.list.ContactListFilterController\:\ void\ setContactListFilter(com.android.contacts.list.ContactListFilter,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.SystemUIService\:\ void\ onCreate()>=android.permission.BLUETOOTH
<com.android.settings.AccessibilitySettings$SettingsPackageMonitor\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.browser.AddBookmarkPage\:\ boolean\ onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>=android.permission.GET_ACCOUNTS
<com.android.phone.PhoneInterfaceManager\:\ int\ getCdmaEriIconMode(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.browser.BrowserActivity\:\ void\ onSaveInstanceState(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.browser.NavTabScroller$OnLayoutListener\:\ void\ onLayout(int,int,int,int)>=android.permission.GET_ACCOUNTS
<android.os.PowerManager$WakeLock\:\ void\ finalize()>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree\:\ void\ configAudioParameters()>=android.permission.BLUETOOTH
<com.android.server.InputMethodManagerService\:\ void\ <init>=android.permission.WRITE_SETTINGS
<android.net.wifi.WifiManager\:\ java.util.List\ getScanResults()>=android.permission.ACCESS_WIFI_STATE
<com.android.music.IMediaPlaybackService$Stub$Proxy\:\ void\ play()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.DataConnection$DcActivatingState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ void\ updateRemoteDevicePropertiesCache(java.lang.String)>=android.permission.BLUETOOTH
<com.android.camera.ui.IndicatorButton\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<com.android.camera.Camera$4\:\ void\ run()>=android.permission.ACCESS_COARSE_LOCATION
<android.net.IConnectivityManager$Stub\:\ boolean\ getMobileDataEnabled()>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetooth$Stub\:\ boolean\ setPin(java.lang.String,byte[])>=android.permission.BLUETOOTH_ADMIN
<com.android.server.am.ActivityManagerService\:\ boolean\ handleAppCrashLocked(com.android.server.am.ProcessRecord)>=android.permission.WAKE_LOCK
<com.android.server.content.ContentService\:\ void\ setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.WRITE_SYNC_SETTINGS
<com.android.server.WallpaperManagerService$MyPackageMonitor\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.mms.transaction.RetryScheduler\:\ void\ scheduleRetry(android.net.Uri)>=android.permission.WRITE_SMS
<com.android.server.usage.UsageStatsService$BinderService\:\ android.content.pm.ParceledListSlice\ queryConfigurationStats(int,long,long,java.lang.String)>=android.permission.PACKAGE_USAGE_STATS
<android.speech.SpeechRecognizer\:\ void\ handleStopMessage()>=android.permission.RECORD_AUDIO
<android.app.IActivityManager\:\ void\ handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>=android.permission.WAKE_LOCK
<com.android.systemui.ImageWallpaper$DrawableEngine\:\ void\ drawFrameLocked()>=android.permission.SET_WALLPAPER
<com.android.providers.downloads.DownloadReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ topAppWindowChanged(boolean)>=android.permission.VIBRATE
<com.android.contacts.calllog.CallLogAdapter$CallFetcher\:\ void\ fetchCalls()>=android.permission.READ_CALL_LOG
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<android.app.backup.BackupAgentHelper\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.internal.policy.impl.FaceUnlock\:\ void\ handleServiceConnected()>=android.permission.WAKE_LOCK
<com.android.music.IMediaPlaybackService$Stub\:\ void\ next()>=android.permission.WAKE_LOCK
<com.android.server.content.ContentService\:\ boolean\ getSyncAutomatically(android.accounts.Account,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ dial(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiManager\:\ boolean\ addToBlacklist(java.lang.String)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.LocationManagerService$Receiver\:\ void\ access$700(com.android.server.LocationManagerService$Receiver)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaLteUiccRecords\:\ void\ onReady()>=android.permission.WAKE_LOCK
<com.android.server.MountService\:\ void\ format(java.lang.String)>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<com.android.nfc.P2pEventManager\:\ void\ onP2pReceiveComplete(boolean)>=android.permission.VIBRATE
<com.android.exchange.EasAccountService\:\ java.lang.String\ acknowledgeProvisionImpl(com.android.exchange.EasSyncService,java.lang.String,java.lang.String,boolean)>=android.permission.WAKE_LOCK
<com.android.settings.accounts.AccountPreferenceBase\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.vcard.VCardEntry$PhoneData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.DayView\:\ void\ doFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>=android.permission.WRITE_CALENDAR
<android.nfc.tech.Ndef\:\ void\ connect()>=android.permission.NFC
<com.android.development.Connectivity\:\ void\ onRoutedHttpRequest()>=android.permission.CHANGE_NETWORK_STATE
<com.android.internal.telephony.PhoneProxy\:\ void\ sendBurstDtmf(java.lang.String,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.fuelgauge.PowerUsageSummary\:\ void\ addBluetoothUsage(long)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.BlendFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService$AppDeathRecipient\:\ void\ binderDied()>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.PhoneFallbackEventHandler\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ boolean\ handleCallDeflectionIncallSupplementaryService(java.lang.String)>=android.permission.WAKE_LOCK
<android.bluetooth.le.BluetoothLeScanner\:\ void\ startScan(android.bluetooth.le.ScanCallback)>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.UserDictionary\:\ void\ loadDictionaryAsync()>=android.permission.READ_USER_DICTIONARY
<android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl\:\ boolean\ isActiveNetworkMetered(android.net.ConnectivityManager)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.MessageViewFragmentBase$LoadBodyTask\:\ void\ onSuccess(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.display.DisplayManagerService$BinderService\:\ void\ pauseWifiDisplay()>=android.permission.CONFIGURE_WIFI_DISPLAY
<com.android.providers.telephony.MmsSmsProvider\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>=android.permission.READ_SMS
<com.android.emailcommon.service.IAccountService$Stub$Proxy\:\ void\ notifyLoginFailed(long)>=android.permission.VIBRATE
<com.android.gallery3d.app.LoadingListener\:\ void\ onLoadingFinished()>=android.permission.ACCESS_NETWORK_STATE
<android.media.AudioService\:\ void\ sendSimulatedMediaButtonEvent(android.view.KeyEvent,boolean)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.PhotoPage\:\ void\ access$800(com.android.gallery3d.app.PhotoPage,com.android.gallery3d.data.MediaItem)>=android.permission.NFC
<android.app.ActivityManagerNative\:\ void\ broadcastStickyIntent(android.content.Intent,java.lang.String)>=android.permission.BROADCAST_STICKY
<android.telephony.SmsManager\:\ boolean\ enableCellBroadcastRange(int,int)>=android.permission.RECEIVE_SMS
<com.android.emailcommon.service.IEmailService$Stub\:\ android.os.Bundle\ autoDiscover(java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.accounts.AccountManagerService\:\ android.accounts.AuthenticatorDescription[]\ getAuthenticatorTypes(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.net.NetworkStatsService\:\ long\ getNetworkTotalBytes(android.net.NetworkTemplate,long,long)>=android.permission.READ_NETWORK_USAGE_HISTORY
<android.content.SyncManager\:\ boolean\ access$500(android.content.SyncManager)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.editor.LabeledEditorView$3\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.MountService\:\ void\ prepareUserStorage(java.lang.String,int,int,int)>=android.permission.STORAGE_INTERNAL
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy\:\ java.lang.String\ getSubscriberId()>=android.permission.READ_PHONE_STATE
<com.android.internal.widget.RotarySelector\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ handleHide()>=android.permission.WAKE_LOCK
<com.android.gallery3d.data.DownloadCache$DownloadTask\:\ java.io.File\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.INTERNET
<android.bluetooth.IBluetooth$Stub$Proxy\:\ int\ getPanDeviceConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onResetDone(android.os.AsyncResult)>=android.permission.BROADCAST_STICKY
<com.android.contacts.ContactsActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wm.WindowManagerService\:\ void\ notifyAppResumed(android.os.IBinder,boolean,boolean)>=android.permission.MANAGE_APP_TOKENS
<android.filterpacks.imageproc.ResizeFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.EdgeView\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.group.GroupDetailFragment$2\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.bluetooth.pbapclient.PbapClientService$BluetoothPbapClientBinder\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<com.android.settings.inputmethod.SpellCheckersSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.net.sip.SipAudioCall\:\ void\ startAudioInternal()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.GrainFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.app.ActivityManagerNative\:\ boolean\ shutdown(int)>=android.permission.WAKE_LOCK
<com.android.contacts.editor.EventFieldEditorView\:\ void\ onLabelRebuilt()>=android.permission.READ_SYNC_SETTINGS
<android.nfc.Tag\:\ android.nfc.Tag\ rediscover()>=android.permission.NFC
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.CharSequence\ getLongSupportMessageForUser(android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.BluetoothHandsfree$12\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.emailcommon.service.IEmailService$Stub$Proxy\:\ void\ startSync(long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.PhotoPage$1\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.MountService\:\ void\ finishMediaUpdate()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.server.InputMethodManagerService\:\ boolean\ notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.filterpacks.imageproc.ImageStitcher\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.LockSettingsService\:\ void\ userPresent(int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<android.net.wifi.SupplicantStateTracker$DefaultState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ boolean\ processPendingRadioPowerOffAfterDataOff()>=android.permission.WAKE_LOCK
<android.net.nsd.INsdManager$Stub$Proxy\:\ android.os.Messenger\ getMessenger()>=android.permission.INTERNET
<com.android.bluetooth.opp.BluetoothOppTransfer\:\ void\ access$600(com.android.bluetooth.opp.BluetoothOppTransfer)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.tablet.TabletStatusBar\:\ void\ addPanelWindows()>=android.permission.VIBRATE
<android.test.mock.MockContentResolver\:\ void\ removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ int\ getNetworkTypeForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.media.effect.effects.RotateEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ void\ initDevicePreference(com.android.settings.bluetooth.BluetoothDevicePreference)>=android.permission.BLUETOOTH
<android.media.MediaScanner\:\ void\ scanMtpFile(java.lang.String,java.lang.String,int,int)>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.ContactsBinaryDictionary\:\ void\ access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>=android.permission.WRITE_CONTACTS
<com.android.server.backup.Trampoline\:\ void\ setBackupProvisioned(boolean)>=android.permission.BACKUP
<com.android.email.activity.MessageViewFragmentBase$1\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.opp.BluetoothOppTransfer$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothA2dp$Stub$Proxy\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.phone.CallFeaturesSetting\:\ void\ handleSipCallOptionsChange(java.lang.Object)>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$SoundSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetooth$Stub\:\ java.lang.String\ getName()>=android.permission.BLUETOOTH
<com.android.settings.DockSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.content.ContextWrapper\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.wallpaper.galaxy.GalaxyView\:\ void\ surfaceChanged(android.view.SurfaceHolder,int,int,int)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.mms.ui.AttachmentEditor\:\ boolean\ update(com.android.mms.data.WorkingMessage)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary\:\ void\ syncReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.DataConnection\:\ void\ access$1800(com.android.internal.telephony.DataConnection,java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.server.sip.SipWakeLock\:\ void\ reset()>=android.permission.WAKE_LOCK
<com.android.contacts.activities.PeopleActivity$ContactDetailLoaderFragmentListener\:\ void\ onDetailsLoaded(com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.vcard.VCardParser\:\ void\ parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.BluetoothHandsfree$19\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.LatinIME\:\ void\ onPressKey(int)>=android.permission.WRITE_CONTACTS
<android.app.ActivityManagerNative\:\ void\ moveTaskToFront(int,int,android.os.Bundle)>=android.permission.REORDER_TASKS
<com.android.vcard.VCardEntry$NameData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.CallFeaturesSetting\:\ void\ onCreate(android.os.Bundle)>=android.permission.WRITE_SETTINGS
<android.os.storage.IMountService\:\ void\ finishMediaUpdate()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getCurrentFailedPasswordAttempts(int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.gallery3d.app.AlbumPage\:\ void\ onCreate(android.os.Bundle,android.os.Bundle)>=android.permission.VIBRATE
<android.view.VolumePanel\:\ void\ onShowVolumeChanged(int,int)>=android.permission.VIBRATE
<com.android.mms.ui.ConversationList\:\ void\ access$100(com.android.mms.ui.ConversationList)>=android.permission.READ_SMS
<android.net.IConnectivityManager$Stub$Proxy\:\ void\ reportInetCondition(int,int)>=android.permission.BROADCAST_STICKY
<android.filterpacks.imageproc.SepiaFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.hardware.location.ContextHubService\:\ android.hardware.location.NanoAppInstanceInfo\ getNanoAppInstanceInfo(int)>=android.permission.LOCATION_HARDWARE
<com.android.server.SerialService\:\ android.os.ParcelFileDescriptor\ openSerialPort(java.lang.String)>=android.permission.SERIAL_PORT
<com.android.gallery3d.app.AlbumSetPage\:\ void\ access$1600(com.android.gallery3d.app.AlbumSetPage,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.exchange.adapter.ContactsSyncAdapter\:\ boolean\ parse(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ getDataCallList(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME$UIHandler\:\ void\ postUpdateBigramPredictions()>=android.permission.WRITE_CONTACTS
<com.android.internal.policy.impl.AccountUnlockScreen\:\ void\ onTextChanged(java.lang.CharSequence,int,int,int)>=android.permission.WAKE_LOCK
<com.android.contacts.SpecialCharSequenceMgr\:\ boolean\ handleChars(android.content.Context,java.lang.String,boolean,android.widget.EditText)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.RIL\:\ void\ iccIO(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ void\ wifiFirmwareReload(java.lang.String,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ boolean\ startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.net.wifi.WifiStateMachine$SoftApStartingState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.deskclock.SetAlarm\:\ long\ access$100(com.android.deskclock.SetAlarm,com.android.deskclock.Alarm)>=android.permission.WRITE_SETTINGS
<com.android.exchange.ExchangeService\:\ void\ runAwake(long)>=android.permission.WAKE_LOCK
<android.app.IActivityManager\:\ void\ updatePersistentConfiguration(android.content.res.Configuration)>=android.permission.CHANGE_CONFIGURATION
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ <init>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetoothPbap\:\ void\ disconnect()>=android.permission.BLUETOOTH_ADMIN
<android.net.wifi.WifiManager\:\ int\ getWifiApState()>=android.permission.ACCESS_WIFI_STATE
<com.android.emailcommon.service.IEmailService$Stub$Proxy\:\ void\ updateFolderList(long)>=android.permission.READ_SYNC_SETTINGS
<android.speech.tts.TextToSpeech\:\ java.util.Locale\ getLanguage()>=android.permission.BROADCAST_STICKY
<android.filterpacks.imageproc.ImageSlicer\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.bluetooth.IBluetooth$Stub\:\ int\ getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.phone.DTMFTwelveKeyDialer\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ void\ killBackgroundProcesses(java.lang.String,int)>=android.permission.KILL_BACKGROUND_PROCESSES
<com.android.settings.Settings$TetherSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetoothA2dp$Stub\:\ boolean\ allowIncomingConnect(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.browser.WebViewController\:\ void\ closeTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<android.net.IConnectivityManager$Stub\:\ android.net.NetworkInfo\ getActiveNetworkInfo()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler\:\ int\ getWritableEntityIndex()>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.AppBridge$Server\:\ boolean\ switchWithCaptureAnimation(int)>=android.permission.VIBRATE
<com.android.internal.telephony.RIL\:\ void\ <init>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.le.BluetoothLeScanner\:\ void\ stopScan(android.bluetooth.le.ScanCallback)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.internal.policy.impl.KeyguardUpdateMonitor\:\ void\ reportSimUnlocked()>=android.permission.WAKE_LOCK
<com.android.settings.Settings$InputMethodAndSubtypeEnablerActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.browser.Tab$3\:\ void\ access$1600(com.android.browser.Tab$3,boolean,android.os.Message)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.ui.ActionModeHandler\:\ android.content.Intent\ computeSharingIntent(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.NFC
<com.android.deskclock.Alarms\:\ void\ deleteAlarm(android.content.Context,int)>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.PosterizeFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.wm.WindowManagerService\:\ android.content.res.Configuration\ updateOrientationFromAppTokensLocked(android.content.res.Configuration,android.os.IBinder)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ void\ access$7700(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,int)>=android.permission.BROADCAST_STICKY
<com.android.settings.widget.ChartDataUsageView$DataUsageChartListener\:\ void\ onWarningChanged()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.activities.JoinContactActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.widget.CalendarAppWidgetModel\:\ void\ buildFromCursor(android.database.Cursor,java.lang.String)>=android.permission.READ_CALENDAR
<com.android.settings.inputmethod.UserDictionaryList\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.systemui.statusbar.CommandQueue$Callbacks\:\ void\ removeNotification(android.os.IBinder)>=android.permission.VIBRATE
<com.android.internal.policy.impl.KeyguardUpdateMonitor\:\ void\ access$300(com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub\:\ java.util.List\ getScanResults()>=android.permission.ACCESS_WIFI_STATE
<com.android.launcher2.AppsCustomizePagedView\:\ boolean\ beginDraggingWidget(android.view.View)>=android.permission.VIBRATE
<com.android.contacts.activities.ConfirmAddDetailActivity\:\ com.android.contacts.model.EntityDelta\ addEditableRawContact(android.content.Context,com.android.contacts.model.EntityDeltaList)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager$Stub\:\ int\ addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<com.android.camera.VideoCamera\:\ boolean\ access$1200(com.android.camera.VideoCamera)>=android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.ContactsBinaryDictionary\:\ void\ loadDictionaryAsync()>=android.permission.WRITE_CONTACTS
<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter\:\ android.database.Cursor\ getChildrenCursor(android.database.Cursor)>=android.permission.READ_CALENDAR
<com.android.browser.NetworkStateHandler\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<android.server.BluetoothService\:\ boolean\ setPasskey(java.lang.String,int)>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.list.ContactPickerFragment\:\ boolean\ isSyncActive()>=android.permission.READ_SYNC_STATS
<com.android.email.RefreshManager\:\ boolean\ sendPendingMessages(long)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.users.UserSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.os.storage.IMountService\:\ int\ mountVolume(java.lang.String)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<android.content.ContentService\:\ void\ <init>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ void\ dumpKnownDevices(java.io.PrintWriter)>=android.permission.BLUETOOTH
<com.android.server.pm.PackageManagerService\:\ boolean\ deletePackageLI(java.lang.String,boolean,int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothEnabler\:\ void\ resume()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.DownUpDetector\:\ void\ setState(boolean,android.view.MotionEvent)>=android.permission.VIBRATE
<android.bluetooth.IBluetooth\:\ void\ removeServiceRecord(int)>=android.permission.BLUETOOTH
<android.net.TrafficStats\:\ android.net.NetworkStats\ stopDataProfiling(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<com.android.nfc.DeviceHost$DeviceHostListener\:\ void\ onLlcpLinkActivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>=android.permission.BLUETOOTH
<com.android.contacts.editor.PhotoEditorView\:\ void\ setPhotoBitmap(android.graphics.Bitmap)>=android.permission.WRITE_CONTACTS
<com.android.providers.downloads.DownloadNotification\:\ void\ updateActiveNotification(java.util.Collection)>=android.permission.VIBRATE
<com.android.settings.bluetooth.BluetoothDeviceFilter$Filter\:\ boolean\ matches(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getDeviceSvn(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ reportFailedFingerprintAttempt(int)>=android.permission.BIND_DEVICE_ADMIN, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.mms.data.WorkingMessage\:\ android.net.Uri\ readDraftMmsMessage(android.content.Context,com.android.mms.data.Conversation,java.lang.StringBuilder)>=android.permission.WRITE_SMS
<com.android.internal.telephony.PhoneProxy\:\ void\ setBandMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService\:\ void\ reloadQueue()>=android.permission.WAKE_LOCK
<com.android.mms.transaction.RetryScheduler\:\ int\ getRetrieveStatus(long)>=android.permission.READ_SMS
<com.android.server.am.ActivityManagerService\:\ boolean\ moveTaskToDockedStack(int,int,boolean,boolean,android.graphics.Rect,boolean)>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.systemui.recent.RecentsVerticalScrollView$2\:\ void\ onClick(android.view.View)>=android.permission.VIBRATE
<android.net.ConnectivityManager\:\ int\ tether(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.PhoneInterfaceManager\:\ void\ setVisualVoicemailEnabled(java.lang.String,android.telecom.PhoneAccountHandle,boolean)>=android.permission.MODIFY_PHONE_STATE
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<android.filterfw.core.FilterContext\:\ void\ tearDown()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ void\ grantRuntimePermission(java.lang.String,java.lang.String,int)>=android.permission.GRANT_RUNTIME_PERMISSIONS, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.InputMethodManagerService\:\ void\ showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.list.ContactTileView$Listener\:\ void\ onCallNumberDirectly(java.lang.String)>=android.permission.READ_PHONE_STATE
<android.server.BluetoothService\:\ void\ initBluetoothAfterTurningOn()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothNameDialogFragment\:\ void\ updateDeviceName()>=android.permission.BLUETOOTH
<android.nfc.NfcAdapter\:\ android.nfc.INfcAdapterExtras\ getNfcAdapterExtrasInterface()>=android.permission.NFC
<com.android.calendar.alerts.AlertReceiver\:\ android.database.Cursor\ getAttendeesCursor(android.content.Context,long)>=android.permission.READ_CALENDAR
<com.android.gallery3d.ui.CropView$HighlightRectangle\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.ISms$Stub\:\ boolean\ disableCellBroadcastRange(int,int)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ImageSlicer\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.Settings$DeviceAdminSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.settings.AccessibilitySettings$ToggleAccessibilityServicePreferenceFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.setup.AccountSettingsFragment\:\ void\ loadSettings()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ int\ bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,int)>=android.permission.BROADCAST_STICKY, android.permission.SET_DEBUG_APP, android.permission.START_ANY_ACTIVITY, android.permission.START_TASKS_FROM_RECENTS
<android.filterpacks.imageproc.ResizeFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.contacts.group.GroupEditorFragment$3\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.AlphaBlendFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.test.mock.MockContentResolver\:\ java.util.List\ getPeriodicSyncs(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.InCallScreen\:\ void\ onDestroy()>=android.permission.BLUETOOTH
<com.android.contacts.model.EntityDeltaList\:\ void\ buildSplitContactDiff(java.util.ArrayList,int[])>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.ManageCachePage$1\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.ThrottleService$DataRecorder\:\ void\ retrieve()>=android.permission.READ_PHONE_STATE
<com.android.vcard.VCardEntry$AnniversaryData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.PhoneBase\:\ void\ enableEnhancedVoicePrivacy(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl\:\ void\ access$1500(com.android.server.sip.SipSessionGroup$SipSessionImpl,java.util.EventObject)>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerBase\:\ void\ onInstallFragment(android.app.Fragment)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetooth\:\ boolean\ disconnectHeadset(java.lang.String)>=android.permission.BLUETOOTH
<com.android.phone.DataUsageListener\:\ void\ access$100(com.android.phone.DataUsageListener)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.LocalBluetoothProfile\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.voicedialer.VoiceDialerActivity$ErrorRunnable\:\ void\ run()>=android.permission.VIBRATE
<com.android.settings.bluetooth.HeadsetProfile\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ android.net.LinkProperties\ getLinkProperties(int)>=android.permission.ACCESS_NETWORK_STATE
<android.telephony.SmsManager\:\ void\ sendMultimediaMessage(android.content.Context,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>=android.permission.SEND_SMS
<android.server.BluetoothInputProfileHandler\:\ boolean\ disconnectInputDevice(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothDeviceProfileState)>=android.permission.BLUETOOTH
<android.app.backup.IBackupManager$Stub\:\ void\ setBackupEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.policy.impl.KeyguardViewCallback\:\ void\ keyguardDoneDrawing()>=android.permission.WAKE_LOCK
<com.android.systemui.ImageWallpaper$DrawableEngine\:\ void\ onSurfaceChanged(android.view.SurfaceHolder,int,int,int)>=android.permission.SET_WALLPAPER
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ int\ getBatteryUsageHint(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothA2dp\:\ boolean\ disconnectSinkInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ processMotionEvent(int,int,int,long,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)>=android.permission.WRITE_CONTACTS
<com.android.contacts.calllog.CallLogAdapter\:\ void\ bindView(android.view.View,android.database.Cursor,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.LocationManagerService\:\ void\ loadProviders()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler\:\ void\ updateCountdownSummary()>=android.permission.BLUETOOTH
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ disable(int)>=android.permission.VIBRATE
<android.view.IApplicationToken$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.uiautomator.core.InteractionController\:\ void\ unfreezeRotation()>=android.permission.WRITE_SETTINGS
<com.android.server.wm.WindowStateAnimator\:\ android.view.Surface\ createSurfaceLocked()>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME\:\ void\ restartSuggestionsOnWordBeforeCursor(android.view.inputmethod.InputConnection,java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.systemui.SwipeHelper$2\:\ void\ onAnimationEnd(android.animation.Animator)>=android.permission.VIBRATE
<com.android.phone.OtaUtils\:\ void\ otaShowHome()>=android.permission.BLUETOOTH
<android.accounts.AccountManager$8\:\ void\ doWork()>=android.permission.MANAGE_ACCOUNTS
<com.android.calendar.DayFragment\:\ void\ onResume()>=android.permission.READ_CALENDAR
<com.android.calendar.EventInfoFragment\:\ boolean\ saveReminders()>=android.permission.WRITE_CALENDAR
<com.android.inputmethod.latin.ExpandableBinaryDictionary\:\ void\ generateBinaryDictionary()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.ISms$Stub$Proxy\:\ boolean\ updateMessageOnIccEf(int,int,byte[])>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ android.os.ParcelUuid[]\ getUuidFromCache(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ java.util.List\ getTelephonyHistograms()>=android.permission.MODIFY_PHONE_STATE
<android.bluetooth.IBluetooth$Stub\:\ boolean\ cancelDiscovery()>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.activities.PeopleActivity\:\ void\ configureContactListFragmentForRequest()>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothDevice\:\ boolean\ setPasskey(int)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.NsdService$NsdStateMachine$DefaultState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener\:\ void\ onInvalidSelection()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.performance.ThroughputFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.systemui.ImageWallpaper$DrawableEngine\:\ void\ updateWallpaperLocked()>=android.permission.SET_WALLPAPER
<com.android.server.wm.WindowManagerService\:\ void\ thawRotation()>=android.permission.SET_ORIENTATION
<android.net.wifi.IWifiManager$Stub\:\ java.util.List\ getConfiguredNetworks()>=android.permission.ACCESS_WIFI_STATE
<android.net.NetworkStateTracker\:\ boolean\ reconnect()>=android.permission.CHANGE_WIFI_STATE
<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<com.android.bluetooth.sap.SapService$SapBinder\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.MountService\:\ void\ setVolumeUserFlags(java.lang.String,int,int)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.internal.telephony.cat.CommandParamsFactory\:\ boolean\ processPlayTone(com.android.internal.telephony.cat.CommandDetails,java.util.List)>=android.permission.WAKE_LOCK
<com.android.systemui.SearchPanelView$1\:\ void\ run()>=android.permission.VIBRATE
<com.android.settings.fuelgauge.BatteryHistoryDetail\:\ android.view.View\ onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ connectInt(com.android.settings.bluetooth.LocalBluetoothProfile)>=android.permission.BLUETOOTH
<com.android.internal.telephony.SubscriptionController\:\ int\ setDisplayName(java.lang.String,int)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.am.BatteryStatsService\:\ void\ noteFullWifiLockReleasedFromSource(android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS
<com.android.phone.InCallScreen\:\ void\ openDialpadInternal(boolean)>=android.permission.BLUETOOTH
<com.android.email.MessagingController\:\ void\ loadAttachment(long,long,long,long,com.android.email.MessagingListener,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ queryCallWaiting(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree\:\ void\ access$7400(com.android.phone.BluetoothHandsfree)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.ManageCachePage\:\ void\ setContentPane(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.CallNotifier\:\ void\ onCustomRingtoneQueryTimeout(java.lang.String)>=android.permission.WAKE_LOCK
<android.speech.SpeechRecognizer\:\ void\ access$200(android.speech.SpeechRecognizer)>=android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AbstractGalleryActivity\:\ void\ onResume()>=android.permission.RECORD_AUDIO
<com.android.contacts.dialpad.DialpadFragment\:\ void\ afterTextChanged(android.text.Editable)>=android.permission.READ_PHONE_STATE
<com.android.exchange.adapter.ContactsSyncAdapter\:\ void\ <init>=android.permission.READ_CALENDAR
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$DefaultState\:\ boolean\ processMessage(android.os.Message)>=android.permission.GET_TASKS
<com.android.server.LocationManagerService\:\ void\ setTestProviderLocation(java.lang.String,android.location.Location)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.camera.VideoCamera\:\ void\ onShutterButtonClick()>=android.permission.RECORD_AUDIO
<android.server.BluetoothDeviceProperties\:\ java.lang.String\ getProperty(java.lang.String,java.lang.String)>=android.permission.BLUETOOTH
<com.android.email.EmailConnectivityManager\:\ int\ getActiveNetworkType()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.RIL\:\ void\ sendDtmf(char,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ long\ getAwakeTimePlugged()>=android.permission.BATTERY_STATS
<android.server.BluetoothService\:\ boolean\ enable()>=android.permission.BLUETOOTH_ADMIN
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ setApplicationRestrictionsManagingPackage(android.content.ComponentName,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.wifi.WifiServiceImpl\:\ boolean\ isMulticastEnabled()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.cdma.CdmaConnection\:\ boolean\ processPostDialChar(char)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ onStop()>=android.permission.RECEIVE_SMS
<com.android.internal.telephony.PhoneSubInfoProxy\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_PHONE_STATE
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$PlaybackPositionListener\:\ void\ onStartTrackingTouch(android.widget.SeekBar)>=android.permission.WAKE_LOCK
<com.android.server.WifiService\:\ void\ reconnect()>=android.permission.CHANGE_WIFI_STATE
<com.android.settings.DisplaySettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ setHdmiPlugged(boolean)>=android.permission.BROADCAST_STICKY
<android.filterpacks.base.FrameFetch\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ boolean\ requestRouteToHostAddress(int,[byte)>=android.permission.CHANGE_NETWORK_STATE, android.permission.CONNECTIVITY_INTERNAL
<com.android.server.wm.WindowManagerService\:\ void\ startFreezingScreen(int,int)>=android.permission.FREEZE_SCREEN
<com.android.gallery3d.ui.PhotoView\:\ boolean\ slideToPrevPicture()>=android.permission.VIBRATE
<com.android.mms.transaction.MessageStatusService\:\ void\ onHandleIntent(android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.settings.DisplaySettings\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.CHANGE_CONFIGURATION
<android.telephony.SmsManager\:\ java.util.ArrayList\ getAllMessagesFromIcc()>=android.permission.WAKE_LOCK
<com.android.calendar.selectcalendars.SelectCalendarsSyncFragment\:\ void\ onPause()>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.CommandsInterface\:\ void\ writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.nfc.INfcTag\:\ android.nfc.TransceiveResult\ transceive(int,byte[],boolean)>=android.permission.NFC
<com.android.email.activity.EmailActivity\:\ void\ onInstallFragment(android.app.Fragment)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.vpn2.VpnSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.view.IWindowManager$Stub$Proxy\:\ void\ freezeRotation(int)>=android.permission.WRITE_SETTINGS
<android.media.MediaRouter$RouteGroup\:\ void\ requestUpdateVolume(int)>=android.permission.BLUETOOTH
<com.android.server.NetworkManagementService\:\ void\ startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<android.net.ConnectivityManager\:\ boolean\ requestRouteToHost(int,int)>=android.permission.CHANGE_NETWORK_STATE
<com.android.mms.ui.ComposeMessageActivity$11\:\ void\ run()>=android.permission.READ_SMS
<com.android.server.display.DisplayManagerService$BinderService\:\ void\ startWifiDisplayScan()>=android.permission.CONFIGURE_WIFI_DISPLAY
<com.android.settings.inputmethod.InputMethodAndSubtypeUtil\:\ void\ saveInputMethodSubtypeList(com.android.settings.SettingsPreferenceFragment,android.content.ContentResolver,java.util.List,boolean)>=android.permission.WRITE_SETTINGS
<com.android.phone.BluetoothHandsfree$5\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.email.activity.UiUtilities\:\ void\ installFragment(android.app.Fragment)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.DeviceAccountLogin\:\ void\ handleLogin(java.lang.String,java.lang.String,java.lang.String)>=android.permission.GET_ACCOUNTS
<android.server.BluetoothService\:\ void\ updateDeviceServiceChannelCache(java.lang.String)>=android.permission.BLUETOOTH
<com.android.contacts.activities.TransactionSafeActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.DeviceProfilesSettings$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ android.app.IActivityManager$WaitResult\ startActivityAndWait(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>=android.permission.SET_DEBUG_APP
<com.android.common.contacts.DataUsageStatUpdater\:\ boolean\ update(java.util.Collection,java.util.Collection,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneApp\:\ void\ handleQueryTTYModeResponse(android.os.Message)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.browser.AddBookmarkPage\:\ long\ addFolderToCurrent(java.lang.String)>=android.permission.GET_ACCOUNTS
<android.server.BluetoothService\:\ boolean\ removeBondInternal(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardViewCallback\:\ void\ keyguardDone(boolean)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary\:\ boolean\ isValidWord(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.server.sip.SipService$AutoRegistrationProcess\:\ void\ start(com.android.server.sip.SipSessionGroup)>=android.permission.WAKE_LOCK
<com.android.mms.data.Conversation\:\ void\ <init>=android.permission.READ_SMS
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ sendMhlVendorCommand(int,int,int,[byte)>=android.permission.HDMI_CEC
<android.app.Application\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.server.pm.PackageManagerService\:\ void\ deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver2,int,int)>=android.permission.DELETE_PACKAGES, android.permission.GRANT_RUNTIME_PERMISSIONS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.REVOKE_RUNTIME_PERMISSIONS, android.permission.SET_PREFERRED_APPLICATIONS
<com.android.internal.telephony.IccSmsInterfaceManager\:\ boolean\ copyMessageToIccEf(int,byte[],byte[])>=android.permission.WAKE_LOCK
<android.speech.tts.AudioPlaybackQueueItem\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ setCurrentPreferredNetworkType()>=android.permission.WAKE_LOCK
<android.content.ContentResolver\:\ java.util.List\ getCurrentSyncs()>=android.permission.READ_SYNC_STATS
<com.android.internal.telephony.RIL\:\ void\ reportSmsMemoryStatus(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<android.location.LocationManager\:\ void\ _requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.bluetooth.BluetoothNameDialogFragment\:\ void\ <init>=android.permission.BLUETOOTH
<com.android.gallery3d.app.StateManager\:\ void\ switchState(com.android.gallery3d.app.ActivityState,java.lang.Class,android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary\:\ boolean\ isValidWord(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ notifyApnIdUpToCurrent(java.lang.String,int)>=android.permission.BROADCAST_STICKY
<com.android.exchange.adapter.AttachmentLoader\:\ void\ doProgressCallback(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.PhoneProxy\:\ void\ queryAvailableBandMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothEventManager$BondStateChangedHandler\:\ void\ onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.hardware.Camera\:\ void\ native_setup(java.lang.Object)>=android.permission.CAMERA
<android.bluetooth.BluetoothDevice\:\ android.bluetooth.BluetoothGatt\ connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback)>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.AutoCorrection\:\ boolean\ hasAutoCorrectionForConsideredWord(java.util.concurrent.ConcurrentHashMap,com.android.inputmethod.latin.WordComposer,java.util.ArrayList,java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<android.net.sip.ISipService$Stub\:\ boolean\ isOpened(java.lang.String)>=android.permission.USE_SIP
<android.accounts.IAccountManager$Stub$Proxy\:\ java.lang.String\ peekAuthToken(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.contacts.editor.AggregationSuggestionView\:\ boolean\ canEditSuggestedContact()>=android.permission.READ_SYNC_SETTINGS
<com.android.vcard.VCardParser_V40\:\ void\ parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.PhotoSelectionActivity$2\:\ void\ run()>=android.permission.WRITE_CONTACTS
<android.app.IActivityManager\:\ void\ setDebugApp(java.lang.String,boolean,boolean)>=android.permission.WRITE_SETTINGS
<android.nfc.INfcTag\:\ android.nfc.Tag\ rediscover(int)>=android.permission.NFC
<com.android.browser.Tab$2\:\ void\ onPageFinished(android.webkit.WebView,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccSmsInterfaceManager\:\ boolean\ enableCellBroadcast(int)>=android.permission.WAKE_LOCK
<android.speech.RecognitionService$RecognitionServiceBinder\:\ void\ cancel(android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<com.android.server.print.PrintManagerService$PrintManagerImpl\:\ void\ restartPrintJob(android.print.PrintJobId,int,int)>=com.android.printspooler.permission.ACCESS_ALL_PRINT_JOBS
<android.bluetooth.BluetoothSocket\:\ void\ <init>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ int\ dispatchMessage(com.android.internal.telephony.SmsMessageBase)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.tablet.SettingsView\:\ void\ onClickNetwork()>=android.permission.EXPAND_STATUS_BAR
<com.android.settings.Settings$AdvancedWifiSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.MmsThumbnailPresenter\:\ void\ presentAudioThumbnail(com.android.mms.ui.SlideViewInterface,com.android.mms.model.AudioModel)>=android.permission.WAKE_LOCK
<com.android.emailcommon.Device\:\ java.lang.String\ getDeviceIdInternal(android.content.Context)>=android.permission.READ_PHONE_STATE
<com.android.browser.BreadCrumbView\:\ void\ clear()>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.latin.LatinIME\:\ void\ handleBackspaceWhileInBatchEdit(int,android.view.inputmethod.InputConnection)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.SIMRecords\:\ void\ handleFileUpdate(int)>=android.permission.WAKE_LOCK
<com.android.music.IMediaPlaybackService$Stub$Proxy\:\ void\ prev()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ boolean\ onTrySetupData(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.server.am.BatteryStatsService\:\ void\ noteStopVideo(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onSetPolicyDataEnabled(boolean)>=android.permission.BROADCAST_STICKY
<com.android.settings.wifi.WifiSettings\:\ void\ submit(com.android.settings.wifi.WifiConfigController)>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.BluetoothHandsfree$18\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ readCharacteristic(int,java.lang.String,int,int)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_PRIVILEGED
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setUserRestriction(android.content.ComponentName,java.lang.String,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.CommandsInterface\:\ void\ setPreferredNetworkType(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.browser.Controller\:\ boolean\ switchToTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<com.android.nfc.NfcService\:\ void\ onSeMifareAccess(byte[])>=android.permission.BLUETOOTH
<com.android.vcard.VCardParser_V21\:\ void\ parse(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothAdapterStateMachine$PerProcessState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.contacts.activities.PeopleActivity\:\ void\ configureFragments(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.location.CountryDetectorBase\:\ android.location.Country\ detectCountry()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.server.MountService\:\ java.lang.String[]\ getSecureContainerList()>=android.permission.ASEC_ACCESS
<com.android.nfc.NfcService$NfcAdapterExtrasService\:\ android.os.Bundle\ transceive(java.lang.String,byte[])>=android.permission.NFC
<com.android.contacts.list.PhoneNumberListAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ int\ processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ android.net.NetworkStats\ getNetworkStatsDetail()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.settings.bluetooth.HidProfile\:\ int\ getPreferred(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ java.util.List\ getConnectedPanDevices()>=android.permission.BLUETOOTH
<com.android.emailcommon.service.IEmailServiceCallback$Stub\:\ void\ loadAttachmentStatus(long,long,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.LocationManagerService\:\ void\ removeTestProvider(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<android.os.storage.IMountService$Stub$Proxy\:\ void\ setUsbMassStorageEnabled(boolean)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<android.provider.BrowserContract$Settings\:\ void\ setSyncEnabled(android.content.Context,boolean)>=android.permission.GET_ACCOUNTS
<com.android.nfc.NfcService\:\ void\ onRemoteFieldActivated()>=android.permission.BLUETOOTH
<com.android.emailcommon.utility.AttachmentUtilities\:\ void\ saveAttachment(android.content.Context,java.io.InputStream,com.android.emailcommon.provider.EmailContent$Attachment)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.media.effect.effects.StraightenEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.internal.widget.WaveView\:\ void\ onDraw(android.graphics.Canvas)>=android.permission.VIBRATE
<com.android.providers.downloads.DownloadInfo\:\ void\ notifyPauseDueToSize(boolean)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.browser.UiController\:\ void\ closeTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<android.app.INotificationManager$Stub$Proxy\:\ void\ enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[])>=android.permission.VIBRATE
<com.android.server.sip.SipService\:\ void\ close(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.nfc.NfcService$NfcAdapterService\:\ android.nfc.INfcAdapterExtras\ getNfcAdapterExtrasInterface(java.lang.String)>=android.permission.NFC
<com.android.internal.telephony.IccSmsInterfaceManagerProxy\:\ boolean\ enableCellBroadcast(int)>=android.permission.RECEIVE_SMS
<com.android.contacts.list.ContactListFilterController\:\ com.android.contacts.list.ContactListFilterController\ createContactListFilterController(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.base.NullFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.statusbar.StatusBarManagerService\:\ void\ collapsePanels()>=android.permission.EXPAND_STATUS_BAR
<com.android.server.wifi.WifiServiceImpl\:\ void\ clearBlacklist()>=android.permission.CHANGE_WIFI_STATE
<com.android.exchange.AbstractSyncService\:\ android.os.Bundle\ validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.UndoBarView\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<android.location.ILocationManager$Stub\:\ boolean\ addGpsStatusListener(android.location.IGpsStatusListener)>=android.permission.ACCESS_FINE_LOCATION
<android.server.BluetoothDeviceProperties\:\ java.util.Map\ updateCache(java.lang.String)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ boolean\ disable()>=android.permission.BLUETOOTH_ADMIN
<android.telephony.SmsManager\:\ boolean\ deleteMessageFromIcc(int)>=android.permission.WAKE_LOCK
<com.android.exchange.ExchangeService\:\ void\ stopAccountSyncs(long,boolean)>=android.permission.WAKE_LOCK
<android.speech.tts.TextToSpeech\:\ int\ playSilence(long,int,java.util.HashMap)>=android.permission.BROADCAST_STICKY
<com.android.contacts.ContactsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ reportKeyguardDismissed(int)>=android.permission.BIND_DEVICE_ADMIN, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onSetPolicyDataEnabled(boolean)>=android.permission.BROADCAST_STICKY
<com.android.phone.PhoneUtils\:\ void\ hangup(com.android.internal.telephony.Connection)>=android.permission.WAKE_LOCK
<com.android.calendar.agenda.AgendaFragment\:\ void\ eventsChanged()>=android.permission.WRITE_CALENDAR
<android.net.wifi.WifiStateMachine\:\ void\ access$6100(android.net.wifi.WifiStateMachine)>=android.permission.BROADCAST_STICKY
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHandsfree$9\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.phone.CdmaSystemSelectListPreference\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.KeyguardStatusViewManager\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.PushReceiver\:\ long\ findThreadId(android.content.Context,com.google.android.mms.pdu.GenericPdu,int)>=android.permission.READ_SMS
<com.android.server.am.BatteryStatsService\:\ void\ noteStopSensor(int,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.mms.data.Conversation\:\ long\ getOrCreateThreadId(android.content.Context,java.lang.String)>=android.permission.READ_SMS
<com.android.gallery3d.app.Gallery\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.RECORD_AUDIO
<com.android.exchange.EasOutboxService\:\ java.lang.String\ acknowledgeProvision(com.android.exchange.EasSyncService,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$UserDictionarySettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService\:\ void\ sendNewConfiguration()>=android.permission.WAKE_LOCK
<com.android.email.SecurityPolicy\:\ void\ onPasswordExpiring(android.content.Context)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumDataLoader\:\ java.lang.Object\ executeAndWait(java.util.concurrent.Callable)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.wifi.WifiServiceImpl\:\ android.net.wifi.WifiConnectionStatistics\ getConnectionStatistics()>=android.permission.ACCESS_WIFI_STATE, android.permission.READ_WIFI_CREDENTIAL
<android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.email.RefreshManager\:\ boolean\ refreshMessageList(long,long,boolean,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.voicedialer.RecognizerEngine\:\ void\ onRecognitionSuccess(com.android.voicedialer.RecognizerClient)>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.ITelephony\:\ android.os.Bundle\ getCellLocation()>=android.permission.ACCESS_COARSE_LOCATION
<android.app.ActivityManagerNative\:\ void\ killBackgroundProcesses(java.lang.String)>=android.permission.RESTART_PACKAGES
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onVoiceCallStarted()>=android.permission.BROADCAST_STICKY
<android.content.ISyncContext$Stub$Proxy\:\ void\ onFinished(android.content.SyncResult)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ setQueryString(java.lang.String,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ setCdmaSubscription(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.exchange.ExchangeService\:\ boolean\ isMailboxSyncable(com.android.emailcommon.provider.Account,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ onContactUriQueryFinished(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.PhotoPage$2\:\ void\ onPhotoChanged(int,com.android.gallery3d.data.Path)>=android.permission.NFC
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ setRadioPower(boolean)>=android.permission.WAKE_LOCK
<android.net.IThrottleManager$Stub\:\ int\ getThrottle(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.ContrastFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.systemui.statusbar.phone.NavigationBarView\:\ boolean\ onInterceptTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<android.content.pm.IPackageManager$Stub\:\ void\ getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>=android.permission.GET_PACKAGE_SIZE
<com.android.settings.TetherSettings\:\ void\ updateBluetoothState(java.lang.String[],java.lang.String[],java.lang.String[])>=android.permission.BLUETOOTH
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WRITE_CONTACTS
<com.android.server.NetworkTimeUpdateService\:\ void\ systemReady()>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.CallManager\:\ void\ hangupForegroundResumeBackground(com.android.internal.telephony.Call)>=android.permission.WAKE_LOCK
<android.webkit.WebIconDatabaseClassic\:\ void\ removeAllIcons()>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<android.filterpacks.imageproc.DrawRectFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ handleForwardedMessage()>=android.permission.WRITE_SMS
<com.android.inputmethod.latin.UserDictionary\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<android.filterpacks.imageproc.RedEyeFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy\:\ void\ syncMailboxListStatus(long,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.voicemail.VoicemailPlaybackFragment\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.mms.transaction.MessagingNotification$1\:\ void\ run()>=android.permission.WAKE_LOCK
<android.nfc.tech.MifareClassic\:\ void\ setTimeout(int)>=android.permission.NFC
<android.net.wifi.SupplicantStateTracker$HandshakeState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ startDtmf(char)>=android.permission.WAKE_LOCK
<android.nfc.tech.NfcA\:\ void\ setTimeout(int)>=android.permission.NFC
<android.webkit.HTML5VideoView\:\ void\ start()>=android.permission.WAKE_LOCK
<com.android.voicedialer.PhoneTypeChoiceRecognizerEngine\:\ void\ recognize(com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.gsm.GSMPhone\:\ boolean\ handleInCallMmiCommands(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumSetPage\:\ void\ setContentPane(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothAdapter\:\ boolean\ disable()>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.CommandsInterface\:\ void\ getCLIR(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.development.Connectivity\:\ void\ onRoutedRequest(int)>=android.permission.CHANGE_NETWORK_STATE
<android.test.mock.MockContentResolver\:\ android.content.SyncInfo\ getCurrentSync()>=android.permission.READ_SYNC_STATS
<android.provider.Browser\:\ boolean\ canClearHistory(android.content.ContentResolver)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.browser.WebViewController\:\ void\ doUpdateVisitedHistory(com.android.browser.Tab,boolean)>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.DrawRectFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.ManageConferenceUtils\:\ void\ endConferenceConnection(int,com.android.internal.telephony.Connection)>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ onRespondedToInvite(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.BluetoothHandsfree\:\ void\ userWantsAudioOff()>=android.permission.BLUETOOTH
<com.android.server.CertBlacklister\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.server.ThrottleService$MyHandler\:\ void\ onPolicyChanged()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.ConnectivityService\:\ android.net.NetworkCapabilities\ getNetworkCapabilities(android.net.Network)>=android.permission.ACCESS_NETWORK_STATE
<android.server.BluetoothA2dpService\:\ void\ onConnectSinkResult(java.lang.String,boolean)>=android.permission.BLUETOOTH
<com.android.settings.DisplaySettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ boolean\ connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<com.android.providers.calendar.CalendarAlarmManager\:\ void\ runScheduleNextAlarm(boolean,com.android.providers.calendar.CalendarProvider2)>=android.permission.WRITE_CALENDAR
<com.android.contacts.editor.ContactEditorFragment\:\ void\ rebindEditorsForNewContact(com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountWithDataSet)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.pm.PackageManagerService\:\ void\ clearPackagePreferredActivities(java.lang.String)>=android.permission.SET_PREFERRED_APPLICATIONS
<com.android.settings.wifi.AdvancedWifiSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ dispatchBroadcastMessage(android.telephony.SmsCbMessage)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.MessagingNotification\:\ void\ playInConversationNotificationSound(android.content.Context)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask\:\ android.net.Uri\ doInBackground(java.lang.Void[])>=android.permission.READ_SYNC_SETTINGS
<android.view.IWindowManager$Stub$Proxy\:\ void\ disableKeyguard(android.os.IBinder,java.lang.String)>=android.permission.DISABLE_KEYGUARD
<com.android.server.hdmi.HdmiControlService$BinderService\:\ boolean\ getSystemAudioMode()>=android.permission.HDMI_CEC
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ParceledListSlice\ queryIntentActivities(android.content.Intent,java.lang.String,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.net.ConnectivityManager\:\ int\ stopUsingNetworkFeature(int,java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ getCDMASubscription(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.data.Conversation\:\ com.android.mms.data.Conversation\ get(android.content.Context,long,boolean)>=android.permission.READ_SMS
<android.filterpacks.imageproc.ToGrayFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.os.IVibratorService$Stub\:\ void\ vibrate(long,android.os.IBinder)>=android.permission.WAKE_LOCK
<com.android.server.wifi.WifiServiceImpl\:\ void\ enableWifiConnectivityManager(boolean)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.CommandsInterface\:\ void\ queryFacilityLockForApp(java.lang.String,java.lang.String,int,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.nfc.INfcTag$Stub$Proxy\:\ android.nfc.NdefMessage\ ndefRead(int)>=android.permission.NFC
<com.android.contacts.editor.EventFieldEditorView\:\ void\ onFieldChanged(java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<android.app.backup.BackupAgentHelper\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.settings.DevelopmentSettings\:\ void\ onResume()>=android.permission.WRITE_SETTINGS
<com.android.providers.telephony.MmsSmsProvider\:\ int\ delete(android.net.Uri,java.lang.String,java.lang.String[])>=android.permission.WRITE_SMS
<com.android.email.activity.UIControllerOnePane\:\ void\ onBeforeMessageGone()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.net.NetworkStatsService\:\ void\ forceUpdateIfaces()>=android.permission.READ_NETWORK_USAGE_HISTORY
<android.hardware.SerialManager\:\ java.lang.String[]\ getSerialPorts()>=android.permission.SERIAL_PORT
<android.media.effect.effects.NegativeEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.providers.calendar.CalendarReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ boolean\ sendShowPinReqToFrontApp(java.lang.String)>=android.permission.GET_TASKS
<com.android.providers.telephony.SmsProvider\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>=android.permission.RECEIVE_SMS
<com.android.browser.PhoneUi\:\ void\ toggleNavScreen()>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.RIL\:\ void\ hangupConnection(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.provider.Browser\:\ void\ truncateHistory(android.content.ContentResolver)>=android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService\:\ void\ setForcedDisplayScalingMode(int,int)>=android.permission.WRITE_SECURE_SETTINGS
<android.content.IContentService$Stub\:\ void\ setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isMasterVolumeMuted(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.inputmethod.latin.AudioAndHapticFeedbackManager\:\ void\ hapticAndAudioFeedback(int,android.view.View)>=android.permission.VIBRATE
<android.webkit.HTML5VideoViewProxy\:\ void\ enterFullScreenVideo(int,java.lang.String)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.StraightenFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.contacts.list.EmailAddressPickerFragment\:\ void\ onItemClick(int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.camera.ui.InLineSettingKnob$2\:\ boolean\ onTouch(android.view.View,android.view.MotionEvent)>=android.permission.RECORD_AUDIO
<com.android.settings.bluetooth.BluetoothDeviceFilter$NapFilter\:\ boolean\ matches(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.sip.SipService\:\ boolean\ isOpened(java.lang.String,java.lang.String)>=android.permission.USE_SIP
<com.android.calendar.event.AttendeesView\:\ android.view.View\ access$100(com.android.calendar.event.AttendeesView,com.android.calendar.event.EditEventHelper$AttendeeItem)>=android.permission.WRITE_CONTACTS
<com.android.exchange.EasSyncService\:\ boolean\ hasConnectivity()>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ serverConnect(int,java.lang.String,boolean,int)>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$AndroidSpellCheckerSession\:\ android.view.textservice.SuggestionsInfo\ onGetSuggestions(android.view.textservice.TextInfo,java.lang.String,int)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.sip.SipPhone\:\ void\ setTTYMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.filterpacks.base.RetargetFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.bluetooth.le.BluetoothLeScanner\:\ void\ flushPendingScanResults(android.bluetooth.le.ScanCallback)>=android.permission.BLUETOOTH
<com.android.bluetooth.opp.BluetoothOppTransferActivity\:\ void\ access$100(com.android.bluetooth.opp.BluetoothOppTransferActivity)>=android.permission.BLUETOOTH
<android.accounts.AccountManager$13\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.GET_ACCOUNTS
<android.media.IAudioService\:\ void\ setWiredDeviceConnectionState(int,int,java.lang.String)>=android.permission.WAKE_LOCK
<android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder\:\ android.net.Uri\ build()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.BaseCommands\:\ void\ setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>=android.permission.WAKE_LOCK
<com.android.server.MountService\:\ void\ runMaintenance()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<android.filterpacks.imageproc.NegativeFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.mms.transaction.Transaction\:\ void\ ensureRouteToHost(java.lang.String,com.android.mms.transaction.TransactionSettings)>=android.permission.CHANGE_NETWORK_STATE
<android.widget.VideoView\:\ void\ setVideoURI(android.net.Uri,java.util.Map)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.ScrollBarView\:\ boolean\ onTouch(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothDeviceProfileState\:\ void\ handleConnectionOfOtherProfiles(int)>=android.permission.BLUETOOTH
<com.android.server.pm.PackageManagerService\:\ android.content.pm.PackageParser$Package\ scanPackageLI(java.io.File,int,int,long)>=android.permission.WAKE_LOCK
<com.android.bluetooth.map.BluetoothMapService$BluetoothMapBinder\:\ int\ getState()>=android.permission.BLUETOOTH
<android.media.MediaScanner$MyMediaScannerClient\:\ android.net.Uri\ endFile(android.media.MediaScanner$FileEntry,boolean,boolean,boolean,boolean,boolean)>=android.permission.WRITE_SETTINGS
<com.android.commands.pm.Pm\:\ void\ main(java.lang.String[])>=android.permission.WRITE_SETTINGS
<com.android.email.activity.MessageViewFragmentBase$LoadAttachmentsTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.statusbar.IStatusBarService$Stub\:\ void\ collapse()>=android.permission.EXPAND_STATUS_BAR
<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.editor.LabeledEditorView\:\ void\ onLabelRebuilt()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.LocalBluetoothProfile\:\ int\ getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.activities.ConfirmAddDetailActivity\:\ void\ access$800(com.android.contacts.activities.ConfirmAddDetailActivity,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.phone.OtaUtils\:\ void\ onClickOtaActivateNextButton()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothPairingDialog\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.PhotoView$FullPicture\:\ void\ draw(com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)>=android.permission.RECORD_AUDIO
<android.bluetooth.IBluetooth\:\ boolean\ isEnabled()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.Invert\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$28\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.contacts.group.GroupDetailDisplayUtils\:\ void\ bindGroupSourceView(android.content.Context,android.view.View,java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageListFragment\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.music.MediaPlaybackService$5\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.server.MountService\:\ void\ clearPassword()>=android.permission.STORAGE_INTERNAL
<com.google.common.io.Files\:\ byte[]\ getDigest(java.io.File,java.security.MessageDigest)>=android.permission.INTERNET
<com.android.email.SecurityPolicy\:\ boolean\ wipeExpiredAccounts(android.content.Context,com.android.email.Controller)>=android.permission.WAKE_LOCK
<com.android.mms.data.WorkingMessage\:\ void\ deleteDraftSmsMessage(long)>=android.permission.RECEIVE_SMS
<com.android.email.activity.MessageFileView$LoadFilenameTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<android.support.v4.net.ConnectivityManagerCompatJellyBean\:\ boolean\ isActiveNetworkMetered(android.net.ConnectivityManager)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.net.NetworkStatsService\:\ void\ systemReady()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.IccFileHandler\:\ void\ updateEFTransparent(int,byte[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$DeviceInfoSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.launcher2.WallpaperChooserDialogFragment\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.SET_WALLPAPER
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.CharSequence\ getLongSupportMessage(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.PhoneFactory\:\ com.android.internal.telephony.sip.SipPhone\ makeSipPhone(java.lang.String)>=android.permission.CHANGE_CONFIGURATION
<com.android.internal.telephony.sip.SipPhone\:\ void\ notifyServiceStateChangedP(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<android.accounts.ChooseTypeAndAccountActivity\:\ void\ runAddAccountForAuthenticator(java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.SMSDispatcher\:\ void\ dispatchPdus(byte[][])>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccPhoneBookInterfaceManager\:\ java.util.List\ getAdnRecordsInEf(int)>=android.permission.WAKE_LOCK
<com.android.development.Connectivity\:\ void\ access$1500(com.android.development.Connectivity)>=android.permission.WAKE_LOCK
<android.media.AudioService$AudioHandler$1\:\ void\ onCompletion(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.calendar.month.SimpleDayPickerFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_CALENDAR
<com.android.browser.Controller\:\ void\ handleNewIntent(android.content.Intent)>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary\:\ void\ loadDictionary()>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.app.PhotoPage$1\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<com.android.emailcommon.service.IEmailService\:\ void\ stopSync(long)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothHeadset\:\ boolean\ isDisabled()>=android.permission.BLUETOOTH
<android.webkit.HTML5VideoView\:\ void\ prepareDataAndDisplayMode(android.webkit.HTML5VideoViewProxy)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiManager\:\ boolean\ isMulticastEnabled()>=android.permission.ACCESS_WIFI_STATE
<com.android.exchange.adapter.AbstractSyncAdapter\:\ void\ <init>=android.permission.READ_CALENDAR
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ explicitCallTransfer()>=android.permission.WAKE_LOCK
<com.android.music.IMediaPlaybackService\:\ void\ openFile(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.browser.BrowserSettings\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.bluetooth.pbap.BluetoothPbapService\:\ void\ access$1400(com.android.bluetooth.pbap.BluetoothPbapService,java.lang.String)>=android.permission.VIBRATE
<com.android.server.am.BatteryStatsService\:\ void\ noteBleScanStarted(android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS
<com.android.email.Controller$ServiceCallback\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ handleNotifyScreenOn(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>=android.permission.GET_ACCOUNTS
<android.net.ConnectivityManager\:\ java.lang.String[]\ getTetherableWifiRegexs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.camera.VideoCamera\:\ void\ restorePreferences()>=android.permission.RECORD_AUDIO
<android.bluetooth.BluetoothDevice\:\ int\ getBondState()>=android.permission.BLUETOOTH
<com.android.server.audio.AudioService\:\ void\ startBluetoothSco(android.os.IBinder,int)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.settings.Settings$PowerUsageSummaryActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.camera.VideoCamera\:\ void\ switchCamera()>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy\:\ void\ notifyServiceState(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<com.android.contacts.dialpad.DialpadFragment\:\ void\ onPause()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.cdma.CdmaLteUiccRecords\:\ void\ onRecordLoaded()>=android.permission.CHANGE_CONFIGURATION
<com.android.server.MountService\:\ void\ forgetAllVolumes()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ setAlwaysOnVpnPackage(android.content.ComponentName,java.lang.String,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ getDataCallList(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.SlideshowPage$1\:\ boolean\ onTouch(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.tts.TextToSpeechSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.CachedBluetoothDeviceManager\:\ void\ onBtClassChanged(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ android.net.LinkProperties\ getActiveLinkProperties()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.list.ContactPickerFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.MessagingController\:\ int\ searchMailboxImpl(long,com.android.emailcommon.service.SearchParams,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ notifyDataConnection(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.browser.BookmarkUtils$1$1\:\ void\ run()>=android.permission.GET_ACCOUNTS
<android.test.IsolatedContext$MockAccountManager\:\ android.accounts.Account[]\ getAccountsByType(java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.CommandsInterface\:\ void\ sendUSSD(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.webkit.PluginFullScreenHolder$CustomFrameLayout\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.PhotoPage$Model\:\ void\ resume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$TextToSpeechSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ boolean\ focusSearch(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>=android.permission.INTERACT_ACROSS_USERS
<com.android.contacts.list.JoinContactListAdapter\:\ void\ bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ java.lang.String[]\ getTetheredDhcpRanges()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onPollPdp()>=android.permission.WAKE_LOCK
<com.android.bluetooth.pbap.BluetoothPbapActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.os.IPowerManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.net.INetworkPolicyManager$Stub\:\ android.net.NetworkQuotaInfo\ getNetworkQuotaInfo(android.net.NetworkState)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$DisplaySettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<android.filterpacks.text.StringLogger\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.wifi.WifiServiceImpl\:\ void\ initializeMulticastFiltering()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<android.location.ILocationManager$Stub\:\ void\ clearTestProviderStatus(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<android.content.SyncManager$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub\:\ int\ getBondState(java.lang.String)>=android.permission.BLUETOOTH
<com.android.phone.InCallScreen\:\ void\ handlePostOnDialChars(android.os.AsyncResult,char)>=android.permission.BLUETOOTH
<com.android.browser.NavigationBarTablet\:\ void\ onAction(java.lang.String,java.lang.String,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.phone.SipBroadcastReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.USE_SIP
<com.android.internal.telephony.CommandsInterface\:\ void\ setSmscAddress(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.WifiService\:\ android.net.DhcpInfo\ getDhcpInfo()>=android.permission.ACCESS_WIFI_STATE
<android.content.SyncManager$ActiveSyncContext\:\ void\ onServiceConnected(android.content.ComponentName,android.os.IBinder)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.Suggest\:\ void\ initAsynchronously(android.content.Context,java.util.Locale)>=android.permission.WRITE_CONTACTS
<android.speech.SpeechRecognizer\:\ void\ access$000(android.speech.SpeechRecognizer,android.content.Intent)>=android.permission.RECORD_AUDIO
<android.net.wifi.WifiWatchdogStateMachine\:\ boolean\ isWalledGardenConnection()>=android.permission.INTERNET
<com.android.mms.ui.MessageItem\:\ void\ interpretFrom(com.google.android.mms.pdu.EncodedStringValue,android.net.Uri)>=android.permission.READ_SMS
<android.app.NativeActivity\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.server.am.ActivityManagerService\:\ void\ access$200(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>=android.permission.WAKE_LOCK
<android.content.ContentService\:\ boolean\ isSyncPending(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.gallery3d.ui.ActionModeHandler\:\ void\ onDestroyActionMode(android.view.ActionMode)>=android.permission.VIBRATE
<android.view.IWindowManager\:\ void\ setForcedDisplaySize(int,int)>=android.permission.WAKE_LOCK
<com.android.providers.downloads.DownloadNotification\:\ void\ notificationForCompletedDownload(long,java.lang.String,int,int,long)>=android.permission.VIBRATE
<com.android.internal.telephony.RIL\:\ void\ getOperator(android.os.Message)>=android.permission.WAKE_LOCK
<android.app.Activity\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.provider.CalendarContract$Attendees\:\ android.database.Cursor\ query(android.content.ContentResolver,long,java.lang.String[])>=android.permission.READ_CALENDAR
<com.android.server.WifiService\:\ boolean\ removeNetwork(int)>=android.permission.CHANGE_WIFI_STATE
<com.android.exchange.ExchangeService$1$1\:\ void\ call(com.android.emailcommon.service.IEmailServiceCallback)>=android.permission.READ_SYNC_SETTINGS
<com.android.camera.PanoramaActivity\:\ void\ onThumbnailClicked(android.view.View)>=android.permission.VIBRATE
<android.accounts.AccountManagerService\:\ void\ createNoCredentialsPermissionNotification(android.accounts.Account,android.content.Intent)>=android.permission.VIBRATE
<com.android.email.MessagingListener\:\ void\ synchronizeMailboxStarted(long,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.accounts.AddAccountSettings\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.GET_ACCOUNTS
<com.android.email.service.MailService\:\ void\ reschedule(android.app.AlarmManager)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.NotificationMgr\:\ void\ updateNotificationsAtStartup()>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ registerForSuppServiceNotification(android.os.Handler,int,java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.ContactsProvider2\:\ android.os.Bundle\ call(java.lang.String,java.lang.String,android.os.Bundle)>=android.permission.READ_SOCIAL_STREAM
<com.android.internal.telephony.gsm.UsimDataDownloadHandler\:\ void\ handleDataDownload(com.android.internal.telephony.gsm.SmsMessage)>=android.permission.WAKE_LOCK
<com.android.phone.sip.SipSharedPreferences\:\ void\ setSipCallOption(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ removeNotification(android.os.IBinder)>=android.permission.VIBRATE
<com.android.server.pm.PackageManagerService\:\ void\ access$1600(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,boolean,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$3\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.internal.widget.LockPatternView$OnPatternListener\:\ void\ onPatternDetected(java.util.List)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothAdapter\:\ boolean\ cancelDiscovery()>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.internal.policy.impl.KeyguardViewManager\:\ void\ verifyUnlock()>=android.permission.GET_ACCOUNTS
<com.android.phone.sip.SipEditor\:\ void\ access$500(com.android.phone.sip.SipEditor,android.net.sip.SipProfile)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ android.os.ParcelUuid[]\ getUuids()>=android.permission.BLUETOOTH
<com.android.contacts.list.ContactEntryListFragment\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.PhotoDataAdapter$FullImageJob\:\ android.graphics.BitmapRegionDecoder\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ isDiscovering()>=android.permission.BLUETOOTH
<android.filterpacks.text.StringSource\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask\:\ void\ onSuccess(com.android.emailcommon.provider.EmailContent$Message)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$LocationSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.soundrecorder.SoundRecorder\:\ void\ updateTimerView()>=android.permission.WAKE_LOCK
<com.android.bluetooth.sap.SapService$SapBinder\:\ int\ getState()>=android.permission.BLUETOOTH
<com.android.server.WifiService$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.VIBRATE
<com.android.settings.Settings$InputMethodAndLanguageSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.phone.PhoneUtils\:\ void\ mergeCalls(com.android.internal.telephony.CallManager)>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhone\:\ com.android.internal.telephony.Connection\ dial(java.lang.String)>=android.permission.USE_SIP
<com.android.internal.telephony.IccCard\:\ void\ getIccCardStatusDone(android.os.AsyncResult)>=android.permission.WAKE_LOCK
<com.android.email.Controller\:\ void\ deleteSyncedDataSync(long)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ boolean\ isActiveNetworkMetered()>=android.permission.ACCESS_NETWORK_STATE
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser\:\ void\ deleteParser(com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.BluetoothManagerService\:\ boolean\ enableNoAutoConnect()>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.activities.AttachPhotoActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.calllog.DefaultVoicemailNotifier$NameLookupQuery\:\ java.lang.String\ query(java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.contacts.model.AccountTypeManagerImpl\:\ java.util.Map\ findUsableInvitableAccountTypes(android.content.Context)>=android.permission.WRITE_CONTACTS
<com.android.settings.BrightnessPreference\:\ void\ restoreOldState()>=android.permission.WRITE_SETTINGS
<com.android.gallery3d.app.SlideshowDataAdapter$ReloadTask\:\ java.lang.Object\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.editor.StructuredNameEditorView\:\ void\ rebuildFullName(com.android.contacts.model.EntityDelta$ValuesDelta)>=android.permission.WRITE_CONTACTS
<com.google.android.mms.util.PduCache\:\ boolean\ put(java.lang.Object,java.lang.Object)>=android.permission.WRITE_SMS
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ sdpSearch(android.bluetooth.BluetoothDevice,android.os.ParcelUuid)>=android.permission.BLUETOOTH
<com.android.launcher2.PagedViewWithDraggableItems\:\ boolean\ onInterceptTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.contacts.GroupMemberLoader\:\ com.android.contacts.GroupMemberLoader\ constructLoaderForGroupDetailQuery(android.content.Context,long)>=android.permission.READ_SYNC_SETTINGS
<android.webkit.WebIconDatabaseClassic\:\ void\ bulkRequestIconForPageUrl(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase$IconListener)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.gallery3d.app.AlbumSetPage$3\:\ void\ onSingleTapUp(int)>=android.permission.VIBRATE
<com.android.music.MediaPlaybackService$MultiPlayer\:\ void\ stop()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.CropImage$LoadBitmapDataTask\:\ android.graphics.Bitmap\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<android.net.sip.ISipService\:\ boolean\ isOpened(java.lang.String)>=android.permission.USE_SIP
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ void\ refreshProfiles()>=android.permission.BLUETOOTH
<com.android.settings.TetherSettings\:\ void\ onStart()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.MovieActivity$1\:\ void\ startVideo()>=android.permission.WAKE_LOCK
<android.media.effect.effects.ContrastEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.contacts.list.CustomContactListFilterActivity$AccountSet\:\ java.util.ArrayList\ buildDiff()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.tv.TvInputManagerService$BinderService\:\ void\ removeBlockedRating(java.lang.String,int)>=android.permission.MODIFY_PARENTAL_CONTROLS
<android.net.wifi.WifiStateMachine\:\ boolean\ access$16400(android.net.wifi.WifiStateMachine,java.util.ArrayList)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.base.CallbackFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.calendar.event.EditEventFragment\:\ void\ handleEvent(com.android.calendar.CalendarController$EventInfo)>=android.permission.WRITE_CALENDAR
<com.android.settings.LocationSettings\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.BLUETOOTH
<android.hardware.ConsumerIrManager\:\ android.hardware.ConsumerIrManager$CarrierFrequencyRange[]\ getCarrierFrequencies()>=android.permission.TRANSMIT_IR
<com.android.phone.OtaUtils\:\ int\ startNonInteractiveOtasp(android.content.Context)>=android.permission.BLUETOOTH
<com.android.exchange.ExchangeService\:\ void\ reloadFolderList(android.content.Context,long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.MessagingNotification\:\ void\ addMmsNotificationInfos(android.content.Context,java.util.Set)>=android.permission.WRITE_SMS
<com.android.systemui.statusbar.policy.AirplaneModeController$1\:\ void\ run()>=android.permission.WRITE_SETTINGS
<android.view.VolumePanel\:\ void\ onRemoteVolumeChanged(int,int)>=android.permission.VIBRATE
<com.android.exchange.ExchangeService\:\ boolean\ canSyncEmail(android.accounts.Account)>=android.permission.READ_SYNC_SETTINGS
<android.view.IWindowManager\:\ void\ setNewConfiguration(android.content.res.Configuration)>=android.permission.WAKE_LOCK
<com.android.server.MountService\:\ int\ resizeSecureContainer(java.lang.String,int,java.lang.String)>=android.permission.ASEC_CREATE
<android.test.IsolatedContext\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<android.filterpacks.imageproc.PosterizeFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.am.ActivityManagerService\:\ boolean\ removeTask(int)>=android.permission.BROADCAST_STICKY, android.permission.REMOVE_TASKS
<android.app.WallpaperManager\:\ int\ setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean,int)>=android.permission.SET_WALLPAPER
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1\:\ void\ onPressKey(int)>=android.permission.WRITE_CONTACTS
<com.android.email.activity.setup.AccountSetupNames\:\ android.net.Uri\ access$100()>=android.permission.READ_SYNC_SETTINGS
<android.media.MediaPlayer\:\ void\ postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ separate(com.android.internal.telephony.gsm.GsmConnection)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.SimpleImageFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.contacts.util.NotifyingAsyncQueryHandler\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.widget.multiwaveview.GlowPadView\:\ void\ access$300(com.android.internal.widget.multiwaveview.GlowPadView,int,float,float)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ void\ killUid(int,int,java.lang.String)>=android.permission.KILL_UID
<com.android.contacts.list.JoinContactListAdapter\:\ android.net.Uri\ getContactUri(int,android.database.Cursor,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.ExpandableBinaryDictionary\:\ boolean\ hasContentChanged()>=android.permission.WRITE_CONTACTS
<com.android.mms.ui.DeliveryReportActivity\:\ void\ initListAdapter()>=android.permission.RECEIVE_SMS
<com.android.server.am.BroadcastQueue\:\ void\ processNextBroadcast(boolean)>=android.permission.WAKE_LOCK
<com.android.calendar.DayView\:\ void\ sendAccessibilityEventAsNeeded(boolean)>=android.permission.READ_CALENDAR
<com.android.internal.telephony.gsm.SIMRecords\:\ void\ onReady()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.VignetteFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ setRemoteAlias(android.bluetooth.BluetoothDevice,java.lang.String)>=android.permission.BLUETOOTH
<android.media.effect.effects.FlipEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ connectHeadset(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.NetworkManagementService\:\ void\ setMtu(java.lang.String,int)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ setMute(boolean)>=android.permission.WAKE_LOCK
<android.webkit.HTML5VideoViewProxy\:\ void\ setBaseLayer(int)>=android.permission.WAKE_LOCK
<android.accounts.IAccountManager\:\ void\ removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>=android.permission.MANAGE_ACCOUNTS
<com.android.mms.transaction.MessagingNotification\:\ void\ notifySendFailed(android.content.Context,boolean)>=android.permission.VIBRATE
<com.android.internal.widget.LockPatternView\:\ void\ addCellToPattern(com.android.internal.widget.LockPatternView$Cell)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.PhotoView\:\ void\ access$800(com.android.gallery3d.ui.PhotoView)>=android.permission.VIBRATE
<com.android.camera.Camera\:\ void\ onThumbnailClicked(android.view.View)>=android.permission.VIBRATE
<com.android.email.activity.MessageViewFragment\:\ void\ reloadUiFromMessage(com.android.emailcommon.provider.EmailContent$Message,boolean)>=android.permission.READ_PHONE_STATE
<com.android.contacts.model.AccountWithDataSet\:\ boolean\ hasData(android.content.Context)>=android.permission.WRITE_CONTACTS
<android.server.BluetoothAdapterStateMachine\:\ void\ access$5300(android.server.BluetoothAdapterStateMachine)>=android.permission.BLUETOOTH
<com.android.phone.CdmaVoicePrivacyCheckBoxPreference$MyHandler\:\ void\ handleSetVPResponse(android.os.Message)>=android.permission.WAKE_LOCK
<android.media.AudioManager\:\ void\ setParameter(java.lang.String,java.lang.String)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.server.NetworkManagementService\:\ android.net.NetworkStats\ getNetworkStatsSummaryDev()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.mms.data.Conversation\:\ boolean\ sameRecipient(android.net.Uri,android.content.Context)>=android.permission.READ_SMS
<com.android.settings.Settings$DockSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$2\:\ void\ onPostExecute(java.lang.Exception)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.server.am.ActivityManagerService\:\ int\ broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int,int)>=android.permission.WAKE_LOCK
<com.android.bluetooth.pbap.BluetoothPbapVcardManager\:\ java.util.ArrayList\ loadCallHistoryList(int)>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.PhoneBase\:\ void\ notifyServiceStateChangedP(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<android.filterpacks.text.StringSource\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.server.BluetoothService\:\ void\ dumpHeadsetConnectionState(java.io.PrintWriter,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser\:\ void\ addEvent(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations,java.lang.String,boolean)>=android.permission.WRITE_CALENDAR
<android.bluetooth.IBluetooth$Stub\:\ boolean\ setTrust(java.lang.String,boolean)>=android.permission.BLUETOOTH
<android.app.Application\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.browser.Browser\:\ void\ onCreate()>=android.permission.WRITE_CONTACTS
<android.net.IThrottleManager$Stub\:\ java.lang.String\ getHelpUri()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.MessageItem$PduLoadedMessageItemCallback\:\ void\ onItemLoaded(java.lang.Object,java.lang.Throwable)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.numeric.SinWaveFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AlbumSetDataLoader\:\ java.lang.Object\ executeAndWait(java.util.concurrent.Callable)>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.AccountManager\:\ android.accounts.AccountManagerFuture\ getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ verifyUnlock(android.view.WindowManagerPolicy$OnKeyguardExitResult)>=android.permission.WAKE_LOCK
<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder\:\ boolean\ unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.DockService\:\ boolean\ msgTypeDisableBluetooth(int)>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ notifyDataConnectionFailed(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.email.activity.MessageList$1\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.applications.ApplicationsProvider$MyPackageMonitor\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.internal.os.storage.ExternalStorageFormatter\:\ int\ onStartCommand(android.content.Intent,int,int)>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<com.android.mms.widget.MmsWidgetService$MmsFactory\:\ android.database.Cursor\ queryAllConversations()>=android.permission.READ_SMS
<com.android.providers.contacts.ProfileProvider\:\ int\ updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>=android.permission.WRITE_PROFILE
<com.android.mms.ui.ComposeMessageActivity\:\ void\ onStart()>=android.permission.WRITE_SMS
<android.net.IConnectivityManager\:\ boolean\ getMobileDataEnabled()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getVoiceMailNumberForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.phone.sip.SipSettings\:\ void\ access$700(com.android.phone.sip.SipSettings,boolean)>=android.permission.USE_SIP
<com.android.gallery3d.app.AlbumSetPage$1\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.policy.impl.GlobalActions\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_SETTINGS
<android.net.IConnectivityManager\:\ void\ setMobileDataEnabled(boolean)>=android.permission.CHANGE_NETWORK_STATE
<android.media.effect.effects.ColorTemperatureEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.calendar.EventInfoFragment\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_CALENDAR
<android.filterpacks.imageproc.SepiaFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ boolean\ hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.location.LocationBasedCountryDetector\:\ android.location.Country\ detectCountry()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.server.WifiService$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.browser.AddBookmarkPage$SaveBookmarkRunnable\:\ void\ run()>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ setSmscAddress(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.deskclock.AlarmPreference$1\:\ java.lang.String\ doInBackground(android.net.Uri[])>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.CallLogAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.WifiStateMachine$3\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.internal.statusbar.IStatusBarService$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.EXPAND_STATUS_BAR
<com.android.camera.VideoCamera\:\ void\ updateRecordingTime()>=android.permission.RECORD_AUDIO
<com.android.settings.wifi.AdvancedWifiSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.phone.OtaUtils\:\ void\ otaShowProgramFailureDialog()>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.UsimPhoneBookManager\:\ void\ readAdnFileAndWait(int)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$3\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<android.media.effect.effects.VignetteEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ changeIccPin2(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.ui.MessageItem\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.deviceinfo.Memory\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.AdnRecordCache\:\ void\ requestLoadAllAdnLike(int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.BluetoothManagerService\:\ boolean\ enable()>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.list.ContactEntryListFragment\:\ void\ setSearchMode(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.MountService\:\ int\ getEncryptionState()>=android.permission.CRYPT_KEEPER
<com.android.music.MediaPlaybackService$ServiceStub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ boolean\ getMobileDataEnabled()>=android.permission.ACCESS_NETWORK_STATE
<com.android.vcard.VCardParserImpl_V30\:\ void\ parse(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<android.filterfw.core.FieldPort\:\ void\ setFieldFrame(android.filterfw.core.Frame,boolean)>=android.permission.WAKE_LOCK
<com.android.contacts.group.GroupBrowseListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothService\:\ int\ getInputDeviceConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.email.service.MailService\:\ com.android.email.service.MailService$AccountSyncReport\ updateAccountReport(long,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.wifi.p2p.WifiP2pSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ exitEmergencyCallbackMode()>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ initializeMulticastFiltering()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.emailcommon.service.ServiceProxy$ProxyRunnable\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.recent.RecentsVerticalScrollView\:\ void\ onChildDismissed(android.view.View)>=android.permission.VIBRATE
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ onUuidChanged()>=android.permission.BLUETOOTH
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiOff()>=android.permission.UPDATE_DEVICE_STATS
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ callListenerOnCodeInput(com.android.inputmethod.keyboard.Key,int,int,int)>=android.permission.WRITE_CONTACTS
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$MediaPlayerCompletionListener$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.quicksearchbox.google.GoogleSuggestClient\:\ android.net.NetworkInfo\ getActiveNetworkInfo()>=android.permission.ACCESS_NETWORK_STATE
<com.android.providers.downloads.DownloadService\:\ void\ access$800(com.android.providers.downloads.DownloadService,long)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.calendar.alerts.AlertAdapter\:\ void\ updateView(android.content.Context,android.view.View,java.lang.String,java.lang.String,long,long,boolean)>=android.permission.READ_CALENDAR
<com.android.contacts.editor.PhoneticNameEditorView\:\ void\ onLabelRebuilt()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.calllog.CallLogQueryHandler\:\ void\ fetchAllCalls()>=android.permission.READ_CALL_LOG
<com.android.settings.TetherSettings\:\ void\ updateUsbState(java.lang.String[],java.lang.String[],java.lang.String[])>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.AccountAuthenticatorActivity\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.provider.CallLog$Calls\:\ java.lang.String\ getLastOutgoingCall(android.content.Context)>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ queueNextSignalStrengthPoll()>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ void\ sendStickyBroadcastDelayed(android.content.Intent,int)>=android.permission.BROADCAST_STICKY
<com.android.providers.contacts.VoicemailContentProvider\:\ java.lang.String\ getPackageRestrictionClause()>=com.android.voicemail.permission.ADD_VOICEMAIL
<android.app.backup.BackupManager\:\ void\ dataChanged()>=android.permission.RECEIVE_BOOT_COMPLETED
<com.android.server.am.BatteryStatsService\:\ B[]\ getStatistics()>=android.permission.BATTERY_STATS
<com.android.internal.telephony.cdma.RuimFileHandler\:\ void\ updateEFTransparent(int,byte[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.policy.NetworkController\:\ void\ updateWifiState(android.content.Intent)>=android.permission.ACCESS_WIFI_STATE
<com.android.server.audio.AudioService\:\ void\ setMasterMute(boolean,int,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.filterfw.core.FilterFunction\:\ android.filterfw.core.Frame\ execute(android.filterfw.core.KeyValueMap)>=android.permission.RECORD_AUDIO
<android.telephony.SmsManager\:\ boolean\ disableCellBroadcastRange(int,int)>=android.permission.RECEIVE_SMS
<android.media.AsyncPlayer\:\ void\ acquireWakeLock()>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ void\ sendInetConditionBroadcast(android.net.NetworkInfo)>=android.permission.BROADCAST_STICKY
<com.android.server.sip.SipService$SipSessionGroupExt\:\ void\ close()>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ boolean\ isBandwidthControlEnabled()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.deskclock.AlarmReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.filterpacks.text.ToUpperCase\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ void\ toggleRadioOnOffForSubscriber(int)>=android.permission.MODIFY_PHONE_STATE
<android.filterpacks.imageproc.ImageStitcher\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.preference.VolumePreference\:\ void\ onDialogClosed(boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.ISms\:\ void\ sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.server.net.NetworkStatsService$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.calendar.event.EditEventFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_CALENDAR
<android.server.BluetoothEventLoop\:\ void\ onDevicePropertyChanged(java.lang.String,java.lang.String[])>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ void\ onPause()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ boolean\ disconnectInputDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiSettingsForSetupWizardXL\:\ void\ showConfigUi(com.android.settings.wifi.AccessPoint,boolean)>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.DataUsageSummary$5\:\ void\ onClick(android.view.View)>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.IWifiManager\:\ void\ addToBlacklist(java.lang.String)>=android.permission.CHANGE_WIFI_STATE
<com.android.settings.DataUsageSummary$4\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothHeadset\:\ boolean\ cancelConnectThread()>=android.permission.BLUETOOTH
<com.android.server.sip.SipService$AutoRegistrationProcess\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.gallery3d.data.ComboAlbumSet\:\ long\ reload()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.activities.GroupBrowserActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ isEnabled()>=android.permission.BLUETOOTH
<com.android.contacts.activities.GroupEditorActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getVoiceMailAlphaTag(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.internal.telephony.gsm.GsmServiceStateTracker$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.server.wm.WindowManagerService\:\ boolean\ setTokenVisibilityLocked(com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.email.MessagingController\:\ int\ searchMailbox(long,com.android.emailcommon.service.SearchParams,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ handleExitEmergencyCallbackMode(android.os.Message)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.gsm.GSMPhone\:\ boolean\ handlePinMmi(java.lang.String)>=android.permission.WAKE_LOCK
<android.service.quicksettings.TileService\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ getCdmaEriText(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.bluetooth.BluetoothAdapter\:\ boolean\ startLeScan([java.util.UUID,android.bluetooth.BluetoothAdapter$LeScanCallback)>=android.permission.BLUETOOTH
<com.android.providers.contacts.LegacyApiSupport\:\ java.lang.String\ getType(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.vcard.VCardEntry\:\ java.lang.String\ toString()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.NetworkManagementService\:\ void\ startTethering([java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy$2\:\ void\ run()>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine\:\ void\ setCountryCode()>=android.permission.WRITE_SETTINGS
<com.android.server.NetworkManagementService\:\ void\ untetherInterface(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.contacts.group.GroupEditorFragment\:\ com.android.contacts.model.AccountType\ getAccountType()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ boolean\ launchAssistIntent(android.content.Intent,int,java.lang.String,int,android.os.Bundle)>=android.permission.GET_TOP_ACTIVITY_INFO
<com.android.phone.InCallScreen\:\ void\ endInCallScreenSession()>=android.permission.BLUETOOTH
<com.android.browser.DeviceAccountLogin\:\ void\ login(int,com.android.browser.DeviceAccountLogin$AutoLoginCallback)>=android.permission.GET_ACCOUNTS
<com.android.contacts.activities.ContactDetailActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ reportStkServiceIsRunning(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.nfc.P2pLinkManager\:\ void\ enableDisable(boolean,boolean)>=android.permission.BLUETOOTH
<android.location.ILocationManager\:\ java.util.List\ getProviders(android.location.Criteria,boolean)>=android.permission.ACCESS_COARSE_LOCATION
<android.filterpacks.imageproc.NegativeFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.email.Controller\:\ void\ sendMessage(com.android.emailcommon.provider.EmailContent$Message)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.editor.PhoneticNameEditorView\:\ void\ onOptionalFieldVisibilityChange()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MailboxFinder$FindMailboxTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.view.IWindowSession$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.server.MountService\:\ java.lang.String\ getPassword()>=android.permission.STORAGE_INTERNAL
<com.android.emailcommon.service.IEmailService\:\ android.os.Bundle\ autoDiscover(java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IIccPhoneBook\:\ boolean\ updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaDataConnection\:\ void\ onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)>=android.permission.WAKE_LOCK
<android.widget.VideoView\:\ void\ stopPlayback()>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewManager\:\ boolean\ wakeWhenReadyTq(int)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.FlipFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.net.wifi.IWifiManager\:\ int\ getWifiApEnabledState()>=android.permission.ACCESS_WIFI_STATE
<com.android.gallery3d.ui.SlideshowView\:\ boolean\ onTouch(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ onClose()>=android.permission.READ_SYNC_SETTINGS
<com.android.exchange.EasOutboxService\:\ void\ sendCallback(long,java.lang.String,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.NetworkManagementService\:\ void\ setDnsServersForNetwork(int,[java.lang.String,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker\:\ int\ getTriState(android.content.Context)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ onBluetoothStateChanged(int)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ android.net.Network\ getNetworkForType(int)>=android.permission.ACCESS_NETWORK_STATE
<android.service.dreams.DreamService\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.BROADCAST_STICKY
<com.android.gallery3d.app.Gallery\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ void\ sendSubmitPdu(com.android.internal.telephony.cdma.SmsMessage$SubmitPdu,android.app.PendingIntent,android.app.PendingIntent,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setOutgoingCallerIdDisplay(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager$UnlockSim\:\ boolean\ unlockSim(java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.browser.NavTabScroller$OnRemoveListener\:\ void\ onRemovePosition(int)>=android.permission.GET_ACCOUNTS
<com.android.phone.CallLogAsync$AddCallTask\:\ android.net.Uri[]\ doInBackground(com.android.phone.CallLogAsync$AddCallArgs[])>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.usb.UsbAccessoryUriActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.settings.Settings$TetherSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.deskclock.HandleSetAlarm\:\ void\ onCreate(android.os.Bundle)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.UiccPhoneBookController\:\ java.util.List\ getAdnRecordsInEf(int)>=android.permission.READ_CONTACTS
<com.android.providers.contacts.VoicemailPermissions\:\ void\ checkCallerHasFullAccess()>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ void\ recreateLockScreen()>=android.permission.WAKE_LOCK
<com.android.calendar.DayView\:\ boolean\ onKeyUp(int,android.view.KeyEvent)>=android.permission.WRITE_CALENDAR
<android.net.wifi.IWifiManager\:\ void\ reassociate()>=android.permission.CHANGE_WIFI_STATE
<android.content.IContentService\:\ java.util.List\ getPeriodicSyncs(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ finish()>=android.permission.READ_SYNC_SETTINGS
<android.webkit.HTML5Audio\:\ void\ teardown()>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ boolean\ requestAssistContextExtras(int,com.android.internal.os.IResultReceiver,android.os.Bundle,android.os.IBinder,boolean,boolean)>=android.permission.GET_TOP_ACTIVITY_INFO
<com.android.internal.telephony.sip.SipPhone\:\ void\ setVoiceMessageWaiting(int,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ finalize()>=android.permission.WAKE_LOCK
<com.android.settings.Settings$TextToSpeechSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.server.WifiService\:\ void\ clearBlacklist()>=android.permission.CHANGE_WIFI_STATE
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ handleBroadcastSms(android.os.AsyncResult)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityStack\:\ void\ startPausingLocked(boolean,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ dispatchPdus(byte[][])>=android.permission.WAKE_LOCK
<com.android.internal.telephony.UiccPhoneBookController\:\ boolean\ updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiMulticastDisabledFromSource(android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS
<com.android.server.NetworkManagementService\:\ void\ setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.server.TelephonyRegistry\:\ void\ notifyOtaspChanged(int)>=android.permission.MODIFY_PHONE_STATE
<com.android.settings.Settings$AccountSyncSettingsInAddAccountActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.contacts.detail.ContactDetailFragment\:\ void\ bindData()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.detail.ContactDetailFragment$AddToMyContactsQuickFix\:\ void\ execute()>=android.permission.READ_SYNC_SETTINGS
<android.net.IThrottleManager\:\ java.lang.String\ getHelpUri()>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetooth$Stub\:\ boolean\ startDiscovery()>=android.permission.BLUETOOTH_ADMIN
<com.android.mms.ui.ComposeMessageActivity$8\:\ void\ onTextChanged(java.lang.CharSequence,int,int,int)>=android.permission.WRITE_SMS
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ hangupAllConnections(com.android.internal.telephony.cdma.CdmaCall)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ void\ registerObserver(android.net.INetworkManagementEventObserver)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.settings.Settings$VpnSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.BitmapSource\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState\:\ boolean\ turnOnUpstreamMobileConnection(int)>=android.permission.BLUETOOTH
<com.android.browser.Bookmarks$1\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.GET_ACCOUNTS
<android.filterpacks.base.RetargetFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ImageStitcher\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.camera.ui.IndicatorControl\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<com.android.phone.InCallScreen\:\ void\ connectBluetoothAudio()>=android.permission.BLUETOOTH
<com.android.server.wm.InputMonitor\:\ int\ interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>=android.permission.WAKE_LOCK
<com.android.quicksearchbox.QueryTask\:\ void\ run()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.model.AccountTypeManagerImpl$FindInvitablesTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WRITE_CONTACTS
<com.android.browser.PreloadRequestReceiver\:\ boolean\ isPreloadEnabledOnCurrentNetwork(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.WirelessSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.filterfw.core.Filter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.email.service.EasAuthenticatorService$EasAuthenticator\:\ android.os.Bundle\ addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.internal.telephony.CommandsInterface\:\ void\ dial(java.lang.String,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.server.search.SearchManagerService$MyPackageMonitor\:\ void\ onPackageRemoved(java.lang.String,int)>=android.permission.WRITE_SETTINGS
<android.location.ILocationManager\:\ void\ clearTestProviderEnabled(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<android.media.AudioService\:\ void\ access$6200(android.media.AudioService,android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiSettingsForSetupWizardXL\:\ void\ onClick(android.view.View)>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.EnableFdnScreen\:\ void\ access$300(com.android.phone.EnableFdnScreen)>=android.permission.WAKE_LOCK
<com.android.contacts.activities.AttachPhotoActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.quicksearchbox.google.AbstractGoogleSource\:\ com.android.quicksearchbox.SourceResult\ getSuggestions(java.lang.String,int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ComposeMessageActivity\:\ void\ access$5000(com.android.mms.ui.ComposeMessageActivity)>=android.permission.WRITE_SMS
<com.android.server.am.ActivityStack\:\ void\ scheduleIdleLocked()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onActionIntentReconnectAlarm(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.internal.policy.impl.PhoneFallbackEventHandler\:\ void\ handleMediaKeyEvent(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.util.List\ getCrossProfileWidgetProviders(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ActivityInfo\ getActivityInfo(android.content.ComponentName,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.filterpacks.imageproc.AlphaBlendFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.content.SyncManager$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.PhoneBase\:\ void\ setPreferredNetworkType(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.exchange.ContactsSyncAdapterService\:\ void\ performSync(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.Controller$15\:\ void\ broadcastCallback(com.android.email.Controller$ServiceCallbackWrapper)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ deactivateDataCall(int,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.media.MediaScannerClient\:\ void\ scanFile(java.lang.String,long,long,boolean,boolean)>=android.permission.WRITE_SETTINGS
<android.location.ILocationManager$Stub$Proxy\:\ void\ setTestProviderLocation(java.lang.String,android.location.Location)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.server.net.NetworkPolicyManagerService\:\ boolean\ getRestrictBackground()>=android.permission.MANAGE_NETWORK_POLICY
<com.android.gallery3d.app.PhotoPage\:\ void\ onCommitDeleteImage()>=android.permission.VIBRATE
<com.android.mms.transaction.SendTransaction\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.DetailsAddressResolver$AddressLookupJob\:\ java.lang.Object\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.list.ContactEntryListFragment\:\ void\ prepareEmptyView()>=android.permission.READ_SYNC_STATS
<com.android.bluetooth.opp.BluetoothOppNotification\:\ void\ access$500(com.android.bluetooth.opp.BluetoothOppNotification)>=android.permission.VIBRATE
<android.nfc.INfcAdapter\:\ android.nfc.INfcAdapterExtras\ getNfcAdapterExtrasInterface(java.lang.String)>=android.permission.NFC
<com.android.server.am.ActivityManagerService\:\ void\ skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub$Proxy\:\ java.util.List\ getConnectedHealthDevices()>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothPan\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothDeviceProfileState\:\ boolean\ access$6700(android.bluetooth.BluetoothDeviceProfileState,int,boolean)>=android.permission.BLUETOOTH
<com.android.providers.contacts.VoicemailContentProvider\:\ void\ checkPackagePermission(com.android.providers.contacts.VoicemailContentProvider$UriData)>=com.android.voicemail.permission.ADD_VOICEMAIL
<android.server.BluetoothService\:\ boolean\ changeApplicationBluetoothState(boolean,android.bluetooth.IBluetoothStateChangeCallback,android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.HidProfile\:\ boolean\ isPreferred(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.calllog.IntentProvider\:\ android.content.Intent\ getIntent(android.content.Context)>=android.permission.READ_PHONE_STATE
<android.filterpacks.imageproc.FisheyeFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.accounts.AccountManager\:\ android.accounts.AccountManagerFuture\ hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.server.ConnectivityService\:\ android.net.NetworkRequest\ pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>=android.permission.ACCESS_NETWORK_STATE, android.permission.CHANGE_NETWORK_STATE, android.permission.CONNECTIVITY_INTERNAL, android.permission.CONNECTIVITY_USE_RESTRICTED_NETWORKS
<android.filterpacks.videosink.MediaEncoderFilter\:\ void\ process(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.wm.WindowManagerService\:\ int\ addWindow(com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>=android.permission.SYSTEM_ALERT_WINDOW
<com.android.mms.ui.DeliveryReportActivity\:\ java.util.List\ getMmsReportRequests()>=android.permission.READ_SMS
<com.android.vcard.VCardEntry\:\ boolean\ isIgnorable()>=android.permission.READ_SYNC_SETTINGS
<com.android.music.MediaPlaybackService$MultiPlayer\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.server.TelephonyRegistry\:\ void\ broadcastServiceStateChanged(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<com.android.server.ThrottleService$DataRecorder\:\ void\ addData(long,long)>=android.permission.READ_PHONE_STATE
<com.android.server.am.BroadcastQueue\:\ void\ skipPendingBroadcastLocked(int)>=android.permission.WAKE_LOCK
<com.android.settings.DataUsageSummary$10\:\ void\ onLoadFinished(android.content.Loader,com.android.settings.net.ChartData)>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary\:\ void\ startDictionaryLoadingTaskLocked()>=android.permission.WRITE_CONTACTS
<android.location.ILocationManager$Stub$Proxy\:\ void\ addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>=android.permission.ACCESS_MOCK_LOCATION
<android.net.wifi.IWifiManager$Stub$Proxy\:\ int\ getFrequencyBand()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ showGlobalActionsDialog()>=android.permission.WAKE_LOCK
<android.server.BluetoothAdapterStateMachine$PerProcessState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.email.activity.MessageViewFragment\:\ void\ onPostLoadBody()>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.provider.BrowserProvider2\:\ int\ deleteBookmarks(java.lang.String,java.lang.String[],boolean)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.server.am.BroadcastQueue\:\ void\ skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>=android.permission.WAKE_LOCK
<com.android.server.audio.AudioService\:\ void\ setMicrophoneMute(boolean,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MODIFY_AUDIO_SETTINGS
<android.net.wifi.IWifiManager\:\ int\ getWifiEnabledState()>=android.permission.ACCESS_WIFI_STATE
<com.android.email.GroupMessagingListener\:\ void\ checkMailStarted(android.content.Context,long,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneUtils\:\ void\ restoreNoiseSuppression(android.content.Context)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.camera.ActivityBase$MyAppBridge\:\ void\ onPreviewTextureCopied()>=android.permission.RECORD_AUDIO
<android.net.wifi.WifiStateMachine$DisconnectingState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BROADCAST_STICKY
<com.android.settings.Settings$LocalePickerActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.mms.transaction.SmsReceiverService\:\ android.net.Uri\ insertMessage(android.content.Context,android.telephony.SmsMessage[],int,java.lang.String)>=android.permission.RECEIVE_SMS
<com.android.internal.telephony.SubscriptionController\:\ int\ setDataRoaming(int,int)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.power.PowerManagerService$BinderService\:\ void\ powerHint(int,int)>=android.permission.DEVICE_POWER
<com.android.contacts.widget.PinnedHeaderListAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.BluetoothAtPhonebook$2\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.internal.os.storage.ExternalStorageFormatter\:\ void\ onCancel(android.content.DialogInterface)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.contacts.GroupMemberLoader\:\ android.net.Uri\ createUri()>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.BluetoothHandsfree$30\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.sip.SipService$AutoRegistrationProcess\:\ void\ onResponse(boolean)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$SecuritySettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.calendar.alerts.AlertActivity\:\ void\ onClick(android.view.View)>=android.permission.WRITE_CALENDAR
<com.android.email.activity.MessageViewFragmentBase$LoadBodyTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<android.test.mock.MockContentResolver\:\ void\ setMasterSyncAutomatically(boolean)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState\:\ void\ scoClosed()>=android.permission.BLUETOOTH
<android.net.DhcpStateMachine$DefaultState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.email.activity.setup.AccountSetupIncoming\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_PHONE_STATE
<android.filterpacks.imageproc.ImageEncoder\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.NsdService\:\ com.android.server.NsdService\ create(android.content.Context)>=android.permission.WRITE_SETTINGS
<com.android.browser.Controller\:\ com.android.browser.Tab\ openTab(java.lang.String,com.android.browser.Tab,boolean,boolean)>=android.permission.GET_ACCOUNTS
<com.android.settings.wifi.p2p.WifiP2pSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$3\:\ java.lang.Exception\ doInBackground(java.lang.Void[])>=android.permission.WAKE_LOCK
<com.android.calendar.SearchActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.WRITE_CALENDAR
<com.android.server.backup.Trampoline\:\ void\ fullRestore(android.os.ParcelFileDescriptor)>=android.permission.BACKUP
<com.android.calendar.event.EditEventView\:\ void\ setViewStates(int)>=android.permission.READ_CALENDAR
<android.filterpacks.base.ObjectSource\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.server.BluetoothService\:\ boolean\ disable()>=android.permission.BLUETOOTH_ADMIN
<com.android.phone.BluetoothHandsfree$4\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ boolean\ enableNoAutoConnect()>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ setRadioPower(boolean)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub$Proxy\:\ boolean\ isActiveNetworkMetered()>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.InCallScreen\:\ void\ access$1100(com.android.phone.InCallScreen)>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ supplyIccPin2ForApp(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.app.ResolverActivity\:\ void\ onStop()>=android.permission.WAKE_LOCK
<com.android.server.backup.Trampoline\:\ java.lang.String\ getDataManagementLabel(java.lang.String)>=android.permission.BACKUP
<com.android.email.activity.UIControllerTwoPane$RefreshTask\:\ void\ onSuccess(java.lang.Boolean)>=android.permission.READ_SYNC_SETTINGS
<android.location.LocationManager\:\ android.location.LocationProvider\ getProvider(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.email.activity.UIControllerTwoPane\:\ void\ onAccountSelected(long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.AutoCorrection\:\ java.lang.CharSequence\ computeAutoCorrectionWord(java.util.concurrent.ConcurrentHashMap,com.android.inputmethod.latin.WordComposer,java.util.ArrayList,java.lang.CharSequence,float,java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.mms.ui.ComposeMessageActivity\:\ void\ access$2700(com.android.mms.ui.ComposeMessageActivity,android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.widget.SettingsAppWidgetProvider\:\ void\ checkObserver(android.content.Context)>=android.permission.WRITE_SETTINGS
<com.android.mms.transaction.RetrieveTransaction\:\ void\ notifyObservers()>=android.permission.BLUETOOTH
<com.android.server.pm.PackageManagerService\:\ void\ verifyPendingInstall(int,int)>=android.permission.GRANT_RUNTIME_PERMISSIONS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.PACKAGE_VERIFICATION_AGENT, android.permission.REVOKE_RUNTIME_PERMISSIONS, android.permission.SET_PREFERRED_APPLICATIONS
<com.android.bluetooth.pbapclient.PbapClientService$BluetoothPbapClientBinder\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.TextServicesManagerService\:\ void\ setSpellCheckerEnabled(boolean)>=android.permission.WRITE_SECURE_SETTINGS
<com.android.email.activity.MoveMessageToDialog$Callback\:\ void\ onMoveToMailboxSelected(long,long[])>=android.permission.ACCESS_NETWORK_STATE
<android.os.IPowerManager$Stub\:\ void\ acquireWakeLock(int,android.os.IBinder,java.lang.String,android.os.WorkSource)>=android.permission.WAKE_LOCK
<com.android.server.NsdService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WRITE_SETTINGS
<com.android.nfc.handover.BluetoothOppHandover\:\ void\ start()>=android.permission.BLUETOOTH
<com.android.phone.OtaUtils\:\ void\ otaPerformActivation()>=android.permission.BLUETOOTH
<android.os.IPowerManager\:\ void\ setStayOnSetting(int)>=android.permission.WRITE_SETTINGS
<com.android.browser.SnapshotTab\:\ void\ restoreState(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.email.Controller$ControllerService$1\:\ void\ loadAttachment(long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.inputmethod.InputMethodAndSubtypeUtil\:\ void\ putSelectedInputMethodSubtype(android.content.ContentResolver,int)>=android.permission.WRITE_SETTINGS
<com.android.server.NotificationManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.VIBRATE
<android.net.IConnectivityManager$Stub\:\ java.lang.String[]\ getTetheringErroredIfaces()>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.ui.PhotoView\:\ void\ access$1600(com.android.gallery3d.ui.PhotoView,int)>=android.permission.VIBRATE
<android.server.BluetoothService\:\ boolean\ setRemoteOutOfBandData(java.lang.String)>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ notifyDataConnection(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.server.NetworkManagementService\:\ void\ disableNat(java.lang.String,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.contacts.activities.JoinContactActivity\:\ boolean\ onQueryTextChange(java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<android.net.IThrottleManager$Stub\:\ long\ getCliffThreshold(java.lang.String,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ int\ getRemoteClass(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.net.wifi.WifiStateMachine\:\ void\ setFrequencyBand()>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ java.lang.String\ getAddress()>=android.permission.BLUETOOTH
<android.app.Activity\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.mms.ui.ComposeMessageActivity\:\ void\ access$5700(com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ getCrossProfileContactsSearchDisabledForUser(int)>=android.permission.INTERACT_ACROSS_USERS
<android.webkit.HTML5VideoViewProxy\:\ void\ pause()>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService\:\ com.android.inputmethod.latin.spellcheck.DictAndProximity\ createDictAndProximity(java.util.Locale)>=android.permission.WRITE_CONTACTS
<com.android.phone.MobileNetworkSettings$MyHandler\:\ void\ resetNetworkModeToDefault()>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ android.telephony.IccOpenLogicalChannelResponse\ iccOpenLogicalChannel(int,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.inputmethod.keyboard.KeyboardSwitcher\:\ void\ onLongPressTimeout(int)>=android.permission.VIBRATE
<com.android.phone.EmergencyCallHelper\:\ void\ onServiceStateChanged(android.os.Message)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityRecord$Token\:\ void\ windowsVisible()>=android.permission.WAKE_LOCK
<android.app.ContextImpl$ApplicationContentResolver\:\ android.content.SyncInfo\ getCurrentSync()>=android.permission.READ_SYNC_STATS
<com.android.exchange.adapter.CalendarSyncAdapter\:\ boolean\ parse(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<com.android.launcher2.PagedViewWithDraggableItems\:\ void\ determineDraggingStart(android.view.MotionEvent)>=android.permission.VIBRATE
<android.view.accessibility.IAccessibilityManager$Stub\:\ void\ unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>=android.permission.WRITE_SETTINGS
<com.android.nfc.NfcService$TagService\:\ int\ connect(int,int)>=android.permission.NFC
<com.android.providers.downloads.DownloadProvider\:\ android.os.ParcelFileDescriptor\ openFile(android.net.Uri,java.lang.String)>=android.permission.INTERNET
<com.android.settings.inputmethod.UserDictionaryAddWordActivity\:\ void\ onClickConfirm(android.view.View)>=android.permission.WRITE_USER_DICTIONARY
<com.android.providers.contacts.VoicemailTable$Delegate\:\ android.net.Uri\ insert(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.server.am.ActivityManagerService\:\ android.graphics.Bitmap\ getTaskDescriptionIcon(java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.Settings$DockSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.mms.widget.MmsWidgetService$MmsFactory\:\ void\ onDataSetChanged()>=android.permission.READ_SMS
<com.android.email.activity.setup.AccountSetupNames\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_PHONE_STATE
<com.android.server.LockSettingsService\:\ boolean\ getBoolean(java.lang.String,boolean,int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE, android.permission.READ_CONTACTS
<com.android.gallery3d.app.MoviePlayer$8\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WAKE_LOCK
<com.android.server.content.ContentService\:\ void\ registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.activities.PeopleActivity\:\ void\ access$200(com.android.contacts.activities.PeopleActivity,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneApp\:\ void\ access$1200(com.android.phone.PhoneApp,android.content.Intent)>=android.permission.VIBRATE
<com.android.settings.Settings$VpnSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<android.content.ContentService\:\ java.util.List\ getPeriodicSyncs(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.BluetoothAtPhonebook$3\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.READ_CALL_LOG
<com.android.browser.UI\:\ void\ setUseQuickControls(boolean)>=android.permission.GET_ACCOUNTS
<com.android.server.content.ContentService\:\ boolean\ isSyncActive(android.accounts.Account,java.lang.String,android.content.ComponentName)>=android.permission.READ_SYNC_STATS
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager\:\ boolean\ updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>=android.permission.WAKE_LOCK
<android.inputmethodservice.KeyboardView\:\ boolean\ access$400(android.inputmethodservice.KeyboardView,android.view.MotionEvent)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onEnableNewApn()>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ setAndBroadcastNetworkSetTime(long)>=android.permission.BROADCAST_STICKY
<android.filterpacks.videosink.MediaEncoderFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.exchange.ExchangeService$1\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread\:\ void\ preloadPhotosInBackground()>=android.permission.WRITE_CONTACTS
<com.android.internal.widget.multiwaveview.MultiWaveView\:\ void\ handleCancel(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.phone.BluetoothHandsfree$30\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.browser.Preloader\:\ void\ cancelSearchBoxPreload(java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.browser.Controller\:\ void\ onBackKey()>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ fetchRemoteUuids(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.editor.ContactEditorFragment\:\ void\ access$2100(com.android.contacts.editor.ContactEditorFragment)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.tv.TvInputManagerService$ServiceCallback\:\ void\ removeHardwareInput(java.lang.String)>=android.permission.TV_INPUT_HARDWARE
<android.server.BluetoothService\:\ void\ setBluetoothTethering(boolean)>=android.permission.BLUETOOTH
<com.android.mms.data.WorkingMessage$4\:\ void\ run()>=android.permission.RECEIVE_SMS
<android.view.IWindowSession\:\ boolean\ performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ broadcastStickyIntent(android.content.Intent,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.contacts.dialpad.DialpadFragment\:\ void\ onResume()>=android.permission.ACCESS_COARSE_LOCATION
<android.media.Ringtone\:\ void\ stop()>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ void\ reportInetCondition(int,int)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ switchWaitingOrHoldingAndActive()>=android.permission.WAKE_LOCK
<com.android.settings.deviceinfo.Memory\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.BLUETOOTH
<com.android.settings.Settings$AndroidBeamSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.ServiceStateTracker\:\ void\ updateSpnDisplay()>=android.permission.BROADCAST_STICKY
<com.android.server.wallpaper.WallpaperManagerService\:\ void\ setDisplayPadding(android.graphics.Rect,java.lang.String)>=android.permission.SET_WALLPAPER_HINTS
<com.android.gallery3d.app.MovieActivity$1\:\ void\ pauseVideo()>=android.permission.WAKE_LOCK
<android.nfc.INfcTag\:\ int[]\ getTechList(int)>=android.permission.NFC
<com.android.server.NetworkManagementService\:\ void\ setUidMeteredNetworkBlacklist(int,boolean)>=android.permission.CONNECTIVITY_INTERNAL
<android.net.wifi.IWifiManager\:\ boolean\ setWifiEnabled(boolean)>=android.permission.CHANGE_WIFI_STATE
<android.server.BluetoothEventLoop\:\ void\ onCreatePairedDeviceResult(java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ int\ getCdmaEriIconIndex(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.contacts.editor.SplitContactConfirmationDialogFragment$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.sip.SipEditor\:\ void\ unregisterOldPrimaryAccount()>=android.permission.WAKE_LOCK
<android.net.sip.ISipService$Stub$Proxy\:\ boolean\ isOpened(java.lang.String)>=android.permission.USE_SIP
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ int\ getBondState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ java.util.List\ getHealthDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<android.net.ConnectivityManager\:\ java.lang.String[]\ getTetheringErroredIfaces()>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.service.MailService$6\:\ void\ runInternal(java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.providers.downloads.DownloadInfo\:\ android.net.Uri\ getMyDownloadsUri()>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.launcher2.Workspace\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.calendar.agenda.AgendaByDayAdapter\:\ void\ <init>=android.permission.READ_CALENDAR
<com.android.server.usage.UsageStatsService$BinderService\:\ android.content.pm.ParceledListSlice\ queryUsageStats(int,long,long,java.lang.String)>=android.permission.PACKAGE_USAGE_STATS
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onVoiceCallStarted()>=android.permission.BROADCAST_STICKY
<com.google.android.mms.util.AbstractCache\:\ boolean\ put(java.lang.Object,java.lang.Object)>=android.permission.WRITE_SMS
<android.filterpacks.text.ToUpperCase\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.backup.Trampoline\:\ long\ getAvailableRestoreToken(java.lang.String)>=android.permission.BACKUP
<com.android.server.VibratorService\:\ void\ doCancelVibrateLocked()>=android.permission.VIBRATE
<android.bluetooth.IBluetooth\:\ boolean\ isTetheringOn()>=android.permission.BLUETOOTH
<com.android.server.VibratorService\:\ void\ updateInputDeviceVibrators()>=android.permission.WAKE_LOCK
<com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker\:\ void\ onActualStateChange(android.content.Context,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ int\ getLastTetherError(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ApplicationInfo\ getApplicationInfo(java.lang.String,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.hardware.fingerprint.FingerprintManager\:\ void\ authenticate(android.hardware.fingerprint.FingerprintManager$CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager$AuthenticationCallback,android.os.Handler)>=android.permission.USE_FINGERPRINT
<com.android.internal.telephony.CallTracker\:\ void\ handleRadioAvailable()>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ selectFirstFoundContactAfterDelay()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.editor.TextFieldsEditorView$2\:\ void\ afterTextChanged(android.text.Editable)>=android.permission.READ_SYNC_SETTINGS
<android.content.IContentService$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.group.GroupEditorFragment\:\ void\ access$600(com.android.contacts.group.GroupEditorFragment,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.DataUsageSummary\:\ void\ access$500(com.android.settings.DataUsageSummary,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.location.ComprehensiveCountryDetector\:\ void\ addPhoneStateListener()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.Phone\:\ void\ invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$ProvisionDiscoveryState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.WifiService\:\ java.lang.String\ getConfigFile()>=android.permission.ACCESS_WIFI_STATE
<com.android.vpndialogs.ManageDialog\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.AlbumSetPage\:\ void\ onSelectionModeChange(int)>=android.permission.WAKE_LOCK
<com.android.calendar.agenda.AgendaWindowAdapter$QueryHandler\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.WRITE_CALENDAR
<com.android.phone.PhoneApp\:\ void\ clearInCallScreenMode()>=android.permission.BLUETOOTH
<com.android.contacts.activities.GroupDetailActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothA2dp$Stub\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue\:\ void\ releaseAllPointersExcept(com.android.inputmethod.keyboard.PointerTracker,long)>=android.permission.WRITE_CONTACTS
<android.net.wifi.WifiStateMachine\:\ void\ setWifiApState(int)>=android.permission.BROADCAST_STICKY
<android.net.IThrottleManager$Stub$Proxy\:\ long\ getResetTime(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.wifi.WifiServiceImpl\:\ boolean\ isScanAlwaysAvailable()>=android.permission.ACCESS_WIFI_STATE
<android.bluetooth.BluetoothAdapter\:\ boolean\ startLeScan(android.bluetooth.BluetoothAdapter$LeScanCallback)>=android.permission.BLUETOOTH
<com.android.vcard.VCardEntryConstructor\:\ void\ onEntryEnded()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<android.net.IConnectivityManager$Stub$Proxy\:\ android.net.NetworkQuotaInfo\ getActiveNetworkQuotaInfo()>=android.permission.ACCESS_NETWORK_STATE
<com.android.music.MediaPlaybackService$MultiPlayer\:\ void\ setDataSource(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.settings.wifi.WifiSettings$3\:\ void\ onClick(android.view.View)>=android.permission.ACCESS_WIFI_STATE
<com.android.server.MountService\:\ int\ finalizeSecureContainer(java.lang.String)>=android.permission.ASEC_CREATE
<com.android.phone.BluetoothHandsfree$19\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.google.common.io.ByteStreams\:\ boolean\ equal(com.google.common.io.InputSupplier,com.google.common.io.InputSupplier)>=android.permission.INTERNET
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ addCharacteristic(int,android.os.ParcelUuid,int,int)>=android.permission.BLUETOOTH
<com.android.commands.am.Am\:\ void\ runDisplaySize()>=android.permission.WAKE_LOCK
<com.android.settings.TetherSettings\:\ void\ setUsbTethering(boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.statusbar.phone.CloseDragHandle\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<android.filterpacks.text.ToUpperCase\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.DataUsageSummary$1\:\ void\ onPostExecute(java.lang.Object)>=android.permission.READ_PHONE_STATE
<com.android.camera.PanoramaActivity$8\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ getSignalStrength(android.os.Message)>=android.permission.WAKE_LOCK
<org.apache.http.impl.client.DefaultHttpClient\:\ void\ <init>=android.permission.INTERNET
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ hangupAndPowerOff()>=android.permission.WAKE_LOCK
<com.android.contacts.vcard.ImportVCardActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.MccTable\:\ void\ setSystemLocale(android.content.Context,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.browser.SnapshotTab$LoadData\:\ void\ onPostExecute(android.database.Cursor)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.SlotView\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<com.android.browser.SnapshotTab\:\ void\ <init>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ java.lang.String[]\ listBonds()>=android.permission.BLUETOOTH
<com.android.server.TelephonyRegistry\:\ void\ notifyCallForwardingChangedForSubscriber(int,boolean)>=android.permission.MODIFY_PHONE_STATE
<com.android.contacts.model.EntityModifier\:\ void\ parseStructuredNameExtra(android.content.Context,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDelta,android.os.Bundle)>=android.permission.WRITE_CONTACTS
<com.android.server.sip.SipSessionGroup$SipSessionImpl\:\ void\ access$1500(com.android.server.sip.SipSessionGroup$SipSessionImpl,java.util.EventObject)>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ void\ setInterfaceUp(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<android.filterpacks.base.OutputStreamTarget\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ android.net.Network\ getActiveNetworkForUid(int,boolean)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder\:\ android.os.ParcelFileDescriptor\ getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.server.statusbar.StatusBarManagerService\:\ void\ onPanelHidden()>=android.permission.STATUS_BAR_SERVICE
<com.android.contacts.detail.ContactDetailFragment\:\ void\ buildEntries()>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothDevice\:\ android.bluetooth.BluetoothSocket\ createInsecureRfcommSocket(int)>=android.permission.BLUETOOTH
<com.android.camera.CameraPreference$OnPreferenceChangedListener\:\ void\ onSharedPreferenceChanged()>=android.permission.RECORD_AUDIO
<com.android.server.LocationManagerService\:\ void\ clearTestProviderEnabled(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.email.activity.EmailActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<java.net.HttpURLConnection\:\ void\ connect()>=android.permission.INTERNET
<com.google.common.io.Files\:\ void\ copy(com.google.common.io.InputSupplier,java.io.File,java.nio.charset.Charset)>=android.permission.INTERNET
<android.net.DhcpStateMachine$DefaultState\:\ boolean\ processMessage(android.os.Message)>=android.permission.WAKE_LOCK
<android.speech.IRecognitionService\:\ void\ startListening(android.content.Intent,android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<com.android.settings.inputmethod.KeyboardLayoutPickerFragment\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothManager\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth\:\ java.lang.String\ getRemoteAlias(java.lang.String)>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager\:\ void\ startScan(boolean)>=android.permission.CHANGE_WIFI_STATE
<android.service.dreams.DreamService\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.mms.transaction.TransactionService\:\ int\ beginMmsConnectivity()>=android.permission.BLUETOOTH
<android.server.BluetoothEventLoop\:\ void\ onNetworkDeviceConnected(java.lang.String,java.lang.String,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ onMessageSetUnread()>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.FixedRotationFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.nfc.tech.NdefFormatable\:\ void\ format(android.nfc.NdefMessage)>=android.permission.NFC
<android.media.IRingtonePlayer\:\ void\ stopAsync()>=android.permission.WAKE_LOCK
<android.server.BluetoothPanProfileHandler\:\ java.lang.String\ enableTethering(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.wm.WindowAnimator\:\ void\ animate()>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerTwoPane$RefreshTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.gsm.SIMFileHandler\:\ void\ loadEFLinearFixedAll(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ToRGBAFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.ContactsDictionary\:\ void\ blockingReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.quicksearchbox.google.SearchBaseUrlHelper$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.INTERNET
<com.android.nfc.NfcService$TagService\:\ boolean\ isNdef(int)>=android.permission.NFC
<com.android.settings.accounts.AccountPreferenceBase\:\ void\ onSyncStateUpdated()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.EmailAddressPickerFragment\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<android.app.KeyguardManager$KeyguardLock\:\ void\ disableKeyguard()>=android.permission.DISABLE_KEYGUARD
<com.android.internal.widget.multiwaveview.GlowPadView$1\:\ void\ onAnimationEnd(android.animation.Animator)>=android.permission.BLUETOOTH
<android.net.wifi.WifiManager\:\ boolean\ enableNetwork(int,boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.am.ActivityManagerService\:\ void\ bringDownServiceLocked(com.android.server.am.ServiceRecord,boolean)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService$VpnCallback\:\ void\ restore()>=android.permission.BROADCAST_STICKY
<com.android.mms.transaction.ReadRecTransaction\:\ void\ notifyObservers()>=android.permission.BLUETOOTH
<com.android.server.connectivity.Vpn$LegacyVpnRunner\:\ void\ execute()>=android.permission.BROADCAST_STICKY
<com.android.nfc.TechListChooserActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ java.util.List\ getWindows()>=android.permission.INTERACT_ACROSS_USERS
<android.net.NetworkStateTracker\:\ boolean\ setRadio(boolean)>=android.permission.CHANGE_WIFI_STATE
<android.view.accessibility.IAccessibilityManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WRITE_SETTINGS
<com.android.contacts.CallContactActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<android.speech.tts.TextToSpeech\:\ int\ synthesizeToFile(java.lang.String,java.util.HashMap,java.lang.String)>=android.permission.BROADCAST_STICKY
<android.preference.VolumePreference\:\ void\ onBindDialogView(android.view.View)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService$AnimationRunnable\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ factoryReset()>=android.permission.BLUETOOTH_ADMIN
<com.android.server.am.ActivityManagerService\:\ void\ killBackgroundProcesses(java.lang.String)>=android.permission.RESTART_PACKAGES
<com.android.server.am.ActivityManagerService\:\ int\ startActivityFromRecents(int,android.os.Bundle)>=android.permission.BROADCAST_STICKY, android.permission.START_TASKS_FROM_RECENTS
<android.net.ConnectivityManager\:\ void\ reportBadNetwork(android.net.Network)>=android.permission.ACCESS_NETWORK_STATE, android.permission.INTERNET
<com.android.mms.transaction.SmsReceiverService\:\ android.net.Uri\ storeMessage(android.content.Context,android.telephony.SmsMessage[],int)>=android.permission.RECEIVE_SMS
<com.android.internal.telephony.cat.CatService\:\ void\ handleCommand(com.android.internal.telephony.cat.CommandParams,boolean)>=android.permission.WAKE_LOCK
<com.android.contacts.group.GroupDetailFragment$3\:\ android.content.CursorLoader\ onCreateLoader(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ void\ setImsRegistrationState(boolean)>=android.permission.MODIFY_PHONE_STATE
<android.nfc.tech.Ndef\:\ void\ close()>=android.permission.NFC
<com.android.mms.transaction.NotificationPlayer\:\ void\ access$700(com.android.mms.transaction.NotificationPlayer)>=android.permission.WAKE_LOCK
<android.media.AudioService\:\ void\ setBluetoothScoOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.server.wifi.WifiServiceImpl\:\ boolean\ saveConfiguration()>=android.permission.CHANGE_WIFI_STATE
<com.android.internal.telephony.CommandsInterface\:\ void\ getIMSIForApp(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.app.backup.IBackupManager\:\ void\ setAutoRestore(boolean)>=android.permission.WRITE_SETTINGS
<android.provider.Telephony$Sms\:\ android.database.Cursor\ query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>=android.permission.RECEIVE_SMS
<android.bluetooth.BluetoothAdapter\:\ boolean\ setScanMode(int)>=android.permission.BLUETOOTH
<com.android.providers.contacts.ContactsProvider2\:\ android.content.res.AssetFileDescriptor\ openAssetFileLocal(android.net.Uri,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WRITE_SYNC_SETTINGS
<com.android.settings.wifi.AdvancedWifiSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.server.WallpaperManagerService\:\ void\ setDimensionHints(int,int)>=android.permission.SET_WALLPAPER_HINTS
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisablingState\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.UserHistoryDictionary\:\ void\ loadDictionary()>=android.permission.WRITE_CONTACTS
<com.android.settings.DataUsageSummary$UidDetailTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.usb.UsbService\:\ void\ setCurrentFunction(java.lang.String)>=android.permission.MANAGE_USB
<com.android.server.RecoverySystemService$BinderService\:\ boolean\ clearBcb()>=android.permission.RECOVERY
<com.android.internal.telephony.DefaultPhoneNotifier\:\ void\ notifyDataConnectionFailed(com.android.internal.telephony.Phone,java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.server.wifi.WifiServiceImpl\:\ int\ getWifiEnabledState()>=android.permission.ACCESS_WIFI_STATE
<com.android.contacts.list.DefaultContactListAdapter\:\ void\ bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper\:\ void\ setActiveUser(int)>=android.permission.MANAGE_FINGERPRINT
<android.content.ContextWrapper\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<android.server.BluetoothEventLoop\:\ void\ onAgentAuthorize(java.lang.String,java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.calendar.DayFragment\:\ android.view.View\ onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>=android.permission.WRITE_CALENDAR
<com.android.server.am.BatteryStatsService\:\ void\ notePhoneOn()>=android.permission.UPDATE_DEVICE_STATS
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ boolean\ enable()>=android.permission.BLUETOOTH_ADMIN
<android.view.WindowManagerPolicy\:\ boolean\ performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState,int,boolean)>=android.permission.VIBRATE
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ setAndBroadcastNetworkSetTime(long)>=android.permission.BROADCAST_STICKY
<com.android.settings.accounts.ManageAccountsSettings\:\ void\ requestOrCancelSyncForAccounts(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.usb.UsbService\:\ void\ denyUsbDebugging()>=android.permission.MANAGE_USB
<com.android.settings.Settings$LocationSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.settings.accounts.ManageAccountsSettings\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.READ_SYNC_SETTINGS
<android.net.IConnectivityManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ void\ pairingAttempt(java.lang.String,int)>=android.permission.BLUETOOTH
<android.media.effect.EffectContext\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.tablet.TabletStatusBar\:\ com.android.systemui.statusbar.StatusBarIconView\ addNotificationViews(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>=android.permission.VIBRATE
<com.android.server.ConnectivityService\:\ void\ sendGeneralBroadcast(android.net.NetworkInfo,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ setCdmaRoamingPreference(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.SmsReceiverService\:\ void\ access$200(com.android.mms.transaction.SmsReceiverService)>=android.permission.WAKE_LOCK
<com.android.browser.BrowserBackupAgent\:\ void\ addBookmark(com.android.browser.BrowserBackupAgent$Bookmark)>=android.permission.GET_ACCOUNTS
<com.android.server.LockSettingsService\:\ java.lang.String\ getString(java.lang.String,java.lang.String,int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE, android.permission.READ_CONTACTS
<com.android.phone.BluetoothHandsfree\:\ void\ setAudioState(int,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.activities.ActionBarAdapter\:\ boolean\ onQueryTextChange(java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<android.app.KeyguardManager$KeyguardLock\:\ void\ reenableKeyguard()>=android.permission.DISABLE_KEYGUARD
<com.android.settings.bluetooth.BluetoothPermissionActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager\:\ boolean\ updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ moveAppWindowsLocked(com.android.server.wm.AppWindowToken,int,boolean)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ void\ incrementPendingBroadcasts()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ notifyDataConnection(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.nfc.NfcService$TagService\:\ android.nfc.NdefMessage\ ndefRead(int)>=android.permission.NFC
<com.android.systemui.statusbar.policy.ToggleSlider\:\ void\ onStopTrackingTouch(android.widget.SeekBar)>=android.permission.WRITE_SETTINGS
<android.net.wifi.WifiStateMachine$DriverStoppingState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.webkit.HTML5VideoViewProxy$VideoPlayer\:\ void\ play(java.lang.String,int,android.webkit.HTML5VideoViewProxy,android.webkit.WebChromeClient,int)>=android.permission.WAKE_LOCK
<com.android.settings.widget.SettingsAppWidgetProvider$SettingsObserver\:\ void\ onChange(boolean)>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.MountService\:\ void\ lockUserKey(int)>=android.permission.STORAGE_INTERNAL
<com.android.phone.InCallScreen\:\ void\ disconnectBluetoothAudio()>=android.permission.BLUETOOTH
<android.service.dreams.DreamService\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.a2dpsink.A2dpSinkService$BluetoothA2dpSinkBinder\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.settings.Settings$DevelopmentSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.browser.ActivityController\:\ void\ handleNewIntent(android.content.Intent)>=android.permission.GET_ACCOUNTS
<android.widget.VideoView\:\ void\ openVideo()>=android.permission.WAKE_LOCK
<android.server.BluetoothEventLoop\:\ void\ onPanDeviceConnectionResult(java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.contacts.list.PostalAddressPickerFragment\:\ void\ onStart()>=android.permission.WRITE_SETTINGS
<com.android.settings.IccLockSettings\:\ void\ tryChangeIccLockState()>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ void\ editSmsMessageItem(com.android.mms.ui.MessageItem)>=android.permission.RECEIVE_SMS
<com.android.calendar.CalendarUtils$TimeZoneUtils\:\ void\ forceDBRequery(android.content.Context,java.lang.Runnable)>=android.permission.READ_CALENDAR
<android.test.RenamingDelegatingContext\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.IccCard\:\ void\ handleCdmaSubscriptionSource()>=android.permission.WAKE_LOCK
<com.android.server.NetworkTimeUpdateService$3\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.ContactsDictionary\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<com.android.bluetooth.sap.SapService$SapBinder\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.phone.CallerInfoCache\:\ void\ access$400(com.android.phone.CallerInfoCache)>=android.permission.WRITE_CONTACTS
<android.accounts.AccountManager\:\ void\ invalidateAuthToken(java.lang.String,java.lang.String)>=android.permission.MANAGE_ACCOUNTS
<com.android.settings.wifi.WifiSettings$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_WIFI_STATE
<com.android.exchange.EasAccountService\:\ boolean\ setupService()>=android.permission.READ_SYNC_SETTINGS
<android.nfc.tech.MifareClassic\:\ void\ connect()>=android.permission.NFC
<com.android.server.audio.AudioService\:\ void\ startBluetoothScoVirtualCall(android.os.IBinder)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.phone.CallCard\:\ void\ onImageLoadComplete(int,android.graphics.drawable.Drawable,android.graphics.Bitmap,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ void\ addPreferencesForProfiles()>=android.permission.BLUETOOTH
<com.android.browser.AddBookmarkPage$EditBookmarkInfoLoader\:\ com.android.browser.AddBookmarkPage$EditBookmarkInfo\ loadInBackground()>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<android.nfc.tech.MifareClassic\:\ void\ transfer(int)>=android.permission.NFC
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ iccTransmitApduLogicalChannel(int,int,int,int,int,int,int,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState\:\ void\ enter()>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.AccountManagerService\:\ android.accounts.Account[]\ getAccounts(java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.opp.BluetoothOppBtEnableActivity\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH_ADMIN
<com.android.phone.BluetoothHandsfree$IncomingScoAcceptThread\:\ void\ connectSco()>=android.permission.BLUETOOTH
<com.android.calendar.DeleteEventHelper\:\ void\ access$900(com.android.calendar.DeleteEventHelper)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.ITelephony\:\ boolean\ endCall()>=android.permission.CALL_PHONE
<com.android.gallery3d.app.PhotoPage\:\ void\ setCurrentPhotoByIntent(android.content.Intent)>=android.permission.VIBRATE
<com.android.phone.PhoneUtils\:\ boolean\ hangupHoldingCall(com.android.internal.telephony.Call)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.FixedRotationFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.SlideshowView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ isMultiAdvertisementSupported()>=android.permission.BLUETOOTH
<android.speech.SpeechRecognizer\:\ void\ handleCancelMessage()>=android.permission.RECORD_AUDIO
<com.android.contacts.list.EmailAddressPickerFragment\:\ void\ setSearchMode(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ void\ enableLocationUpdatesForSubscriber(int)>=android.permission.CONTROL_LOCATION_UPDATES
<com.android.server.InputMethodManagerService\:\ void\ showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.READ_EXTERNAL_STORAGE
<com.android.contacts.list.DefaultContactListAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.power.PowerManagerService$BinderService\:\ void\ updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>=android.permission.UPDATE_DEVICE_STATS, android.permission.WAKE_LOCK
<android.telephony.gsm.SmsManager\:\ void\ sendDataMessage(java.lang.String,java.lang.String,short,[byte,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.ACCESS_NETWORK_STATE, android.permission.READ_EXTERNAL_STORAGE, android.permission.SEND_SMS
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnablingState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.settings.SecuritySettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.systemui.screenshot.GlobalScreenshot\:\ void\ access$000(com.android.systemui.screenshot.GlobalScreenshot,java.lang.Runnable)>=android.permission.VIBRATE
<android.app.ContextImpl$ApplicationContentResolver\:\ boolean\ getMasterSyncAutomatically()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.text.StringLogger\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.filterpacks.performance.ThroughputFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.app.JobSchedulerImpl\:\ int\ schedule(android.app.job.JobInfo)>=android.permission.RECEIVE_BOOT_COMPLETED
<com.android.contacts.list.EmailAddressPickerFragment\:\ void\ prepareEmptyView()>=android.permission.READ_SYNC_STATS
<android.filterpacks.imageproc.DuotoneFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.util.List\ getPermittedAccessibilityServices(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.server.BluetoothAdapterStateMachine$HotOff\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiStatusTest\:\ void\ handleNetworkStateChanged(android.net.NetworkInfo)>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.settings.PrivacySettings\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_SETTINGS
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$DefaultState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getMaximumFailedPasswordsForWipe(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.usb.UsbDeviceManager$UsbHandler\:\ void\ updateUsbNotification()>=android.permission.VIBRATE
<android.server.BluetoothEventLoop\:\ void\ onRequestPairingConsent(java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.mms.ui.SlideshowPresenter$5\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.calendar.event.EditEventFragment\:\ boolean\ access$000(com.android.calendar.event.EditEventFragment,int)>=android.permission.WRITE_CALENDAR
<android.content.pm.IPackageManager\:\ int[]\ getPackageGids(java.lang.String)>=android.permission.READ_EXTERNAL_STORAGE
<com.android.internal.telephony.ISms$Stub\:\ void\ sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.music.MediaPlaybackService$CompatMediaPlayer\:\ void\ reset()>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ void\ updatePermissionFlagsForAllApps(int,int,int)>=android.permission.GRANT_RUNTIME_PERMISSIONS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.REVOKE_RUNTIME_PERMISSIONS
<android.accounts.IAccountManager$Stub\:\ void\ setPassword(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.server.am.BatteryStatsService\:\ void\ noteFlashlightOn(int)>=android.permission.UPDATE_DEVICE_STATS
<android.view.IWindowSession$Stub$Proxy\:\ android.os.IBinder\ prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>=android.permission.WAKE_LOCK
<com.android.settings.DataUsageSummary\:\ void\ access$1800(com.android.settings.DataUsageSummary)>=android.permission.ACCESS_NETWORK_STATE
<android.view.IWindowManager\:\ void\ thawRotation()>=android.permission.WRITE_SETTINGS
<android.net.wifi.IWifiManager\:\ boolean\ acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.ManageCachePage\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.Connection\:\ void\ separate()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.BlackWhiteFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageViewFragmentBase\:\ void\ addAttachment(com.android.emailcommon.provider.EmailContent$Attachment)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.SharpenFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.wifi.p2p.WifiP2pServiceImpl\:\ android.os.Messenger\ getMessenger()>=android.permission.ACCESS_WIFI_STATE, android.permission.CHANGE_WIFI_STATE
<com.android.internal.telephony.ITelephonyRegistry\:\ void\ notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.LinkCapabilities,int,boolean)>=android.permission.BROADCAST_STICKY
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ setSafeMode(boolean)>=android.permission.VIBRATE
<com.android.settings.RingerVolumePreference\:\ void\ cleanup()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.FisheyeFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.AllowBindAppWidgetActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.contacts.list.JoinContactListFragment\:\ void\ onStart()>=android.permission.WRITE_SETTINGS
<com.android.contacts.list.LegacyPostalAddressListAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.BluetoothPairingDialog\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.settings.TetherSettings\:\ void\ updateState(java.lang.String[],java.lang.String[],java.lang.String[])>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ revertToNitzTimeZone()>=android.permission.SET_TIME_ZONE
<com.android.settings.accounts.AccountPreferenceBase\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.TileImageView\:\ boolean\ onTouch(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.CallNotifier$EmergencyTonePlayerVibrator\:\ void\ stop()>=android.permission.VIBRATE
<android.filterpacks.imageproc.ToGrayFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.mms.data.Contact$ContactsCache\:\ com.android.mms.data.Contact\ getContactInfoForSelf()>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.ui.ImportCompleteListener\:\ void\ goToImportedAlbum()>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.EnableIccPinScreen\:\ void\ access$300(com.android.phone.EnableIccPinScreen)>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ switchInCallAudio(com.android.phone.InCallScreen$InCallAudioMode)>=android.permission.BLUETOOTH
<com.android.settings.AccessibilitySettings\:\ void\ handleTogglePowerButtonEndsCallPreferenceClick()>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary\:\ void\ loadDictionary()>=android.permission.WRITE_CONTACTS
<com.android.email.SecurityPolicy\:\ void\ setAccountPolicy(long,com.android.emailcommon.provider.Policy,java.lang.String)>=android.permission.VIBRATE
<com.android.server.MountService\:\ void\ partitionPrivate(java.lang.String)>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<com.android.exchange.EasAccountService\:\ void\ runPingLoop()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.datepicker.DatePickerDialog\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.inputmethod.InputMethodAndLanguageSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.CropView$HighlightRectangle\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<com.android.gallery3d.data.LocalMergeAlbum\:\ long\ reload()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.policy.impl.PasswordUnlockScreen\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.ManageCachePage$1\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.data.WorkingMessage\:\ void\ readStateFromBundle(android.os.Bundle)>=android.permission.WRITE_SMS
<com.android.internal.policy.impl.KeyguardScreenCallback\:\ void\ forgotPattern(boolean)>=android.permission.GET_ACCOUNTS
<com.android.server.backup.Trampoline\:\ void\ setAutoRestore(boolean)>=android.permission.BACKUP
<com.android.nfc.handover.HandoverManager\:\ android.nfc.NdefMessage\ createHandoverSelectMessage(boolean)>=android.permission.BLUETOOTH
<android.view.WindowManagerPolicy\:\ android.view.KeyEvent\ dispatchUnhandledKey(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>=android.permission.WAKE_LOCK
<com.android.settings.PrivacySettings\:\ void\ setBackupEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.contacts.vcard.VCardImportExportListener\:\ void\ onCancelRequest(com.android.contacts.vcard.CancelRequest,int)>=android.permission.VIBRATE
<android.net.IThrottleManager\:\ long\ getByteCount(java.lang.String,int,int,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.dreams.DreamManagerService$BinderService\:\ void\ testDream(android.content.ComponentName)>=android.permission.WRITE_DREAM_STATE
<com.android.settings.EditPinPreference$OnPinEnteredListener\:\ void\ onPinEntered(com.android.settings.EditPinPreference,boolean)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.AlphaBlendFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.util.StateMachine$SmHandler$QuittingState\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.LockScreen\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.GET_ACCOUNTS
<android.app.Activity\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.phone.PhoneApp\:\ void\ updateWakeState()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ void\ sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<android.net.wifi.SupplicantStateTracker$DormantState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivity\:\ com.android.mms.ui.MessageItem\ getMessageItem(java.lang.String,long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.PostalAddressListAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.InputMethodManagerService$SettingsObserver\:\ void\ onChange(boolean)>=android.permission.WRITE_SETTINGS
<com.android.email.activity.MessageOrderManager\:\ void\ adjustCursorPosition()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getCompleteVoiceMailNumberForSubscriber(int)>=android.permission.CALL_PRIVILEGED
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ void\ bindResponse(int,boolean)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<android.accounts.IAccountManager$Stub\:\ void\ setUserData(android.accounts.Account,java.lang.String,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.server.ConnectivityService\:\ void\ startLegacyVpn(com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>=android.permission.BROADCAST_STICKY
<com.android.settings.Settings$SecuritySettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.music.IMediaPlaybackService$Stub$Proxy\:\ int\ removeTrack(long)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$13\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<android.filterpacks.videoproc.BackDropperFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ java.util.List\ getAllStackInfos()>=android.permission.MANAGE_ACTIVITY_STACKS
<com.android.server.net.NetworkPolicyManagerService\:\ I[]\ getUidsWithPolicy(int)>=android.permission.MANAGE_NETWORK_POLICY
<com.android.internal.telephony.DataConnectionTracker$DataRoamingSettingObserver\:\ void\ register(android.content.Context)>=android.permission.WRITE_SETTINGS
<com.android.exchange.ExchangeService$1\:\ void\ syncMailboxStatus(long,int,int)>=android.permission.READ_SYNC_SETTINGS
<android.content.IContentService$Stub\:\ boolean\ isSyncActive(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.mms.transaction.NotificationTransaction\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.ContactsDictionary\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.settings.Settings$InputMethodAndLanguageSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.settings.DataUsageSummary$ConfirmLimitFragment$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.DayView$3\:\ void\ run()>=android.permission.WRITE_CALENDAR
<com.android.server.am.ActivityManagerService\:\ boolean\ moveTopActivityToPinnedStack(int,android.graphics.Rect)>=android.permission.MANAGE_ACTIVITY_STACKS
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ java.util.List\ getAllMessagesFromIccEf()>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiScanStopped(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.contacts.detail.ContactDetailFragment$3\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.LocationManagerService\:\ boolean\ isProviderEnabled(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.emailcommon.service.IAccountService\:\ java.lang.String\ getDeviceId()>=android.permission.READ_PHONE_STATE
<android.bluetooth.BluetoothPan\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.AlphaBlendFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker\:\ void\ requestStateChange(android.content.Context,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.ActionModeHandler\:\ android.content.Intent\ access$200(com.android.gallery3d.ui.ActionModeHandler,com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.NFC
<com.android.camera.ActivityBase\:\ void\ createCameraScreenNail(boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.os.storage.StorageManager\:\ void\ enableUsbMassStorage()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.deskclock.AlarmReceiver\:\ void\ updateNotification(android.content.Context,com.android.deskclock.Alarm,int)>=android.permission.VIBRATE
<android.content.Context\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onApnChanged()>=android.permission.BROADCAST_STICKY
<com.android.gallery3d.app.SlideshowPage\:\ void\ showPendingBitmap()>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothInputDevice\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<com.android.deskclock.SetAlarm$5\:\ void\ run()>=android.permission.WRITE_SETTINGS
<com.android.contacts.util.AccountPromptUtils\:\ void\ launchAccountPrompt(android.app.Activity)>=android.permission.GET_ACCOUNTS
<com.android.calendar.agenda.AgendaListView\:\ void\ goTo(android.text.format.Time,long,java.lang.String,boolean,boolean)>=android.permission.WRITE_CALENDAR
<com.android.server.accounts.AccountManagerService\:\ android.accounts.Account[]\ getAccountsAsUser(java.lang.String,int,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.exchange.ExchangeService$2\:\ void\ loadAttachment(long,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ manageServicesLocked()>=android.permission.WRITE_SETTINGS
<android.webkit.WebSettingsClassic\:\ void\ verifyNetworkAccess()>=android.permission.INTERNET
<android.filterpacks.text.StringLogger\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccProvider\:\ android.database.MatrixCursor\ loadFromEf(int)>=android.permission.READ_CONTACTS
<android.inputmethodservice.InputMethodService\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.contacts.activities.PeopleActivity$TabPagerListener\:\ void\ onPageSelected(int)>=android.permission.READ_SYNC_SETTINGS
<android.nfc.NfcAdapter\:\ void\ setBeamPushUris(android.net.Uri[],android.app.Activity)>=android.permission.NFC
<com.android.email.activity.UIControllerTwoPane\:\ void\ onInstallFragment(android.app.Fragment)>=android.permission.ACCESS_NETWORK_STATE
<android.view.accessibility.IAccessibilityManager$Stub$Proxy\:\ void\ unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>=android.permission.WRITE_SETTINGS
<android.net.DnsPinger\:\ android.net.LinkProperties\ getCurrentLinkProperties()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ onLocalDisconnect()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmMmiCode\:\ void\ onQueryCfComplete(android.os.AsyncResult)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothPbap$Stub\:\ void\ disconnect()>=android.permission.BLUETOOTH_ADMIN
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ android.os.ParcelUuid[]\ getRemoteUuids(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.PickerActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.RECORD_AUDIO
<com.android.systemui.usb.StorageNotification\:\ void\ access$000(com.android.systemui.usb.StorageNotification,boolean)>=android.permission.VIBRATE
<com.android.contacts.activities.ContactSelectionActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.InputMethodManagerService\:\ void\ removeClient(com.android.internal.view.IInputMethodClient)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.os.BatteryStatsImpl\:\ int\ getBluetoothPingCount()>=android.permission.BLUETOOTH
<com.android.providers.contacts.ContactsProvider2\:\ boolean\ updateAccountsInBackground(android.accounts.Account[])>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothBondState\:\ void\ setBondState(java.lang.String,int,int)>=android.permission.BLUETOOTH
<com.android.camera.VideoCamera\:\ void\ onEffectsUpdate(int,int)>=android.permission.RECORD_AUDIO
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ void\ onScreenTurnedOn()>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine\:\ void\ setFrequencyBand(int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.widget.SlidingTab\:\ void\ dispatchTriggerEvent(int)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.Suggest\:\ void\ getAllBigrams(java.lang.CharSequence,com.android.inputmethod.latin.WordComposer)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ handleRadioNotAvailable()>=android.permission.WAKE_LOCK
<com.android.browser.NavScreen\:\ void\ access$100(com.android.browser.NavScreen,com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<com.android.systemui.statusbar.CommandQueue$Callbacks\:\ void\ disable(int)>=android.permission.VIBRATE
<com.android.contacts.calllog.CallLogAdapter\:\ void\ startRequestProcessing()>=android.permission.READ_SYNC_SETTINGS
<com.android.music.AudioPreview$PreviewPlayer\:\ void\ postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.PhoneWindowManager\:\ android.view.KeyEvent\ dispatchUnhandledKey(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteStartCamera(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.email.activity.MailboxListFragment$FindParentMailboxTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ hangup(com.android.internal.telephony.gsm.GsmCall)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.GalleryActionBar\:\ boolean\ onNavigationItemSelected(int,long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.backup.Trampoline\:\ java.lang.String[]\ listAllTransports()>=android.permission.BACKUP
<com.android.gallery3d.gadget.WidgetSource\:\ android.graphics.Bitmap\ getImage(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.SipCallOptionHandler\:\ void\ onCreate(android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$AndroidBeamSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.server.am.BatteryStatsService\:\ void\ noteStopCamera(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.settings.bluetooth.DevicePickerFragment\:\ void\ onDeviceAdded(com.android.settings.bluetooth.CachedBluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.deviceinfo.Status\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.DevicePickerFragment\:\ void\ onDevicePreferenceClick(com.android.settings.bluetooth.BluetoothDevicePreference)>=android.permission.BLUETOOTH
<com.android.email.Controller$ControllerService$1\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.statusbar.phone.PhoneStatusBar$20\:\ void\ onClick(android.view.View)>=android.permission.VIBRATE
<android.filterpacks.imageproc.ResizeFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.media.Ringtone\:\ void\ setStreamType(int)>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ internalRespondViaSms()>=android.permission.BLUETOOTH
<android.net.IConnectivityManager\:\ boolean\ setRadio(int,boolean)>=android.permission.CHANGE_NETWORK_STATE
<com.android.quicksearchbox.ui.ContactBadge\:\ void\ onClick(android.view.View)>=android.permission.WRITE_CONTACTS
<android.filterpacks.imageproc.FisheyeFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ disableLocationUpdates()>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setBluetoothContactSharingDisabled(android.content.ComponentName,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.am.ActivityManagerService\:\ void\ resizeTask(int,android.graphics.Rect,int)>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.inputmethod.latin.LatinIME\:\ void\ access$700(com.android.inputmethod.latin.LatinIME)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager\:\ boolean\ updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<android.filterfw.core.Filter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.accounts.AccountManager\:\ android.accounts.Account[]\ getAccountsByType(java.lang.String)>=android.permission.GET_ACCOUNTS
<android.nfc.NfcActivityManager\:\ void\ setNdefPushContentUriCallback(android.app.Activity,android.nfc.NfcAdapter$CreateBeamUrisCallback)>=android.permission.NFC
<android.os.IPowerManager$Stub$Proxy\:\ void\ acquireWakeLock(int,android.os.IBinder,java.lang.String,android.os.WorkSource)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ syncClirSetting()>=android.permission.WAKE_LOCK
<com.android.contacts.GroupMemberLoader\:\ com.android.contacts.GroupMemberLoader\ constructLoaderForGroupEditorQuery(android.content.Context,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.month.MonthByWeekAdapter\:\ void\ init()>=android.permission.READ_CALENDAR
<android.media.AsyncPlayer\:\ void\ play(android.content.Context,android.net.Uri,boolean,int)>=android.permission.WAKE_LOCK
<com.android.exchange.EasSyncService\:\ void\ messageMoveRequest(com.android.exchange.MessageMoveRequest)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine\:\ void\ setWifiState(int)>=android.permission.BROADCAST_STICKY
<com.android.settings.bluetooth.PanProfile\:\ int\ getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.model.AccountTypeManager\:\ com.android.contacts.model.AccountTypeManager\ getInstance(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ connectPanDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.telephony.gsm.SmsManager\:\ boolean\ updateMessageOnSim(int,int,byte[])>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME\:\ void\ commitTyped(android.view.inputmethod.InputConnection,int)>=android.permission.WRITE_CONTACTS
<android.nfc.tech.NfcA\:\ byte[]\ transceive(byte[])>=android.permission.NFC
<android.accounts.IAccountManager$Stub\:\ void\ confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)>=android.permission.MANAGE_ACCOUNTS
<com.android.music.AudioPreview$PreviewPlayer\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IPhoneSubInfo\:\ java.lang.String\ getLine1Number()>=android.permission.READ_PHONE_STATE
<android.nfc.INfcAdapter$Stub\:\ void\ dispatch(android.nfc.Tag)>=android.permission.BLUETOOTH
<com.android.gallery3d.data.Clustering\:\ void\ run(com.android.gallery3d.data.MediaSet)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.service.MailService\:\ void\ setupSyncReports(long)>=android.permission.READ_SYNC_SETTINGS
<android.provider.ContactsContract$Contacts\:\ void\ markAsContacted(android.content.ContentResolver,long)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.TintFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ void\ access$1700(com.android.server.ConnectivityService,int,int)>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.pbap.BluetoothPbapVcardManager\:\ int\ composeAndSendPhonebookOneVcard(javax.obex.Operation,int,boolean,java.lang.String,int)>=android.permission.READ_CALL_LOG
<com.android.calendar.event.EditEventView$TimeListener\:\ void\ onTimeSet(android.widget.TimePicker,int,int)>=android.permission.READ_CALENDAR
<android.accounts.AccountManager$2\:\ void\ doWork()>=android.permission.GET_ACCOUNTS
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.contacts.detail.ContactLoaderFragment$ContactLoaderFragmentListener\:\ void\ onDetailsLoaded(com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.BatteryStatsService\:\ void\ noteBluetoothControllerActivity(android.bluetooth.BluetoothActivityEnergyInfo)>=android.permission.UPDATE_DEVICE_STATS
<android.nfc.INfcAdapter$Stub$Proxy\:\ void\ setNdefPushCallback(android.nfc.INdefPushCallback)>=android.permission.NFC
<com.android.server.wm.WindowManagerService\:\ void\ removeWindowInnerLocked(com.android.server.wm.Session,com.android.server.wm.WindowState)>=android.permission.WAKE_LOCK
<com.android.mms.util.ThumbnailManager\:\ com.android.mms.util.ItemLoadedFuture\ getThumbnail(android.net.Uri,boolean,com.android.mms.util.ItemLoadedCallback)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothService\:\ boolean\ isEnabled()>=android.permission.BLUETOOTH
<android.net.wifi.WifiManager\:\ boolean\ saveConfiguration()>=android.permission.CHANGE_WIFI_STATE
<com.android.server.audio.AudioService\:\ void\ setSpeakerphoneOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.internal.app.ExternalMediaFormatActivity\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ finalize()>=android.permission.WAKE_LOCK
<com.android.internal.app.IBatteryStats\:\ byte[]\ getStatistics()>=android.permission.BLUETOOTH
<com.android.server.content.ContentService\:\ android.content.SyncStatusInfo\ getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.READ_SYNC_STATS
<android.content.pm.IPackageManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.CLEAR_APP_CACHE
<com.android.server.pm.PackageManagerService$AppDirObserver\:\ void\ onEvent(int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.PhotoPage\:\ void\ setContentPane(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ManageSimMessages\:\ void\ refreshMessageList()>=android.permission.RECEIVE_SMS
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ onSignalStrengthResult(android.os.AsyncResult)>=android.permission.BROADCAST_STICKY
<com.android.exchange.ExchangeService\:\ void\ requestSync(com.android.emailcommon.provider.Mailbox,int,com.android.exchange.Request)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.MenuExecutor$MediaOperation\:\ java.lang.Void\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ approveCaCert(java.lang.String,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_USERS
<com.android.systemui.media.NotificationPlayer\:\ void\ acquireWakeLock()>=android.permission.WAKE_LOCK
<android.filterpacks.text.ToUpperCase\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.PhoneBase\:\ void\ setCdmaRoamingPreference(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub\:\ void\ deleteSoundModel(android.os.ParcelUuid)>=android.permission.MANAGE_SOUND_TRIGGER
<com.android.phone.BluetoothHandsfree$25\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiSettings\:\ void\ refreshAccessPoints()>=android.permission.ACCESS_WIFI_STATE
<com.android.calendar.month.SimpleDayPickerFragment\:\ void\ onResume()>=android.permission.WRITE_CALENDAR
<com.android.calendar.DayFragment\:\ android.view.View\ makeView()>=android.permission.READ_CALENDAR
<com.android.phone.PhoneInterfaceManager\:\ boolean\ setRadioPower(boolean)>=android.permission.MODIFY_PHONE_STATE
<com.android.email.activity.MessageFileViewFragment\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.ContactListEmptyView\:\ boolean\ isSyncActive()>=android.permission.READ_SYNC_STATS
<com.android.exchange.EmailSyncAdapterService\:\ void\ performSync(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker$1\:\ void\ onPostExecute(java.lang.Boolean)>=android.permission.BLUETOOTH
<com.android.browser.PhoneUi\:\ void\ hideNavScreen(int,boolean)>=android.permission.GET_ACCOUNTS
<com.android.systemui.statusbar.phone.PhoneStatusBar$NotificationClicker\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.app.SlideshowPage$1\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ getPreferredNetworkType(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.OtaUtils\:\ void\ otaShowSuccessFailure()>=android.permission.BLUETOOTH
<com.android.contacts.ContactSaveService\:\ void\ createRawContact(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.Transaction\:\ void\ notifyObservers()>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneBase\:\ void\ queryCdmaRoamingPreference(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ void\ setName(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ getCrossProfileContactsSearchDisabled(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.LocationManagerService\:\ void\ requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>=android.permission.ACCESS_COARSE_LOCATION
<android.bluetooth.IBluetooth\:\ int\ addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ void\ startTethering(int,android.os.ResultReceiver,boolean)>=android.permission.ACCESS_NETWORK_STATE, android.permission.TETHER_PRIVILEGED
<com.android.settings.Settings$DisplaySettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.systemui.screenshot.SaveImageInBackgroundTask\:\ void\ <init>=android.permission.VIBRATE
<com.android.deskclock.SetAlarm$3\:\ void\ onClick(android.view.View)>=android.permission.WRITE_SETTINGS
<com.android.mms.ui.AudioAttachmentView\:\ void\ access$000(com.android.mms.ui.AudioAttachmentView)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ImageEncoder\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ acceptCall()>=android.permission.WAKE_LOCK
<com.android.providers.contacts.ContactsProvider2\:\ void\ updateContactsAccountCount(android.accounts.Account[])>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.SepiaFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ android.os.health.HealthStatsParceler[]\ takeUidSnapshots([int)>=android.permission.BATTERY_STATS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ notifyNoData(com.android.internal.telephony.DataConnection$FailCause,com.android.internal.telephony.ApnContext)>=android.permission.BROADCAST_STICKY
<com.android.mms.transaction.NotificationPlayer\:\ void\ access$500(com.android.mms.transaction.NotificationPlayer,com.android.mms.transaction.NotificationPlayer$Command)>=android.permission.WAKE_LOCK
<android.app.ActivityManagerNative\:\ java.util.List\ getTasks(int,int,android.app.IThumbnailReceiver)>=android.permission.GET_TASKS
<com.android.server.wm.InputMonitor\:\ long\ notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ iccIO(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.server.BluetoothA2dpService\:\ boolean\ isA2dpPlaying(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.list.ContactPickerFragment\:\ void\ onClose()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ dispose()>=android.permission.WAKE_LOCK
<com.android.calendar.GeneralPreferences\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WRITE_CALENDAR
<com.android.server.ConnectivityService\:\ void\ access$800(com.android.server.ConnectivityService,android.net.NetworkInfo)>=android.permission.BROADCAST_STICKY
<com.android.browser.BrowserActivity\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService\:\ android.net.sip.ISipSession\ createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener,java.lang.String)>=android.permission.USE_SIP
<com.android.settings.bluetooth.BluetoothSettings$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.server.appwidget.AppWidgetServiceImpl\:\ void\ updateAppWidgetIds(java.lang.String,[int,android.widget.RemoteViews)>=android.permission.BIND_APPWIDGET
<com.android.exchange.EasSyncService\:\ boolean\ setupService()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.ITelephonyRegistry$Stub\:\ void\ listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.contacts.calllog.CallLogAdapter\:\ boolean\ queryContactInfo(java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.ApplicationSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isSystemOnlyUser(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.content.ContentService\:\ boolean\ isSyncPending(android.accounts.Account,java.lang.String,android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.READ_SYNC_STATS
<android.content.IContentService$Stub\:\ void\ addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.email.activity.MessageListFragment$MessageOpenTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl\:\ java.lang.Object\ next()>=android.permission.READ_CALENDAR
<android.media.AsyncPlayer\:\ void\ enqueueLocked(android.media.AsyncPlayer$Command)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ requestTraversalLocked()>=android.permission.WAKE_LOCK
<android.content.MutableContextWrapper\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.bluetooth.IBluetoothA2dp\:\ boolean\ suspendSink(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.calendar.CalendarController\:\ void\ refreshCalendars()>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.keyboard.LatinKeyboardView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.WRITE_CONTACTS
<com.android.contacts.SpecialCharSequenceMgr\:\ boolean\ handleChars(android.content.Context,java.lang.String)>=android.permission.READ_PHONE_STATE
<android.bluetooth.IBluetooth\:\ boolean\ cancelPairingUserInput(java.lang.String)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivity$41\:\ void\ onContentChanged(com.android.mms.ui.MessageListAdapter)>=android.permission.WRITE_SMS
<android.content.IContentService\:\ void\ setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ access$3700(com.android.mms.ui.ComposeMessageActivity,long)>=android.permission.WRITE_SMS
<com.android.exchange.EasOutboxService\:\ com.android.exchange.EasResponse\ sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity,int)>=android.permission.WAKE_LOCK
<com.android.exchange.EasSyncService\:\ android.os.Bundle\ validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$ProvisionDiscoveryState\:\ boolean\ processMessage(android.os.Message)>=android.permission.GET_TASKS
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy\:\ java.util.List\ getAdnRecordsInEf(int)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine$DefaultState\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.server.connectivity.Tethering\:\ void\ sendTetherStateChangedBroadcast()>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetoothPbap$Stub\:\ boolean\ isConnected(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.activities.PeopleActivity\:\ void\ onBackPressed()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ setMute(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ int\ getState()>=android.permission.BLUETOOTH
<com.android.settings.Settings$AdvancedWifiSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.settings.users.UserDetailsSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.calendar.month.MonthListView\:\ void\ init(android.content.Context)>=android.permission.READ_CALENDAR
<com.android.mms.ui.ComposeMessageActivity$4\:\ void\ run()>=android.permission.WRITE_SMS
<com.android.settings.Settings$CryptKeeperSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<android.preference.VolumePreference\:\ boolean\ onKey(android.view.View,int,android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.server.statusbar.StatusBarManagerService\:\ void\ expandNotificationsPanel()>=android.permission.EXPAND_STATUS_BAR
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.String[]\ getAccountTypesWithManagementDisabledAsUser(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ void\ refreshProfilePreference(android.preference.CheckBoxPreference,com.android.settings.bluetooth.LocalBluetoothProfile)>=android.permission.BLUETOOTH
<android.os.PowerManager$WakeLock\:\ void\ setWorkSource(android.os.WorkSource)>=android.permission.WAKE_LOCK
<com.android.soundrecorder.Recorder\:\ void\ clear()>=android.permission.WAKE_LOCK
<com.android.mms.ui.SlideViewInterface\:\ void\ setAudio(android.net.Uri,java.lang.String,java.util.Map)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService$1\:\ void\ onServiceConnected(int,android.bluetooth.BluetoothProfile)>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.LatinIME\:\ void\ access$300(com.android.inputmethod.latin.LatinIME,android.view.inputmethod.EditorInfo,boolean)>=android.permission.WRITE_CONTACTS
<android.server.BluetoothService\:\ int\ addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.providers.calendar.CalendarProvider2\:\ void\ doProcessEventRawTimes(java.lang.String,java.lang.String)>=android.permission.READ_CALENDAR
<com.android.server.location.ComprehensiveCountryDetector\:\ void\ setCountryListener(android.location.CountryListener)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.launcher2.WallpaperChooserDialogFragment\:\ void\ selectWallpaper(int)>=android.permission.SET_WALLPAPER
<com.android.browser.AddBookmarkPage\:\ void\ completeOrCancelFolderNaming(boolean)>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.GrainFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<java.net.Socket\:\ void\ <init>=android.permission.INTERNET
<com.android.internal.policy.impl.PhoneWindowManager$8\:\ void\ run()>=android.permission.EXPAND_STATUS_BAR
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ isEnabled()>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ java.lang.String[]\ getTetherableBluetoothRegexs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ConversationList$8\:\ void\ run()>=android.permission.WRITE_SMS
<android.media.IAudioService\:\ void\ reloadAudioSettings()>=android.permission.WRITE_SETTINGS
<com.android.mms.transaction.ReadRecTransaction\:\ byte[]\ sendPdu(long,byte[])>=android.permission.CHANGE_NETWORK_STATE
<com.android.server.wifi.WifiServiceImpl\:\ int\ getAllowScansWithTraffic()>=android.permission.ACCESS_WIFI_STATE
<android.provider.Browser\:\ void\ deleteHistoryWhere(android.content.ContentResolver,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.vcard.VCardEntry$SipData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ updateServiceLocation()>=android.permission.WAKE_LOCK
<com.android.providers.contacts.ContactsProvider2\:\ long\ insertStatusUpdate(android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.accounts.AccountManagerService\:\ void\ removeAccountAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.settings.TetherSettings\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.mms.ui.SlideView\:\ void\ stopAudio()>=android.permission.WAKE_LOCK
<android.accounts.AccountManager\:\ java.lang.String\ blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>=android.permission.GET_ACCOUNTS
<com.android.calendar.event.EditEventView$DateListener\:\ void\ onDateSet(android.widget.DatePicker,int,int,int)>=android.permission.READ_CALENDAR
<com.android.exchange.adapter.ContactsSyncAdapter\:\ void\ cleanup()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.RecentApplicationsDialog\:\ void\ onClick(android.view.View)>=android.permission.REORDER_TASKS
<android.net.sip.SipManager\:\ android.net.sip.SipAudioCall\ takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall$Listener)>=android.permission.USE_SIP
<android.bluetooth.BluetoothHealth\:\ boolean\ connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<com.android.systemui.media.RingtonePlayer$1\:\ void\ play(android.os.IBinder,android.net.Uri,int)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService\:\ void\ open(long[],int)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.CommandQueue$Callbacks\:\ void\ hideSearchPanel()>=android.permission.VIBRATE
<com.android.browser.TabControl\:\ boolean\ removeTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<com.android.calendar.alerts.AlertActivity$1\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.WRITE_CALENDAR
<com.android.server.ThrottleService$DataRecorder\:\ java.io.File\ getDataFile()>=android.permission.READ_PHONE_STATE
<com.android.emailcommon.service.IAccountService$Stub$Proxy\:\ java.lang.String\ getDeviceId()>=android.permission.READ_PHONE_STATE
<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder\:\ boolean\ sendData(android.bluetooth.BluetoothDevice,java.lang.String)>=android.permission.BLUETOOTH_ADMIN
<com.android.settings.Settings$PrivacySettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.phone.PhoneInterfaceManager\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.CALL_PHONE
<com.android.inputmethod.keyboard.LatinKeyboardView\:\ void\ invokeCodeInput(int)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.ServiceStateTracker\:\ void\ hangupAndPowerOff()>=android.permission.WAKE_LOCK
<com.android.browser.homepages.RequestHandler\:\ void\ writeTemplatedIndex()>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<android.filterpacks.imageproc.ImageSlicer\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.EdgeView\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ToRGBAFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ boolean\ setRadio(int,boolean)>=android.permission.CHANGE_NETWORK_STATE
<android.server.BluetoothService\:\ java.lang.String\ getAddressFromObjectPath(java.lang.String)>=android.permission.BLUETOOTH
<android.net.wifi.WifiManager\:\ boolean\ reconnect()>=android.permission.CHANGE_WIFI_STATE
<android.bluetooth.BluetoothAdapter\:\ boolean\ enable()>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<android.app.StatusBarManager\:\ void\ collapse()>=android.permission.EXPAND_STATUS_BAR
<com.android.phone.InCallScreen\:\ void\ dumpBluetoothState()>=android.permission.BLUETOOTH
<com.android.server.am.BatteryStatsService\:\ void\ noteResetFlashlight()>=android.permission.UPDATE_DEVICE_STATS
<android.bluetooth.BluetoothGatt\:\ void\ disconnect()>=android.permission.BLUETOOTH
<android.net.IConnectivityManager$Stub\:\ java.lang.String[]\ getTetheredIfacePairs()>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.LomoishFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getLine1NumberForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.app.IActivityManager\:\ void\ moveTaskToFront(int,int,android.os.Bundle)>=android.permission.REORDER_TASKS
<android.nfc.tech.NfcA\:\ int\ getTimeout()>=android.permission.NFC
<com.android.musicfx.ControlPanelEffect\:\ void\ initEffectsPreferences(android.content.Context,java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.server.wm.DragState\:\ boolean\ notifyDropLw(float,float)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.PasswordUnlockScreen\:\ boolean\ onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>=android.permission.GET_ACCOUNTS
<com.android.settings.Settings$AccessibilitySettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ saveDraft(boolean)>=android.permission.RECEIVE_SMS
<com.android.providers.media.RingtonePickerActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.webkit.WebViewProvider\:\ void\ clearView()>=android.permission.WAKE_LOCK
<com.android.server.tv.TvInputManagerService$BinderService\:\ java.util.List\ getDvbDeviceList()>=android.permission.DVB_DEVICE
<com.android.internal.widget.WaveView\:\ boolean\ onHoverEvent(android.view.MotionEvent)>=android.permission.WAKE_LOCK
<android.content.ContentResolver\:\ boolean\ isSyncPending(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.settings.tts.TtsEngineSettingsFragment\:\ void\ access$100(com.android.settings.tts.TtsEngineSettingsFragment)>=android.permission.WRITE_SETTINGS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ enqueueNotification(android.net.NetworkPolicy,int,long)>=android.permission.VIBRATE
<com.android.emailcommon.service.IEmailService$Stub$Proxy\:\ int\ searchMessages(long,com.android.emailcommon.service.SearchParams,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder\:\ boolean\ setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String)>=android.permission.BLUETOOTH_ADMIN
<com.android.quicksearchbox.Source\:\ com.android.quicksearchbox.SourceResult\ getSuggestions(java.lang.String,int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.opp.BluetoothOppTransferAdapter\:\ void\ bindView(android.view.View,android.content.Context,android.database.Cursor)>=android.permission.BLUETOOTH
<com.android.mms.ui.ConversationList$7\:\ boolean\ onKey(android.view.View,int,android.view.KeyEvent)>=android.permission.READ_SMS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ gotoIdleAndNotifyDataConnection(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ access$300(com.android.internal.policy.impl.KeyguardViewMediator,int)>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ void\ access$200(com.android.server.InputMethodManagerService,java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.server.InputMethodManagerService\:\ void\ setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.WRITE_SECURE_SETTINGS
<com.android.phone.InCallScreen\:\ void\ resetInCallScreenMode()>=android.permission.BLUETOOTH
<android.app.backup.IBackupManager$Stub$Proxy\:\ void\ setBackupEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.browser.Bookmarks\:\ void\ addBookmark(android.content.Context,boolean,java.lang.String,java.lang.String,android.graphics.Bitmap,long)>=android.permission.GET_ACCOUNTS
<com.android.mms.transaction.NotificationPlayer$CreationAndCompletionThread\:\ void\ run()>=android.permission.WAKE_LOCK
<android.server.BluetoothEventLoop\:\ java.lang.String\ checkPairingRequestAndGetAddress(java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.server.AppOpsService\:\ int\ startOperation(android.os.IBinder,int,int,java.lang.String)>=android.permission.UPDATE_APP_OPS_STATS
<android.server.BluetoothEventLoop\:\ void\ onHealthDevicePropertyChanged(java.lang.String,java.lang.String[])>=android.permission.BLUETOOTH
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ android.bluetooth.BluetoothActivityEnergyInfo\ reportActivityInfo()>=android.permission.BLUETOOTH_PRIVILEGED
<com.android.gallery3d.ui.PhotoView\:\ void\ switchToFirstImage()>=android.permission.VIBRATE
<com.android.settings.Settings$DateTimeSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<android.media.IAudioService$Stub\:\ void\ dispatchMediaKeyEvent(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothHeadset\:\ boolean\ isEnabled()>=android.permission.BLUETOOTH
<android.filterfw.core.Filter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.systemui.screenshot.GlobalScreenshot\:\ void\ notifyScreenshotError(android.content.Context,android.app.NotificationManager)>=android.permission.VIBRATE
<android.media.AudioManager\:\ boolean\ isBluetoothA2dpOn()>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.exchange.ExchangeService\:\ void\ done(com.android.exchange.AbstractSyncService)>=android.permission.WAKE_LOCK
<com.android.mms.util.Recycler$SmsRecycler\:\ android.database.Cursor\ getAllThreads(android.content.Context)>=android.permission.RECEIVE_SMS
<com.android.internal.app.IBatteryStats$Stub\:\ long\ getAwakeTimeBattery()>=android.permission.BATTERY_STATS
<com.android.server.display.DisplayManagerService$BinderService\:\ void\ forgetWifiDisplay(java.lang.String)>=android.permission.CONFIGURE_WIFI_DISPLAY
<com.android.phone.BluetoothHandsfree\:\ void\ disconnectHeadset()>=android.permission.BLUETOOTH
<android.content.ContentResolver\:\ java.util.List\ getPeriodicSyncs(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setMasterVolumeMuted(android.content.ComponentName,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.audio.AudioService\:\ void\ setVolumeController(android.media.IVolumeController)>=android.permission.STATUS_BAR_SERVICE
<com.android.providers.applications.ApplicationsProvider$MyPackageMonitor\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.widget.multiwaveview.GlowPadView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.BLUETOOTH
<com.android.internal.telephony.DataConnectionTracker\:\ void\ notifyOffApnsOfAvailability(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.contacts.detail.ContactDetailFragment$QuickFix\:\ void\ execute()>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.MessagingNotification\:\ int\ getDownloadFailedMessageCount(android.content.Context)>=android.permission.READ_SMS
<android.net.ConnectivityManager\:\ int\ startUsingNetworkFeature(int,java.lang.String)>=android.permission.ACCESS_NETWORK_STATE, android.permission.ACCESS_WIFI_STATE, android.permission.CHANGE_NETWORK_STATE
<com.android.settings.Settings$DataUsageSummaryActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.settings.accounts.AccountPreferenceBase\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.nfc.tech.MifareUltralight\:\ byte[]\ readPages(int)>=android.permission.NFC
<android.app.backup.IBackupManager$Stub$Proxy\:\ void\ restoreAtInstall(java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.RuimRecords\:\ void\ setVoiceCallForwardingFlag(int,boolean)>=android.permission.WAKE_LOCK
<com.android.inputmethod.pinyin.SkbContainer\:\ boolean\ onTouch(android.view.View,android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.calendar.AllInOneActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.camera.VideoCamera\:\ void\ gotoGallery()>=android.permission.VIBRATE
<com.android.server.power.PowerManagerService$BinderService\:\ void\ updateWakeLockUids(android.os.IBinder,[int)>=android.permission.UPDATE_DEVICE_STATS, android.permission.WAKE_LOCK
<com.android.camera.EffectsRecorder\:\ void\ startRecording()>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setNetworkSelectionModeAutomatic(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.nfc.NfcService\:\ void\ onRemoteEndpointDiscovered(com.android.nfc.DeviceHost$TagEndpoint)>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ boolean\ setNetworkSelectionModeManual(int,com.android.internal.telephony.OperatorInfo,boolean)>=android.permission.MODIFY_PHONE_STATE
<com.android.browser.AddBookmarkPage\:\ android.net.Uri\ getUriForFolder(long)>=android.permission.GET_ACCOUNTS
<com.android.browser.Tab\:\ void\ updateShouldCaptureThumbnails()>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.ContrastFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$WifiSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.email.mail.store.ImapStore\:\ android.os.Bundle\ autoDiscover(android.content.Context,java.lang.String,java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.settings.AccessibilitySettings\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ hangupWaitingOrBackground()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.LocalBluetoothPreferences\:\ boolean\ shouldShowDialogInForeground(android.content.Context,java.lang.String)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.AlbumPage$7\:\ void\ run()>=android.permission.ACCESS_NETWORK_STATE
<android.content.SyncManager\:\ void\ cancelActiveSync(android.accounts.Account,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactPickerFragment\:\ void\ prepareEmptyView()>=android.permission.READ_SYNC_STATS
<com.android.internal.telephony.RIL\:\ void\ explicitCallTransfer(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pManager\:\ android.net.wifi.p2p.WifiP2pManager$Channel\ initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>=android.permission.ACCESS_WIFI_STATE, android.permission.CHANGE_WIFI_STATE
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.server.pm.ShutdownThread\:\ void\ rebootSafeMode(android.content.Context,boolean)>=android.permission.WAKE_LOCK
<android.os.storage.IMountService$Stub$Proxy\:\ int\ formatVolume(java.lang.String)>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<com.android.exchange.ExchangeService\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wm.WindowManagerService$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.quicksearchbox.google.GoogleSuggestClient\:\ com.android.quicksearchbox.SourceResult\ getSuggestionsExternal(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.net.VpnService\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.nfc.INfcTag$Stub$Proxy\:\ boolean\ isNdef(int)>=android.permission.NFC
<com.android.settings.DateTimeSettingsSetupWizard\:\ void\ onClick(android.view.View)>=android.permission.SET_TIME_ZONE
<android.net.IThrottleManager\:\ long\ getCliffThreshold(java.lang.String,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.net.NetworkPolicyManagerService\:\ void\ access$1300(com.android.server.net.NetworkPolicyManagerService)>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.alerts.NotificationMgr\:\ void\ notify(java.lang.String,int,com.android.calendar.alerts.AlertService$NotificationWrapper)>=android.permission.VIBRATE
<com.android.phone.PhoneInterfaceManager\:\ boolean\ endCallForSubscriber(int)>=android.permission.CALL_PHONE
<com.android.server.pm.PackageManagerService\:\ void\ loadMediaPackages(java.util.HashMap,int[],java.util.HashSet)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ android.content.pm.ParceledListSlice\ retrievePreRebootSecurityLogs(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.server.BluetoothService\:\ void\ dumpHeadsetService(java.io.PrintWriter)>=android.permission.BLUETOOTH
<com.android.server.MountService\:\ void\ setDebugFlags(int,int)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.settings.SecuritySettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.os.IVibratorService$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.tablet.TabletStatusBar\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.VIBRATE
<com.android.phone.DTMFTwelveKeyDialer\:\ void\ openDialer(boolean)>=android.permission.BLUETOOTH
<com.android.contacts.activities.GroupEditorActivity$1\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<android.provider.Browser\:\ void\ deleteFromHistory(android.content.ContentResolver,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.email.activity.MessageCompose$6\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.emailcommon.service.EmailServiceProxy$1\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.inputmethod.InputMethodPreference$1\:\ void\ onClick(android.view.View)>=android.permission.WRITE_SETTINGS
<com.android.exchange.EasOutboxService\:\ boolean\ sendSettings()>=android.permission.WAKE_LOCK
<com.android.emailcommon.utility.Utility$ForEachAccount\:\ void\ onPostExecute(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.SuggestionsAdapter$CursorSource\:\ void\ runQuery(java.lang.CharSequence)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.content.PackageMonitor\:\ void\ onSomePackagesChanged()>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ setPreferredNetworkType(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.filterpacks.base.FrameFetch\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.net.IConnectivityManager\:\ android.net.NetworkState[]\ getAllNetworkState()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.RIL\:\ void\ processUnsolicited(android.os.Parcel)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ImageCombineFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.util.StateMachine$SmHandler\:\ void\ processMsg(android.os.Message)>=android.permission.BLUETOOTH
<com.android.email.activity.MessageCompose$QuickResponseChecker\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onCleanUpConnection(boolean,int,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.calendar.DayView\:\ void\ reloadEvents()>=android.permission.READ_CALENDAR
<com.android.bluetooth.pbap.BluetoothPbapService$2\:\ android.bluetooth.BluetoothDevice\ getClient()>=android.permission.BLUETOOTH
<android.app.backup.IBackupManager\:\ void\ clearBackupData(java.lang.String)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.LomoishFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.OtaUtils\:\ void\ onClickOtaSpeakerButton()>=android.permission.BLUETOOTH
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ handleAccessibilityEnabledSettingChangedLocked()>=android.permission.WRITE_SETTINGS
<com.android.server.VibratorService\:\ void\ access$200(com.android.server.VibratorService)>=android.permission.VIBRATE
<com.android.server.DeviceStorageMonitorService\:\ void\ clearCache()>=android.permission.CLEAR_APP_CACHE
<com.android.gallery3d.app.AlbumSetPage\:\ void\ onLongTap(int)>=android.permission.VIBRATE
<android.app.IActivityManager\:\ android.content.Intent\ registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.exchange.adapter.CalendarSyncAdapter\:\ boolean\ isSyncable()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wifi.WifiServiceImpl\:\ void\ setAllowScansWithTraffic(int)>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ getAidForAppType(int,int)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.settings.bluetooth.DockService\:\ boolean\ hasOtherConnectedDevices(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.VIBRATE
<com.android.browser.Tab\:\ void\ persistThumbnail()>=android.permission.GET_ACCOUNTS
<android.server.BluetoothPanProfileHandler\:\ boolean\ connectPanDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.browser.BrowserBackupAgent\:\ void\ onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>=android.permission.GET_ACCOUNTS
<com.android.email.activity.MessageListFragment\:\ void\ onLoadMoreMessages()>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.contacts.LegacyApiSupport\:\ int\ updateExtensions(long,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<android.media.AudioService\:\ void\ clearAllScoClients(int,boolean)>=android.permission.BLUETOOTH
<com.android.systemui.statusbar.CommandQueue$Callbacks\:\ void\ animateCollapse(int)>=android.permission.VIBRATE
<com.android.exchange.ExchangeService$2\:\ int\ searchMessages(long,com.android.emailcommon.service.SearchParams,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.LocationManagerService\:\ android.location.Location\ getLastLocation(android.location.LocationRequest,java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.internal.telephony.UiccSmsController\:\ boolean\ updateMessageOnIccEfForSubscriber(int,java.lang.String,int,int,[byte)>=android.permission.RECEIVE_SMS, android.permission.SEND_SMS
<com.android.camera.VideoCamera\:\ void\ initializeEffectsPreview()>=android.permission.RECORD_AUDIO
<android.net.IConnectivityManager$Stub\:\ java.lang.String[]\ getTetherableUsbRegexs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ animateCollapse(int,float)>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ onDisconnect(com.android.internal.telephony.Connection$DisconnectCause)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onDataSetupComplete(android.os.AsyncResult)>=android.permission.WAKE_LOCK
<com.android.settings.DevelopmentSettings\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_SETTINGS
<com.android.internal.widget.RotarySelector\:\ void\ vibrate(long)>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.CallLogAdapter\:\ void\ bindStandAloneView(android.view.View,android.content.Context,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<android.webkit.HTML5VideoViewProxy$VideoPlayer\:\ void\ pause(android.webkit.HTML5VideoViewProxy)>=android.permission.WAKE_LOCK
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ addVendorCommandListener(android.hardware.hdmi.IHdmiVendorCommandListener,int)>=android.permission.HDMI_CEC
<com.android.phone.BluetoothHandsfree\:\ android.bluetooth.AtCommandResult\ redial()>=android.permission.BLUETOOTH
<android.filterpacks.base.InputStreamSource\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.deskclock.AlarmClock\:\ void\ updateAlarm(boolean,com.android.deskclock.Alarm)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.GLRootView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.XLargeUi\:\ boolean\ onBackKey()>=android.permission.GET_ACCOUNTS
<com.android.settings.inputmethod.UserDictionaryAddWordContents\:\ java.util.ArrayList\ getLocalesList(android.app.Activity)>=android.permission.READ_USER_DICTIONARY
<com.android.providers.userdictionary.UserDictionaryProvider\:\ android.net.Uri\ insert(android.net.Uri,android.content.ContentValues)>=android.permission.WRITE_USER_DICTIONARY
<com.android.internal.policy.impl.PhoneWindowManager\:\ boolean\ performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState,int,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ int\ processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>=android.permission.WAKE_LOCK
<android.filterpacks.ui.SurfaceTargetFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.calendar.DayView\:\ void\ setSelected(android.text.format.Time,boolean,boolean)>=android.permission.READ_CALENDAR
<android.content.SyncManager\:\ void\ onUserRemoved(android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.contacts.dialpad.DialpadFragment\:\ android.view.View\ onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>=android.permission.READ_PHONE_STATE
<com.android.server.tv.TvInputManagerService$BinderService\:\ void\ setParentalControlsEnabled(boolean,int)>=android.permission.MODIFY_PARENTAL_CONTROLS
<com.android.calendar.event.AttendeesView\:\ android.view.View\ updateAttendeeView(com.android.calendar.event.EditEventHelper$AttendeeItem)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.sip.SipPhone\:\ void\ sendBurstDtmf(java.lang.String,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.nfc.NfcService$EnableDisableTask\:\ java.lang.Void\ doInBackground(java.lang.Integer[])>=android.permission.BLUETOOTH
<com.android.settings.net.UidDetailProvider\:\ com.android.settings.net.UidDetail\ getUidDetail(int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.app.KeyguardManager\:\ void\ exitKeyguardSecurely(android.app.KeyguardManager$OnKeyguardExitResult)>=android.permission.DISABLE_KEYGUARD
<android.filterpacks.imageproc.NegativeFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ long\ getPasswordExpiration(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.Settings$DateTimeSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.server.NetworkManagementService\:\ java.lang.String[]\ listTtys()>=android.permission.CONNECTIVITY_INTERNAL
<android.test.mock.MockApplication\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.providers.media.MediaProvider\:\ android.os.ParcelFileDescriptor\ openFileAndEnforcePathPermissionsHelper(android.net.Uri,java.lang.String)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.mms.ui.AudioAttachmentView$1\:\ void\ onCompletion(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.LockScreen$1\:\ void\ onUserChanged(int)>=android.permission.GET_ACCOUNTS
<com.android.voicedialer.VoiceDialerActivity\:\ void\ updateBluetoothParameters(boolean)>=android.permission.BLUETOOTH
<com.android.internal.telephony.IccProvider\:\ boolean\ updateIccRecordInEf(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory\:\ com.android.calendar.widget.CalendarAppWidgetModel\ buildAppWidgetModel(android.content.Context,android.database.Cursor,java.lang.String)>=android.permission.READ_CALENDAR
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ prepareNavigationBarView()>=android.permission.VIBRATE
<com.android.emailcommon.service.IEmailService$Stub$Proxy\:\ android.os.Bundle\ validate(com.android.emailcommon.provider.HostAuth)>=android.permission.READ_CALENDAR
<com.android.providers.contacts.ContactsProvider2\:\ int\ delete(android.net.Uri,java.lang.String,java.lang.String[])>=android.permission.WRITE_SOCIAL_STREAM
<com.android.internal.policy.impl.PatternUnlockScreen$2\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<com.android.phone.CallNotifier\:\ void\ onMwiChanged(boolean)>=android.permission.VIBRATE
<android.service.dreams.DreamService\:\ void\ wakeUp()>=android.permission.BROADCAST_STICKY
<com.android.phone.PhoneInterfaceManager\:\ int\ getDataNetworkTypeForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.settings.vpn2.VpnSettings\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.WifiManager\:\ void\ setFrequencyBand(int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ access$2800(com.android.mms.ui.ComposeMessageActivity,long)>=android.permission.WRITE_SMS
<com.android.musicfx.ActivityMusic$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.contacts.list.ContactListFilterControllerImpl\:\ com.android.contacts.list.ContactListFilterController\ createContactListFilterController(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask\:\ java.lang.Long\ doInBackground(java.lang.Void[])>=android.permission.READ_SYNC_SETTINGS
<android.telephony.TelephonyManager\:\ java.lang.String\ getDeviceSoftwareVersion()>=android.permission.READ_PHONE_STATE
<com.android.phone.SimContacts\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.KeyguardViewManager\:\ void\ show()>=android.permission.GET_ACCOUNTS
<com.android.server.location.ComprehensiveCountryDetector$1\:\ void\ onCountryDetected(android.location.Country)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.inputmethod.keyboard.LatinKeyboardView\:\ boolean\ dispatchHoverEvent(android.view.MotionEvent)>=android.permission.WRITE_CONTACTS
<com.android.mms.data.WorkingMessage\:\ int\ setAttachment(int,android.net.Uri,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.editor.ContactEditorFragment\:\ boolean\ revert()>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothHeadset\:\ int\ getAudioState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.wifi.WifiServiceImpl\:\ boolean\ setWifiEnabled(boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.contacts.list.JoinContactListFragment\:\ void\ prepareEmptyView()>=android.permission.READ_SYNC_STATS
<android.bluetooth.IBluetoothHeadset$Stub\:\ boolean\ stopVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.detail.ContactDetailTabCarousel\:\ void\ loadData(com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.camera.VideoCamera\:\ void\ onPreviewTextureCopied()>=android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.RotateFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.activities.PhotoSelectionActivity\:\ void\ displayPhoto()>=android.permission.WRITE_CONTACTS
<com.android.settings.AccessibilitySettings$ToggleSwitch$OnBeforeCheckedChangeListener\:\ boolean\ onBeforeCheckedChanged(com.android.settings.AccessibilitySettings$ToggleSwitch,boolean)>=android.permission.WRITE_SETTINGS
<android.view.IWindowManager$Stub$Proxy\:\ void\ setNewConfiguration(android.content.res.Configuration)>=android.permission.WAKE_LOCK
<android.media.MediaScanner$MyMediaScannerClient\:\ android.net.Uri\ doScanFile(java.lang.String,java.lang.String,long,long,boolean,boolean,boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.VibratorService\:\ void\ startNextVibrationLocked()>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME\:\ void\ handleBackspace(int)>=android.permission.WRITE_CONTACTS
<android.bluetooth.IBluetoothA2dp$Stub$Proxy\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.SimSmsInterfaceManager\:\ boolean\ disableCellBroadcast(int)>=android.permission.WAKE_LOCK
<com.android.settings.wifi.WifiAPITest$3\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.CHANGE_WIFI_STATE
<com.android.bluetooth.pbapclient.PbapClientService$BluetoothPbapClientBinder\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.util.List\ getPermittedAccessibilityServicesForUser(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.voicemail.VoicemailPlaybackPresenter\:\ void\ handleCompletion(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.mms.ui.MessageUtils\:\ java.lang.String\ getMessageDetails(android.content.Context,android.database.Cursor,int)>=android.permission.WRITE_SMS
<com.android.calendar.event.AttendeesView\:\ android.view.View\ constructAttendeeView(com.android.calendar.event.EditEventHelper$AttendeeItem)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.ISms$Stub\:\ java.util.List\ getAllMessagesFromIccEf()>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub\:\ int\ getWifiEnabledState()>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.PhoneApp\:\ void\ dismissCallScreen()>=android.permission.BLUETOOTH
<android.server.BluetoothA2dpService\:\ boolean\ connectSinkInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ onConnectedInOrOut()>=android.permission.WAKE_LOCK
<android.media.MediaPlayer\:\ void\ setWakeMode(android.content.Context,int)>=android.permission.WAKE_LOCK
<com.android.camera.ui.InLineSettingKnob\:\ boolean\ changeIndex(int)>=android.permission.RECORD_AUDIO
<android.app.ContextImpl$ApplicationContentResolver\:\ java.util.List\ getCurrentSyncs()>=android.permission.READ_SYNC_STATS
<com.android.gallery3d.app.DialogPicker\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1\:\ boolean\ onCustomRequest(int)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.ITelephony$Stub$Proxy\:\ java.util.List\ getAllCellInfo()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.bluetooth.opp.BluetoothOppService\:\ void\ access$2200(com.android.bluetooth.opp.BluetoothOppService,android.database.Cursor,int,boolean)>=android.permission.BLUETOOTH
<com.android.internal.telephony.ServiceStateTracker\:\ void\ enableSingleLocationUpdate()>=android.permission.WAKE_LOCK
<com.android.contacts.preference.SortOrderPreference\:\ boolean\ persistString(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.settings.WirelessSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothDevicePreference\:\ int\ compareTo(android.preference.Preference)>=android.permission.BLUETOOTH
<com.android.providers.contacts.LegacyApiSupport\:\ int\ delete(android.net.Uri,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.vcard.VCardParser\:\ void\ parseOne(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.editor.ContactEditorFragment\:\ void\ access$300(com.android.contacts.editor.ContactEditorFragment,android.content.Context,com.android.contacts.editor.RawContactEditorView)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.net.NetworkStatsService\:\ void\ access$1000(com.android.server.net.NetworkStatsService,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.CommandsInterface\:\ void\ setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.BaseCommands\:\ void\ onRadioAvailable()>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ long\ getRequiredStrongAuthTimeout(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.deviceinfo.UsbSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.group.GroupBrowseListFragment$3\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.util.NameConverter\:\ java.util.Map\ displayNameToStructuredName(android.content.Context,java.lang.String)>=android.permission.WRITE_CONTACTS
<android.filterpacks.imageproc.CrossProcessFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.widget.ChartSweepView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.WiredAccessoryObserver\:\ void\ setDeviceState(int,int,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.phone.SimContacts\:\ void\ onListItemClick(android.widget.ListView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.MountService\:\ int\ renameSecureContainer(java.lang.String,java.lang.String)>=android.permission.ASEC_RENAME
<com.android.camera.ui.IndicatorControlContainer\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<com.android.development.Connectivity$3\:\ void\ onClick(android.view.View)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setDeviceProvisioningConfigApplied()>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_USERS
<android.bluetooth.IBluetoothHeadset$Stub\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothEventManager\:\ void\ access$1400(com.android.settings.bluetooth.BluetoothEventManager,com.android.settings.bluetooth.CachedBluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler\:\ void\ resume()>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivity\:\ boolean\ handleForwardedMessage()>=android.permission.WRITE_SMS
<com.android.calendar.month.SimpleWeeksAdapter\:\ void\ refresh()>=android.permission.READ_CALENDAR
<android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.mms.transaction.Observable\:\ void\ notifyObservers()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth\:\ boolean\ setRemoteOutOfBandData(java.lang.String)>=android.permission.BLUETOOTH_ADMIN
<com.android.gallery3d.app.SlideshowPage\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<android.provider.Browser\:\ android.database.Cursor\ getVisitedLike(android.content.ContentResolver,java.lang.String)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<android.net.wifi.WifiStateMachine$ObtainingIpState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.am.BatteryStatsService\:\ void\ noteUserActivity(int,int)>=android.permission.UPDATE_DEVICE_STATS
<android.bluetooth.IBluetoothHeadset$Stub\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask\:\ void\ onPostExecute(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.media.MediaScanner\:\ android.net.Uri\ scanSingleFile(java.lang.String,java.lang.String,java.lang.String)>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.DuotoneFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.nfc.tech.MifareUltralight\:\ byte[]\ transceive(byte[],boolean)>=android.permission.NFC
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ isOffloadedFilteringSupported()>=android.permission.BLUETOOTH
<com.android.mms.ui.QuickContactDivot\:\ void\ assignContactFromEmail(java.lang.String,boolean)>=android.permission.WRITE_CONTACTS
<com.android.internal.preference.YesNoPreference\:\ void\ onDialogClosed(boolean)>=android.permission.GET_ACCOUNTS
<android.net.IConnectivityManager$Stub$Proxy\:\ int\ untether(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.policy.impl.PasswordUnlockScreen$4\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.internal.content.PackageMonitor\:\ void\ onPackageRemoved(java.lang.String,int)>=android.permission.WRITE_SETTINGS
<com.android.providers.media.RingtonePickerActivity\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ int\ getBluetoothState()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ boolean\ createBondOutOfBand(java.lang.String,byte[],byte[])>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.Phone$DataState)>=android.permission.BROADCAST_STICKY
<android.net.ConnectivityManager\:\ void\ requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>=android.permission.ACCESS_NETWORK_STATE, android.permission.ACCESS_WIFI_STATE, android.permission.CHANGE_NETWORK_STATE
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisablingState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.DockService\:\ void\ handleDocked(android.bluetooth.BluetoothDevice,int,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ sendSMS(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ImageCombineFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.phone.BluetoothHandsfree$20\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ supplyIccPuk2(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl\:\ void\ initialize(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.DockEventReceiver\:\ void\ beginStartingService(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ queryCallWaiting(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ int\ getRestrictBackgroundStatus()>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.UserDictionary\:\ void\ startDictionaryLoadingTaskLocked()>=android.permission.WRITE_CONTACTS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ boolean\ onWakeMotionWhenKeyguardShowingTq()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.SMSDispatcher\:\ void\ dispatch(android.content.Intent,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.exchange.ExchangeService$1\:\ void\ syncMailboxListStatus(long,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.event.EditEventView\:\ void\ setAllDayViewsVisibility(boolean)>=android.permission.READ_CALENDAR
<com.android.phone.SimContacts\:\ void\ actuallyImportOneSimContact(android.database.Cursor,android.content.ContentResolver,android.accounts.Account)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ startScan(boolean)>=android.permission.CHANGE_WIFI_STATE
<android.media.MediaRouter$RouteInfo\:\ void\ requestSetVolume(int)>=android.permission.BLUETOOTH
<android.accounts.AccountManagerService\:\ java.lang.String\ getUserData(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.systemui.SearchPanelView\:\ void\ show(boolean,boolean)>=android.permission.VIBRATE
<com.android.server.wm.WindowManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.exchange.EasSyncService\:\ com.android.exchange.EasResponse\ postAutodiscover(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost,boolean)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.ProfileProvider\:\ android.content.res.AssetFileDescriptor\ openAssetFile(android.net.Uri,java.lang.String)>=android.permission.WRITE_PROFILE
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ boolean\ startVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ separate()>=android.permission.WAKE_LOCK
<com.android.mms.transaction.MessagingNotification\:\ void\ addSmsNotificationInfos(android.content.Context,java.util.Set)>=android.permission.RECEIVE_SMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getPasswordMinimumLowerCase(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.am.ActivityManagerService\:\ void\ removeStack(int)>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.server.MountService\:\ int\ mountVolume(java.lang.String)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.music.AudioPreview\:\ void\ playPauseClicked(android.view.View)>=android.permission.WAKE_LOCK
<com.android.server.am.BroadcastQueue\:\ void\ broadcastTimeoutLocked(boolean)>=android.permission.WAKE_LOCK
<android.media.effect.effects.FillLightEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.server.NetworkManagementService\:\ void\ removeInterfaceQuota(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.settings.CryptKeeper$ValidationTask\:\ void\ onPostExecute(java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub\:\ android.hardware.soundtrigger.SoundTrigger$GenericSoundModel\ getSoundModel(android.os.ParcelUuid)>=android.permission.MANAGE_SOUND_TRIGGER
<com.android.settings.SecuritySettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.InCallScreen\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.settings.AccessibilitySettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.contacts.ContactsProvider2\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.PhoneFactory\:\ com.android.internal.telephony.Phone\ getCdmaPhone()>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub\:\ android.net.DhcpInfo\ getDhcpInfo()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.location.ComprehensiveCountryDetector$2\:\ void\ run()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.browser.provider.BrowserProvider2\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.providers.contacts.ProfileProvider\:\ android.net.Uri\ insertInTransaction(android.net.Uri,android.content.ContentValues)>=android.permission.WRITE_PROFILE
<com.android.wallpaper.grass.GrassRS\:\ void\ updateLocation()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.bluetooth.BluetoothEventManager$AdapterStateChangedHandler\:\ void\ onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.calllog.DefaultVoicemailNotifier$DefaultNameLookupQuery\:\ java.lang.String\ query(java.lang.String)>=android.permission.WRITE_CONTACTS
<android.net.IConnectivityManager\:\ void\ setGlobalProxy(android.net.ProxyProperties)>=android.permission.WRITE_SETTINGS
<android.bluetooth.BluetoothDevice\:\ android.os.ParcelUuid[]\ getUuids()>=android.permission.BLUETOOTH
<com.android.browser.SuggestionsAdapter$CompletionListener\:\ void\ onSelect(java.lang.String,int,java.lang.String)>=android.permission.GET_ACCOUNTS
<android.content.Context\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.server.wm.WindowManagerService\:\ android.graphics.Bitmap\ screenshotApplications(android.os.IBinder,int,int,int,float)>=android.permission.READ_FRAME_BUFFER
<com.android.contacts.list.DirectoryListLoader\:\ android.database.Cursor\ loadInBackground()>=android.permission.WRITE_CONTACTS
<com.android.phone.CdmaSystemSelectListPreference\:\ void\ onDialogClosed(boolean)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageFileViewFragment\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$DeviceAdminSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<android.nfc.INfcTag$Stub\:\ boolean\ isNdef(int)>=android.permission.NFC
<com.android.inputmethod.latin.suggestions.SuggestionsView$2\:\ void\ onTextInput(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.email.activity.setup.MailboxSettings$2\:\ void\ onSuccess(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ setNetworkSelectionModeAutomatic(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteStartGps(int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.contacts.ContactsActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.InputMethodManagerService\:\ void\ resetSelectedInputMethodAndSubtypeLocked(java.lang.String)>=android.permission.WRITE_SETTINGS
<android.bluetooth.BluetoothHealth\:\ android.os.ParcelFileDescriptor\ getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>=android.permission.BLUETOOTH
<com.android.wallpaper.fall.FallView\:\ void\ surfaceChanged(android.view.SurfaceHolder,int,int,int)>=android.permission.ACCESS_COARSE_LOCATION
<android.provider.Settings$Secure\:\ boolean\ putInt(android.content.ContentResolver,java.lang.String,int)>=android.permission.WRITE_SETTINGS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ boolean\ onWakeKeyWhenKeyguardShowingTq(int,boolean)>=android.permission.WAKE_LOCK
<com.android.settings.PointerSpeedPreference\:\ void\ onDialogClosed(boolean)>=android.permission.WRITE_SETTINGS
<com.android.phone.CellBroadcastSms\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.internal.util.State\:\ void\ exit()>=android.permission.BLUETOOTH
<android.nfc.NfcAdapter\:\ void\ setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])>=android.permission.NFC
<com.android.email.activity.MessageListFragment\:\ void\ onRefresh(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$DisplaySettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.CropFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.pm.ShutdownThread\:\ void\ rebootOrShutdown(boolean,java.lang.String)>=android.permission.WAKE_LOCK
<android.webkit.GeolocationService\:\ void\ registerForLocationUpdates()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ setTTYMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ void\ requestNetwork(android.net.NetworkRequest,android.app.PendingIntent)>=android.permission.ACCESS_NETWORK_STATE, android.permission.CHANGE_NETWORK_STATE
<com.android.systemui.statusbar.CommandQueue$Callbacks\:\ void\ updateNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>=android.permission.VIBRATE
<android.accounts.AccountManager\:\ boolean\ addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.server.accessibility.AccessibilityManagerService$MainHanler$2\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_SETTINGS
<com.android.settings.inputmethod.InputMethodAndLanguageSettings$SettingsObserver\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.browser.UiController\:\ com.android.browser.Tab\ openIncognitoTab()>=android.permission.GET_ACCOUNTS
<com.android.music.AudioPreview\:\ void\ start()>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewBase\:\ boolean\ dispatchKeyEvent(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.LockPatternKeyguardView$3\:\ void\ pokeWakelock()>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.UndoBarView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.ConnectivityService$FeatureUser\:\ void\ <init>=android.permission.BLUETOOTH
<com.android.server.MountService\:\ java.lang.String\ getSecureContainerFilesystemPath(java.lang.String)>=android.permission.ASEC_ACCESS
<com.android.settings.Settings$WifiP2pSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<android.media.effect.effects.SepiaEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ android.os.Bundle\ getCurrentAgFeatures(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setAutoTimeRequired(android.content.ComponentName,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.webkit.WebViewClassic\:\ void\ setNewPicture(android.webkit.WebViewCore$DrawData,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneBase\:\ void\ exitEmergencyCallbackMode()>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.SelectionManager\:\ void\ leaveSelectionMode()>=android.permission.VIBRATE
<android.net.ThrottleManager\:\ long\ getPeriodStartTime(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.net.IConnectivityManager$Stub$Proxy\:\ int\ startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp\:\ void\ enter()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.PosterizeFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.MovieControllerOverlay\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.ContactsBinaryDictionary\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.server.WifiService\:\ void\ acquireMulticastLock(android.os.IBinder,java.lang.String)>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.server.MountService\:\ int[]\ getStorageUsers(java.lang.String)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.mms.transaction.RetrieveTransaction\:\ boolean\ isDuplicateMessage(android.content.Context,com.google.android.mms.pdu.RetrieveConf)>=android.permission.READ_SMS
<com.android.music.AudioPreview$PreviewPlayer\:\ void\ pause()>=android.permission.WAKE_LOCK
<com.android.phone.CallCard\:\ void\ updateNoCall(com.android.internal.telephony.CallManager)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothA2dp\:\ boolean\ resumeSink(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.content.IContentService$Stub$Proxy\:\ void\ setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.phone.OtaUtils\:\ void\ otaShowSpcErrorNotice(int)>=android.permission.BLUETOOTH
<com.android.phone.MobileNetworkSettings\:\ void\ onResume()>=android.permission.WAKE_LOCK
<com.android.settings.deviceinfo.Memory\:\ boolean\ hasAppsAccessingStorage()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<android.accounts.IAccountManager$Stub$Proxy\:\ void\ clearPassword(android.accounts.Account)>=android.permission.MANAGE_ACCOUNTS
<com.android.server.InputMethodManagerService$3\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.providers.contacts.LegacyApiSupport\:\ int\ updatePhoto(long,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.recent.RecentsCallback\:\ void\ handleSwipe(android.view.View)>=android.permission.VIBRATE
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ setSystemAudioMode(boolean,android.hardware.hdmi.IHdmiControlCallback)>=android.permission.HDMI_CEC
<com.android.settings.Settings$WifiSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.contacts.vcard.SelectAccountActivity\:\ android.app.Dialog\ onCreateDialog(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.DeviceIdleController$BinderService\:\ void\ removePowerSaveWhitelistApp(java.lang.String)>=android.permission.DEVICE_POWER
<com.google.common.io.Resources\:\ java.util.List\ readLines(java.net.URL,java.nio.charset.Charset)>=android.permission.INTERNET
<com.android.browser.AccountsChangedReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.GET_ACCOUNTS
<android.filterpacks.base.FrameStore\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$BluetoothSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<android.view.IWindowManager\:\ void\ dismissKeyguard()>=android.permission.DISABLE_KEYGUARD
<com.android.nfc.nxp.NativeNfcManager\:\ void\ notifyLlcpLinkActivation(com.android.nfc.nxp.NativeP2pDevice)>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ boolean\ setTrust(java.lang.String,boolean)>=android.permission.BLUETOOTH
<com.android.exchange.CalendarSyncAdapterService$SyncAdapterImpl\:\ void\ onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ selectFirstFoundContactAfterDelay()>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.DownloadHandler\:\ void\ onDownloadStart(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.mms.data.Conversation\:\ com.android.mms.data.Conversation\ get(android.content.Context,android.net.Uri,boolean)>=android.permission.READ_SMS
<android.telephony.TelephonyManager\:\ java.lang.String\ getDeviceId(int)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.FixedRotationFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ acknowledgeIncomingGsmSmsWithPdu(boolean,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.app.Service\:\ boolean\ stopSelfResult(int)>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.a2dpsink.A2dpSinkService$BluetoothA2dpSinkBinder\:\ android.bluetooth.BluetoothAudioConfig\ getAudioConfig(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.email.Controller$LegacyListener\:\ void\ checkMailStarted(android.content.Context,long,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.BackupManagerService$PerformBackupTask\:\ void\ execute()>=android.permission.WAKE_LOCK
<com.android.server.WiredAccessoryObserver\:\ void\ access$300(com.android.server.WiredAccessoryObserver,int,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.exchange.EasAccountService\:\ boolean\ hasConnectivity()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter\:\ void\ onCallEnded(android.net.sip.SipAudioCall)>=android.permission.WAKE_LOCK
<com.android.calendar.EventInfoFragment\:\ void\ initAttendeesCursor(android.view.View)>=android.permission.WRITE_CONTACTS
<com.android.server.am.ActivityManagerService\:\ void\ killPackageDependents(java.lang.String,int)>=android.permission.KILL_UID
<com.android.mms.transaction.MessageStatusService\:\ android.telephony.SmsMessage\ updateMessageStatus(android.content.Context,android.net.Uri,byte[],java.lang.String)>=android.permission.RECEIVE_SMS
<android.content.IContentService$Stub$Proxy\:\ void\ setIsSyncable(android.accounts.Account,java.lang.String,int)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.phone.BluetoothHandsfree$22\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.phone.PhoneUtils\:\ boolean\ hangup(com.android.internal.telephony.CallManager)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ switchWaitingOrHoldingAndActive(android.os.Message)>=android.permission.WAKE_LOCK
<android.media.IAudioService$Stub\:\ void\ setWiredDeviceConnectionState(int,int,java.lang.String)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.NegativeFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.browser.UrlInputView\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.GET_ACCOUNTS
<com.android.contacts.list.JoinContactListFragment\:\ void\ setSearchMode(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ notifyInvalidSelection()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CallerInfo\:\ com.android.internal.telephony.CallerInfo\ doSecondaryLookupIfNecessary(android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfo)>=android.permission.WRITE_CONTACTS
<com.android.calendar.agenda.AgendaWindowAdapter\:\ void\ access$2400(com.android.calendar.agenda.AgendaWindowAdapter,com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.gsm.GsmServiceStateTracker$3\:\ void\ onChange(boolean)>=android.permission.SET_TIME_ZONE
<android.bluetooth.IBluetoothHeadset$Stub\:\ boolean\ startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.ITelephonyRegistry\:\ void\ notifyServiceState(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<android.bluetooth.BluetoothAdapter\:\ android.bluetooth.BluetoothServerSocket\ createNewRfcommSocketAndRecord(java.lang.String,java.util.UUID,boolean,boolean)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.PhotoDataAdapter$FullImageJob\:\ java.lang.Object\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.sip.SipSessionGroup$SipSessionImpl$1\:\ void\ run()>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ android.net.NetworkInfo\ getActiveNetworkInfo()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler\:\ void\ handleModeChanged(int)>=android.permission.BLUETOOTH
<com.android.email.activity.MessageOrderManager$Callback\:\ void\ onMessageNotFound()>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.BluetoothHandsfree$19\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.email.activity.MessagesAdapter$MessagesCursorLoader\:\ android.database.Cursor\ loadInBackground()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.base.FrameSource\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_CALENDAR
<com.android.gallery3d.app.PhotoPage\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.deskclock.AlarmKlaxon\:\ void\ onCreate()>=android.permission.WAKE_LOCK
<com.android.mms.data.Conversation\:\ com.android.mms.data.Conversation\ get(android.content.Context,com.android.mms.data.ContactList,boolean)>=android.permission.READ_SMS
<com.android.providers.contacts.ContactsProvider2\:\ void\ performBackgroundTask(int,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ boolean\ performGlobalAction(int)>=android.permission.INTERACT_ACROSS_USERS
<com.android.gallery3d.app.AlbumPage\:\ boolean\ onItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub\:\ java.lang.String\ getDeviceId()>=android.permission.READ_PHONE_STATE
<com.android.deskclock.AlarmReceiver$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.NetworkManagementService\:\ void\ setUidCleartextNetworkPolicy(int,int)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.email.activity.MessageViewFragmentBase$LoadAttachmentsTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.DrawOverlayFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ int\ getDrmMimeMenuStringRsrc(long)>=android.permission.WRITE_SMS
<com.android.email.EmailAddressAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wm.WindowManagerService\:\ void\ pauseKeyDispatching(android.os.IBinder)>=android.permission.MANAGE_APP_TOKENS
<com.android.exchange.ExchangeService\:\ void\ serviceRequest(long,long,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ removeUidPolicy(int,int)>=android.permission.MANAGE_NETWORK_POLICY
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ void\ requestActivityInfo(android.os.ResultReceiver)>=android.permission.BLUETOOTH_PRIVILEGED
<com.android.systemui.statusbar.policy.ToggleSlider\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$InputMethodAndSubtypeEnablerActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<android.view.WindowManagerPolicy\:\ void\ enableKeyguard(boolean)>=android.permission.WAKE_LOCK
<com.android.systemui.usb.StorageNotification\:\ void\ onStorageStateChangedAsync(java.lang.String,java.lang.String,java.lang.String)>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.SIMFileHandler\:\ void\ loadEFImgTransparent(int,int,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothAdapter\:\ java.util.Set\ getBondedDevices()>=android.permission.BLUETOOTH
<com.android.phone.PhoneUtils\:\ void\ switchHoldingAndActive(com.android.internal.telephony.Call)>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHeadsetService$6\:\ boolean\ disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ oneTouchPlay(android.hardware.hdmi.IHdmiControlCallback)>=android.permission.HDMI_CEC
<com.android.phone.PhoneInterfaceManager\:\ void\ access$000(com.android.phone.PhoneInterfaceManager)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.ImageCombineFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$AccountSyncSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.internal.telephony.DefaultPhoneNotifier\:\ void\ notifySignalStrength(com.android.internal.telephony.Phone)>=android.permission.BROADCAST_STICKY
<android.net.wifi.SupplicantStateTracker$InactiveState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.bluetooth.pbap.BluetoothPbapService$2\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.mms.data.WorkingMessage\:\ void\ access$900(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,java.lang.String,java.lang.String)>=android.permission.RECEIVE_SMS
<com.android.contacts.calllog.CallLogAdapter\:\ boolean\ access$300(com.android.contacts.calllog.CallLogAdapter,java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo)>=android.permission.READ_SYNC_SETTINGS
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser\:\ void\ commit()>=android.permission.READ_CALENDAR
<com.android.providers.downloads.SystemFacade\:\ boolean\ isActiveNetworkMetered()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy\:\ int[]\ getAdnRecordsSize(int)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactEntryListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.SlideViewInterface\:\ void\ reset()>=android.permission.WAKE_LOCK
<com.android.nfc.nxp.NativeNfcManager\:\ void\ notifySeEmvCardRemoval()>=android.permission.BLUETOOTH
<com.android.mms.data.Conversation\:\ android.net.Uri\ getUri(long)>=android.permission.WRITE_SMS
<com.android.phone.BluetoothHandsfree$23\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.email.service.AttachmentDownloadService$DownloadSet\:\ boolean\ tryStartDownload(com.android.email.service.AttachmentDownloadService$DownloadRequest)>=android.permission.READ_PHONE_STATE
<com.android.settings.Settings$AndroidBeamSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<android.nfc.tech.NfcV\:\ byte[]\ transceive(byte[],boolean)>=android.permission.NFC
<android.server.BluetoothEventLoop\:\ boolean\ isOtherSinkInNonDisconnectedState(java.lang.String)>=android.permission.BLUETOOTH
<com.android.uiautomator.core.UiDevice\:\ void\ setRotationLeft()>=android.permission.WRITE_SETTINGS
<com.android.server.pm.PackageManagerService\:\ void\ replaceSystemPackageLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>=android.permission.WAKE_LOCK
<com.android.mms.ui.SlideshowPresenter\:\ void\ presentVideo(com.android.mms.ui.SlideViewInterface,com.android.mms.model.VideoModel,com.android.mms.model.RegionModel,boolean)>=android.permission.WAKE_LOCK
<com.android.phone.NotificationMgr\:\ com.android.phone.NotificationMgr\ init(com.android.phone.PhoneApp)>=android.permission.READ_CALL_LOG
<com.android.calendar.DayView\:\ void\ updateTitle()>=android.permission.WRITE_CALENDAR
<android.net.wifi.WifiManager\:\ boolean\ is5GHzBandSupported()>=android.permission.ACCESS_WIFI_STATE
<com.android.development.Connectivity\:\ void\ onCrash()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.ToRGBFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.detail.ContactDetailUpdatesFragment\:\ com.android.contacts.model.AccountType\ access$000(com.android.contacts.detail.ContactDetailUpdatesFragment,com.android.contacts.util.StreamItemEntry)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothA2dp$Stub$Proxy\:\ boolean\ connectSinkInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.wm.WindowManagerService\:\ void\ displayReady()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothPermissionActivity\:\ java.lang.String\ createConnectionDisplayText()>=android.permission.BLUETOOTH
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ createBondOutOfBand(android.bluetooth.BluetoothDevice,int,android.bluetooth.OobData)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN, android.permission.BLUETOOTH_PRIVILEGED
<android.net.wifi.IWifiManager\:\ boolean\ saveConfiguration()>=android.permission.CHANGE_WIFI_STATE
<android.telephony.SmsManager\:\ void\ sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.READ_EXTERNAL_STORAGE, android.permission.SEND_SMS
<com.android.gallery3d.app.AlbumSetDataLoader\:\ void\ resume()>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ enableNoAutoConnect()>=android.permission.BLUETOOTH_ADMIN
<android.media.AudioService\:\ void\ dispatchMediaKeyEventForCalls(android.view.KeyEvent,boolean)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService$CompatMediaPlayer\:\ void\ stayAwake(boolean)>=android.permission.WAKE_LOCK
<com.android.phone.CdmaSubscriptionListPreference\:\ void\ onDialogClosed(boolean)>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ int\ setUsbTethering(boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.input.InputManagerService\:\ void\ access$400(com.android.server.input.InputManagerService,android.view.InputDevice[])>=android.permission.VIBRATE
<android.filterpacks.imageproc.RotateFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.SepiaFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ void\ setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>=android.permission.CHANGE_COMPONENT_ENABLED_STATE, android.permission.INTERACT_ACROSS_USERS_FULL
<android.location.LocationManager\:\ boolean\ isProviderEnabled(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.bluetooth.pbap.BluetoothPbapObexServer\:\ int\ createList(int,int,java.lang.String,java.lang.StringBuilder,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.server.LocationManagerService$ProximityListener\:\ void\ onLocationChanged(android.location.Location)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService$Receiver\:\ void\ incrementPendingBroadcastsLocked()>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$10\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.mms.transaction.RetrieveTransaction\:\ byte[]\ getPdu(java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<com.android.internal.telephony.gsm.SIMFileHandler\:\ void\ updateEFTransparent(int,byte[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.activity.setup.MailboxSettings$2\:\ void\ onSuccess(java.lang.Void)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ boolean\ prepareVpn(java.lang.String,java.lang.String,int)>=android.permission.CONTROL_VPN, android.permission.INTERACT_ACROSS_USERS_FULL
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ isDiscovering()>=android.permission.BLUETOOTH
<com.android.gallery3d.gadget.WidgetSource\:\ void\ reload()>=android.permission.ACCESS_NETWORK_STATE
<com.android.development.SyncAdapterDriver\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.opp.TestTcpServer\:\ void\ run()>=android.permission.INTERNET
<com.android.contacts.list.PhoneNumberPickerFragment\:\ void\ onStart()>=android.permission.WRITE_SETTINGS
<com.android.server.ConnectivityService\:\ void\ enforcePreference()>=android.permission.BLUETOOTH
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$3\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.DrawOverlayFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.browser.SnapshotTab\:\ void\ capture()>=android.permission.GET_ACCOUNTS
<com.android.browser.NavScreen$1\:\ void\ onRemovePosition(int)>=android.permission.GET_ACCOUNTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ installCaCert(android.content.ComponentName,[byte)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_CA_CERTIFICATES
<com.android.calendar.agenda.AgendaWindowAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.WRITE_CALENDAR
<android.app.ActivityManager\:\ void\ moveTaskToFront(int,int)>=android.permission.BROADCAST_STICKY, android.permission.REORDER_TASKS
<com.android.providers.calendar.CalendarReceiver\:\ void\ removeScheduledAlarms(android.content.ContentResolver)>=android.permission.WRITE_CALENDAR
<com.android.development.Connectivity\:\ void\ access$1400(com.android.development.Connectivity)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.RetryScheduler\:\ int\ getResponseStatus(long)>=android.permission.READ_SMS
<com.android.internal.telephony.test.SimulatedCommands\:\ void\ setRadioPower(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.fuelgauge.BatteryHistoryChart\:\ void\ setStats(android.os.BatteryStats)>=android.permission.ACCESS_NETWORK_STATE
<android.speech.IRecognitionService$Stub$Proxy\:\ void\ cancel(android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<com.android.email.service.MailService\:\ void\ access$700(com.android.email.service.MailService)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.SimUnlockScreen\:\ void\ checkPin()>=android.permission.WAKE_LOCK
<com.android.browser.PhoneUi\:\ void\ <init>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ int\ getProfileConnectionState(int)>=android.permission.BLUETOOTH
<com.android.settings.LocalePicker\:\ void\ onLocaleSelected(java.util.Locale)>=android.permission.CHANGE_CONFIGURATION
<com.android.calendar.event.EditEventView\:\ void\ setCalendarsCursor(android.database.Cursor,boolean)>=android.permission.WRITE_CALENDAR
<android.telephony.TelephonyManager\:\ java.util.List\ getNeighboringCellInfo()>=android.permission.ACCESS_FINE_LOCATION
<com.android.gallery3d.app.SlideshowPage$1\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.editor.AggregationSuggestionEngine\:\ void\ onNameChange(com.android.contacts.model.EntityDelta$ValuesDelta)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.Controller$2\:\ void\ run()>=android.permission.GET_ACCOUNTS
<com.android.server.pm.PackageManagerService\:\ void\ replacePreferredActivity(android.content.IntentFilter,int,[android.content.ComponentName,android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.SET_PREFERRED_APPLICATIONS
<com.android.systemui.statusbar.phone.PhoneStatusBarView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<android.server.BluetoothEventLoop\:\ void\ onDeviceDisconnectRequested(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ releaseWakeLock()>=android.permission.WAKE_LOCK
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ acceptCall(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.internal.widget.multiwaveview.MultiWaveView\:\ void\ handleDown(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.exchange.adapter.ItemOperationsParser\:\ boolean\ parse()>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.BrowserYesNoPreference\:\ void\ onDialogClosed(boolean)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.app.SlideshowDataAdapter$SlideshowSource\:\ long\ reload()>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.SuggestionsAdapter$SuggestCursor\:\ void\ runQuery(java.lang.CharSequence)>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.statusbar.policy.NetworkController\:\ void\ updateConnectivity(android.content.Intent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.ui.UndoBarView\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.net.NetworkPolicyManagerService\:\ void\ access$600(com.android.server.net.NetworkPolicyManagerService)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.CommandsInterface\:\ void\ sendCdmaSms(byte[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.NotificationManagerService\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ swapDockedAndFullscreenStack()>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.calendar.EventInfoFragment\:\ void\ doEdit()>=android.permission.WRITE_CALENDAR
<com.android.calendar.SearchActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String[]\ getIsimPcscf()>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.mms.transaction.SmsReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.app.AliasActivity\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.server.wifi.WifiServiceImpl\:\ boolean\ acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS, android.permission.WAKE_LOCK
<com.android.quicksearchbox.google.GoogleSuggestClient\:\ com.android.quicksearchbox.SourceResult\ query(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onResetDone(android.os.AsyncResult)>=android.permission.BROADCAST_STICKY
<com.android.emailcommon.service.ServiceProxy$ProxyTask\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<android.nfc.INfcAdapterExtras\:\ void\ authenticate(java.lang.String,byte[])>=android.permission.NFC
<com.android.settings.SubSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.email.service.AttachmentDownloadService\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.Controller\:\ void\ serviceCheckMail(long,long,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.server.WiredAccessoryObserver\:\ void\ access$100(com.android.server.WiredAccessoryObserver)>=android.permission.WAKE_LOCK
<com.android.phone.sip.SipEditor\:\ void\ deleteAndUnregisterProfile(android.net.sip.SipProfile)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ boolean\ setupData(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.contacts.list.AccountFilterActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessagesAdapter$SearchCursorLoader\:\ android.database.Cursor\ loadInBackground()>=android.permission.READ_SYNC_SETTINGS
<android.view.IWindowManager\:\ void\ exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>=android.permission.GET_ACCOUNTS
<com.android.browser.Controller\:\ boolean\ onKeyUp(int,android.view.KeyEvent)>=android.permission.GET_ACCOUNTS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler\:\ int\ getPhotoPickSize()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.SMSDispatcher\:\ int\ processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ iccIOForApp(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.SlideshowPage$1\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<android.inputmethodservice.KeyboardView\:\ boolean\ onHoverEvent(android.view.MotionEvent)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.browser.CrashRecoveryHandler$2\:\ void\ run()>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DockService\:\ boolean\ msgTypeDocked(android.bluetooth.BluetoothDevice,int,int)>=android.permission.BLUETOOTH
<com.android.calendar.DayView$8\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_CALENDAR
<android.test.IsolatedContext$MockAccountManager\:\ android.accounts.AccountManagerFuture\ confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.PhoneBase\:\ void\ getPreferredNetworkType(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.PhoneFallbackEventHandler\:\ boolean\ dispatchKeyEvent(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.camera.ui.InLineSettingKnob$3\:\ boolean\ onTouch(android.view.View,android.view.MotionEvent)>=android.permission.RECORD_AUDIO
<com.android.server.am.BatteryStatsService\:\ void\ noteResetVideo()>=android.permission.UPDATE_DEVICE_STATS
<com.android.email.activity.MessageOrderManager\:\ void\ moveTo(long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.BluetoothHandsfree$14\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.LatinIME\:\ void\ launchDebugSettings()>=android.permission.WRITE_CONTACTS
<android.bluetooth.BluetoothA2dp\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ fixTimeZone(java.lang.String)>=android.permission.SET_TIME_ZONE
<com.android.internal.telephony.RIL\:\ void\ getAvailableNetworks(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy\:\ void\ prepare()>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.PhoneNumberHelper\:\ boolean\ isVoicemailNumber(java.lang.CharSequence)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getImeiForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.location.ILocationManager$Stub\:\ void\ requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.camera.VideoCamera\:\ boolean\ stopVideoRecording()>=android.permission.RECORD_AUDIO
<com.android.browser.BrowserSettings\:\ void\ onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.Invert\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getIccSerialNumberForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.phone.BluetoothHeadsetService\:\ int\ access$100(com.android.phone.BluetoothHeadsetService,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.camera.ui.OtherSettingsPopup\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<com.android.launcher2.Launcher\:\ boolean\ skipCustomClingIfNoAccounts()>=android.permission.GET_ACCOUNTS
<android.media.effect.effects.LomoishEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.email.service.AccountService$1\:\ void\ reconcileAccounts(java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.TransactionService\:\ void\ renewMmsConnectivity()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.PhotoPage\:\ boolean\ onCreateActionBar(android.view.Menu)>=android.permission.NFC
<android.bluetooth.BluetoothAdapter\:\ void\ stopLeScan(android.bluetooth.BluetoothAdapter$LeScanCallback)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.server.DeviceIdleController$BinderService\:\ long\ addPowerSaveTempWhitelistAppForSms(java.lang.String,int,java.lang.String)>=android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST
<android.provider.CalendarContract$CalendarAlerts\:\ void\ rescheduleMissedAlarms(android.content.ContentResolver,android.content.Context,android.app.AlarmManager)>=android.permission.READ_CALENDAR
<com.android.nfc.NfcService$TagService\:\ void\ resetTimeouts()>=android.permission.NFC
<com.android.server.wifi.WifiServiceImpl\:\ int\ getSupportedFeatures()>=android.permission.ACCESS_WIFI_STATE
<android.speech.tts.TextToSpeech\:\ boolean\ isSpeaking()>=android.permission.BROADCAST_STICKY
<android.filterpacks.imageproc.BlendFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager\:\ java.util.List\ getScanResults()>=android.permission.ACCESS_WIFI_STATE
<com.android.contacts.editor.ContactEditorFragment$5\:\ android.content.CursorLoader\ onCreateLoader(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.SimContacts\:\ boolean\ onContextItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<android.content.Context\:\ void\ sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>=android.permission.BROADCAST_STICKY
<com.android.settings.wifi.p2p.WifiP2pSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ java.lang.String[]\ getTetherableIfaces()>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.videosrc.CameraSource\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ android.os.Bundle\ getCurrentAgEvents(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.calendar.DayView\:\ void\ onClick(android.view.View)>=android.permission.WRITE_CALENDAR
<com.android.server.connectivity.Vpn\:\ void\ showNotification(com.android.internal.net.VpnConfig,java.lang.String,android.graphics.Bitmap)>=android.permission.VIBRATE
<com.android.settings.Settings$TetherSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.net.sip.ISipService\:\ void\ open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DockService\:\ int\ onStartCommand(android.content.Intent,int,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ revertToNitzTime()>=android.permission.BROADCAST_STICKY
<com.android.server.LocationManagerService\:\ void\ addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.browser.Controller\:\ void\ <init>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.detail.ContactDetailFragment$QuickFix\:\ boolean\ isApplicable()>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.DialogPicker\:\ void\ onResume()>=android.permission.RECORD_AUDIO
<com.android.settings.ProxySelector$1\:\ void\ onClick(android.view.View)>=android.permission.WRITE_SETTINGS
<com.android.server.media.projection.MediaProjectionManagerService$BinderService\:\ void\ removeCallback(android.media.projection.IMediaProjectionWatcherCallback)>=android.permission.MANAGE_MEDIA_PROJECTION
<com.android.server.wifi.WifiServiceImpl\:\ void\ setFrequencyBand(int,boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ setTimeFromNITZString(java.lang.String,long)>=android.permission.WAKE_LOCK
<com.android.internal.util.StateMachine$SmHandler\:\ void\ invokeExitMethods(com.android.internal.util.StateMachine$SmHandler$StateInfo)>=android.permission.BLUETOOTH
<com.android.phone.PhoneUtils\:\ void\ restoreSpeakerMode(android.content.Context)>=android.permission.BLUETOOTH
<com.android.server.ShutdownActivity$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isApplicationHidden(android.content.ComponentName,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.gallery3d.app.StateManager\:\ void\ startStateForResult(java.lang.Class,int,android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.setup.AccountSetupOptions$1\:\ void\ run()>=android.permission.GET_ACCOUNTS
<com.android.phone.CallerInfoCache$CacheAsyncTask\:\ void\ onPostExecute(java.lang.Void)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService$MultiPlayer\:\ void\ setNextDataSource(java.lang.String)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth\:\ boolean\ startDiscovery()>=android.permission.BLUETOOTH_ADMIN
<com.android.launcher2.DragController\:\ void\ startDrag(android.view.View,android.graphics.Bitmap,com.android.launcher2.DragSource,java.lang.Object,int,android.graphics.Rect,float)>=android.permission.VIBRATE
<com.android.quicksearchbox.google.GoogleSuggestionProvider\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ConversationListItem$1\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ void\ addCachedDevices()>=android.permission.BLUETOOTH
<android.content.MutableContextWrapper\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.vcard.VCardEntry$PhotoData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ int\ startActivities(android.app.IApplicationThread,java.lang.String,[android.content.Intent,[java.lang.String,android.os.IBinder,android.os.Bundle,int)>=android.permission.SET_DEBUG_APP
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ startRepeatKey(com.android.inputmethod.keyboard.Key)>=android.permission.WRITE_CONTACTS
<com.android.server.TelephonyRegistry\:\ void\ notifyCallStateForPhoneId(int,int,int,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.wm.WindowManagerService\:\ boolean\ detectSafeMode()>=android.permission.VIBRATE
<android.location.LocationManager\:\ java.lang.String\ getBestProvider(android.location.Criteria,boolean)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$DockSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService\:\ void\ setForcedDisplaySizeLocked(int,int)>=android.permission.WAKE_LOCK
<com.android.settings.DeviceInfoSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.ToPackedGrayFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.commands.uiautomator.Launcher\:\ void\ main(java.lang.String[])>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$TextToSpeechSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ setTTYMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.calendar.month.SimpleDayPickerFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.WRITE_CALENDAR
<android.net.sip.ISipService$Stub$Proxy\:\ android.net.sip.ISipSession\ createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>=android.permission.USE_SIP
<com.android.email.GroupMessagingListener\:\ void\ loadAttachmentFinished(long,long,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ interrupt(int)>=android.permission.INTERACT_ACROSS_USERS
<com.android.server.wifi.p2p.WifiP2pServiceImpl\:\ android.os.Messenger\ getP2pStateMachineMessenger()>=android.permission.ACCESS_WIFI_STATE, android.permission.CHANGE_WIFI_STATE, android.permission.CONNECTIVITY_INTERNAL, android.permission.LOCATION_HARDWARE
<com.android.systemui.statusbar.policy.NetworkController\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$WirelessSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.exchange.ExchangeService$1\:\ void\ sendMessageStatus(long,java.lang.String,int,int)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ android.os.Messenger\ getWifiStateMachineMessenger()>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.fuelgauge.PowerUsageSummary\:\ void\ load()>=android.permission.BLUETOOTH
<com.android.providers.calendar.CalendarProvider2\:\ android.database.Cursor\ query(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>=android.permission.READ_CALENDAR
<android.bluetooth.AtCommandHandler\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.gallery3d.data.ClusterAlbumSet\:\ void\ updateClusters()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.NetworkManagementService\:\ void\ allowProtect(int)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder\:\ java.util.List\ getHealthDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<com.android.mms.ui.AudioAttachmentView$2\:\ boolean\ onError(android.media.MediaPlayer,int,int)>=android.permission.WAKE_LOCK
<com.android.exchange.adapter.AccountSyncAdapter\:\ java.lang.String\ getSyncKey()>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ void\ disableLocationUpdatesForSubscriber(int)>=android.permission.CONTROL_LOCATION_UPDATES
<com.android.inputmethod.latin.ContactsBinaryDictionary\:\ void\ syncReloadDictionaryInternal()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CdmaMmiCode\:\ void\ processCode()>=android.permission.WAKE_LOCK
<com.android.commands.am.Am\:\ void\ main(java.lang.String[])>=android.permission.WAKE_LOCK
<com.android.settings.DataUsageSummary\:\ void\ access$100(com.android.settings.DataUsageSummary)>=android.permission.READ_PHONE_STATE
<android.nfc.INfcAdapter\:\ void\ setNdefPushCallback(android.nfc.INdefPushCallback)>=android.permission.NFC
<com.android.email.service.MailService\:\ void\ reconcileAccountsWithAccountManager(android.content.Context,java.util.List,android.accounts.Account[],android.content.Context)>=android.permission.WAKE_LOCK
<com.android.contacts.detail.PhotoSelectionHandler\:\ long\ getWritableEntityId()>=android.permission.READ_SYNC_SETTINGS
<android.filterfw.core.SyncRunner\:\ void\ run()>=android.permission.RECORD_AUDIO
<android.net.ConnectivityManager\:\ android.net.LinkProperties\ getLinkProperties(int)>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.WifiStateMachine$ScanModeState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHeadsetService$RfcommConnectThread\:\ void\ run()>=android.permission.BLUETOOTH
<android.accounts.IAccountManager$Stub\:\ void\ getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>=android.permission.GET_ACCOUNTS
<com.android.calendar.month.MonthByWeekFragment\:\ void\ onResume()>=android.permission.WRITE_CALENDAR
<com.android.gallery3d.app.PickerActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.MountService\:\ void\ shutdown(android.os.storage.IMountShutdownObserver)>=android.permission.SHUTDOWN
<android.bluetooth.IBluetooth$Stub$Proxy\:\ java.lang.String\ getName()>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.CachedBluetoothDeviceManager\:\ com.android.settings.bluetooth.CachedBluetoothDevice\ addDevice(com.android.settings.bluetooth.LocalBluetoothAdapter,com.android.settings.bluetooth.LocalBluetoothProfileManager,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.accounts.AccountManager$AmsTask\:\ android.accounts.AccountManagerFuture\ start()>=android.permission.GET_ACCOUNTS
<com.android.server.LocationManagerService\:\ void\ requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION, android.permission.UPDATE_APP_OPS_STATS, android.permission.UPDATE_DEVICE_STATS
<com.android.voicedialer.VoiceDialerActivity$4\:\ void\ run()>=android.permission.READ_CALL_LOG
<com.android.email.ControllerResultUiThreadWrapper$5\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.OpenDownloadReceiver\:\ void\ access$000(com.android.browser.OpenDownloadReceiver,android.content.Context,long)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.filterpacks.imageproc.NegativeFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.UiccSmsController\:\ void\ sendTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,boolean)>=android.permission.READ_EXTERNAL_STORAGE, android.permission.SEND_SMS, android.permission.SEND_SMS_NO_CONFIRMATION
<android.net.wifi.IWifiManager$Stub\:\ boolean\ saveConfiguration()>=android.permission.CHANGE_WIFI_STATE
<com.android.contacts.list.AccountFilterActivity\:\ java.util.List\ loadAccountFilters(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.Invert\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ boolean\ profileControl(java.lang.String,int,boolean,android.app.ProfilerInfo,int)>=android.permission.SET_ACTIVITY_WATCHER
<com.android.contacts.list.ContactListAdapter\:\ android.net.Uri\ getContactUri(int,android.database.Cursor,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.NetworkManagementService\:\ android.net.NetworkStats\ getNetworkStatsTethering()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.CommandsInterface\:\ void\ getVoiceRegistrationState(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.data.WorkingMessage$2\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ handleCallSetupRequestFromSim(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.BackupManagerService\:\ void\ clearBackupData(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.DefaultVoicemailNotifier$NewCallsQuery\:\ com.android.contacts.calllog.DefaultVoicemailNotifier$NewCall[]\ query()>=android.permission.READ_CALL_LOG
<android.bluetooth.IBluetoothA2dp$Stub$Proxy\:\ boolean\ disconnectSinkInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.net.NetworkStatsService\:\ void\ updateIfacesLocked()>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.MessageFileViewFragment\:\ void\ onSaveAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.mms.model.SlideshowModel\:\ com.android.mms.model.SlideshowModel\ createFromMessageUri(android.content.Context,android.net.Uri)>=android.permission.WRITE_SMS
<android.nfc.INfcAdapterExtras$Stub\:\ android.os.Bundle\ transceive(java.lang.String,byte[])>=android.permission.NFC
<com.android.settings.Settings$PrivacySettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.email.Controller\:\ void\ sendMeetingResponse(long,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ setCdmaRoamingPreference(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.data.LocalAlbumSet\:\ long\ reload()>=android.permission.ACCESS_NETWORK_STATE
<android.net.IConnectivityManager\:\ java.lang.String[]\ getTetherableUsbRegexs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ dispatchAttributesChanged()>=android.permission.BLUETOOTH
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.providers.settings.SettingsHelper\:\ void\ applyAudioSettings()>=android.permission.WRITE_SETTINGS
<com.android.contacts.list.LegacyPostalAddressListAdapter\:\ android.net.Uri\ getContactUri(int,android.database.Cursor,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.view.RotationPolicy\:\ void\ setRotationLockForAccessibility(android.content.Context,boolean)>=android.permission.WRITE_SETTINGS
<com.android.contacts.CallContactActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.ContactEntryListFragment\:\ void\ setQueryString(java.lang.String,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.statusbar.StatusBarManagerService\:\ void\ expandSettingsPanel(java.lang.String)>=android.permission.EXPAND_STATUS_BAR
<com.android.server.NetworkManagementService\:\ void\ setInterfaceAlert(java.lang.String,long)>=android.permission.CONNECTIVITY_INTERNAL
<android.bluetooth.BluetoothAdapter\:\ boolean\ isDiscovering()>=android.permission.BLUETOOTH
<com.android.mms.util.DownloadManager\:\ void\ markState(android.net.Uri,int)>=android.permission.WRITE_SMS
<com.android.contacts.activities.NonPhoneActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ParceledListSlice\ queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder\:\ boolean\ getProtocolMode(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onEnableApn(int,int)>=android.permission.BROADCAST_STICKY
<android.bluetooth.IBluetooth$Stub\:\ boolean\ getTrustState(java.lang.String)>=android.permission.BLUETOOTH
<com.android.providers.downloads.DownloadInfo$Reader\:\ com.android.providers.downloads.DownloadInfo\ newDownloadInfo(android.content.Context,com.android.providers.downloads.SystemFacade)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.internal.telephony.RIL\:\ void\ setCallForward(int,int,int,java.lang.String,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactTilePhoneFrequentView$1\:\ void\ onClick(android.view.View)>=android.permission.READ_PHONE_STATE
<com.android.nfc.NfcService\:\ void\ onRemoteFieldDeactivated()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ java.util.List\ getInputDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.server.net.NetworkStatsService$3\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.browser.BreadCrumbView\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<com.android.internal.widget.multiwaveview.GlowPadView\:\ boolean\ trySwitchToFirstTouchState(float,float)>=android.permission.BLUETOOTH
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState\:\ void\ enter()>=android.permission.BLUETOOTH
<android.test.IsolatedContext$MockAccountManager\:\ void\ setUserData(android.accounts.Account,java.lang.String,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.voicedialer.RecognizerEngine\:\ void\ recognize(com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ onSignalStrengthResult(android.os.AsyncResult)>=android.permission.BROADCAST_STICKY
<android.net.DhcpStateMachine$RunningState\:\ boolean\ processMessage(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onVoiceCallEnded()>=android.permission.BROADCAST_STICKY
<android.net.wifi.WifiStateMachine\:\ void\ access$2300(android.net.wifi.WifiStateMachine,int)>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.opp.BluetoothOppTransferActivity\:\ void\ setUpDialog()>=android.permission.BLUETOOTH
<android.filterpacks.base.FrameBranch\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.LegacyApiSupport\:\ android.net.Uri\ findFirstDataRow(long,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ThrottleService\:\ int\ getCliffLevel(java.lang.String,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.quicksearchbox.google.GoogleSuggestClient\:\ com.android.quicksearchbox.SuggestionCursor\ getSuggestions(java.lang.String,int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.StraightenFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ void\ moveTasksToFullscreenStack(int,boolean)>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.server.ThrottleService\:\ void\ enforceAccessPermission()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getKeyguardDisabledFeatures(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.MccTable\:\ void\ updateMccMncConfiguration(android.content.Context,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.GLView\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onRoamingOn()>=android.permission.BROADCAST_STICKY
<com.android.browser.TabControl\:\ com.android.browser.Tab\ createNewTab(android.os.Bundle,boolean)>=android.permission.GET_ACCOUNTS
<android.view.IApplicationToken$Stub\:\ void\ windowsVisible()>=android.permission.WAKE_LOCK
<android.filterfw.core.InputPort\:\ void\ transfer(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService$MyExecutor\:\ void\ executeInternal(java.lang.Runnable)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.BitmapOverlayFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.CallLogFragment\:\ void\ refreshData()>=android.permission.READ_CALL_LOG
<com.android.htmlviewer.HTMLViewerActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.INTERNET
<com.android.systemui.usb.StorageNotification\:\ void\ onUsbMassStorageConnectionChangedAsync(boolean)>=android.permission.VIBRATE
<com.android.mms.ui.ConversationListItem\:\ void\ updateFromView()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.InputMethodManagerService\:\ void\ hideMySoftInput(android.os.IBinder,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.wifi.WifiStatusTest$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.InCallScreen\:\ void\ access$900(com.android.phone.InCallScreen,com.android.internal.telephony.MmiCode)>=android.permission.BLUETOOTH
<com.android.calendar.EmailAddressAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.service.AccountService$1\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.content.ContextWrapper\:\ void\ sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.sip.SipPhone\:\ void\ setPreferredNetworkType(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ boolean\ switchToNextInputMethod(android.os.IBinder,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.WRITE_SECURE_SETTINGS
<com.android.gallery3d.gadget.WidgetUtils\:\ android.graphics.Bitmap\ createWidgetBitmap(com.android.gallery3d.data.MediaItem)>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.AccountManager\:\ android.accounts.AccountManagerFuture\ getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.exchange.ExchangeService\:\ void\ registerCalendarObserver(com.android.emailcommon.provider.Account)>=android.permission.READ_CALENDAR
<com.android.browser.AddBookmarkPage$UpdateBookmarkTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.GET_ACCOUNTS
<com.android.phone.CallNotifier\:\ boolean\ ignoreAllIncomingCalls(com.android.internal.telephony.Phone)>=android.permission.BLUETOOTH
<com.android.email.activity.ActionBarController$AccountDropdownPopup$1\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.ACCESS_NETWORK_STATE
<android.net.IConnectivityManager$Stub$Proxy\:\ void\ setGlobalProxy(android.net.ProxyProperties)>=android.permission.WRITE_SETTINGS
<android.filterfw.core.Filter\:\ void\ process(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.google.common.io.ByteStreams\:\ long\ copy(com.google.common.io.InputSupplier,com.google.common.io.OutputSupplier)>=android.permission.INTERNET
<com.android.phone.BluetoothHandsfree$4\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.inputmethod.keyboard.SuddenJumpingTouchEventHandler$ProcessMotionEvent\:\ boolean\ processMotionEvent(android.view.MotionEvent)>=android.permission.WRITE_CONTACTS
<com.google.common.io.Files\:\ void\ copy(java.io.File,com.google.common.io.OutputSupplier)>=android.permission.INTERNET
<android.filterpacks.imageproc.DocumentaryFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.mms.ui.SlideshowPresenter$4\:\ void\ run()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ToGrayFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.SimUnlockScreen\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.email.activity.MailboxFinder$FindMailboxTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.MountService\:\ void\ destroyUserKey(int)>=android.permission.STORAGE_INTERNAL
<android.net.nsd.NsdManager\:\ void\ <init>=android.permission.INTERNET
<com.android.server.NetworkTimeUpdateService$SettingsObserver\:\ void\ observe(android.content.Context)>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.CrossProcessFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothDevice\:\ android.bluetooth.BluetoothGatt\ connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback,int)>=android.permission.BLUETOOTH
<com.android.browser.Tab\:\ void\ putInForeground()>=android.permission.INTERNET
<com.android.server.tv.TvInputManagerService$BinderService\:\ void\ releaseTvInputHardware(int,android.media.tv.ITvInputHardware,int)>=android.permission.TV_INPUT_HARDWARE
<com.android.camera.ActivityBase\:\ void\ onPreviewTextureCopied()>=android.permission.RECORD_AUDIO
<com.android.bluetooth.avrcp.AvrcpControllerService$BluetoothAvrcpControllerBinder\:\ boolean\ setPlayerApplicationSetting(android.bluetooth.BluetoothAvrcpPlayerSettings)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothAdapter\:\ boolean\ isOffloadedFilteringSupported()>=android.permission.BLUETOOTH
<android.webkit.HTML5VideoFullScreen\:\ void\ stopPlayback()>=android.permission.WAKE_LOCK
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ void\ setProvisioningNotificationVisible(boolean,int,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<android.media.AudioService\:\ void\ filterVoiceInputKeyEvent(android.view.KeyEvent,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ init(android.content.Context,com.android.internal.telephony.PhoneNotifier)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ setAppOrientation(android.view.IApplicationToken,int)>=android.permission.MANAGE_APP_TOKENS
<com.android.phone.PhoneInterfaceManager\:\ java.util.List\ getAllCellInfo(java.lang.String)>=android.permission.ACCESS_FINE_LOCATION, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.email.activity.MessageFileViewFragment\:\ void\ addAttachment(com.android.emailcommon.provider.EmailContent$Attachment)>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.app.CropImage$LoadDataTask\:\ android.graphics.BitmapRegionDecoder\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothPan\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ notifyPendingSystemUpdate(long)>=android.permission.NOTIFY_PENDING_SYSTEM_UPDATE
<com.android.internal.telephony.SmsStorageMonitor\:\ void\ handleIccFull()>=android.permission.WAKE_LOCK
<com.android.vcard.VCardParser_V21\:\ void\ parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ startDtmf(char,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ float\ getMagnificationScale()>=android.permission.INTERACT_ACROSS_USERS
<com.android.settings.Settings$PowerUsageSummaryActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.email.activity.MessageViewFragmentBase$UpdatePreviewIconTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.nfc.tech.MifareClassic\:\ boolean\ authenticateSectorWithKeyA(int,byte[])>=android.permission.NFC
<com.android.settings.users.UserSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.net.IConnectivityManager$Stub\:\ void\ startLegacyVpn(com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>=android.permission.BROADCAST_STICKY
<com.android.server.usb.UsbDeviceManager$UsbHandler\:\ void\ updateState(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.settings.DataUsageSummary\:\ java.util.List\ buildLimitedNetworksList()>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ pollStateDone()>=android.permission.SET_TIME_ZONE
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread\:\ void\ loadPhotosInBackground()>=android.permission.WRITE_CONTACTS
<android.server.BluetoothService\:\ boolean\ setBondState(java.lang.String,int)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothProfileState$PendingCommandState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer\:\ void\ run(android.accounts.AccountManagerFuture)>=android.permission.GET_ACCOUNTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.vcard.ExportProcessor\:\ void\ doProgressNotification(android.net.Uri,int,int)>=android.permission.VIBRATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getPasswordQuality(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.filterpacks.base.FrameFetch\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.NotificationMgr$QueryHandler\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.WRITE_CONTACTS
<com.android.server.net.NetworkPolicyManagerService\:\ boolean\ isNetworkMetered(android.net.NetworkState)>=android.permission.READ_PHONE_STATE
<com.android.phone.InCallScreen\:\ void\ hangupRingingCall()>=android.permission.WRITE_CONTACTS
<com.android.mms.transaction.RetryScheduler\:\ void\ setRetryAlarm(android.content.Context)>=android.permission.READ_SMS
<com.android.contacts.list.ContactListFilterControllerImpl\:\ void\ notifyContactListFilterChanged()>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.usb.UsbStorageActivity$9\:\ void\ run()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.calendar.SearchActivity\:\ void\ handleEvent(com.android.calendar.CalendarController$EventInfo)>=android.permission.READ_CALENDAR
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ handleStatusReport(android.os.AsyncResult)>=android.permission.WAKE_LOCK
<android.provider.Contacts$Settings\:\ java.lang.String\ getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.launcher2.DragController\:\ void\ startDrag(android.graphics.Bitmap,int,int,com.android.launcher2.DragSource,java.lang.Object,int,android.graphics.Point,android.graphics.Rect,float)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ void\ factoryReset()>=android.permission.ACCESS_NETWORK_STATE, android.permission.CONNECTIVITY_INTERNAL, android.permission.CONTROL_VPN, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.TETHER_PRIVILEGED
<com.android.phone.BluetoothAtPhonebook$3\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.exchange.EasAccountService\:\ boolean\ tryProvision(com.android.exchange.EasSyncService)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothAdapter\:\ android.bluetooth.BluetoothServerSocket\ listenUsingRfcommOn(int)>=android.permission.BLUETOOTH
<com.android.contacts.detail.ContactDetailFragment\:\ void\ showEmptyState()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.inputmethod.InputMethodAndLanguageSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.settings.Settings$WifiP2pSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.browser.GoogleAccountLogin\:\ void\ <init>=android.permission.INTERNET
<com.android.internal.telephony.RIL\:\ void\ acquireWakeLock()>=android.permission.WAKE_LOCK
<com.android.browser.SnapshotTab\:\ void\ updateShouldCaptureThumbnails()>=android.permission.GET_ACCOUNTS
<com.android.server.BatteryService\:\ void\ <init>=android.permission.BLUETOOTH
<com.android.server.LockSettingsService\:\ com.android.internal.widget.VerifyCredentialResponse\ verifyPassword(java.lang.String,long,int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<android.filterpacks.performance.ThroughputFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.UserDictionarySettings\:\ void\ deleteWord(java.lang.String,java.lang.String,android.content.ContentResolver)>=android.permission.WRITE_USER_DICTIONARY
<com.android.music.MediaPlaybackService\:\ void\ access$1200(com.android.music.MediaPlaybackService)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree\:\ int\ access$4800(com.android.phone.BluetoothHandsfree,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.browser.ActivityController\:\ void\ onResume()>=android.permission.WAKE_LOCK
<com.android.contacts.ContactLoader\:\ com.android.contacts.ContactLoader$Result\ loadInBackground()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.os.storage.ExternalStorageFormatter\:\ void\ updateProgressState()>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<com.android.calendar.month.MonthByWeekFragment\:\ android.net.Uri\ updateUri()>=android.permission.WRITE_CALENDAR
<com.android.contacts.group.GroupDetailFragment\:\ void\ updateAccountType(java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothGattServer\:\ boolean\ addService(android.bluetooth.BluetoothGattService)>=android.permission.BLUETOOTH
<com.android.contacts.activities.PeopleActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.Use2GOnlyCheckBoxPreference$MyHandler\:\ void\ handleGetPreferredNetworkTypeResponse(android.os.Message)>=android.permission.WRITE_SETTINGS
<com.android.calendar.DayView\:\ void\ access$4500(com.android.calendar.DayView,android.view.MotionEvent)>=android.permission.WRITE_CALENDAR
<com.android.phone.InCallScreen$13\:\ void\ onCancel(android.content.DialogInterface)>=android.permission.BLUETOOTH
<android.net.ConnectivityManager\:\ android.net.NetworkInfo[]\ getAllNetworkInfo()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.sip.SipPhone$SipConnection$1\:\ void\ onError(android.net.sip.SipAudioCall,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME\:\ void\ launchSettings()>=android.permission.WRITE_CONTACTS
<com.android.nfc.handover.HandoverManager\:\ boolean\ tryHandover(android.nfc.NdefMessage)>=android.permission.BLUETOOTH
<com.android.settings.DataUsageSummary$UidDetailTask\:\ com.android.settings.net.UidDetail\ doInBackground(java.lang.Void[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.calendar.event.EditEventFragment$1\:\ void\ onClick(android.view.View)>=android.permission.WRITE_CALENDAR
<com.android.mms.ui.ManageSimMessages$3\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.RECEIVE_SMS
<com.android.internal.telephony.PhoneProxy\:\ void\ getEnhancedVoicePrivacy(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.uiautomator.core.InteractionController\:\ void\ setRotationNatural()>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$TetherSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.deskclock.Alarms\:\ void\ disableAlert(android.content.Context)>=android.permission.WRITE_SETTINGS
<android.server.BluetoothService\:\ void\ disconnectDevices()>=android.permission.BLUETOOTH
<com.android.providers.downloads.DownloadService$UpdateThread\:\ void\ run()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.PhoneBase\:\ void\ queryTTYMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.GroupMemberLoader\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ java.lang.String\ getRemoteAlias(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.appwidget.AppWidgetServiceImpl\:\ android.os.Bundle\ getAppWidgetOptions(java.lang.String,int)>=android.permission.BIND_APPWIDGET
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ notifyLockTaskModeChanged(boolean,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ boolean\ findAccessibilityNodeInfosByViewId(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>=android.permission.INTERACT_ACROSS_USERS
<com.android.phone.OtaUtils\:\ void\ otaShowActivateScreen()>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ removeUser(android.content.ComponentName,android.os.UserHandle)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.Settings$SoundSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<android.filterpacks.base.RetargetFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ android.net.Uri\ getContactUriForEmail(java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ boolean\ setWifiEnabled(boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ setSearchMode(boolean)>=android.permission.READ_SYNC_SETTINGS
<android.view.WindowManagerPolicy\:\ int\ interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>=android.permission.WAKE_LOCK
<android.app.backup.IBackupManager$Stub$Proxy\:\ void\ clearBackupData(java.lang.String)>=android.permission.WAKE_LOCK
<android.os.storage.IMountService$Stub\:\ void\ shutdown(android.os.storage.IMountShutdownObserver)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<android.net.IConnectivityManager$Stub\:\ android.net.NetworkState[]\ getAllNetworkState()>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ readDescriptor(int,java.lang.String,int,int)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_PRIVILEGED
<com.android.settings.bluetooth.BluetoothPermissionActivity\:\ android.view.View\ createPhonebookDialogView()>=android.permission.BLUETOOTH
<com.android.music.AudioPreview$PreviewPlayer\:\ void\ stop()>=android.permission.WAKE_LOCK
<com.android.settings.WirelessSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.server.WifiService\:\ void\ access$1500(com.android.server.WifiService)>=android.permission.VIBRATE
<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder\:\ boolean\ disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<com.android.browser.BrowserBookmarksPage$OpenAllInTabsTask\:\ android.database.Cursor\ doInBackground(java.lang.Void[])>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.ToRGBFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteStartSensor(int,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.phone.InCallScreen\:\ void\ showPausePromptDialog(com.android.internal.telephony.Connection,java.lang.String)>=android.permission.BLUETOOTH
<android.widget.VideoView\:\ void\ access$2100(android.widget.VideoView,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ conference()>=android.permission.WAKE_LOCK
<android.app.ActivityManagerNative\:\ java.util.List\ getRecentTasks(int,int)>=android.permission.GET_TASKS
<android.test.RenamingDelegatingContext\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<android.bluetooth.BluetoothAdapter\:\ java.lang.String\ getName()>=android.permission.BLUETOOTH
<android.content.CursorEntityIterator\:\ java.lang.Object\ next()>=android.permission.READ_CALENDAR
<com.android.providers.contacts.ContactsProvider2\:\ int\ update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>=android.permission.WRITE_SOCIAL_STREAM
<android.accounts.AccountManager$1\:\ android.accounts.AccountManager$Future2Task\ start()>=android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService\:\ void\ dismissKeyguard()>=android.permission.DISABLE_KEYGUARD
<com.android.mms.ui.ComposeMessageActivity\:\ void\ access$800(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>=android.permission.READ_SYNC_SETTINGS
<android.net.IConnectivityManager$Stub\:\ boolean\ isActiveNetworkMetered()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.ContactsApplication$DelayedInitializer\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$SecuritySettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.AdnRecordCache\:\ void\ updateAdnByIndex(int,com.android.internal.telephony.AdnRecord,int,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.exchange.EasSyncService\:\ com.android.exchange.EasResponse\ sendPing(byte[],int)>=android.permission.WAKE_LOCK
<android.hardware.ConsumerIrManager\:\ void\ transmit(int,[int)>=android.permission.TRANSMIT_IR
<com.android.emailcommon.service.IAccountService$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.PhoneNumberHelper\:\ java.lang.CharSequence\ getDisplayNumber(java.lang.CharSequence,java.lang.CharSequence)>=android.permission.READ_PHONE_STATE
<com.android.exchange.ExchangeService$AccountObserver\:\ void\ access$700(com.android.exchange.ExchangeService$AccountObserver)>=android.permission.WAKE_LOCK
<com.android.mms.data.Conversation$ConversationQueryHandler\:\ void\ onDeleteComplete(int,java.lang.Object,int)>=android.permission.RECEIVE_SMS
<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountActivity\:\ void\ onClick(android.view.View)>=android.permission.WRITE_CALENDAR
<com.android.phone.ContactsAsyncHelper$ImageTracker\:\ android.net.Uri\ getPhotoUri()>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.MenuExecutor$ConfirmDialogListener\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.VIBRATE
<com.android.emailcommon.service.IEmailService$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageListFragment$4\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.base.FrameBranch\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.media.AudioService\:\ void\ sendDeviceConnectionIntent(int,int,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ void\ onDeviceAdded(com.android.settings.bluetooth.CachedBluetoothDevice)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothA2dp\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.exchange.EasOutboxService\:\ com.android.exchange.adapter.ProvisionParser\ canProvision(com.android.exchange.EasSyncService)>=android.permission.WAKE_LOCK
<com.android.deskclock.AlarmAlert\:\ boolean\ dispatchKeyEvent(android.view.KeyEvent)>=android.permission.WRITE_SETTINGS
<com.android.calendar.DayView$ContextMenuHandler\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.WRITE_CALENDAR
<com.android.emailcommon.utility.Utility$ForEachAccount\:\ void\ performAction(long)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.ActionModeHandler$2\:\ boolean\ onShareTargetSelected(android.widget.ShareActionProvider,android.content.Intent)>=android.permission.VIBRATE
<com.android.server.am.ActivityManagerService\:\ boolean\ makeAppCrashingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.contacts.list.PostalAddressListAdapter\:\ android.net.Uri\ getDataUri(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.ActionBarAdapter\:\ void\ setCurrentTab(int)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.DrawRectFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.statusbar.StatusBarManagerService\:\ void\ disable2(int,android.os.IBinder,java.lang.String)>=android.permission.STATUS_BAR
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ void\ initializeP2pSettings()>=android.permission.BROADCAST_STICKY
<com.android.email.mail.store.ServiceStore\:\ android.os.Bundle\ autoDiscover(android.content.Context,java.lang.String,java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.browser.BrowserBookmarksPage\:\ boolean\ onContextItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.PhoneWindowManager\:\ int\ interceptMotionBeforeQueueingWhenScreenOff(int)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ void\ handleApplyDefaultProxy(android.net.ProxyProperties)>=android.permission.BROADCAST_STICKY
<com.android.contacts.list.LegacyContactListAdapter\:\ android.net.Uri\ getContactUri(int,android.database.Cursor,int,int)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.base.FrameBranch\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.vcard.NotificationImportExportListener\:\ void\ onCancelRequest(com.android.contacts.vcard.CancelRequest,int)>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.UsimPhoneBookManager\:\ void\ refreshCache()>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ access$600(com.android.server.wm.WindowManagerService)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService\:\ void\ onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.settings.BrightnessPreference\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.WRITE_SETTINGS
<android.net.wifi.WifiWatchdogStateMachine$OnlineState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.server.appwidget.AppWidgetServiceImpl\:\ void\ partiallyUpdateAppWidgetIds(java.lang.String,[int,android.widget.RemoteViews)>=android.permission.BIND_APPWIDGET
<com.android.settings.LocalePicker\:\ void\ onListItemClick(android.widget.ListView,android.view.View,int,long)>=android.permission.CHANGE_CONFIGURATION
<com.android.settings.AccessibilityEnableScriptInjectionPreference\:\ void\ onClick()>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$DisplaySettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.settings.WallpaperTypeSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ updateConfiguration(android.content.res.Configuration)>=android.permission.CHANGE_CONFIGURATION
<com.android.gallery3d.app.AlbumSetPage$1\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageEncoder\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.browser.PreloadRequestReceiver\:\ boolean\ isOnWifi(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ rejectCall()>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ int\ getDrmMimeSavedStringRsrc(long,boolean)>=android.permission.WRITE_SMS
<com.android.settings.DateTimeSettings\:\ void\ onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>=android.permission.WRITE_SETTINGS
<android.server.BluetoothEventLoop\:\ void\ onRequestPasskey(java.lang.String,int)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.ToPackedGrayFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.providers.calendar.CalendarProvider2\:\ android.net.Uri\ insertInTransaction(android.net.Uri,android.content.ContentValues,boolean)>=android.permission.READ_CALENDAR
<com.android.phone.BluetoothHandsfree$ScoSocketConnectThread\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.server.ethernet.EthernetServiceImpl\:\ android.net.IpConfiguration\ getConfiguration()>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.TabControl\:\ void\ addPreloadedTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.ConversationList\:\ void\ onStart()>=android.permission.READ_SMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ android.content.ComponentName\ getGlobalProxyAdmin(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ enableKeyguard(boolean)>=android.permission.WAKE_LOCK
<android.media.effect.effects.CrossProcessEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.quicksearchbox.ui.ContactBadge\:\ void\ assignContactFromEmail(java.lang.String,boolean)>=android.permission.WRITE_CONTACTS
<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl\:\ android.content.Entity\ next()>=android.permission.READ_CALENDAR
<com.android.gallery3d.app.AlbumSetDataLoader$ReloadTask\:\ void\ run()>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.videosink.MediaEncoderFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.net.ConnectivityManager\:\ boolean\ requestNetworkTransitionWakelock(java.lang.String)>=android.permission.WAKE_LOCK
<android.filterpacks.performance.ThroughputFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$PowerUsageSummaryActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ writeCharacteristic(int,java.lang.String,int,int,int,[byte)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_PRIVILEGED
<com.android.contacts.detail.StreamItemAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.DockService\:\ void\ handleBtStateChange(android.content.Intent,int)>=android.permission.BLUETOOTH
<android.net.wifi.WifiManager\:\ boolean\ reassociate()>=android.permission.CHANGE_WIFI_STATE
<android.filterpacks.base.RetargetFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothDevicePreference\:\ int\ getConnectionSummary()>=android.permission.BLUETOOTH
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ boolean\ stopVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.server.am.BatteryStatsService\:\ void\ noteLongPartialWakelockFinish(java.lang.String,java.lang.String,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener\:\ void\ onPhotoSelected(android.graphics.Bitmap)>=android.permission.READ_SYNC_SETTINGS
<com.android.camera.Camera\:\ void\ gotoGallery()>=android.permission.VIBRATE
<android.webkit.HTML5VideoView\:\ void\ reset()>=android.permission.WAKE_LOCK
<com.google.common.io.Files\:\ void\ copy(com.google.common.io.InputSupplier,java.io.File)>=android.permission.INTERNET
<com.android.server.wifi.WifiServiceImpl\:\ void\ requestActivityInfo(android.os.ResultReceiver)>=android.permission.ACCESS_WIFI_STATE
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ boolean\ disconnectAudio()>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.settings.RadioInfo$21\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.emailcommon.Device\:\ java.lang.String\ getConsistentDeviceId(android.content.Context)>=android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.EmailAsyncTask$1\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetooth\:\ int\ getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.browser.WebViewController\:\ com.android.browser.Tab\ openTab(java.lang.String,com.android.browser.Tab,boolean,boolean)>=android.permission.GET_ACCOUNTS
<com.android.server.sip.SipService\:\ void\ open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener,java.lang.String)>=android.permission.USE_SIP
<com.android.calendar.month.MonthByWeekFragment\:\ void\ doResumeUpdates()>=android.permission.WRITE_CALENDAR
<com.android.email.EmailAddressAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.location.LocationManager\:\ void\ setTestProviderLocation(java.lang.String,android.location.Location)>=android.permission.ACCESS_MOCK_LOCATION
<android.server.BluetoothBondState\:\ void\ loadBondState()>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ sendEnvelope(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.browser.provider.BrowserProvider2\:\ java.lang.String[]\ getAccountNameAndType(long)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.gallery3d.app.AlbumSetPage\:\ void\ access$1000(com.android.gallery3d.app.AlbumSetPage,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.list.EmailAddressListAdapter\:\ void\ bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.PeopleActivity\:\ boolean\ processIntent(boolean)>=android.permission.READ_PHONE_STATE
<com.android.emailcommon.utility.EmailAsyncTask$1\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ wipeData(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.server.BluetoothAdapterStateMachine$WarmUp\:\ void\ exit()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth\:\ boolean\ setDiscoverableTimeout(int)>=android.permission.BLUETOOTH
<com.android.email.activity.MessageCompose$QuickResponseChecker\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<android.server.BluetoothService\:\ boolean\ cancelBondProcess(java.lang.String)>=android.permission.BLUETOOTH
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ boolean\ removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneProxy\:\ void\ invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ handlePollStateResult(int,android.os.AsyncResult)>=android.permission.SET_TIME_ZONE
<com.android.email.service.MailService$6\:\ void\ runInternal(android.content.Context)>=android.permission.WAKE_LOCK
<com.android.exchange.adapter.Search$SearchParser\:\ boolean\ parseResponse()>=android.permission.READ_CALENDAR
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ getSubscriptionInfoAndStartPollingThreads()>=android.permission.WAKE_LOCK
<com.android.launcher2.WallpaperChooserDialogFragment$1\:\ void\ onClick(android.view.View)>=android.permission.SET_WALLPAPER
<com.android.server.net.NetworkPolicyManagerService\:\ void\ addUidPolicy(int,int)>=android.permission.MANAGE_NETWORK_POLICY
<com.android.browser.Tab$3\:\ void\ onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)>=android.permission.VIBRATE
<com.android.internal.telephony.ISms$Stub$Proxy\:\ boolean\ enableCellBroadcastRange(int,int)>=android.permission.WAKE_LOCK
<com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations\:\ void\ delete(long)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.opp.BluetoothOppNotification$NotificationUpdateThread\:\ void\ run()>=android.permission.VIBRATE
<android.filterpacks.imageproc.CrossProcessFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.filterfw.core.AsyncRunner$AsyncRunnerTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.RECORD_AUDIO
<android.net.wifi.WifiManager\:\ int\ updateNetwork(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.location.GpsLocationProvider\:\ void\ handleUpdateNetworkState(int,android.net.NetworkInfo)>=android.permission.WAKE_LOCK
<com.android.phone.CdmaSystemSelectListPreference$MyHandler\:\ void\ handleQueryCdmaRoamingPreference(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.nfc.nxp.NativeNfcManager\:\ void\ notifyNdefMessageListeners(com.android.nfc.nxp.NativeNfcTag)>=android.permission.BLUETOOTH
<com.android.nfc.TechListChooserActivity\:\ void\ onStop()>=android.permission.WAKE_LOCK
<com.android.music.IMediaPlaybackService$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<com.android.browser.SnapshotTab$LoadData\:\ android.database.Cursor\ doInBackground(java.lang.Void[])>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.gallery3d.app.ActivityState\:\ void\ setContentPane(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.app.AlbumPage\:\ void\ onPause()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ updateSpnDisplay()>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ enterPrivateMode(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.calendar.Utils\:\ java.lang.String\ getDisplayedDatetime(long,long,long,java.lang.String,boolean,android.content.Context)>=android.permission.READ_CALENDAR
<com.android.phone.BluetoothHandsfree$5\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.BackupManagerService$RunBackupReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.vcard.VCardParserImpl_V30\:\ boolean\ parseOneVCard()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.TelephonyRegistry\:\ void\ notifyVoLteServiceStateChanged(android.telephony.VoLteServiceState)>=android.permission.MODIFY_PHONE_STATE
<com.android.settings.TetherSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.BLUETOOTH
<com.android.contacts.voicemail.VoicemailPlaybackFragment\:\ void\ onDestroy()>=android.permission.WAKE_LOCK
<android.net.sip.SipManager\:\ void\ register(android.net.sip.SipProfile,int,android.net.sip.SipRegistrationListener)>=android.permission.USE_SIP
<com.android.contacts.list.JoinContactListAdapter\:\ android.net.Uri\ getFirstContactUri()>=android.permission.READ_SYNC_SETTINGS
<android.net.sip.ISipService\:\ void\ open(android.net.sip.SipProfile)>=android.permission.USE_SIP
<com.android.settings.bluetooth.BluetoothEventManager$DeviceDisappearedHandler\:\ void\ onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.activities.PeopleActivity$ContactDetailLoaderFragmentListener$1\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.RedEyeFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ reconnect()>=android.permission.CHANGE_WIFI_STATE
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ start()>=android.permission.BLUETOOTH
<com.android.camera.ui.InLineSettingSwitch\:\ boolean\ changeIndex(int)>=android.permission.RECORD_AUDIO
<android.net.wifi.SupplicantStateTracker$CompletedState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.net.wifi.SupplicantStateTracker$HandshakeState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.statusbar.StatusBarManagerService\:\ void\ setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)>=android.permission.STATUS_BAR
<com.android.phone.InCallScreen\:\ void\ onMMIComplete(com.android.internal.telephony.MmiCode)>=android.permission.BLUETOOTH
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask\:\ void\ onPostExecute(com.android.contacts.model.EntityDeltaList)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ enableSingleLocationUpdate()>=android.permission.WAKE_LOCK
<com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion\:\ java.lang.String\ buildUri()>=android.permission.READ_SYNC_SETTINGS
<android.app.IActivityManager\:\ void\ setProcessLimit(int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ handleCdmaSubscriptionSource(int)>=android.permission.WAKE_LOCK
<com.android.bluetooth.opp.BluetoothOppTransferHistory\:\ boolean\ onContextItemSelected(android.view.MenuItem)>=android.permission.BLUETOOTH
<com.android.server.InputMethodManagerService\:\ void\ updateFromSettingsLocked()>=android.permission.WRITE_SETTINGS
<com.android.phone.BluetoothHandsfree$5\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ android.net.NetworkInfo\ getActiveNetworkInfoForUid(int,boolean)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.providers.calendar.CalendarProvider2\:\ android.accounts.Account\ getAccount(long)>=android.permission.READ_CALENDAR
<android.widget.VideoView\:\ void\ setVideoURI(android.net.Uri)>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ onMessageNotExists()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$LocalePickerActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.calendar.EventInfoFragment\:\ boolean\ saveResponse()>=android.permission.WRITE_CALENDAR
<android.nfc.INfcTag\:\ int\ formatNdef(int,byte[])>=android.permission.NFC
<com.android.phone.CallNotifier\:\ void\ onNewRingingConnection(android.os.AsyncResult)>=android.permission.BLUETOOTH
<com.android.settings.DataUsageSummary\:\ void\ setMobilePolicySplit(boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothAdapter\:\ void\ closeProfileProxy(int,android.bluetooth.BluetoothProfile)>=android.permission.BLUETOOTH, android.permission.BROADCAST_STICKY
<android.net.wifi.IWifiManager\:\ java.util.List\ getConfiguredNetworks()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.InputMethodManagerService\:\ void\ saveCurrentInputMethodAndSubtypeToHistory()>=android.permission.WRITE_SETTINGS
<com.android.server.wm.WindowManagerService\:\ I[]\ setNewConfiguration(android.content.res.Configuration)>=android.permission.MANAGE_APP_TOKENS
<com.android.phone.EmergencyCallHelper\:\ void\ startRetryTimer()>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivity$30\:\ void\ onResizeResult(com.google.android.mms.pdu.PduPart,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.TransactionSafeActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ verifyUnlockLocked()>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ boolean\ setBlockUninstallForUser(java.lang.String,boolean,int)>=android.permission.DELETE_PACKAGES
<com.android.server.dreams.DreamManagerService$BinderService\:\ boolean\ isDreaming()>=android.permission.READ_DREAM_STATE
<com.android.server.pm.PackageManagerService\:\ void\ replacePackageLI(android.content.pm.PackageParser$Package,int,int,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>=android.permission.WAKE_LOCK
<com.android.contacts.vcard.ExportVCardActivity$ExportConfirmationListener\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.VIBRATE
<com.android.settings.Settings$RunningServicesActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cat.CommandParamsFactory\:\ boolean\ processGetInput(com.android.internal.telephony.cat.CommandDetails,java.util.List)>=android.permission.WAKE_LOCK
<android.net.wifi.SupplicantStateTracker$DefaultState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.content.SyncManager$SyncHandler\:\ void\ cancelActiveSyncLocked(android.accounts.Account,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.calendar.CalendarController\:\ void\ sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,long,int,long,java.lang.String,android.content.ComponentName)>=android.permission.WRITE_CALENDAR
<com.android.phone.BluetoothHandsfree$15\:\ android.bluetooth.AtCommandResult\ handleTestCommand()>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ setCdmaSubscriptionSource(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.suggestions.SuggestionsView$Listener\:\ boolean\ addWordToDictionary(java.lang.String)>=android.permission.WRITE_CONTACTS
<android.server.BluetoothService\:\ byte[]\ readOutOfBandData()>=android.permission.BLUETOOTH
<com.android.settings.DockSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.contacts.calllog.CallLogNotificationsService\:\ void\ onHandleIntent(android.content.Intent)>=android.permission.READ_CALL_LOG
<com.android.inputmethod.latin.ContactsDictionary\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<com.android.server.ConnectivityService\:\ int\ registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkMisc)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.server.MountService\:\ boolean\ isSecureContainerMounted(java.lang.String)>=android.permission.ASEC_ACCESS
<com.android.internal.telephony.CommandsInterface\:\ void\ getIccCardStatus(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.AccessibilitySettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothDevice\:\ boolean\ setAlias(java.lang.String)>=android.permission.BLUETOOTH
<android.filterfw.core.FinalPort\:\ void\ setFieldFrame(android.filterfw.core.Frame,boolean)>=android.permission.WAKE_LOCK
<android.content.pm.IPackageManager$Stub$Proxy\:\ int[]\ getPackageGids(java.lang.String)>=android.permission.READ_EXTERNAL_STORAGE
<com.android.settings.DataUsageSummary$CycleEditorFragment$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.MessagingController$2\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.TelephonyRegistry\:\ void\ notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>=android.permission.MODIFY_PHONE_STATE
<com.android.internal.app.IBatteryStats$Stub$Proxy\:\ byte[]\ getStatistics()>=android.permission.BLUETOOTH
<com.android.browser.XLargeUi\:\ void\ <init>=android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.CachedBluetoothDeviceManager\:\ java.lang.String\ getName(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.net.IConnectivityManager\:\ android.net.LinkProperties\ getActiveLinkProperties()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.activities.ContactEditorActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.ColorTemperatureFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.dreams.DreamManagerService$BinderService\:\ void\ setDreamComponents([android.content.ComponentName)>=android.permission.WRITE_DREAM_STATE
<com.android.contacts.list.ContactListFilterController\:\ void\ selectCustomFilter()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.sip.SipSessionGroup\:\ void\ processTimeout(javax.sip.TimeoutEvent)>=android.permission.WAKE_LOCK
<com.android.server.NsdService$NsdStateMachine$DisabledState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.CropView$FaceHighlightView\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ void\ clccResponse(int,int,int,int,boolean,java.lang.String,int)>=android.permission.BLUETOOTH_ADMIN, android.permission.MODIFY_PHONE_STATE
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler\:\ void\ setEnabled(boolean)>=android.permission.BLUETOOTH
<com.android.email.MessagingController$12\:\ void\ run()>=android.permission.VIBRATE
<com.android.settings.Settings$StorageUseActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.settings.accounts.SyncSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.browser.WebViewController\:\ boolean\ shouldOverrideUrlLoading(com.android.browser.Tab,android.webkit.WebView,java.lang.String)>=android.permission.GET_ACCOUNTS
<android.net.wifi.WifiManager\:\ int\ addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<android.filterpacks.text.StringLogger\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.server.BluetoothA2dpService\:\ void\ onSinkPropertyChanged(java.lang.String,java.lang.String[])>=android.permission.BLUETOOTH
<android.widget.QuickContactBadge\:\ void\ assignContactFromPhone(java.lang.String,boolean)>=android.permission.WRITE_CONTACTS
<com.android.nfc.NfcService$TagService\:\ int\ setTimeout(int,int)>=android.permission.NFC
<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver\:\ void\ onInputEvent(android.view.InputEvent)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser\:\ void\ addParser(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations)>=android.permission.WRITE_CALENDAR
<com.android.settings.bluetooth.HeadsetProfile\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.camera.Camera\:\ void\ access$4300(com.android.camera.Camera)>=android.permission.ACCESS_COARSE_LOCATION
<android.app.ListActivity\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.net.wifi.WifiStateMachine\:\ void\ handleNetworkDisconnect()>=android.permission.BROADCAST_STICKY
<com.android.mms.util.Recycler$SmsRecycler\:\ void\ deleteMessagesForThread(android.content.Context,long,int)>=android.permission.RECEIVE_SMS
<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper\:\ void\ cancelAuthentication(android.os.IBinder,java.lang.String)>=android.permission.USE_FINGERPRINT
<com.android.browser.Controller\:\ void\ closeEmptyTab()>=android.permission.GET_ACCOUNTS
<com.android.music.MediaPlaybackService$MultiPlayer$2\:\ boolean\ onError(android.media.MediaPlayer,int,int)>=android.permission.WAKE_LOCK
<com.android.settings.WallpaperTypeSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.contacts.group.GroupEditorFragment$2\:\ android.content.Loader\ onCreateLoader(int,android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.view.SurfaceView\:\ void\ updateWindow(boolean,boolean)>=android.permission.SYSTEM_ALERT_WINDOW
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary\:\ void\ access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>=android.permission.WRITE_CONTACTS
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ doAutoAdvance()>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.DayFragment\:\ void\ handleEvent(com.android.calendar.CalendarController$EventInfo)>=android.permission.WRITE_CALENDAR
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ boolean\ sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<android.bluetooth.IBluetooth$Stub$Proxy\:\ int\ getDiscoverableTimeout()>=android.permission.BLUETOOTH
<android.net.IConnectivityManager$Stub$Proxy\:\ android.net.NetworkInfo\ getActiveNetworkInfo()>=android.permission.ACCESS_NETWORK_STATE
<android.nfc.NfcAdapter\:\ void\ enableForegroundNdefPush(android.app.Activity,android.nfc.NdefMessage)>=android.permission.NFC
<com.android.email.activity.MessagesAdapter$MessagesCursorLoader\:\ java.lang.Object\ loadInBackground()>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.WifiStateMachine$SupplicantStartingState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BROADCAST_STICKY
<com.android.server.am.ActivityManagerService\:\ void\ handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>=android.permission.WAKE_LOCK
<com.android.settings.DisplaySettings\:\ void\ writeFontSizePreference(java.lang.Object)>=android.permission.CHANGE_CONFIGURATION
<com.android.server.LightsService$1\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.FLASHLIGHT
<com.android.mms.transaction.MessagingNotification$3\:\ java.lang.Integer\ doInBackground(java.lang.Void[])>=android.permission.READ_SMS
<com.android.phone.BluetoothHeadsetService\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.email.activity.UIControllerTwoPane$RefreshTask\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.VibratorUtils\:\ void\ vibrate(long)>=android.permission.WAKE_LOCK
<android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl\:\ boolean\ isActiveNetworkMetered(android.net.ConnectivityManager)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.MessageListAdapter$OnDataSetChangedListener\:\ void\ onContentChanged(com.android.mms.ui.MessageListAdapter)>=android.permission.WRITE_SMS
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask\:\ android.accounts.AccountManagerFuture\ start()>=android.permission.GET_ACCOUNTS
<com.android.contacts.calllog.ContactInfoHelper\:\ com.android.contacts.calllog.ContactInfo\ queryContactInfoForPhoneNumber(java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.usb.UsbDeviceManager$1\:\ void\ onUEvent(android.os.UEventObserver$UEvent)>=android.permission.BROADCAST_STICKY
<com.android.mms.ui.ConversationList$2\:\ void\ run()>=android.permission.RECEIVE_SMS
<android.filterpacks.imageproc.GrainFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.wm.WindowManagerService\:\ void\ clearForcedDisplayDensityForUser(int,int)>=android.permission.WRITE_SECURE_SETTINGS
<android.nfc.tech.NfcB\:\ void\ reconnect()>=android.permission.NFC
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ android.net.Uri\ getContactUriForEmail(java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothInputDevice\:\ java.util.List\ getDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.server.ThrottleService$MyHandler\:\ void\ postNotification(int,int,int,int)>=android.permission.VIBRATE
<com.android.internal.telephony.sip.SipPhoneBase\:\ com.android.internal.telephony.Connection\ dial(java.lang.String)>=android.permission.USE_SIP
<com.android.server.am.ActivityManagerService\:\ void\ setLenientBackgroundCheck(boolean)>=android.permission.SET_PROCESS_LIMIT
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ enableEnhancedVoicePrivacy(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.calendar.DayView\:\ void\ access$5000(com.android.calendar.DayView,android.view.MotionEvent,android.view.MotionEvent,float,float)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.ServiceStateTracker\:\ void\ powerOffRadioSafely(com.android.internal.telephony.DataConnectionTracker)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ android.os.health.HealthStatsParceler\ takeUidSnapshot(int)>=android.permission.BATTERY_STATS
<com.android.systemui.statusbar.tablet.SettingsView\:\ void\ onClickSettings()>=android.permission.EXPAND_STATUS_BAR
<com.android.gallery3d.ui.SelectionManager$SelectionListener\:\ void\ onSelectionModeChange(int)>=android.permission.VIBRATE
<com.android.server.content.ContentService\:\ android.content.SyncAdapterType[]\ getSyncAdapterTypes()>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.net.wifi.WifiManager\:\ boolean\ removeNetwork(int)>=android.permission.CHANGE_WIFI_STATE
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy\:\ boolean\ updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.backup.Trampoline\:\ void\ setBackupEnabled(boolean)>=android.permission.BACKUP
<com.android.contacts.editor.ContactEditorUtils\:\ com.android.contacts.editor.ContactEditorUtils\ getInstance(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.InputMethodManagerService\:\ java.util.List\ getInputMethodList()>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.tts.TtsEngineSettingsFragment\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.location.LocationManager\:\ java.util.List\ getProviders(boolean)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<android.net.IConnectivityManager\:\ android.net.NetworkInfo[]\ getAllNetworkInfo()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setLockTaskPackages(android.content.ComponentName,[java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.SettingsPreferenceFragment\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.app.ActivityManagerNative\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.speech.SpeechRecognizer\:\ void\ cancel()>=android.permission.RECORD_AUDIO
<com.android.server.NetworkManagementService\:\ void\ removeInterfaceFromLocalNetwork(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<android.bluetooth.IBluetoothPbap\:\ boolean\ isConnected(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ clearPendingBackup()>=android.permission.BACKUP
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ setName(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.telephony.IccRecords\:\ void\ setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.app.ActivityManager\:\ java.util.List\ getRunningTasks(int)>=android.permission.GET_TASKS
<com.android.bluetooth.pan.PanService$BluetoothPanBinder\:\ void\ setBluetoothTethering(boolean)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN, android.permission.TETHER_PRIVILEGED
<android.content.Context\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.gallery3d.ui.SlideshowView\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary\:\ void\ loadDictionaryAsync()>=android.permission.WRITE_CONTACTS
<com.android.internal.os.BatteryStatsImpl\:\ void\ setBtHeadset(android.bluetooth.BluetoothHeadset)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ doRecovery()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccPhoneBookInterfaceManager\:\ int[]\ getAdnRecordsSize(int)>=android.permission.WAKE_LOCK
<com.android.exchange.EasOutboxService\:\ void\ sendFailed(long,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.camera.ui.BasicSettingPopup$Listener\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<android.test.IsolatedContext$MockAccountManager\:\ void\ setPassword(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.mms.ui.MessageListItem\:\ void\ bindNotifInd()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy\:\ int[]\ getAdnRecordsSize(int)>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ android.net.Network[]\ getAllNetworks()>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothA2dp\:\ boolean\ shouldSendVolumeKeys(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.email.service.EmailBroadcastProcessorService\:\ void\ onSystemAccountChanged()>=android.permission.WAKE_LOCK
<com.android.contacts.activities.ContactEditorActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.opp.BluetoothOppManager\:\ java.lang.String\ getDeviceName(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ lockNow(boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.mms.transaction.NotificationTransaction\:\ byte[]\ sendPdu(byte[],java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<com.android.server.WifiService\:\ void\ <init>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.FisheyeFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.bluetooth.BluetoothSettings\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.BLUETOOTH
<com.android.mms.ui.ConversationListItem\:\ void\ access$000(com.android.mms.ui.ConversationListItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.SendTransaction\:\ void\ notifyObservers()>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ boolean\ nvWriteItem(int,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.mms.util.Recycler$SmsRecycler\:\ void\ deleteOldMessages(android.content.Context)>=android.permission.RECEIVE_SMS
<com.android.gallery3d.ui.CropView\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<android.telephony.SmsManager\:\ void\ sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.mms.data.WorkingMessage\:\ void\ sendMmsWorker(com.android.mms.data.Conversation,android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>=android.permission.RECEIVE_SMS
<com.android.server.content.ContentService\:\ void\ cancelSync(android.accounts.Account,java.lang.String,android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.nfc.NfcService$NfcAdapterService\:\ void\ setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>=android.permission.NFC
<com.android.gallery3d.app.PhotoPage$1\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.Controller\:\ void\ sendPendingMessages(long)>=android.permission.READ_SYNC_SETTINGS
<com.android.commands.svc.DataCommand\:\ void\ run(java.lang.String[])>=android.permission.BLUETOOTH
<android.filterpacks.base.GLTextureSource\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.net.IConnectivityManager$Stub$Proxy\:\ java.lang.String[]\ getTetherableBluetoothRegexs()>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.FillLightFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.gallery3d.app.PhotoDataAdapter$UpdateContent\:\ java.lang.Object\ call()>=android.permission.VIBRATE
<com.android.phone.PhoneApp\:\ void\ access$1100(com.android.phone.PhoneApp)>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.SubtypeSwitcher\:\ void\ updateParametersOnStartInputView()>=android.permission.WRITE_CONTACTS
<com.android.music.MediaPlaybackService$CompatMediaPlayer\:\ void\ onCompletion(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.internal.app.IBatteryStats\:\ void\ setBatteryState(int,int,int,int,int,int)>=android.permission.BLUETOOTH
<com.android.phone.InCallScreen\:\ void\ access$1000(com.android.phone.InCallScreen,android.os.AsyncResult,char)>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ stopWifi()>=android.permission.CHANGE_WIFI_STATE
<android.app.backup.BackupManager\:\ void\ dataChanged(java.lang.String)>=android.permission.RECEIVE_BOOT_COMPLETED
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ void\ addPreferencesForActivity()>=android.permission.BLUETOOTH
<com.android.settings.Settings$AccessibilitySettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.CommandsInterface\:\ void\ getLastCallFailCause(android.os.Message)>=android.permission.WAKE_LOCK
<android.webkit.HTML5VideoFullScreen\:\ void\ reprepareData(android.webkit.HTML5VideoViewProxy)>=android.permission.WAKE_LOCK
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ int\ getInputDeviceConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.pm.PackageManagerService\:\ void\ resetRuntimePermissions()>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.REVOKE_RUNTIME_PERMISSIONS
<com.android.email.activity.UIControllerTwoPane\:\ void\ updateMessageOrderManager()>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.ActionBarController\:\ void\ access$500(com.android.email.activity.ActionBarController)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaCall\:\ void\ hangup()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.Gallery\:\ void\ onResume()>=android.permission.RECORD_AUDIO
<com.android.contacts.list.AccountFilterActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ sendEmergencyCallbackModeChange()>=android.permission.BROADCAST_STICKY
<com.android.mms.transaction.MessagingNotification\:\ void\ blockingUpdateNewMessageIndicator(android.content.Context,long,boolean)>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageListFragment\:\ void\ doFooterClick()>=android.permission.READ_SYNC_SETTINGS
<android.app.admin.DevicePolicyManager\:\ java.lang.String\ getWifiMacAddress(android.content.ComponentName)>=android.permission.ACCESS_WIFI_STATE
<com.android.gallery3d.app.PhotoPage\:\ void\ onDeleteImage(com.android.gallery3d.data.Path,int)>=android.permission.VIBRATE
<com.android.server.net.NetworkStatsService\:\ android.net.NetworkStats\ getNetworkStatsTethering()>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.Preloader\:\ com.android.browser.Preloader$PreloaderSession\ getSession(java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.emailcommon.service.IEmailService$Stub$Proxy\:\ void\ hostChanged(long)>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ void\ dumpInputDeviceProfile(java.io.PrintWriter)>=android.permission.BLUETOOTH
<com.android.settings.Settings$AccountSyncSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.development.AccountsTester$GetAndInvalidateAuthTokenCallback\:\ void\ run(android.accounts.AccountManagerFuture)>=android.permission.MANAGE_ACCOUNTS
<com.android.internal.telephony.CallerInfo\:\ com.android.internal.telephony.CallerInfo\ markAsVoiceMail()>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.Phone\:\ void\ queryCdmaRoamingPreference(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService\:\ int\ onStartCommand(android.content.Intent,int,int)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ void\ checkMockPermissionsSafe()>=android.permission.ACCESS_MOCK_LOCATION
<android.media.effect.effects.RedEyeEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.browser.Controller\:\ void\ onDownloadStart(com.android.browser.Tab,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>=android.permission.GET_ACCOUNTS
<com.android.server.am.ActivityManagerService\:\ boolean\ startUserInBackground(int)>=android.permission.BROADCAST_STICKY, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.wifi.AdvancedWifiSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.server.BackupManagerService$PerformFullRestoreTask\:\ boolean\ restoreOneFile(java.io.InputStream,byte[])>=android.permission.WAKE_LOCK
<com.android.camera.VideoCamera\:\ void\ access$1000(com.android.camera.VideoCamera)>=android.permission.RECORD_AUDIO
<com.android.contacts.SpecialCharSequenceMgr\:\ void\ showMEIDPanel(android.content.Context,boolean,android.telephony.TelephonyManager)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.DefaultPhoneNotifier\:\ void\ notifyServiceState(com.android.internal.telephony.Phone)>=android.permission.BROADCAST_STICKY
<com.android.calendar.CalendarController\:\ void\ sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,android.text.format.Time,long,int,long,java.lang.String,android.content.ComponentName)>=android.permission.WRITE_CALENDAR
<android.server.BluetoothBondState\:\ void\ setBondState(java.lang.String,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.contacts.activities.PeopleActivity\:\ void\ createViewsAndFragments(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.LatinIME\:\ void\ switchToKeyboardView()>=android.permission.WRITE_CONTACTS
<com.android.phone.InCallScreen\:\ boolean\ handleCallKey()>=android.permission.BLUETOOTH
<com.android.server.WifiService\:\ java.util.List\ getConfiguredNetworks()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub\:\ int\ stopRecognition(android.os.ParcelUuid,android.hardware.soundtrigger.IRecognitionStatusCallback)>=android.permission.MANAGE_SOUND_TRIGGER
<com.android.server.input.InputManagerService$Callbacks\:\ long\ notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle)>=android.permission.WAKE_LOCK
<com.android.settings.wifi.WifiConfigInfo\:\ void\ onResume()>=android.permission.ACCESS_WIFI_STATE
<com.android.browser.Tab$2\:\ void\ onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.calendar.DayView\:\ void\ doLongPress(android.view.MotionEvent)>=android.permission.READ_CALENDAR
<com.android.gallery3d.ui.MenuExecutor\:\ void\ access$400(com.android.gallery3d.ui.MenuExecutor,int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)>=android.permission.VIBRATE
<com.android.server.audio.AudioService\:\ void\ setBluetoothScoOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.mms.ui.ComposeMessageActivity\:\ void\ onRestart()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onSetInternalDataEnabled(boolean)>=android.permission.BROADCAST_STICKY
<com.android.providers.contacts.LegacyApiSupport\:\ int\ updateContactMethods(long,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.SearchPanelView$GlowPadTriggerListener\:\ void\ onTrigger(android.view.View,int)>=android.permission.VIBRATE
<com.android.browser.NfcHandler\:\ void\ register(android.app.Activity,com.android.browser.Controller)>=android.permission.NFC
<com.android.phone.BluetoothHandsfree$10\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ android.app.ActivityManager$StackInfo\ getStackInfo(int)>=android.permission.MANAGE_ACTIVITY_STACKS
<com.android.contacts.list.PhoneNumberListAdapter\:\ void\ bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.sip.SipSessionGroup\:\ void\ processResponse(javax.sip.ResponseEvent)>=android.permission.WAKE_LOCK
<com.android.browser.BrowserActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setPasswordMinimumLetters(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.bluetooth.opp.BluetoothOppTransferActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ getCurrentCalls(android.os.Message)>=android.permission.WAKE_LOCK
<android.view.IWindowManager$Stub$Proxy\:\ void\ reenableKeyguard(android.os.IBinder)>=android.permission.DISABLE_KEYGUARD
<com.android.phone.CallCard\:\ void\ updateState(com.android.internal.telephony.CallManager)>=android.permission.BLUETOOTH
<com.android.quicksearchbox.util.HttpHelper\:\ java.lang.String\ post(com.android.quicksearchbox.util.HttpHelper$PostRequest)>=android.permission.INTERNET
<com.android.internal.telephony.PhoneProxy\:\ void\ setCdmaSubscription(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothHeadset\:\ boolean\ stopVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.gallery3d.ui.EdgeView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<android.net.IConnectivityManager$Stub\:\ void\ requestNetworkTransitionWakelock(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ void\ killApplication(java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.ManageCachePage\:\ void\ resume()>=android.permission.ACCESS_NETWORK_STATE
<android.provider.Contacts$People\:\ long\ tryGetMyContactsGroupId(android.content.ContentResolver)>=android.permission.WRITE_CONTACTS
<com.android.browser.Bookmarks$1\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.GET_ACCOUNTS
<com.android.browser.AddBookmarkPage\:\ void\ descendInto(java.lang.String,long)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ exitEmergencyCallbackMode()>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothHeadset\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ addVideo(android.net.Uri,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$TetherSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.exchange.EasOutboxService\:\ boolean\ hasConnectivity()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ hangupConnectionByIndex(com.android.internal.telephony.cdma.CdmaCall,int)>=android.permission.WAKE_LOCK
<com.android.providers.downloads.RealSystemFacade\:\ boolean\ isActiveNetworkMetered()>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.opp.BluetoothOppBtEnableActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ setPasskey(java.lang.String,int)>=android.permission.BLUETOOTH_ADMIN
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ readRemoteRssi(int,java.lang.String)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ java.lang.String\ getRemoteAlias(java.lang.String)>=android.permission.BLUETOOTH
<com.android.music.AudioPreview$PreviewPlayer\:\ void\ reset()>=android.permission.WAKE_LOCK
<com.android.exchange.CalendarSyncEnabler\:\ void\ enableEasCalendarSync()>=android.permission.GET_ACCOUNTS
<com.android.server.sip.SipService\:\ void\ access$1700(com.android.server.sip.SipService,android.net.NetworkInfo)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME\:\ boolean\ addWordToDictionary(java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.phone.EmergencyDialer\:\ void\ keyPressed(int)>=android.permission.VIBRATE
<com.android.internal.policy.impl.GlobalActions\:\ void\ <init>=android.permission.ACCESS_NETWORK_STATE
<android.server.BluetoothInputProfileHandler\:\ void\ setInitialInputDevicePriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<android.nfc.NfcAdapter\:\ void\ setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>=android.permission.NFC
<com.android.internal.telephony.Phone\:\ void\ queryTTYMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.model.AccountTypeManagerImpl\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.opp.BluetoothOppObexServerSession\:\ void\ preStart()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaLteUiccRecords\:\ void\ handleSimRefresh(com.android.internal.telephony.IccRefreshResponse)>=android.permission.WAKE_LOCK
<com.android.internal.util.IState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.email.activity.setup.AccountSettingsFragment$LoadAccountTask\:\ void\ onPostExecute(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.usb.UsbService\:\ void\ systemReady()>=android.permission.WRITE_SETTINGS
<com.android.contacts.model.AccountTypeManagerImpl\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ suppressResizeConfigChanges(boolean)>=android.permission.MANAGE_ACTIVITY_STACKS
<com.android.mms.data.Conversation\:\ void\ access$900(android.content.Context)>=android.permission.WRITE_SMS
<com.android.emailcommon.service.IEmailServiceCallback$Stub\:\ void\ sendMessageStatus(long,java.lang.String,int,int)>=android.permission.READ_SYNC_SETTINGS
<android.media.AudioService\:\ void\ setSpeakerphoneOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ boolean\ isRingingForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.providers.downloads.DownloadThread\:\ void\ checkPausedOrCanceled(com.android.providers.downloads.DownloadThread$State)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.MountService\:\ void\ createUserKey(int,int,boolean)>=android.permission.STORAGE_INTERNAL
<com.android.gallery3d.ui.PhotoView\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<com.android.contacts.list.ShortcutIntentBuilder$LoadingAsyncTask\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.WRITE_CONTACTS
<com.android.browser.Controller\:\ void\ goBackOnePageOrQuit()>=android.permission.GET_ACCOUNTS
<android.nfc.INfcTag$Stub$Proxy\:\ android.nfc.TransceiveResult\ transceive(int,byte[],boolean)>=android.permission.NFC
<com.android.internal.telephony.RIL\:\ void\ startDtmf(char,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.ITelephonyRegistry\:\ void\ listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiState(int,java.lang.String)>=android.permission.UPDATE_DEVICE_STATS
<android.view.ContextThemeWrapper\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.settings.DataUsageSummary$AppDetailsFragment\:\ void\ onStart()>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.RIL\:\ void\ getIMEI(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.camera.ActivityBase\:\ void\ onResume()>=android.permission.RECORD_AUDIO
<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper\:\ long\ preEnroll(android.os.IBinder)>=android.permission.MANAGE_FINGERPRINT
<com.android.contacts.activities.PhotoSelectionActivity\:\ void\ attachPhotoHandler()>=android.permission.WRITE_CONTACTS
<android.server.BluetoothService\:\ boolean\ setPin(java.lang.String,byte[])>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.activities.TransactionSafeActivity\:\ void\ onNewIntent(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.BitmapOverlayFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.sip.SipPhone\:\ void\ restoreSavedNetworkSelection(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.bluetooth.opp.BluetoothOppService\:\ void\ access$1800(com.android.bluetooth.opp.BluetoothOppService,android.database.Cursor,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ access$000(com.android.internal.telephony.cdma.CdmaServiceStateTracker)>=android.permission.BROADCAST_STICKY
<com.android.deskclock.Alarms\:\ void\ enableAlarm(android.content.Context,int,boolean)>=android.permission.WRITE_SETTINGS
<android.location.LocationManager\:\ void\ requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.server.BatteryService\:\ void\ access$000(com.android.server.BatteryService)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub\:\ boolean\ connectInputDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.app.ActivityGroup\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.phone.PhoneInterfaceManager\:\ void\ enforceReadPermission()>=android.permission.READ_PHONE_STATE
<android.bluetooth.BluetoothPbap\:\ boolean\ isConnected(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.soundrecorder.Recorder\:\ void\ delete()>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerTwoPane\:\ void\ onActivityResume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.TelephonyRegistry\:\ void\ notifySignalStrength(android.telephony.SignalStrength)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.server.MountService\:\ int\ createSecureContainer(java.lang.String,int,java.lang.String,java.lang.String,int,boolean)>=android.permission.ASEC_CREATE
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager\:\ void\ sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.music.MusicPicker\:\ void\ onListItemClick(android.widget.ListView,android.view.View,int,long)>=android.permission.WAKE_LOCK
<com.android.server.MountService\:\ void\ partitionMixed(java.lang.String,int)>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ setFilter(com.android.contacts.list.ContactListFilter)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker\:\ void\ setImageViewResources(android.content.Context,android.widget.RemoteViews)>=android.permission.BLUETOOTH
<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.media.projection.MediaProjectionManagerService$BinderService\:\ android.media.projection.IMediaProjection\ createProjection(int,java.lang.String,int,boolean)>=android.permission.MANAGE_MEDIA_PROJECTION
<android.filterpacks.imageproc.SimpleImageFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ android.location.Location\ getLastKnownLocation(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.Settings$DeviceInfoSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.CommandsInterface\:\ void\ supplyIccPuk2(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.service.dreams.IDreamManager$Stub$Proxy\:\ void\ setDreamComponent(android.content.ComponentName)>=android.permission.WRITE_SETTINGS
<com.android.email.activity.MessageCompose$QuickResponseChecker\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.AlbumSetPage\:\ void\ onPause()>=android.permission.ACCESS_NETWORK_STATE
<android.content.SyncManager\:\ void\ access$900(android.content.SyncManager)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.AccountUnlockScreen\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.server.input.InputManagerService\:\ void\ start()>=android.permission.WRITE_SETTINGS
<com.android.contacts.group.GroupDetailFragment$2\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.OtaUtils\:\ void\ otaShowProperScreen()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ int\ getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.AlbumPage\:\ void\ doCluster(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.Bookmarks\:\ void\ removeFromBookmarks(android.content.Context,android.content.ContentResolver,java.lang.String,java.lang.String)>=android.permission.GET_ACCOUNTS
<android.bluetooth.BluetoothHeadset\:\ boolean\ stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.sip.SipSessionGroup$SipSessionImpl$KeepAliveProcess\:\ boolean\ process(java.util.EventObject)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaServiceStateTracker$1\:\ void\ onChange(boolean)>=android.permission.BROADCAST_STICKY
<com.android.contacts.ContactSaveService\:\ void\ createGroup(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.ShowOrCreateActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.DayView\:\ boolean\ onLongClick(android.view.View)>=android.permission.READ_CALENDAR
<com.android.bluetooth.pbap.BluetoothPbapVcardManager\:\ int\ getContactsSize()>=android.permission.WRITE_CONTACTS
<android.filterpacks.videosrc.MediaSource\:\ boolean\ setupMediaPlayer(boolean)>=android.permission.WAKE_LOCK
<com.android.server.power.PowerManagerService$BinderService\:\ void\ wakeUp(long,java.lang.String,java.lang.String)>=android.permission.DEVICE_POWER
<com.android.bluetooth.opp.BluetoothOppObexServerSession\:\ int\ onPut(javax.obex.Operation)>=android.permission.WAKE_LOCK
<com.android.inputmethod.keyboard.KeyboardView\:\ boolean\ dispatchHoverEvent(android.view.MotionEvent)>=android.permission.WRITE_CONTACTS
<com.android.phone.PhoneInterfaceManager\:\ java.util.List\ getNeighboringCellInfo(java.lang.String)>=android.permission.ACCESS_FINE_LOCATION, android.permission.INTERACT_ACROSS_USERS_FULL
<android.webkit.HTML5VideoViewProxy$VideoPlayer\:\ void\ enterFullScreenVideo(int,java.lang.String,android.webkit.HTML5VideoViewProxy,android.webkit.WebViewClassic)>=android.permission.WAKE_LOCK
<com.android.mms.model.ImageModel\:\ com.android.mms.util.ItemLoadedFuture\ loadThumbnailBitmap(com.android.mms.util.ItemLoadedCallback)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ enableLocationUpdates()>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityStack\:\ void\ checkReadyForSleepLocked()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneSubInfoProxy\:\ java.lang.String\ getSubscriberId()>=android.permission.READ_PHONE_STATE
<android.net.IConnectivityManager\:\ android.net.NetworkQuotaInfo\ getActiveNetworkQuotaInfo()>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.IAccountManager$Stub\:\ void\ removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>=android.permission.MANAGE_ACCOUNTS
<com.android.settings.accounts.SyncSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.vcard.ImportProcessor\:\ boolean\ readOneVCard(java.io.InputStream,int,java.lang.String,com.android.vcard.VCardInterpreter,int[])>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.CoreSettingsObserver\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onRadioAvailable()>=android.permission.BROADCAST_STICKY
<com.android.server.am.ActivityManagerService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.hardware.location.ActivityRecognitionHardware\:\ boolean\ registerSink(android.hardware.location.IActivityRecognitionHardwareSink)>=android.permission.LOCATION_HARDWARE
<com.android.gallery3d.data.LocationClustering\:\ java.lang.String\ generateName(java.util.ArrayList,com.android.gallery3d.util.ReverseGeocoder)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.service.AccountService\:\ android.os.IBinder\ onBind(android.content.Intent)>=android.permission.READ_PHONE_STATE
<com.android.email.activity.setup.MailboxSettings$LoadMailboxTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.LightsService$1\:\ void\ setFlashlightEnabled(boolean)>=android.permission.FLASHLIGHT
<android.net.IConnectivityManager\:\ int\ setUsbTethering(boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.videosrc.MediaSource\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ boolean\ isVideoCallingEnabled(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.gallery3d.app.ManageCachePage$1\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1\:\ void\ run(android.accounts.AccountManagerFuture)>=android.permission.GET_ACCOUNTS
<com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.email.activity.ActionBarController$3\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.Controller$10\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ resetStateLocked()>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService\:\ void\ onCreate()>=android.permission.WRITE_CONTACTS
<android.filterpacks.imageproc.AutoFixFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.gsm.SIMRecords\:\ void\ setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.test.ModelInterpreter\:\ void\ <init>=android.permission.INTERNET
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ enableSingleLocationUpdate()>=android.permission.WAKE_LOCK
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener\:\ void\ onViewContactAction(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.Invert\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.net.NetworkPolicyManagerService\:\ boolean\ isUidForeground(int)>=android.permission.MANAGE_NETWORK_POLICY
<com.android.music.MediaPlaybackService\:\ void\ openCurrentAndNext()>=android.permission.WAKE_LOCK
<com.android.systemui.usb.StorageNotification$1\:\ void\ run()>=android.permission.VIBRATE
<com.android.phone.BluetoothHandsfree\:\ boolean\ audioOn()>=android.permission.BLUETOOTH
<android.net.IConnectivityManager\:\ java.lang.String[]\ getTetherableIfaces()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.os.BatteryStatsImpl\:\ void\ writeToParcelLocked(android.os.Parcel,boolean,int)>=android.permission.BLUETOOTH
<com.android.emailcommon.service.EmailServiceProxy$6\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.Controller\:\ com.android.browser.Tab\ openTab(java.lang.String,boolean,boolean,boolean)>=android.permission.GET_ACCOUNTS
<android.content.ContentResolver\:\ int\ getIsSyncable(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.SupplicantStateTracker$ScanState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.MovieActivity$1\:\ void\ onResume()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.DataConnection$DcDisconnectionErrorCreatingConnection\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.bluetooth.opp.BluetoothOppObexServerSession\:\ void\ onClose()>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService\:\ void\ unregisterReceivers()>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ int\ startVoiceActivity(java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)>=android.permission.BIND_VOICE_INTERACTION
<com.android.exchange.adapter.EmailSyncAdapter\:\ boolean\ sendLocalChanges(com.android.exchange.adapter.Serializer)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ disableSingleLocationUpdate()>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME\:\ void\ updateSuggestions()>=android.permission.WRITE_CONTACTS
<com.android.email.activity.setup.AccountSetupNames$2\:\ java.lang.Object\ callDoInBackgroundForTest(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.exchange.EasAccountService\:\ android.os.Bundle\ validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)>=android.permission.WAKE_LOCK
<com.android.settings.DataUsageSummary\:\ void\ setPolicyLimitBytes(long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.os.storage.ExternalStorageFormatter$1\:\ void\ onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<com.android.server.DeviceStorageMonitorService\:\ void\ cancelNotification()>=android.permission.BROADCAST_STICKY
<android.media.effect.effects.DuotoneEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.contacts.list.EmailAddressPickerFragment\:\ void\ onStart()>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.ImageCombineFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.MountService\:\ void\ forgetVolume(java.lang.String)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.calendar.month.SimpleDayPickerFragment\:\ void\ onScroll(android.widget.AbsListView,int,int,int)>=android.permission.WRITE_CALENDAR
<com.android.contacts.activities.NonPhoneActivity\:\ void\ onServiceCompleted(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.dialpad.DialpadFragment\:\ void\ setFormattedDigits(java.lang.String,java.lang.String)>=android.permission.READ_PHONE_STATE
<android.accounts.AccountManagerService\:\ void\ checkManageAccountsPermission()>=android.permission.MANAGE_ACCOUNTS
<com.android.inputmethod.latin.LatinIME\:\ void\ restartSuggestionsOnWordBeforeCursorIfAtEndOfWord(android.view.inputmethod.InputConnection)>=android.permission.WRITE_CONTACTS
<com.android.camera.VideoCamera\:\ void\ onCreate(android.os.Bundle)>=android.permission.RECORD_AUDIO
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler\:\ long\ getWritableEntityId()>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.base.InputStreamSource\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onCleanUpAllConnections(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.phone.InCallScreen\:\ void\ updateScreen()>=android.permission.BLUETOOTH
<com.android.internal.telephony.IccSmsInterfaceManagerProxy\:\ void\ sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.settings.Settings$SecuritySettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<com.android.server.pm.ShutdownThread\:\ void\ beginShutdownSequence(android.content.Context)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothHeadset\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.group.GroupEditorFragment$3\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.DayView\:\ boolean\ initNextView(int)>=android.permission.READ_CALENDAR
<android.bluetooth.HeadsetBase\:\ void\ releaseWakeLock()>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$5\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.internal.telephony.RIL\:\ void\ getGsmBroadcastConfig(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.providers.media.MediaProvider\:\ android.os.ParcelFileDescriptor\ makeThumbInternal(com.android.providers.media.MediaProvider$ThumbData)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.accounts.AccountManager$BaseFutureTask\:\ void\ startTask()>=android.permission.GET_ACCOUNTS
<com.android.contacts.ContactsApplication$DelayedInitializer\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.DevelopmentSettings\:\ void\ writeShowTouchesOptions()>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.uiautomator.core.InteractionController\:\ void\ freezeRotation()>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetooth\:\ boolean\ enable()>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.voicemail.VoicemailPlaybackPresenter\:\ void\ access$700(com.android.contacts.voicemail.VoicemailPlaybackPresenter)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.commands.svc.Svc$Command\:\ void\ run(java.lang.String[])>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ notifyNoData(com.android.internal.telephony.DataConnection$FailCause)>=android.permission.BROADCAST_STICKY
<com.android.mms.transaction.HttpUtils\:\ byte[]\ httpConnection(android.content.Context,long,java.lang.String,byte[],int,boolean,java.lang.String,int)>=android.permission.READ_PHONE_STATE
<com.android.phone.FdnSetting\:\ void\ toggleFDNEnable(boolean)>=android.permission.WAKE_LOCK
<android.service.quicksettings.TileService\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.exchange.AbstractSyncService\:\ android.os.Bundle\ validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager\:\ java.lang.String\ getConfigFile()>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.Settings$AdvancedWifiSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<android.provider.BrowserContract$SyncState\:\ void\ set(android.content.ContentProviderClient,android.accounts.Account,byte[])>=android.permission.GET_ACCOUNTS
<android.app.AliasActivity\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.internal.app.ChooserActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.PhotoView$Listener\:\ void\ onCommitDeleteImage()>=android.permission.VIBRATE
<com.android.gallery3d.app.PhotoPage\:\ void\ resume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.MessageViewFragment\:\ void\ onMarkMessageAsRead(boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ProcessStatsService\:\ android.os.ParcelFileDescriptor\ getStatsOverTime(long)>=android.permission.PACKAGE_USAGE_STATS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ handleSetHidden(boolean)>=android.permission.WAKE_LOCK
<com.android.calendar.widget.CalendarAppWidgetProvider\:\ void\ performUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[],long[])>=android.permission.READ_CALENDAR
<android.app.ExpandableListActivity\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.server.sip.SipSessionGroup\:\ void\ processRequest(javax.sip.RequestEvent)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiManager$WifiLock\:\ void\ release()>=android.permission.WAKE_LOCK
<android.server.BluetoothA2dpService\:\ boolean\ disconnectSinkInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.content.SyncManager\:\ void\ scheduleSync(android.accounts.Account,int,java.lang.String,android.os.Bundle,long,boolean)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$WifiP2pSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<android.app.WallpaperManager\:\ void\ setBitmap(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.server.wifi.WifiServiceImpl\:\ android.net.wifi.WifiConfiguration\ getMatchingWifiConfig(android.net.wifi.ScanResult)>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.email.Controller\:\ int\ searchMessages(long,com.android.emailcommon.service.SearchParams)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.editor.ContactEditorFragment\:\ void\ acquireAggregationSuggestions(android.content.Context,com.android.contacts.editor.RawContactEditorView)>=android.permission.READ_SYNC_SETTINGS
<android.nfc.INfcAdapter$Stub$Proxy\:\ boolean\ enableNdefPush()>=android.permission.BLUETOOTH
<com.android.providers.contacts.DatabaseModifier\:\ long\ insert(android.content.ContentValues)>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.server.am.ActivityManagerService\:\ android.graphics.Rect\ getTaskBounds(int)>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ queryAvailableBandMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ disconnect()>=android.permission.BLUETOOTH
<com.android.providers.contacts.ProfileProvider\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>=android.permission.READ_PROFILE
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ onMoveEvent(int,int,long)>=android.permission.WRITE_CONTACTS
<com.android.gallery3d.ui.TileImageView\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.media.RingtonePlayer$1\:\ void\ stopAsync()>=android.permission.WAKE_LOCK
<com.android.mms.util.PduLoaderManager\:\ com.android.mms.util.ItemLoadedFuture\ getPdu(android.net.Uri,boolean,com.android.mms.util.ItemLoadedCallback)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.BatteryStatsService\:\ long\ getAwakeTimeBattery()>=android.permission.BATTERY_STATS
<com.android.browser.TabControl\:\ android.webkit.WebView\ createNewWebView()>=android.permission.INTERNET
<com.android.contacts.model.AccountTypeManagerImpl\:\ void\ processBroadcastIntent(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.MenuExecutor\:\ void\ access$700(com.android.gallery3d.ui.MenuExecutor,int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.recent.RecentsHorizontalScrollView\:\ void\ onChildDismissed(android.view.View)>=android.permission.VIBRATE
<com.android.internal.telephony.UiccSmsController\:\ void\ sendDataForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,int,[byte,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.READ_EXTERNAL_STORAGE, android.permission.SEND_SMS, android.permission.SEND_SMS_NO_CONFIRMATION
<com.android.mms.transaction.SendTransaction\:\ void\ ensureRouteToHost(java.lang.String,com.android.mms.transaction.TransactionSettings)>=android.permission.CHANGE_NETWORK_STATE
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ redial(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.settings.Settings$UserDictionarySettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.nfc.NfcService$ApplyRoutingTask\:\ java.lang.Void\ doInBackground(java.lang.Integer[])>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothPbap$Stub$Proxy\:\ boolean\ isConnected(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ void\ stopLockTaskMode()>=android.permission.BROADCAST_STICKY, android.permission.MANAGE_ACTIVITY_STACKS
<com.android.phone.EnableIccPinScreen\:\ void\ enableIccPin()>=android.permission.WAKE_LOCK
<android.app.ContextImpl\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.contacts.interactions.PhoneNumberInteraction\:\ void\ performAction(android.content.Context,java.lang.String,com.android.contacts.interactions.PhoneNumberInteraction$InteractionType,java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.inputmethod.keyboard.LatinKeyboardView\:\ boolean\ invokeCustomRequest(int)>=android.permission.WRITE_CONTACTS
<com.android.server.VibratorService\:\ void\ vibrate(long,android.os.IBinder)>=android.permission.WAKE_LOCK
<com.android.systemui.media.NotificationPlayer$CmdThread\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ access$000(com.android.internal.telephony.gsm.GsmConnection)>=android.permission.WAKE_LOCK
<android.net.sip.SipAudioCall\:\ void\ access$1200(android.net.sip.SipAudioCall,int,java.lang.String)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothHealth\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.calendar.alerts.AlertService\:\ boolean\ generateAlerts(android.content.Context,com.android.calendar.alerts.NotificationMgr,android.content.SharedPreferences,android.database.Cursor,long,int)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.PhoneBase\:\ void\ setVoiceMessageWaiting(int,int)>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ onInstallFragment(android.app.Fragment)>=android.permission.ACCESS_NETWORK_STATE
<android.location.LocationManager\:\ void\ requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<android.media.effect.SizeChangeEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.UserBinaryDictionary\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ boolean\ disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.wm.Session\:\ boolean\ performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>=android.permission.WAKE_LOCK
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy\:\ void\ startKeyRepeatTimer(com.android.inputmethod.keyboard.PointerTracker)>=android.permission.WRITE_CONTACTS
<com.android.server.TelephonyRegistry\:\ void\ notifyCallForwardingChanged(boolean)>=android.permission.MODIFY_PHONE_STATE
<com.android.gallery3d.ui.SlideshowView\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.Tab$3\:\ void\ onReceivedTitle(android.webkit.WebView,java.lang.String)>=android.permission.GET_ACCOUNTS
<android.service.voice.VoiceInteractionService\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<android.net.IConnectivityManager\:\ int\ getLastTetherError(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.nfc.tech.NdefFormatable\:\ byte[]\ transceive(byte[],boolean)>=android.permission.NFC
<com.android.calendar.month.MonthByWeekFragment\:\ android.content.Loader\ onCreateLoader(int,android.os.Bundle)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.SubscriptionController\:\ void\ setDefaultVoiceSubId(int)>=android.permission.MODIFY_PHONE_STATE
<com.android.internal.telephony.gsm.GSMPhone\:\ com.android.internal.telephony.Connection\ dial(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneUtils\:\ boolean\ hangupRingingCall(com.android.internal.telephony.Call)>=android.permission.WAKE_LOCK
<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState\:\ boolean\ processMessage(android.os.Message)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.dialpad.DialpadImageButton\:\ void\ setPressed(boolean)>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.GsmConnection\:\ void\ setPostDialState(com.android.internal.telephony.Connection$PostDialState)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothInputDevice\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ unregAll()>=android.permission.BLUETOOTH
<com.android.settings.Settings$KeyboardLayoutPickerActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<android.test.RenamingDelegatingContext\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$PlaybackView\:\ void\ setSpeakerPhoneOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.nfc.INfcAdapterExtras\:\ android.os.Bundle\ transceive(java.lang.String,byte[])>=android.permission.NFC
<android.bluetooth.IBluetoothA2dp$Stub\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.content.IContentService$Stub$Proxy\:\ void\ removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ int\ startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>=android.permission.BLUETOOTH
<com.android.server.media.MediaRouterService\:\ void\ registerClientAsUser(android.media.IMediaRouterClient,java.lang.String,int)>=android.permission.CONFIGURE_WIFI_DISPLAY
<com.android.gallery3d.app.MoviePlayer\:\ void\ onDestroy()>=android.permission.WAKE_LOCK
<com.android.systemui.SearchPanelView$GlowPadTriggerListener\:\ void\ onGrabbedStateChange(android.view.View,int)>=android.permission.VIBRATE
<com.android.nfc.handover.HandoverManager$HandoverTransfer\:\ void\ onScanCompleted(java.lang.String,android.net.Uri)>=android.permission.VIBRATE
<com.android.server.WiredAccessoryObserver\:\ void\ <init>=android.permission.RECEIVE_BOOT_COMPLETED
<com.android.mms.transaction.NotificationPlayer\:\ void\ enqueueLocked(com.android.mms.transaction.NotificationPlayer$Command)>=android.permission.WAKE_LOCK
<com.android.server.accessibility.AccessibilityManagerService\:\ void\ temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName,boolean)>=temporaryEnableAccessibilityStateUntilKeyguardRemoved
<android.filterpacks.videosink.MediaEncoderFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.calendar.AllInOneActivity\:\ void\ setTitleInActionBar(com.android.calendar.CalendarController$EventInfo)>=android.permission.READ_CALENDAR
<com.android.contacts.vcard.CancelActivity\:\ void\ onServiceConnected(android.content.ComponentName,android.os.IBinder)>=android.permission.VIBRATE
<com.android.settings.Settings$DateTimeSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.IccCard\:\ void\ supplyPin2(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.EmergencyCallHelper\:\ void\ onRetryTimeout()>=android.permission.BLUETOOTH
<com.android.email.activity.MessageListFragment$MessageOpenTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.wifi.WifiServiceImpl\:\ java.lang.String\ getConfigFile()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.NsdService\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.browser.ActivityController\:\ void\ start(android.content.Intent)>=android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ setSearchMode(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.SearchActivity\:\ void\ onResume()>=android.permission.WRITE_CALENDAR
<com.android.gallery3d.ui.SlotView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ stopDtmf()>=android.permission.WAKE_LOCK
<android.widget.ActivityChooserModel$DataModelPackageMonitor\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.server.sip.SipSessionGroup\:\ void\ processIOException(javax.sip.IOExceptionEvent)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth\:\ boolean\ isDiscovering()>=android.permission.BLUETOOTH
<com.android.server.am.BatteryStatsService\:\ void\ noteModemControllerActivity(android.telephony.ModemActivityInfo)>=android.permission.UPDATE_DEVICE_STATS
<com.android.internal.os.storage.ExternalStorageFormatter$2\:\ void\ run()>=android.permission.MOUNT_FORMAT_FILESYSTEMS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ disconnectHeadset(java.lang.String)>=android.permission.BLUETOOTH
<com.android.settings.Settings$SoundSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.view.WindowManagerPolicy\:\ long\ interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter\:\ void\ onCallEnded(com.android.internal.telephony.Connection$DisconnectCause)>=android.permission.WAKE_LOCK
<android.filterpacks.base.RetargetFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub$Proxy\:\ boolean\ isTetheringSupported()>=android.permission.ACCESS_NETWORK_STATE
<android.location.ILocationManager\:\ void\ setTestProviderLocation(java.lang.String,android.location.Location)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.voicedialer.VoiceContact\:\ java.lang.String\ redialNumber(android.app.Activity)>=android.permission.READ_CALL_LOG
<android.media.AudioService\:\ void\ filterMediaKeyEvent(android.view.KeyEvent,boolean)>=android.permission.WAKE_LOCK
<android.accounts.IAccountManager\:\ void\ updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>=android.permission.MANAGE_ACCOUNTS
<com.android.internal.telephony.IccRecords\:\ void\ onReady()>=android.permission.WAKE_LOCK
<com.android.providers.calendar.CalendarProvider2\:\ java.lang.String\ getOwner(long)>=android.permission.READ_CALENDAR
<android.provider.ContactsContract$SyncState\:\ android.content.ContentProviderOperation\ newSetOperation(android.accounts.Account,byte[])>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.editor.AggregationSuggestionEngine\:\ void\ loadAggregationSuggestions(android.net.Uri)>=android.permission.WRITE_CONTACTS
<com.android.browser.NfcHandler\:\ void\ unregister(android.app.Activity)>=android.permission.NFC
<com.android.settings.Settings$KeyboardLayoutPickerActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.ITelephony$Stub\:\ android.os.Bundle\ getCellLocation()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.phone.CallNotifier\:\ void\ sendMwiChangedDelayed(long)>=android.permission.VIBRATE
<android.net.sip.SipAudioCall\:\ void\ access$700(android.net.sip.SipAudioCall)>=android.permission.WAKE_LOCK
<com.android.mms.ui.MessageUtils\:\ java.lang.String\ getLocalNumber()>=android.permission.READ_PHONE_STATE
<android.os.PowerManager$WakeLock\:\ void\ acquire()>=android.permission.WAKE_LOCK
<com.android.contacts.list.PostalAddressListAdapter\:\ android.net.Uri\ getContactUri(int,android.database.Cursor,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.vcard.VCardParser\:\ void\ parse(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.SmsReceiverService\:\ void\ handleServiceStateChanged(android.content.Intent)>=android.permission.RECEIVE_SMS
<com.android.internal.policy.impl.SimPukUnlockScreen\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhone\:\ void\ setPropertiesByCarrier()>=android.permission.CHANGE_CONFIGURATION
<com.android.server.BackupManagerService\:\ void\ setBackupEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.calendar.DayView$CalendarGestureListener\:\ boolean\ onDown(android.view.MotionEvent)>=android.permission.READ_CALENDAR
<com.android.calendar.agenda.AgendaByDayAdapter$1\:\ void\ run()>=android.permission.READ_CALENDAR
<android.net.IThrottleManager$Stub\:\ int\ getCliffLevel(java.lang.String,int)>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy\:\ android.os.Messenger\ getMessenger()>=android.permission.ACCESS_WIFI_STATE
<com.android.bluetooth.pbap.BluetoothPbapVcardManager\:\ int\ composeAndSendPhonebookVcards(javax.obex.Operation,int,int,boolean,java.lang.String)>=android.permission.READ_CALL_LOG
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isBackupServiceEnabled(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.statusbar.StatusBarManagerService\:\ void\ onNotificationClear(java.lang.String,java.lang.String,int,int)>=android.permission.STATUS_BAR_SERVICE
<com.android.internal.telephony.PhoneBase\:\ void\ <init>=android.permission.CHANGE_CONFIGURATION
<com.android.internal.telephony.RIL\:\ void\ setCdmaBroadcastActivation(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$ManageApplicationsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.CommandsInterface\:\ void\ dial(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ access$100(com.android.internal.telephony.cdma.CdmaServiceStateTracker)>=android.permission.SET_TIME_ZONE
<com.android.soundrecorder.Recorder\:\ void\ stop()>=android.permission.WAKE_LOCK
<android.location.LocationManager\:\ void\ requestSingleUpdate(java.lang.String,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.server.wm.WindowManagerService\:\ void\ freezeRotation(int)>=android.permission.SET_ORIENTATION
<android.net.IConnectivityManager$Stub\:\ int\ getLastTetherError(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.FlipFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.providers.downloads.DownloadProvider\:\ void\ logVerboseOpenFileInfo(android.net.Uri,java.lang.String)>=android.permission.INTERNET
<com.android.emailcommon.service.IPolicyService$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.VIBRATE
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ java.lang.String\ getAddress()>=android.permission.BLUETOOTH
<com.android.inputmethod.keyboard.SuddenJumpingTouchEventHandler\:\ boolean\ handleSuddenJumping(android.view.MotionEvent)>=android.permission.WRITE_CONTACTS
<android.server.BluetoothService\:\ void\ onHealthDevicePropertyChanged(java.lang.String,java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.telephony.DataConnectionTracker\:\ void\ notifyDataConnection(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.server.ConnectivityService\:\ void\ setMobileDataEnabled(boolean)>=android.permission.CHANGE_NETWORK_STATE
<android.nfc.tech.IsoDep\:\ void\ close()>=android.permission.NFC
<com.android.calendar.month.MonthWeekEventsView\:\ void\ onDraw(android.graphics.Canvas)>=android.permission.READ_CALENDAR
<com.android.phone.BluetoothHandsfree$8\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<android.location.ILocationManager$Stub$Proxy\:\ void\ setTestProviderEnabled(java.lang.String,boolean)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.soundrecorder.SoundRecorder\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.WAKE_LOCK
<com.android.contacts.model.EntityDeltaList\:\ com.android.contacts.model.EntityDelta\ getFirstWritableRawContact(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<android.media.IAudioService$Stub\:\ int\ setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaLteUiccRecords\:\ void\ setVoiceCallForwardingFlag(int,boolean)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ int\ movePackage(java.lang.String,java.lang.String)>=android.permission.GRANT_RUNTIME_PERMISSIONS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MOVE_PACKAGE, android.permission.REVOKE_RUNTIME_PERMISSIONS, android.permission.SET_PREFERRED_APPLICATIONS
<com.android.calendar.DeleteEventHelper\:\ void\ deleteExceptionEvent()>=android.permission.WRITE_CALENDAR
<com.android.quicksearchbox.util.SingleThreadNamedTaskExecutor$Worker\:\ void\ loop()>=android.permission.ACCESS_NETWORK_STATE
<com.android.inputmethod.latin.ExpandableDictionary\:\ void\ startDictionaryLoadingTaskLocked()>=android.permission.WRITE_CONTACTS
<com.android.settings.bluetooth.DockService\:\ void\ connectIfEnabled(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ stopScan(int,boolean)>=android.permission.BLUETOOTH_ADMIN
<com.google.common.io.CharStreams\:\ java.lang.Object\ readLines(com.google.common.io.InputSupplier,com.google.common.io.LineProcessor)>=android.permission.INTERNET
<com.android.contacts.detail.PhotoSelectionHandler\:\ com.android.contacts.model.EntityDeltaList\ getDeltaForAttachingPhotoToContact()>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetooth\:\ boolean\ setRemoteAlias(java.lang.String,java.lang.String)>=android.permission.BLUETOOTH
<com.android.mms.model.SlideshowModel\:\ com.google.android.mms.pdu.PduBody\ getPduBody(android.content.Context,android.net.Uri)>=android.permission.WRITE_SMS
<com.android.contacts.list.ContactListAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ B[]\ iccExchangeSimIO(int,int,int,int,int,int,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.server.print.PrintManagerService$PrintManagerImpl\:\ java.util.List\ getPrintJobInfos(int,int)>=com.android.printspooler.permission.ACCESS_ALL_PRINT_JOBS
<android.filterpacks.base.GLTextureTarget\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.gsm.SIMRecords\:\ void\ setVoiceCallForwardingFlag(int,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ changeIccPin(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.VoicemailContentTable\:\ int\ update(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.mms.data.ContactList\:\ com.android.mms.data.ContactList\ blockingGetByUris(android.os.Parcelable[])>=android.permission.WRITE_CONTACTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setUserIcon(android.content.ComponentName,android.graphics.Bitmap)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.server.search.SearchManagerService$GlobalSearchProviderObserver\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.contacts.dialpad.DialpadFragment\:\ void\ handleDialButtonClickWithEmptyDigits()>=android.permission.READ_PHONE_STATE
<android.filterpacks.imageproc.BrightnessFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IPhoneSubInfo\:\ java.lang.String\ getMsisdn()>=android.permission.READ_PHONE_STATE
<com.android.browser.Controller\:\ void\ reuseTab(com.android.browser.Tab,com.android.browser.IntentHandler$UrlData)>=android.permission.GET_ACCOUNTS
<com.android.server.NetworkManagementService\:\ void\ stopClatd(java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.settings.DevelopmentSettings\:\ void\ updateAllOptions()>=android.permission.READ_EXTERNAL_STORAGE
<com.android.providers.contacts.LegacyApiSupport\:\ int\ update(int,long,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onDataStallAlarm(int)>=android.permission.WAKE_LOCK
<android.os.storage.IMountService$Stub$Proxy\:\ int[]\ getStorageUsers(java.lang.String)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<android.view.ContextThemeWrapper\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<android.nfc.tech.NfcV\:\ byte[]\ transceive(byte[])>=android.permission.NFC
<com.android.calendar.agenda.AgendaListView\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.WRITE_CALENDAR
<com.android.internal.telephony.DataConnection$DcActivatingState\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.ActivityState\:\ void\ onBackPressed()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy\:\ java.lang.String\ getLine1Number()>=android.permission.READ_PHONE_STATE
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ disconnectAll()>=android.permission.BLUETOOTH
<android.server.BluetoothA2dpService\:\ boolean\ suspendSink(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getLine1AlphaTagForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.phone.BluetoothHandsfree$27\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.phone.BluetoothHandsfree\:\ void\ access$800(com.android.phone.BluetoothHandsfree,int,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onSetDependencyMet(java.lang.String,boolean)>=android.permission.BROADCAST_STICKY
<com.android.internal.widget.multiwaveview.GlowPadView$OnTriggerListener\:\ void\ onTrigger(android.view.View,int)>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ releaseMulticastLock()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.music.IMediaPlaybackService\:\ void\ prev()>=android.permission.WAKE_LOCK
<com.android.gallery3d.data.MtpDeviceSet\:\ long\ reload()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.NetworkManagementService\:\ void\ enableNat(java.lang.String,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<android.accounts.IAccountManager\:\ java.lang.String\ getUserData(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.internal.telephony.cdma.CdmaLteUiccFileHandler\:\ void\ updateEFTransparent(int,byte[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.policy.BluetoothController\:\ void\ <init>=android.permission.BLUETOOTH
<android.net.IThrottleManager$Stub\:\ long\ getResetTime(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.calllog.CallLogQueryHandler\:\ void\ markNewVoicemailsAsOld()>=android.permission.WRITE_CALL_LOG
<com.android.server.backup.Trampoline\:\ boolean\ hasBackupPassword()>=android.permission.BACKUP
<com.android.server.usb.UsbDeviceManager$UsbHandler\:\ void\ updateUsbState()>=android.permission.BROADCAST_STICKY
<android.provider.Contacts$People\:\ android.net.Uri\ createPersonInMyContactsGroup(android.content.ContentResolver,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.ContactSaveService\:\ void\ addMembersToGroup(android.content.ContentResolver,long[],long)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.DockService\:\ void\ access$100(com.android.settings.bluetooth.DockService,android.os.Message)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth\:\ boolean\ allowIncomingProfileConnect(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.email.mail.Store\:\ android.os.Bundle\ checkSettings()>=android.permission.READ_CALENDAR
<com.android.server.am.ActivityManagerService\:\ void\ setTaskDescription(android.os.IBinder,android.app.ActivityManager$TaskDescription)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.gallery3d.app.SlideshowPage\:\ void\ onPause()>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.setup.MailboxSettings$LoadMailboxTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.SnapshotTab\:\ void\ putInForeground()>=android.permission.INTERNET
<com.android.gallery3d.data.DownloadUtils\:\ boolean\ requestDownload(com.android.gallery3d.util.ThreadPool$JobContext,java.net.URL,java.io.File)>=android.permission.INTERNET
<com.android.internal.telephony.cdma.CdmaSMSDispatcher$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ installKeyPair(android.content.ComponentName,[byte,[byte,[byte,java.lang.String,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.am.ActivityManagerService\:\ void\ serviceTimeout(com.android.server.am.ProcessRecord)>=android.permission.WAKE_LOCK
<com.android.phone.CallerInfoCache\:\ com.android.phone.CallerInfoCache\ init(android.content.Context)>=android.permission.WAKE_LOCK
<com.google.common.io.MultiInputStream\:\ long\ skip(long)>=android.permission.INTERNET
<com.android.phone.InCallScreen\:\ void\ delayedCleanupAfterDisconnect()>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ java.util.List\ getConnectedPanDevices()>=android.permission.BLUETOOTH
<com.android.launcher2.PagedView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ handleVerifyUnlock()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onSetPolicyDataEnabled(boolean)>=android.permission.BROADCAST_STICKY
<com.android.internal.widget.multiwaveview.MultiWaveView\:\ void\ dispatchTriggerEvent(int)>=android.permission.VIBRATE
<com.android.server.net.NetworkPolicyManagerService$10\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.InputMethodManagerService\:\ void\ checkCurrentLocaleChangedLocked()>=android.permission.WRITE_SETTINGS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ access$1700(com.android.internal.policy.impl.KeyguardViewMediator,com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>=android.permission.GET_ACCOUNTS
<com.android.browser.BaseUi\:\ void\ showWeb(boolean)>=android.permission.GET_ACCOUNTS
<com.android.internal.util.State\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.settings.Settings$SpellCheckersSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<android.nfc.tech.Ndef\:\ byte[]\ transceive(byte[],boolean)>=android.permission.NFC
<android.media.IAudioService$Stub\:\ void\ setSpeakerphoneOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.webkit.WebIconDatabaseClassic\:\ void\ retainIconForPageUrl(java.lang.String)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.camera.ActivityBase\:\ void\ onBackPressed()>=android.permission.RECORD_AUDIO
<android.speech.RecognitionService\:\ boolean\ checkPermissions(android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<android.provider.Telephony$Threads\:\ long\ getOrCreateThreadId(android.content.Context,java.lang.String)>=android.permission.READ_SMS
<com.android.settings.bluetooth.A2dpProfile\:\ boolean\ isA2dpPlaying()>=android.permission.BLUETOOTH
<com.android.server.usb.UsbDeviceManager\:\ void\ systemReady()>=android.permission.WRITE_SETTINGS
<com.android.server.sip.SipService$ConnectivityReceiver$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService$InputMethodSettings\:\ void\ enableAllIMEsIfThereIsNoEnabledIME()>=android.permission.WRITE_SETTINGS
<com.android.phone.BluetoothHeadsetService$6\:\ boolean\ connectHeadsetInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.TelephonyRegistry\:\ void\ notifyCellLocationForSubscriber(int,android.os.Bundle)>=android.permission.MODIFY_PHONE_STATE
<com.android.bluetooth.opp.BluetoothOppService\:\ void\ updateFromProvider()>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.ContactsDictionary\:\ void\ loadDictionary()>=android.permission.WRITE_CONTACTS
<android.bluetooth.BluetoothGatt\:\ boolean\ writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>=android.permission.BLUETOOTH
<com.android.settings.Settings$AdvancedWifiSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.contacts.util.NameConverter\:\ java.lang.String\ structuredNameToDisplayName(android.content.Context,java.util.Map)>=android.permission.WRITE_CONTACTS
<com.android.server.usb.UsbService\:\ void\ <init>=android.permission.WRITE_SETTINGS
<android.accounts.AccountManagerService\:\ void\ confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)>=android.permission.MANAGE_ACCOUNTS
<com.android.deskclock.Alarms\:\ long\ setAlarm(android.content.Context,com.android.deskclock.Alarm)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ notifySignalStrength()>=android.permission.BROADCAST_STICKY
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ java.util.List\ getDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.calendar.month.SimpleWeeksAdapter\:\ boolean\ onTouch(android.view.View,android.view.MotionEvent)>=android.permission.WRITE_CALENDAR
<com.android.email.activity.UIControllerTwoPane\:\ void\ onMessageSetUnread()>=android.permission.ACCESS_NETWORK_STATE
<com.android.providers.media.RingtonePickerActivity\:\ void\ onStop()>=android.permission.WAKE_LOCK
<android.media.AudioService$AudioHandler\:\ void\ playSoundEffect(int,int)>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen$8\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WAKE_LOCK
<com.android.contacts.editor.PhoneticNameEditorView\:\ void\ notifyEditorListener()>=android.permission.READ_SYNC_SETTINGS
<android.net.ConnectivityManager\:\ java.lang.String[]\ getTetherableIfaces()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiRunning(android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS
<com.android.internal.telephony.PhoneBase\:\ void\ setSmscAddress(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.media.IAudioService$Stub$Proxy\:\ void\ setMode(int,android.os.IBinder)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothHeadset\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.SimpleImageFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.GlobalActions$Action\:\ void\ onPress()>=android.permission.WAKE_LOCK
<com.android.server.ethernet.EthernetServiceImpl\:\ void\ removeListener(android.net.IEthernetServiceListener)>=android.permission.ACCESS_NETWORK_STATE
<com.android.music.MusicUtils\:\ void\ playAll(android.content.Context,long[],int,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.GlobalActions$2\:\ boolean\ onLongPress()>=android.permission.WAKE_LOCK
<android.location.LocationManager\:\ void\ requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.internal.telephony.CommandsInterface\:\ void\ supplyIccPuk(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.VoicemailTable$Delegate\:\ int\ update(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.email.activity.UIControllerTwoPane$RefreshTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.RuimRecords\:\ void\ onRefresh(boolean,int[])>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME\:\ boolean\ handleSeparator(int,int,int,int)>=android.permission.WRITE_CONTACTS
<com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion\:\ void\ addColumnValue(java.util.ArrayList,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.exchange.EasSyncService\:\ com.android.exchange.EasResponse\ sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity,int)>=android.permission.WAKE_LOCK
<com.android.settings.DateTimeSettings\:\ void\ set24Hour(boolean)>=android.permission.WRITE_SETTINGS
<com.android.providers.downloads.DownloadNotification\:\ void\ updateNotification(java.util.Collection)>=android.permission.VIBRATE
<com.google.common.io.MultiInputStream\:\ void\ advance()>=android.permission.INTERNET
<android.content.SyncManager$ActiveSyncContext\:\ void\ onFinished(android.content.SyncResult)>=android.permission.WAKE_LOCK
<com.android.settings.users.UserSettings\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.CropRectFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ hangup(com.android.internal.telephony.gsm.GsmConnection)>=android.permission.WAKE_LOCK
<android.accounts.IAccountManager\:\ void\ getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>=android.permission.USE_CREDENTIALS
<android.filterpacks.base.GLTextureSource\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.PhoneApp\:\ void\ orientationChanged(int)>=android.permission.BLUETOOTH
<com.android.browser.Controller\:\ void\ onDestroy()>=android.permission.GET_ACCOUNTS
<com.android.contacts.calllog.ContactInfoHelper\:\ com.android.contacts.calllog.ContactInfo\ lookupContactFromUri(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ setPin(android.bluetooth.BluetoothDevice,boolean,int,[byte)>=android.permission.BLUETOOTH_ADMIN
<android.provider.ContactsContract$Groups$EntityIteratorImpl\:\ android.content.Entity\ next()>=android.permission.READ_CALENDAR
<com.android.exchange.adapter.AbstractSyncAdapter\:\ java.lang.String\ getSyncKey()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.PhoneNumberListAdapter\:\ void\ bindView(android.view.View,int,android.database.Cursor,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ getCdmaMdn(int)>=android.permission.MODIFY_PHONE_STATE
<com.android.mms.transaction.SmsReceiverService\:\ android.net.Uri\ replaceMessage(android.content.Context,android.telephony.SmsMessage[],int)>=android.permission.RECEIVE_SMS
<com.android.server.tv.TvInputManagerService$BinderService\:\ void\ addBlockedRating(java.lang.String,int)>=android.permission.MODIFY_PARENTAL_CONTROLS
<android.bluetooth.IBluetooth\:\ boolean\ connectInputDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.webkit.WebIconDatabaseClassic$EventHandler\:\ void\ access$900(android.webkit.WebIconDatabaseClassic$EventHandler,android.os.Message)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.mms.data.WorkingMessage\:\ void\ access$800(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothService\:\ boolean\ disconnectInputDeviceInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.GlobalActions$1\:\ void\ onPress()>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.test.SimulatedCommands\:\ void\ setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.PhotoView$FullPicture\:\ void\ drawTileView(com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)>=android.permission.RECORD_AUDIO
<android.filterfw.core.Filter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.calendar.agenda.AgendaListView\:\ void\ initView(android.content.Context)>=android.permission.READ_CALENDAR
<android.view.WindowManagerPolicy\:\ void\ screenTurnedOff(int)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ boolean\ updateProfiles()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.server.pm.PackageManagerService\:\ void\ getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>=android.permission.GET_PACKAGE_SIZE
<android.filterpacks.imageproc.ImageSlicer\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.deskclock.SetAlarm\:\ void\ onBackPressed()>=android.permission.WRITE_SETTINGS
<com.android.email.activity.setup.AccountServerBaseFragment$4\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ setLocationUpdates(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.usb.UsbDeviceManager$UsbHandler\:\ void\ setAdbEnabled(boolean)>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ acceptCall()>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ boolean\ setRemoteAlias(java.lang.String,java.lang.String)>=android.permission.BLUETOOTH
<com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations\:\ void\ updatedExtendedProperty(java.lang.String,java.lang.String,long)>=android.permission.READ_CALENDAR
<com.android.settings.bluetooth.BluetoothSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.browser.BrowserActivity\:\ void\ onDestroy()>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.ISms$Stub$Proxy\:\ void\ sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>=android.permission.SEND_SMS
<android.bluetooth.IBluetoothHeadset$Stub\:\ boolean\ startVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.browser.Bookmarks$1\:\ void\ updateImages(android.content.ContentResolver,java.lang.String,android.content.ContentValues)>=android.permission.GET_ACCOUNTS
<com.android.providers.downloads.StorageManager\:\ long\ discardPurgeableFiles(int,long)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.contacts.activities.ActionBarAdapter\:\ void\ setCurrentTab(int,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.CropView$FaceHighlightView\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<com.android.settings.RadioInfo\:\ void\ onResume()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.server.NotificationManagerService\:\ void\ enqueueNotification(java.lang.String,int,android.app.Notification,int[])>=android.permission.VIBRATE
<android.speech.IRecognitionService\:\ void\ cancel(android.speech.IRecognitionListener)>=android.permission.RECORD_AUDIO
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter\:\ android.view.View\ getHeaderEntryView(android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<android.media.RingtoneManager\:\ android.media.Ringtone\ getRingtone(int)>=android.permission.WAKE_LOCK
<android.accounts.ChooseTypeAndAccountActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.phone.CallerInfoCache$CacheAsyncTask\:\ void\ onPostExecute(java.lang.Object)>=android.permission.WAKE_LOCK
<android.provider.Settings$Secure\:\ android.net.Uri\ getUriFor(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.gallery3d.app.DialogPicker\:\ void\ onCreate(android.os.Bundle)>=android.permission.RECORD_AUDIO
<com.android.phone.PhoneUtils\:\ boolean\ cancelMmiCode(com.android.internal.telephony.Phone)>=android.permission.WAKE_LOCK
<android.speech.RecognitionService$RecognitionServiceBinder\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.RECORD_AUDIO
<com.android.browser.TabBar$TabView\:\ void\ closeTab()>=android.permission.GET_ACCOUNTS
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState\:\ boolean\ turnOnUpstreamMobileConnection(int)>=android.permission.BLUETOOTH
<com.android.phone.InCallScreen\:\ void\ handleOnscreenButtonClick(int)>=android.permission.BLUETOOTH
<android.location.LocationManager\:\ void\ addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>=android.permission.ACCESS_MOCK_LOCATION
<android.net.nsd.INsdManager$Stub$Proxy\:\ void\ setEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.phone.PhoneApp\:\ void\ onCreate()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ notifyApnIdDisconnected(java.lang.String,int)>=android.permission.BROADCAST_STICKY
<com.android.settings.accounts.AccountSyncSettings\:\ void\ onPrepareOptionsMenu(android.view.Menu)>=android.permission.READ_SYNC_STATS
<com.android.server.BackupManagerService$RunInitializeReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.bluetooth.a2dpsink.A2dpSinkService$BluetoothA2dpSinkBinder\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH_ADMIN
<com.android.contacts.ContactListEmptyView\:\ void\ show(boolean,boolean,boolean,boolean,boolean,boolean,boolean)>=android.permission.READ_SYNC_STATS
<com.android.browser.Tab$3$1\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.GET_ACCOUNTS
<android.net.wifi.WifiStateMachine$DriverLoadingState$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.browser.Controller\:\ void\ removeTab(com.android.browser.Tab)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ switchHoldingAndActive()>=android.permission.WAKE_LOCK
<com.android.browser.PieControl\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<com.android.settings.DataUsageSummary\:\ void\ updatePolicy(boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.AccountAuthenticatorActivity\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.gallery3d.app.StateManager\:\ void\ pause()>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatedState\:\ void\ enter()>=android.permission.BROADCAST_STICKY
<android.bluetooth.HeadsetBase\:\ void\ acquireWakeLock()>=android.permission.WAKE_LOCK
<com.android.bluetooth.map.BluetoothMapService$BluetoothMapBinder\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ getDeviceSoftwareVersionForSlot(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.wifi.WifiServiceImpl\:\ void\ disableEphemeralNetwork(java.lang.String)>=android.permission.ACCESS_WIFI_STATE, android.permission.CHANGE_WIFI_STATE
<android.nfc.INfcAdapterExtras$Stub$Proxy\:\ android.os.Bundle\ open(java.lang.String,android.os.IBinder)>=android.permission.NFC
<com.android.contacts.activities.ConfirmAddDetailActivity\:\ void\ setEntityDeltaList(com.android.contacts.model.EntityDeltaList)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ acceptCall(android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager\:\ void\ setCountryCode(java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.sip.SipSessionGroup$SipSessionImpl\:\ void\ processCommand(java.util.EventObject)>=android.permission.WAKE_LOCK
<com.android.nfc.snep.SnepServer$Callback\:\ com.android.nfc.snep.SnepMessage\ doGet(int,android.nfc.NdefMessage)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardScreen\:\ void\ onResume()>=android.permission.WAKE_LOCK
<android.app.ListActivity\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.browser.AddBookmarkPage$UpdateBookmarkTask\:\ java.lang.Void\ doInBackground(android.content.ContentValues[])>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.ClassZeroActivity$3\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.RECEIVE_SMS
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ refreshBtClass()>=android.permission.BLUETOOTH
<com.android.settings.inputmethod.UserDictionaryAddWordFragment\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.WRITE_USER_DICTIONARY
<android.widget.ActivityChooserModel$DataModelPackageMonitor\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.contacts.vcard.VCardImportExportListener\:\ void\ onImportFinished(com.android.contacts.vcard.ImportRequest,int,android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.downloads.StorageManager\:\ void\ verifySpaceBeforeWritingToFile(int,java.lang.String,long)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setCdmaRoamingPreference(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ void\ requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.settings.Settings$DockSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.settings.wifi.AdvancedWifiSettings\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ hangupAndPowerOff()>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ onRestart()>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ setWifiApConfiguration(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<android.webkit.HTML5VideoInline\:\ void\ reprepareData(android.webkit.HTML5VideoViewProxy)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ setVoiceMessageWaiting(int,int)>=android.permission.WAKE_LOCK
<com.android.server.usb.UsbService\:\ boolean\ isFunctionEnabled(java.lang.String)>=android.permission.MANAGE_USB
<com.android.settings.Settings$WirelessSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.settings.wifi.p2p.WifiP2pSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<android.net.INetworkPolicyManager\:\ android.net.NetworkQuotaInfo\ getNetworkQuotaInfo(android.net.NetworkState)>=android.permission.ACCESS_NETWORK_STATE
<com.android.music.MediaPlaybackService\:\ void\ setShuffleMode(int)>=android.permission.WAKE_LOCK
<android.content.ContextWrapper\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.email.activity.Welcome$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.contacts.editor.PhotoActionPopup$Listener\:\ void\ onRemovePictureChosen()>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.SlideshowPage$1\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<android.accounts.IAccountManagerResponse$Stub$Proxy\:\ void\ onResult(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.phone.CallLogAsync$GetLastOutgoingCallTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_CALL_LOG
<com.android.server.am.ActivityStack\:\ boolean\ moveTaskToBackLocked(int,com.android.server.am.ActivityRecord)>=android.permission.WAKE_LOCK
<android.media.IAudioService$Stub\:\ void\ dispatchMediaKeyEventUnderWakelock(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.settings.SettingsPreferenceFragment\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.BLUETOOTH
<com.android.contacts.editor.ContactEditorFragment\:\ void\ access$500(com.android.contacts.editor.ContactEditorFragment,com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountWithDataSet)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ operationComplete()>=android.permission.WAKE_LOCK
<com.android.nfc.DeviceHost$DeviceHostListener\:\ void\ onSeApduReceived(byte[])>=android.permission.BLUETOOTH
<com.android.gallery3d.app.CropImage\:\ boolean\ access$500(com.android.gallery3d.app.CropImage,com.android.gallery3d.util.ThreadPool$JobContext,android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.email.service.EmailServiceUtils\:\ com.android.emailcommon.service.IEmailService\ getExchangeService(android.content.Context,com.android.emailcommon.service.IEmailServiceCallback)>=android.permission.READ_PHONE_STATE
<com.android.settings.widget.SettingsAppWidgetProvider\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.server.INativeDaemonConnectorCallbacks\:\ void\ onDaemonConnected()>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.LockPatternKeyguardView$3\:\ void\ reportFailedUnlockAttempt()>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ notifyServiceStateChangedP(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<com.android.server.LockSettingsService\:\ com.android.internal.widget.VerifyCredentialResponse\ checkPassword(java.lang.String,int,com.android.internal.widget.ICheckCredentialProgressCallback)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.camera.PanoramaActivity\:\ void\ onResume()>=android.permission.RECORD_AUDIO
<com.android.gallery3d.ui.PhotoView\:\ void\ switchToPrevImage()>=android.permission.VIBRATE
<com.android.contacts.widget.LayoutSuppressingQuickContactBadge\:\ void\ onClick(android.view.View)>=android.permission.WRITE_CONTACTS
<com.android.server.accessibility.AccessibilityManagerService$1\:\ void\ onSomePackagesChanged()>=android.permission.WRITE_SETTINGS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ ensureActiveMobilePolicyLocked()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.DateTimeSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.server.input.InputManagerService$Callbacks\:\ void\ notifyLidSwitchChanged(long,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ deleteSmsOnRuim(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.MoviePlayer\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler\:\ void\ setDiscoverableTimeout(int)>=android.permission.BLUETOOTH
<android.media.IAudioService$Stub$Proxy\:\ void\ setSpeakerphoneOn(boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ java.lang.String\ iccTransmitApduBasicChannel(int,int,int,int,int,int,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.internal.telephony.SMSDispatcher\:\ int\ dispatchMessage(com.android.internal.telephony.SmsMessageBase)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.LatinIME\:\ void\ hapticAndAudioFeedback(int)>=android.permission.VIBRATE
<com.android.server.ConnectivityService\:\ boolean\ isNetworkSupported(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.activity.MessageOrderManager$LoadMessageListTask\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.email.NotificationController\:\ void\ showPasswordExpiredNotification(long)>=android.permission.VIBRATE
<android.filterpacks.numeric.SinWaveFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ notifyScreenOffLocked()>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub\:\ boolean\ isNetworkSupported(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ dispatch(android.content.Intent,java.lang.String,android.content.BroadcastReceiver)>=android.permission.WAKE_LOCK
<com.android.calendar.Event\:\ android.database.Cursor\ instancesQuery(android.content.ContentResolver,java.lang.String[],int,int,java.lang.String,java.lang.String[],java.lang.String)>=android.permission.READ_CALENDAR
<com.android.server.am.ActivityManagerService\:\ I[]\ getRunningUserIds()>=android.permission.INTERACT_ACROSS_USERS
<com.android.server.wifi.WifiServiceImpl\:\ void\ releaseMulticastLock()>=android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.android.settings.fuelgauge.PowerUsageSummary\:\ void\ refreshStats()>=android.permission.BLUETOOTH
<android.webkit.GeolocationService\:\ boolean\ start()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.gsm.UsimPhoneBookManager\:\ void\ readEmailFileAndWait(int)>=android.permission.WAKE_LOCK
<com.android.browser.BrowserActivity\:\ com.android.browser.Controller\ createController()>=android.permission.GET_ACCOUNTS
<com.android.email.MessagingController\:\ void\ synchronizeMailboxSynchronous(com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothService\:\ java.lang.String\ getRemoteName(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneProxy\:\ void\ exitEmergencyCallbackMode()>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.PhoneNumberHelper\:\ boolean\ canSendSmsTo(java.lang.CharSequence)>=android.permission.READ_PHONE_STATE
<android.filterpacks.base.CallbackFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.activities.AttachPhotoActivity$1\:\ void\ onContactLoaded(com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.WiredAccessoryObserver\:\ void\ setDevicesState(int,int,java.lang.String)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothA2dp\:\ boolean\ connectSinkInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ sendEnvelope(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.widget.multiwaveview.MultiWaveView\:\ void\ handleUp(android.view.MotionEvent)>=android.permission.VIBRATE
<android.nfc.INfcTag$Stub$Proxy\:\ int\ ndefWrite(int,android.nfc.NdefMessage)>=android.permission.NFC
<com.android.camera.Camera\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.RECORD_AUDIO
<com.android.exchange.ExchangeService\:\ void\ runAsleep(long,long)>=android.permission.WAKE_LOCK
<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState\:\ void\ enter()>=android.permission.ACCESS_NETWORK_STATE
<com.android.systemui.media.NotificationPlayer$CreationAndCompletionThread\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.SamplingProfilerService\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.settings.wifi.WifiSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.BitmapSource\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.nfc.tech.MifareClassic\:\ void\ close()>=android.permission.NFC
<android.nfc.INfcAdapter\:\ boolean\ enableNdefPush()>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ sendNewSubmitPdu(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.SmsHeader,int,android.app.PendingIntent,android.app.PendingIntent,boolean)>=android.permission.WAKE_LOCK
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener\:\ void\ onUseAsPrimaryChosen()>=android.permission.READ_SYNC_SETTINGS
<android.provider.Settings$Bookmarks\:\ android.net.Uri\ add(android.content.ContentResolver,android.content.Intent,java.lang.String,java.lang.String,char,int)>=android.permission.WRITE_SETTINGS
<android.webkit.WebIconDatabaseClassic\:\ void\ open(java.lang.String)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<android.app.ContextImpl$ApplicationContentResolver\:\ void\ removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.settings.BrightnessPreference\:\ android.os.Parcelable\ onSaveInstanceState()>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ notifyDataConnection(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ notifySignalStrength()>=android.permission.BROADCAST_STICKY
<com.google.common.io.MultiReader\:\ void\ <init>=android.permission.INTERNET
<com.android.contacts.activities.DialtactsActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<android.app.ActivityManagerNative\:\ void\ killApplicationWithUid(java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.contacts.list.PostalAddressPickerFragment\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ boolean\ access$6900(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,java.lang.String)>=android.permission.GET_TASKS
<com.android.mms.ui.Divot\:\ void\ assignContactFromEmail(java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ clearTimerRecording(int,int,[byte)>=android.permission.HDMI_CEC
<android.server.BluetoothA2dpService\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.server.BluetoothA2dpService\:\ void\ handleSinkStateChange(android.bluetooth.BluetoothDevice,int,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ getEnhancedVoicePrivacy(android.os.Message)>=android.permission.WAKE_LOCK
<android.accounts.GrantCredentialsPermissionActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<android.media.effect.effects.StraightenEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.nfc.NfcService$NfcAdapterExtrasService\:\ android.os.Bundle\ close(java.lang.String,android.os.IBinder)>=android.permission.NFC
<com.android.providers.contacts.ContactsProvider2\:\ void\ enforceSocialStreamWritePermission(android.net.Uri)>=android.permission.WRITE_SOCIAL_STREAM
<com.android.settings.bluetooth.RequestPermissionActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.server.InputMethodManagerService$InputMethodSettings\:\ void\ addSubtypeToHistory(java.lang.String,java.lang.String)>=android.permission.WRITE_SETTINGS
<android.net.IConnectivityManager\:\ void\ requestNetworkTransitionWakelock(java.lang.String)>=android.permission.WAKE_LOCK
<android.nfc.NfcAdapter\:\ void\ setOnNdefPushCompleteCallback(android.nfc.NfcAdapter$OnNdefPushCompleteCallback,android.app.Activity,android.app.Activity[])>=android.permission.NFC
<com.android.vcard.VCardEntry$PostalData\:\ void\ constructInsertOperation(java.util.List,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.PhoneUi\:\ boolean\ onBackKey()>=android.permission.GET_ACCOUNTS
<com.android.server.BackupManagerService$PerformInitializeTask\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.email.service.MailService$ControllerResults\:\ void\ serviceCheckMailCallback(com.android.emailcommon.mail.MessagingException,long,long,int,long)>=android.permission.READ_SYNC_SETTINGS
<android.os.IPowerManager\:\ void\ releaseWakeLock(android.os.IBinder,int)>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine\:\ boolean\ setDialogListenerApp(android.os.Messenger,java.lang.String,boolean)>=android.permission.GET_TASKS
<com.android.internal.telephony.DataConnectionTracker\:\ void\ restartRadio()>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ void\ factoryReset(int)>=android.permission.CONNECTIVITY_INTERNAL, android.permission.MODIFY_PHONE_STATE
<com.android.deskclock.SetAlarm\:\ void\ access$000(com.android.deskclock.SetAlarm)>=android.permission.WRITE_SETTINGS
<android.net.wifi.IWifiManager\:\ boolean\ disableNetwork(int)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.am.ActivityManagerService\:\ java.util.List\ getRunningAppProcesses()>=android.permission.GET_TASKS, android.permission.REAL_GET_TASKS
<com.android.calendar.event.EditEventHelper\:\ boolean\ saveRemindersWithBackRef(java.util.ArrayList,int,java.util.ArrayList,java.util.ArrayList,boolean)>=android.permission.WRITE_CALENDAR
<com.android.settings.AccessibilitySettings$SettingsPackageMonitor\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.gallery3d.ui.PhotoView$MyGestureListener\:\ void\ deleteAfterAnimation(int)>=android.permission.VIBRATE
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ isOffloadedScanBatchingSupported()>=android.permission.BLUETOOTH
<android.net.IConnectivityManager$Stub$Proxy\:\ int\ setUsbTethering(boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.providers.calendar.CalendarProvider2\:\ void\ regenerateInstancesTable()>=android.permission.READ_CALENDAR
<com.android.contacts.interactions.ImportExportDialogFragment$2\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.SMSDispatcher\:\ void\ notifyAndAcknowledgeLastIncomingSms(boolean,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IccSmsInterfaceManagerProxy\:\ void\ sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.SEND_SMS
<com.android.settings.TetherSettings\:\ void\ updateState()>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ supplyIccPin2ForApp(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ makeWindowFreezingScreenIfNeededLocked(com.android.server.wm.WindowState)>=android.permission.WAKE_LOCK
<android.app.WallpaperManager\:\ int\ setResource(int,int)>=android.permission.SET_WALLPAPER
<com.android.phone.BluetoothHeadsetService\:\ void\ adjustOtherHeadsetPriorities(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothManager\:\ java.util.List\ getDevicesMatchingConnectionStates(int,[int)>=android.permission.BLUETOOTH
<com.android.server.appwidget.AppWidgetServiceImpl\:\ void\ bindRemoteViewsService(java.lang.String,int,android.content.Intent,android.os.IBinder)>=android.permission.BIND_APPWIDGET
<com.android.deskclock.HandleSetAlarm\:\ boolean\ handleCursorResult(android.database.Cursor,long,boolean,boolean)>=android.permission.WRITE_SETTINGS
<com.android.mms.transaction.TransactionService\:\ void\ launchTransaction(int,com.android.mms.transaction.TransactionBundle,boolean)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.LockPatternKeyguardView$3\:\ void\ goToLockScreen()>=android.permission.WAKE_LOCK
<com.android.systemui.screenshot.SaveImageInBackgroundTask\:\ void\ onPostExecute(com.android.systemui.screenshot.SaveImageInBackgroundData)>=android.permission.VIBRATE
<com.android.providers.media.MediaScannerService\:\ android.net.Uri\ scanFile(java.lang.String,java.lang.String)>=android.permission.WRITE_SETTINGS
<android.accessibilityservice.UiTestAutomationBridge\:\ void\ disconnect()>=android.permission.WRITE_SETTINGS
<com.android.bluetooth.opp.BluetoothOppService\:\ int\ onStartCommand(android.content.Intent,int,int)>=android.permission.BLUETOOTH
<com.android.nfc.NfcService$TagService\:\ int\ getTimeout(int)>=android.permission.NFC
<com.android.server.am.BatteryStatsService\:\ void\ noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>=android.permission.UPDATE_DEVICE_STATS
<com.android.exchange.EmailSyncAlarmReceiver$1\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.GroupDetailActivity\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<android.filterfw.core.FilterFunction\:\ android.filterfw.core.Frame\ executeWithArgList(java.lang.Object[])>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ proceedAfterWildChar(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ stopFreezingDisplayLocked()>=android.permission.WAKE_LOCK
<com.android.settings.Settings$AccessibilitySettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.String[]\ getAccountTypesWithManagementDisabled()>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.inputmethod.latin.LatinIME\:\ void\ onCodeInput(int,int,int)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getIsimDomain()>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.phone.CallLogAsync$GetLastOutgoingCallTask\:\ java.lang.String\ doInBackground(com.android.phone.CallLogAsync$GetLastOutgoingCallArgs[])>=android.permission.READ_CALL_LOG
<com.android.mms.data.Contact$ContactsCache\:\ java.util.List\ getContactInfoForPhoneUris(android.os.Parcelable[])>=android.permission.WRITE_CONTACTS
<android.bluetooth.IBluetoothHeadset$Stub\:\ boolean\ acceptIncomingConnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.data.WorkingMessage\:\ android.net.Uri\ access$200(android.content.Context,com.android.mms.data.Conversation,java.lang.StringBuilder)>=android.permission.WRITE_SMS
<android.provider.ContactsContract$RawContacts$EntityIteratorImpl\:\ android.content.Entity\ next()>=android.permission.READ_CALENDAR
<com.android.internal.app.ResolverActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.musicfx.ControlPanelEffect\:\ void\ setEnabledAll(android.content.Context,java.lang.String,int,boolean)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ wakeWhenReadyLocked(int)>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ com.android.internal.inputmethod.IInputContentUriToken\ createInputContentUriToken(android.os.IBinder,android.net.Uri,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.pm.PackageManagerService\:\ void\ revokeRuntimePermission(java.lang.String,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.REVOKE_RUNTIME_PERMISSIONS
<java.net.URLConnection\:\ java.io.InputStream\ getInputStream()>=android.permission.INTERNET
<com.android.settings.ZonePicker\:\ void\ onListItemClick(android.widget.ListView,android.view.View,int,long)>=android.permission.SET_TIME_ZONE
<com.android.settings.DataUsageSummary\:\ void\ access$600(com.android.settings.DataUsageSummary,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ boolean\ performAccessibilityAction(int,long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>=android.permission.INTERACT_ACROSS_USERS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ android.net.wifi.WifiInfo\ getConnectionInfo()>=android.permission.ACCESS_WIFI_STATE
<com.android.internal.telephony.IccSmsInterfaceManager\:\ boolean\ disableCellBroadcast(int)>=android.permission.WAKE_LOCK
<com.android.calendar.AllInOneActivity\:\ void\ onResume()>=android.permission.WRITE_CALENDAR
<com.android.settings.deviceinfo.Status\:\ void\ setIpAddressStatus()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy\:\ java.lang.String\ getVoiceMailAlphaTag()>=android.permission.READ_PHONE_STATE
<com.android.mms.ui.SlideView\:\ void\ pauseVideo()>=android.permission.WAKE_LOCK
<android.content.IContentService\:\ boolean\ getSyncAutomatically(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ changeIccPinForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.calendar.Utils\:\ java.lang.String\ getDayOfWeekString(int,int,long,android.content.Context)>=android.permission.READ_CALENDAR
<com.android.calendar.month.SimpleDayPickerFragment\:\ void\ doResumeUpdates()>=android.permission.WRITE_CALENDAR
<com.android.server.am.BatteryStatsService\:\ void\ notePhoneSignalStrength(android.telephony.SignalStrength)>=android.permission.UPDATE_DEVICE_STATS
<android.bluetooth.BluetoothDeviceProfileState$OutgoingHid\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneProxy\:\ void\ queryTTYMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.service.MailService$3\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.PhotoDataAdapter$ReloadTask\:\ void\ run()>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.InCallScreen\:\ void\ access$2300(com.android.phone.InCallScreen)>=android.permission.BLUETOOTH
<com.android.mms.transaction.RetrieveTransaction\:\ byte[]\ sendPdu(byte[],java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<com.android.server.net.NetworkPolicyManagerService\:\ void\ setNetworkPolicies(android.net.NetworkPolicy[])>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.IAccountManager$Stub\:\ java.lang.String\ getUserData(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.server.wifi.WifiServiceImpl\:\ void\ enableAggressiveHandover(int)>=android.permission.ACCESS_WIFI_STATE
<com.android.calendar.AllInOneActivity\:\ void\ onNewIntent(android.content.Intent)>=android.permission.WRITE_CALENDAR
<com.android.phone.InCallScreen\:\ void\ updateIncomingCallWidgetHint(int,int)>=android.permission.BLUETOOTH
<com.android.browser.Controller$PruneThumbnails\:\ void\ run()>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.ComposeMessageActivity\:\ void\ onNewIntent(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ unregisterListener(android.net.INetworkPolicyListener)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.cat.RilMessageDecoder$StateStart\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.email.activity.MessageViewFragmentBase$LoadAttachmentsTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothAdapter\:\ android.bluetooth.BluetoothServerSocket\ listenUsingScoOn()>=android.permission.BLUETOOTH
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiMulticastEnabledFromSource(android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS
<com.android.settings.Settings$UserDictionarySettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ dispatch(android.content.Intent,java.lang.String)>=android.permission.WAKE_LOCK
<android.server.BluetoothA2dpService\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<java.net.DatagramSocket\:\ void\ <init>=android.permission.INTERNET
<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ isTetheringOn()>=android.permission.BLUETOOTH
<com.android.mms.transaction.NotificationPlayer\:\ void\ acquireWakeLock()>=android.permission.WAKE_LOCK
<com.android.email.MessagingController\:\ void\ checkMail(long,long,com.android.email.MessagingListener)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.WRITE_CONTACTS
<android.nfc.tech.MifareClassic\:\ int\ getTimeout()>=android.permission.NFC
<com.android.providers.downloads.DownloadInfo\:\ boolean\ isReadyToStart(long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ComposeMessageActivity$40\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.KeyguardStatusViewManager\:\ void\ onResume()>=android.permission.WAKE_LOCK
<com.android.mms.transaction.SmsSingleRecipientSender\:\ void\ <init>=android.permission.RECEIVE_SMS
<android.app.DownloadManager\:\ long\ addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ notifyApnIdDisconnected(java.lang.String,int)>=android.permission.BROADCAST_STICKY
<com.android.mms.util.ThumbnailManager\:\ com.android.mms.util.ItemLoadedFuture\ getThumbnail(android.net.Uri,com.android.mms.util.ItemLoadedCallback)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy\:\ void\ startLongPressTimer(int)>=android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.AttachmentLoader\:\ void\ finishLoadAttachment()>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetooth\:\ java.util.List\ getConnectedInputDevices()>=android.permission.BLUETOOTH
<android.media.effect.FilterGraphEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.gsm.GsmCallTracker\:\ void\ hangupForegroundResumeBackground()>=android.permission.WAKE_LOCK
<com.android.email.activity.MessageOrderManager$LoadMessageListTask\:\ void\ onSuccess(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.DeviceProfilesSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.accounts.AccountManagerService\:\ void\ removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>=android.permission.MANAGE_ACCOUNTS
<android.hardware.location.ContextHubService\:\ int\ unloadNanoApp(int)>=android.permission.LOCATION_HARDWARE
<android.app.AliasActivity\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.server.usb.UsbDeviceManager$UsbHandler\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.settings.deviceinfo.Memory$3\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.internal.telephony.gsm.GsmMmiCode\:\ void\ cancel()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ queryCdmaRoamingPreference(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener\:\ void\ onPhotoSelected(android.graphics.Bitmap)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ invokeOemRilRequestRaw(byte[],android.os.Message)>=android.permission.WAKE_LOCK
<com.android.calendar.DayView\:\ boolean\ onHoverEvent(android.view.MotionEvent)>=android.permission.READ_CALENDAR
<android.net.IConnectivityManager$Stub$Proxy\:\ java.lang.String[]\ getTetheringErroredIfaces()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.BluetoothVisibilityTimeoutFragment\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.GrainFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ android.net.Network\ getActiveNetwork()>=android.permission.ACCESS_NETWORK_STATE
<android.inputmethodservice.InputMethodService\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.browser.Controller\:\ void\ closeCurrentTab()>=android.permission.GET_ACCOUNTS
<com.android.calendar.alerts.AlertActivity\:\ void\ onStop()>=android.permission.WRITE_CALENDAR
<com.android.calendar.AllInOneActivity$4\:\ void\ onChange(boolean)>=android.permission.WRITE_CALENDAR
<com.android.providers.settings.SettingsHelper\:\ void\ setGpsLocation(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.internal.app.ExternalMediaFormatActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.google.android.mms.pdu.PduPersister\:\ android.database.Cursor\ getPendingMessages(long)>=android.permission.READ_SMS
<com.android.systemui.media.NotificationPlayer\:\ void\ access$700(com.android.systemui.media.NotificationPlayer)>=android.permission.WAKE_LOCK
<com.android.server.LockSettingsService\:\ com.android.internal.widget.VerifyCredentialResponse\ verifyTiedProfileChallenge(java.lang.String,boolean,long,int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.server.WifiService\:\ int\ getWifiApEnabledState()>=android.permission.ACCESS_WIFI_STATE
<com.android.phone.NotificationMgr\:\ void\ updateInCallNotification()>=android.permission.WRITE_CONTACTS
<com.android.email.activity.setup.AccountSetupExchange\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.DataConnection$DcActivatingState\:\ boolean\ processMessage(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.ThrottleService\:\ long\ getResetTime(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.dialpad.DialpadFragment\:\ boolean\ onKey(android.view.View,int,android.view.KeyEvent)>=android.permission.READ_PHONE_STATE
<com.android.settings.Settings$AndroidBeamSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.camera.CaptureAnimManager\:\ boolean\ drawAnimation(com.android.gallery3d.ui.GLCanvas,com.android.camera.CameraScreenNail,com.android.gallery3d.ui.RawTexture)>=android.permission.RECORD_AUDIO
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue\:\ void\ releaseAllPointers(long)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccRecords\:\ void\ onRecordLoaded()>=android.permission.CHANGE_CONFIGURATION
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isActivePasswordSufficient(int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.cat.CommandParamsFactory\:\ boolean\ processDisplayText(com.android.internal.telephony.cat.CommandDetails,java.util.List)>=android.permission.WAKE_LOCK
<com.android.server.TelephonyRegistry\:\ void\ notifyOemHookRawEventForSubscriber(int,[byte)>=android.permission.MODIFY_PHONE_STATE
<com.android.contacts.detail.ContactDetailLayoutController\:\ void\ showContactWithUpdates(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$AndroidBeamSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.emailcommon.service.IEmailService\:\ android.os.Bundle\ validate(com.android.emailcommon.provider.HostAuth)>=android.permission.READ_CALENDAR
<com.android.contacts.calllog.CallLogListItemHelper\:\ void\ configureCallSecondaryAction(com.android.contacts.calllog.CallLogListItemViews,com.android.contacts.PhoneCallDetails)>=android.permission.READ_PHONE_STATE
<com.android.server.InputMethodManagerService$InputMethodSettings\:\ void\ putSubtypeHistoryStr(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.email.EmailConnectivityManager\:\ boolean\ isAutoSyncAllowed()>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.ManageSimMessages\:\ void\ access$000(com.android.mms.ui.ManageSimMessages)>=android.permission.RECEIVE_SMS
<com.android.nfc.P2pEventListener\:\ void\ onP2pSendComplete()>=android.permission.VIBRATE
<com.android.bluetooth.pbap.BluetoothPbapVcardManager\:\ java.util.ArrayList\ getContactNamesByNumber(java.lang.String)>=android.permission.WRITE_CONTACTS
<android.content.ContentService\:\ boolean\ getSyncAutomatically(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.PhoneCallDetailsHelper\:\ void\ setPhoneCallDetails(com.android.contacts.PhoneCallDetailsViews,com.android.contacts.PhoneCallDetails,boolean)>=android.permission.READ_PHONE_STATE
<android.net.ConnectivityManager\:\ android.net.NetworkCapabilities\ getNetworkCapabilities(android.net.Network)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothDeviceProfileState$OutgoingHid\:\ void\ enter()>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager\:\ int\ addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub\:\ android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel\ getKeyphraseSoundModel(int,java.lang.String)>=android.permission.MANAGE_VOICE_KEYPHRASES
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ handleEnterEmergencyCallbackMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$18\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.email.activity.UIControllerOnePane\:\ void\ onRefresh()>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.SlideshowPage\:\ void\ onBackPressed()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.CommandsInterface\:\ void\ sendBurstDtmf(java.lang.String,int,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.usage.UsageStatsService$BinderService\:\ android.app.usage.UsageEvents\ queryEvents(long,long,java.lang.String)>=android.permission.PACKAGE_USAGE_STATS
<com.android.providers.contacts.ContactsProvider2\:\ android.database.Cursor\ queryWithContactIdAndLookupKey(android.database.sqlite.SQLiteQueryBuilder,android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,android.os.CancellationSignal)>=android.permission.WRITE_CONTACTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setLongSupportMessage(android.content.ComponentName,java.lang.CharSequence)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.email.service.EmailServiceUtils\:\ boolean\ isServiceAvailable(android.content.Context,java.lang.String)>=android.permission.READ_PHONE_STATE
<com.android.internal.telephony.PhoneSubInfoProxy\:\ java.lang.String\ getVoiceMailNumber()>=android.permission.READ_PHONE_STATE
<com.android.settings.bluetooth.BluetoothDevicePreference\:\ int\ compareTo(java.lang.Object)>=android.permission.BLUETOOTH
<com.android.server.backup.Trampoline\:\ boolean\ isBackupEnabled()>=android.permission.BACKUP
<com.android.inputmethod.latin.DictionaryCollection\:\ boolean\ isValidWord(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.ISms\:\ boolean\ disableCellBroadcastRange(int,int)>=android.permission.WAKE_LOCK
<com.android.server.wm.DragState\:\ void\ unregister()>=android.permission.WAKE_LOCK
<com.android.bluetooth.opp.BluetoothOppNotification\:\ void\ access$400(com.android.bluetooth.opp.BluetoothOppNotification)>=android.permission.VIBRATE
<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.camera.Camera\:\ void\ onBackPressed()>=android.permission.RECORD_AUDIO
<android.net.wifi.WifiWatchdogStateMachine$WalledGardenCheckState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.phone.EmergencyCallHelper\:\ void\ powerOnRadio()>=android.permission.WRITE_SETTINGS
<android.net.sip.SipAudioCall\:\ void\ close()>=android.permission.WAKE_LOCK
<com.android.settings.Settings$TextToSpeechSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.settings.CryptKeeper$ValidationTask\:\ void\ onPostExecute(java.lang.Boolean)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ProviderStatusWatcher$ProviderStatusListener\:\ void\ onProviderStatusChange()>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.calendar.CalendarDebug$FetchInfoTask\:\ java.util.List\ doInBackground(java.lang.Void[])>=android.permission.READ_CALENDAR
<com.android.phone.PhoneInterfaceManager\:\ boolean\ iccCloseLogicalChannel(int,int)>=android.permission.MODIFY_PHONE_STATE
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.PhoneWindowManager$4\:\ void\ run()>=android.permission.REORDER_TASKS
<com.android.contacts.activities.TransactionSafeActivity\:\ boolean\ onPrepareOptionsMenu(android.view.Menu)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.InCallScreen\:\ void\ requestRemoveProviderInfoWithDelay()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.GLView\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.transaction.Transaction\:\ byte[]\ sendPdu(long,byte[],java.lang.String)>=android.permission.CHANGE_NETWORK_STATE
<android.filterpacks.imageproc.BlackWhiteFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.calendar.DayFragment\:\ void\ goTo(android.text.format.Time,boolean,boolean)>=android.permission.WRITE_CALENDAR
<com.android.settings.DateTimeSettings\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth\:\ boolean\ disconnectPanDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.location.LocationBasedCountryDetector\:\ android.location.Location\ getLastKnownLocation()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.contacts.activities.PeopleActivity\:\ boolean\ areGroupWritableAccountsAvailable()>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ int\ getPreferredNetworkType(int)>=android.permission.MODIFY_PHONE_STATE
<android.nfc.INfcAdapter\:\ void\ dispatch(android.nfc.Tag)>=android.permission.BLUETOOTH
<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder\:\ int\ getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.hdmi.HdmiControlService$BinderService\:\ I[]\ getSupportedTypes()>=android.permission.HDMI_CEC
<com.android.server.tv.TvInputManagerService$BinderService\:\ java.util.List\ getAvailableTvStreamConfigList(java.lang.String,int)>=android.permission.CAPTURE_TV_INPUT
<com.google.common.io.CharStreams$4\:\ java.lang.Object\ getInput()>=android.permission.INTERNET
<com.android.internal.telephony.PhoneSubInfoProxy\:\ java.lang.String\ getLine1Number()>=android.permission.READ_PHONE_STATE
<com.android.server.location.LocationBasedCountryDetector$2\:\ void\ run()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.email.Controller$LegacyListener\:\ void\ loadAttachmentFinished(long,long,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.usb.UsbService\:\ void\ grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>=android.permission.MANAGE_USB
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ access$3800(com.android.mms.ui.ComposeMessageActivity,long)>=android.permission.WRITE_SMS
<com.android.internal.widget.WaveView$OnTriggerListener\:\ void\ onGrabbedStateChange(android.view.View,int)>=android.permission.WAKE_LOCK
<com.android.exchange.ExchangeService\:\ void\ stopManualSync(long)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub$Proxy\:\ java.util.List\ getHealthDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<android.provider.Browser\:\ android.database.Cursor\ getAllBookmarks(android.content.ContentResolver)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<android.filterpacks.base.FrameFetch\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.vcard.VCardParser_V30\:\ void\ parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ getNeighboringCids(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.am.BatteryStatsService\:\ void\ noteResetCamera()>=android.permission.UPDATE_DEVICE_STATS
<android.filterpacks.imageproc.VignetteFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.am.ActivityManagerService\:\ long\ inputDispatchingTimedOut(int,boolean,java.lang.String)>=android.permission.FILTER_EVENTS
<com.android.calendar.alerts.AlertReceiver\:\ com.android.calendar.alerts.AlertService$NotificationWrapper\ makeExpandingNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long,long,long,int,boolean,boolean)>=android.permission.READ_CALENDAR
<android.net.wifi.SupplicantStateTracker$CompletedState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BROADCAST_STICKY
<com.android.gallery3d.app.PhotoPage$1\:\ void\ removeAllComponents()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ screenTurningOn(android.view.WindowManagerPolicy$ScreenOnListener)>=android.permission.WAKE_LOCK
<com.android.calendar.EventLoader$LoaderThread\:\ void\ run()>=android.permission.READ_CALENDAR
<com.android.mms.ui.SlideView\:\ void\ startVideo()>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth\:\ boolean\ createBondOutOfBand(java.lang.String,byte[],byte[])>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.BluetoothEventManager\:\ void\ dispatchDeviceAdded(com.android.settings.bluetooth.CachedBluetoothDevice)>=android.permission.BLUETOOTH
<com.android.phone.PhoneInterfaceManager\:\ boolean\ isIdle(java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.VibratorService$1\:\ void\ onChange(boolean)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService$ServiceStub\:\ int\ removeTrack(long)>=android.permission.WAKE_LOCK
<com.android.email.Controller$LegacyListener\:\ void\ synchronizeMailboxFailed(long,long,java.lang.Exception)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.ContactEditorActivity$1\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ java.util.List\ getDevicesMatchingConnectionStates([int)>=android.permission.BLUETOOTH
<android.media.AudioService\:\ void\ access$2200(android.media.AudioService)>=android.permission.BLUETOOTH
<com.android.server.NsdService\:\ android.os.Messenger\ getMessenger()>=android.permission.INTERNET
<com.android.server.BackupManagerService\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.browser.XLargeUi\:\ void\ setUseQuickControls(boolean)>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ access$1300(com.android.internal.policy.impl.KeyguardViewMediator)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ void\ enforceTetherAccessPermission()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.vpn2.VpnSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<android.media.AudioService\:\ void\ access$5900(android.media.AudioService)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.StateManager\:\ void\ resume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ConversationList\:\ void\ confirmDeleteThreads(java.util.Collection,android.content.AsyncQueryHandler)>=android.permission.READ_SMS
<com.android.phone.CallCard\:\ void\ updateForegroundCall(com.android.internal.telephony.CallManager)>=android.permission.BLUETOOTH
<android.location.LocationManager\:\ void\ requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.ACCESS_FINE_LOCATION
<com.android.exchange.utility.CalendarUtilities\:\ com.android.emailcommon.provider.EmailContent$Message\ createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.emailcommon.provider.Account,java.lang.String)>=android.permission.READ_CALENDAR
<com.android.deskclock.AlarmAlertFullScreen$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<android.bluetooth.BluetoothDevice\:\ boolean\ createBond()>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ queryCdmaRoamingPreference(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.vcard.VCardEntry\:\ void\ iterateAllData(com.android.vcard.VCardEntry$EntryElementIterator)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.AlbumPage$4\:\ void\ onLongTap(int)>=android.permission.VIBRATE
<com.android.internal.policy.impl.LockPatternKeyguardView\:\ void\ verifyUnlock()>=android.permission.WAKE_LOCK
<com.android.server.AppOpsService\:\ java.util.List\ getPackagesForOps([int)>=android.permission.GET_APP_OPS_STATS
<com.android.contacts.calllog.CallLogQueryHandler\:\ void\ markMissedCallsAsRead()>=android.permission.WRITE_CALL_LOG
<com.android.browser.BrowserBookmarksPage$LookupBookmarkCount\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.GET_ACCOUNTS
<com.android.server.sip.SipService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.bluetooth.BluetoothDevice\:\ boolean\ cancelPairingUserInput()>=android.permission.BLUETOOTH
<com.android.settings.wifi.WifiApEnabler\:\ void\ <init>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ startDtmf(char)>=android.permission.WAKE_LOCK
<com.android.server.BackupManagerService$PerformFullBackupTask\:\ void\ backupOnePackage(android.content.pm.PackageInfo,java.io.OutputStream)>=android.permission.WAKE_LOCK
<com.android.providers.downloads.DownloadService\:\ void\ deleteDownloadLocked(long)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ startMsgListQuery()>=android.permission.WRITE_SMS
<android.server.BluetoothAdapterStateMachine$PowerOff\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHandsfree$ScoSocketConnectThread\:\ void\ shutdown()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.RotateFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.email.activity.EmailActivity\:\ void\ onBackPressed()>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.EmergencyCallHelper\:\ void\ startSequenceInternal(android.os.Message)>=android.permission.BLUETOOTH
<com.android.settings.accounts.ManageAccountsSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.imageproc.BrightnessFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.BackupManagerService$PerformBackupTask\:\ void\ invokeNextAgent()>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHandsfree$15\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.am.UsageStatsService$2\:\ void\ onSomePackagesChanged()>=android.permission.WRITE_SETTINGS
<com.android.emailcommon.service.IEmailService$Stub\:\ void\ stopSync(long)>=android.permission.WAKE_LOCK
<com.android.calendar.EventInfoFragment$5\:\ void\ onClick(android.view.View)>=android.permission.READ_CALENDAR
<com.android.vcard.VCardParser_V40\:\ void\ parse(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.app.AlbumSetPage\:\ void\ doCluster(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.InCallScreen\:\ void\ access$800(com.android.phone.InCallScreen)>=android.permission.BLUETOOTH
<com.android.server.NetworkManagementService\:\ void\ stopTethering()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.wallpaper.RenderScriptWallpaper$RenderScriptEngine\:\ void\ onSurfaceChanged(android.view.SurfaceHolder,int,int,int)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.net.NetworkPolicyEditor$1\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.camera.Camera\:\ void\ onPause()>=android.permission.RECORD_AUDIO
<com.android.server.sip.SipWakeLock\:\ void\ acquire(java.lang.Object)>=android.permission.WAKE_LOCK
<com.android.server.SerialService\:\ java.lang.String[]\ getSerialPorts()>=android.permission.SERIAL_PORT
<android.server.BluetoothService\:\ void\ runBluetooth()>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.UserDictionary\:\ boolean\ reloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.providers.contacts.ContactsProvider2\:\ boolean\ isContactsAccount(android.accounts.Account)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.SnapshotTab\:\ void\ setController(com.android.browser.WebViewController)>=android.permission.GET_ACCOUNTS
<com.android.server.audio.AudioService\:\ void\ notifyVolumeControllerVisible(android.media.IVolumeController,boolean)>=android.permission.STATUS_BAR_SERVICE
<android.server.BluetoothHealthProfileHandler\:\ void\ onHealthDevicePropertyChanged(java.lang.String,java.lang.String)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.BitmapSource\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.music.IMediaPlaybackService\:\ void\ setQueuePosition(int)>=android.permission.WAKE_LOCK
<com.android.server.location.GpsLocationProvider\:\ void\ addListener(int)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.String\ getCertInstallerPackage(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.settings.wifi.WifiSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<com.android.providers.contacts.ContactsProvider2\:\ android.net.Uri\ insertInTransaction(android.net.Uri,android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$LocalePickerActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.latin.UserDictionary\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.settings.Settings$InputMethodAndSubtypeEnablerActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.settings.bluetooth.BluetoothEventManager$UuidChangedHandler\:\ void\ onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ setSimAccessPermission(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH_PRIVILEGED
<android.filterpacks.imageproc.Invert\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.list.JoinContactListAdapter\:\ android.net.Uri\ getContactUri(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.LockScreen$SlidingTabMethods\:\ void\ onGrabbedStateChange(android.view.View,int)>=android.permission.WAKE_LOCK
<android.nfc.INfcTag$Stub\:\ android.nfc.Tag\ rediscover(int)>=android.permission.NFC
<com.android.email.activity.UIControllerTwoPane\:\ void\ onRespondedToInvite(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.wm.WindowManagerService\:\ void\ setAppVisibility(android.os.IBinder,boolean)>=android.permission.MANAGE_APP_TOKENS
<com.android.server.TelephonyRegistry\:\ void\ notifyDataActivityForSubscriber(int,int)>=android.permission.MODIFY_PHONE_STATE
<com.android.exchange.adapter.AbstractSyncParser\:\ void\ commandsParser()>=android.permission.READ_SYNC_SETTINGS
<android.content.pm.IPackageManager$Stub$Proxy\:\ boolean\ setInstallLocation(int)>=android.permission.WRITE_SETTINGS
<com.android.server.UiModeManagerService\:\ void\ updateConfigurationLocked(boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.DataConnectionTracker\:\ void\ onSetUserDataEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ com.android.internal.telephony.Connection\ dial(java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.contacts.detail.ContactDetailLayoutController\:\ void\ initialize(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.InCallTouchUi\:\ void\ handleAudioButtonClick()>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.ContactsBinaryDictionary\:\ void\ syncReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.calendar.AllInOneActivity\:\ void\ access$700(com.android.calendar.AllInOneActivity,long)>=android.permission.READ_CALENDAR
<com.android.music.IMediaPlaybackService$Stub$Proxy\:\ void\ stop()>=android.permission.WAKE_LOCK
<android.view.WindowManagerPolicy\:\ void\ setUserRotationMode(int,int)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy\:\ void\ notifySignalStrength(android.telephony.SignalStrength)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onEnableNewApn()>=android.permission.BROADCAST_STICKY
<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub\:\ int\ startRecognition(android.os.ParcelUuid,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>=android.permission.MANAGE_SOUND_TRIGGER
<com.android.server.pm.PackageManagerService\:\ android.content.ComponentName\ getHomeActivities(java.util.List)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.filterpacks.imageproc.CropRectFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ boolean\ setRadios(boolean)>=android.permission.CHANGE_NETWORK_STATE
<com.android.phone.BluetoothAtPhonebook\:\ boolean\ access$900(com.android.phone.BluetoothAtPhonebook)>=android.permission.BLUETOOTH
<com.android.contacts.list.ContactPickerFragment\:\ void\ setQueryString(java.lang.String,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.PhoneFavoriteFragment\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.Dictionary\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<com.android.settings.bluetooth.DevicePickerFragment\:\ void\ addCachedDevices()>=android.permission.BLUETOOTH
<com.android.mms.transaction.SmsRejectedReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.VIBRATE
<android.nfc.tech.IsoDep\:\ void\ connect()>=android.permission.NFC
<com.android.common.contacts.BaseEmailAddressAdapter$DefaultPartitionFilter\:\ android.widget.Filter$FilterResults\ performFiltering(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekFragment\:\ void\ setMonthDisplayed(android.text.format.Time,boolean)>=android.permission.WRITE_CALENDAR
<com.android.phone.PhoneInterfaceManager\:\ I[]\ supplyPinReportResult(java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.internal.telephony.CommandsInterface\:\ void\ getOperator(android.os.Message)>=android.permission.WAKE_LOCK
<android.test.mock.MockContentResolver\:\ void\ setIsSyncable(android.accounts.Account,java.lang.String,int)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.internal.telephony.RIL\:\ void\ sendTerminalResponse(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub\:\ void\ reportInetCondition(int,int)>=android.permission.BROADCAST_STICKY
<android.media.AudioService\:\ int\ setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>=android.permission.WAKE_LOCK
<com.android.browser.TabControl\:\ void\ removeParentChildRelationShips()>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.latin.SubtypeSwitcher\:\ void\ initialize(com.android.inputmethod.latin.LatinIME)>=android.permission.ACCESS_NETWORK_STATE
<com.google.common.io.MultiReader\:\ long\ skip(long)>=android.permission.INTERNET
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getPasswordMinimumNonLetter(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.app.StatusBarManager\:\ void\ expand()>=android.permission.EXPAND_STATUS_BAR
<com.android.gallery3d.ui.CropView$HighlightRectangle\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ boolean\ trySetupData(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.emailcommon.service.IEmailService$Stub\:\ android.os.Bundle\ validate(com.android.emailcommon.provider.HostAuth)>=android.permission.READ_CALENDAR
<com.android.phone.BluetoothAtPhonebook$3\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ android.os.ParcelUuid[]\ getRemoteUuids(java.lang.String)>=android.permission.BLUETOOTH
<android.view.WindowManagerPolicy\:\ int\ interceptMotionBeforeQueueingWhenScreenOff(int)>=android.permission.WAKE_LOCK
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker$1\:\ java.lang.Boolean\ doInBackground(java.lang.Void[])>=android.permission.WRITE_SYNC_SETTINGS
<com.android.server.content.ContentService\:\ void\ cancelSyncAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.WifiService\:\ int\ getFrequencyBand()>=android.permission.ACCESS_WIFI_STATE
<android.filterpacks.ui.SurfaceTargetFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.MessagingNotification\:\ void\ notifySendFailed(android.content.Context)>=android.permission.VIBRATE
<com.android.phone.InCallScreen\:\ void\ requestUpdateBluetoothIndication()>=android.permission.BLUETOOTH
<com.android.internal.telephony.SubscriptionController\:\ android.telephony.SubscriptionInfo\ getActiveSubscriptionInfoForIccId(java.lang.String,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.contacts.list.AccountFilterActivity$FilterLoader\:\ java.lang.Object\ loadInBackground()>=android.permission.READ_SYNC_SETTINGS
<android.view.IWindowManager$Stub\:\ void\ clearForcedDisplaySize()>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ void\ extendVerificationTimeout(int,int,long)>=android.permission.GRANT_RUNTIME_PERMISSIONS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.PACKAGE_VERIFICATION_AGENT, android.permission.REVOKE_RUNTIME_PERMISSIONS, android.permission.SET_PREFERRED_APPLICATIONS
<com.android.internal.telephony.CommandsInterface\:\ void\ changeIccPin2(java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.MovieActivity$1\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.phone.OtaStartupReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy\:\ void\ notifyDataConnectionFailed(java.lang.String,java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.email.activity.UIControllerBase\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.nfc.NfcService$NfcAdapterService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.server.TelephonyRegistry\:\ void\ notifyServiceState(android.telephony.ServiceState)>=android.permission.BROADCAST_STICKY
<com.android.server.wm.WindowManagerService\:\ void\ clearForcedDisplaySize()>=android.permission.WAKE_LOCK
<android.accounts.IAccountManager$Stub$Proxy\:\ java.lang.String\ getUserData(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<android.webkit.WebIconDatabaseClassic\:\ void\ requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase$IconListener)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<com.android.internal.widget.SlidingTab$OnTriggerListener\:\ void\ onGrabbedStateChange(android.view.View,int)>=android.permission.WAKE_LOCK
<com.android.server.backup.Trampoline\:\ boolean\ setBackupPassword(java.lang.String,java.lang.String)>=android.permission.BACKUP
<android.bluetooth.IBluetoothA2dp$Stub\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.server.tv.TvInputManagerService$ServiceCallback\:\ void\ addHardwareInput(int,android.media.tv.TvInputInfo)>=android.permission.TV_INPUT_HARDWARE
<com.android.contacts.list.JoinContactListFragment\:\ void\ onItemClick(int,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.SlotView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.camera.VideoCamera\:\ void\ onResume()>=android.permission.RECORD_AUDIO
<com.android.contacts.widget.LayoutSuppressingQuickContactBadge\:\ void\ assignContactFromPhone(java.lang.String,boolean)>=android.permission.WRITE_CONTACTS
<com.android.calendar.EventInfoFragment\:\ void\ updateAttendees(android.view.View)>=android.permission.WRITE_CONTACTS
<com.android.phone.BluetoothHandsfree$7\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ void\ installSystemProviders()>=android.permission.WRITE_SETTINGS
<com.android.contacts.ContactsActivity\:\ void\ onNewIntent(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary\:\ void\ loadDictionaryAsync()>=android.permission.READ_USER_DICTIONARY
<com.android.systemui.statusbar.tablet.TabletStatusBar$1\:\ void\ run()>=android.permission.VIBRATE
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ unregisterClient(int)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.AlphaBlendFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.PosterizeFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.input.InputManagerService\:\ void\ setKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype,java.lang.String)>=android.permission.SET_KEYBOARD_LAYOUT
<com.android.calendar.month.MonthByWeekFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.WRITE_CALENDAR
<com.android.calendar.agenda.AgendaWindowAdapter\:\ boolean\ queueQuery(com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>=android.permission.WRITE_CALENDAR
<com.android.server.wm.InputMonitor\:\ void\ notifyLidSwitchChanged(long,boolean)>=android.permission.WAKE_LOCK
<com.android.camera.Camera\:\ void\ initializeSecondTime()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.mms.data.WorkingMessage\:\ void\ updateDraftSmsMessage(com.android.mms.data.Conversation,java.lang.String)>=android.permission.WRITE_SMS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ exitEmergencyCallbackMode()>=android.permission.WAKE_LOCK
<com.android.phone.PhoneInterfaceManager\:\ java.util.List\ getAllowedCarriers(int)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.net.DhcpStateMachine$StoppedState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.telephony.RIL\:\ void\ getDeviceIdentity(android.os.Message)>=android.permission.WAKE_LOCK
<android.widget.VideoView\:\ void\ resume()>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothAtPhonebook$1\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ getTrustState(java.lang.String)>=android.permission.BLUETOOTH
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ boolean\ access$700(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>=android.permission.WRITE_SMS
<com.android.systemui.statusbar.policy.BrightnessController$1\:\ void\ run()>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.DrawOverlayFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity$10\:\ void\ onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.UI\:\ boolean\ onBackKey()>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.latin.WhitelistDictionary\:\ void\ <init>=android.permission.WRITE_CONTACTS
<com.android.providers.downloads.DownloadService$1\:\ void\ scanCompleted(java.lang.String,android.net.Uri)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.server.LockSettingsService\:\ void\ setLockPattern(java.lang.String,java.lang.String,int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.calendar.alerts.AlertService\:\ int\ processQuery(android.database.Cursor,android.content.Context,long,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>=android.permission.WRITE_CALENDAR
<com.android.settings.Settings$DevelopmentSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ reportSuccessfulPasswordAttempt(int)>=android.permission.BIND_DEVICE_ADMIN, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.vcard.SelectAccountActivity\:\ void\ onResume()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener\:\ void\ onFinishAction()>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.calendar.CalendarDebug$FetchInfoTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_CALENDAR
<com.android.gallery3d.app.PhotoPage$PreparePhotoFallback\:\ boolean\ onGLIdle(com.android.gallery3d.ui.GLCanvas,boolean)>=android.permission.RECORD_AUDIO
<com.android.server.NsdService$NsdStateMachine\:\ void\ registerForNsdSetting()>=android.permission.WRITE_SETTINGS
<android.filterfw.core.FinalPort\:\ void\ transfer(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.filterpacks.videosrc.SurfaceTextureSource\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.music.MediaPlaybackService$CompatMediaPlayer\:\ void\ setWakeMode(android.content.Context,int)>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.policy.AutoRotateController\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.email.NotificationController\:\ void\ showPasswordExpiringNotification(long)>=android.permission.VIBRATE
<com.android.email.mail.store.ExchangeStore\:\ com.android.emailcommon.service.IEmailService\ getService()>=android.permission.READ_PHONE_STATE
<com.android.inputmethod.latin.suggestions.SuggestionsView$2\:\ void\ onCodeInput(int,int,int)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.IccSmsInterfaceManager\:\ void\ sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>=android.permission.SEND_SMS
<android.filterpacks.base.NullFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ void\ requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION
<android.location.ILocationManager$Stub\:\ boolean\ isProviderEnabled(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<android.nfc.tech.NfcF\:\ void\ connect()>=android.permission.NFC
<com.android.server.input.InputManagerService\:\ void\ removeKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>=android.permission.SET_KEYBOARD_LAYOUT
<android.filterpacks.imageproc.BrightnessFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.nfc.NfcService$NfcAdapterExtrasService\:\ void\ setCardEmulationRoute(java.lang.String,int)>=android.permission.NFC
<com.android.phone.CallerInfoCache$CacheAsyncTask\:\ void\ acquireWakeLockAndExecute()>=android.permission.WAKE_LOCK
<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper\:\ void\ rename(int,int,java.lang.String)>=android.permission.MANAGE_FINGERPRINT
<com.android.contacts.list.JoinContactListFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ boolean\ supplyPukForSubscriber(int,java.lang.String,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.settings.TetherSettings\:\ void\ startTethering()>=android.permission.BLUETOOTH
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ addHdmiMhlVendorCommandListener(android.hardware.hdmi.IHdmiMhlVendorCommandListener)>=android.permission.HDMI_CEC
<com.android.server.ConnectivityService\:\ void\ access$1100(com.android.server.ConnectivityService,android.net.NetworkInfo)>=android.permission.BLUETOOTH
<android.net.wifi.WifiStateMachine\:\ void\ access$7900(android.net.wifi.WifiStateMachine)>=android.permission.WRITE_SETTINGS
<com.android.calendar.DayView$1\:\ void\ run()>=android.permission.READ_CALENDAR
<android.bluetooth.IBluetooth$Stub\:\ boolean\ fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)>=android.permission.BLUETOOTH
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ restoreSelectedUri(boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ animateCollapse(int)>=android.permission.VIBRATE
<android.inputmethodservice.KeyboardView\:\ boolean\ openPopupIfRequired(android.view.MotionEvent)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.filterpacks.text.StringLogger\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.content.ContentService\:\ java.util.List\ getCurrentSyncs()>=android.permission.GET_ACCOUNTS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.READ_SYNC_STATS
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.settings.bluetooth.CachedBluetoothDeviceManager\:\ boolean\ onDeviceDisappeared(com.android.settings.bluetooth.CachedBluetoothDevice)>=android.permission.BLUETOOTH
<com.android.nfc.nxp.NativeNfcManager\:\ void\ notifySeFieldDeactivated()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ enableSingleLocationUpdate()>=android.permission.WAKE_LOCK
<com.android.contacts.editor.RawContactReadOnlyEditorView\:\ void\ setPhotoBitmap(android.graphics.Bitmap)>=android.permission.WRITE_CONTACTS
<com.android.nfc.P2pLinkManager$SendTask\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.BLUETOOTH
<android.nfc.INfcTag\:\ int\ ndefMakeReadOnly(int)>=android.permission.NFC
<com.android.internal.telephony.cat.IconLoader\:\ void\ postIcon()>=android.permission.WAKE_LOCK
<com.android.vcard.VCardParserImpl_V40\:\ void\ parse(java.io.InputStream)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.Controller\:\ com.android.browser.SnapshotTab\ createNewSnapshotTab(long,boolean)>=android.permission.GET_ACCOUNTS
<com.android.server.BluetoothManagerService\:\ boolean\ disable(boolean)>=android.permission.BLUETOOTH_ADMIN
<android.net.IThrottleManager$Stub$Proxy\:\ long\ getPeriodStartTime(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.VignetteFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.power.PowerManagerService$BinderService\:\ void\ shutdown(boolean,java.lang.String,boolean)>=android.permission.REBOOT
<com.android.internal.telephony.PhoneBase\:\ void\ getSmscAddress(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.util.PduLoaderManager$PduTask$1\:\ void\ run()>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker$1\:\ java.lang.Boolean\ doInBackground(java.lang.Void[])>=android.permission.WRITE_SETTINGS
<com.android.contacts.list.EmailAddressPickerFragment\:\ boolean\ isSyncActive()>=android.permission.READ_SYNC_STATS
<android.bluetooth.BluetoothGatt\:\ boolean\ executeReliableWrite()>=android.permission.BLUETOOTH
<com.android.gallery3d.app.ActivityState\:\ void\ onPause()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$DeviceInfoSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<android.net.nsd.INsdManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WRITE_SETTINGS
<com.android.contacts.model.AccountTypeManager\:\ java.util.Map\ getUsableInvitableAccountTypes()>=android.permission.WRITE_CONTACTS
<android.provider.Settings$Secure\:\ void\ setLocationProviderEnabled(android.content.ContentResolver,java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<android.server.BluetoothService\:\ void\ dumpPanProfile(java.io.PrintWriter)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardUpdateMonitor\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ setQueryString(java.lang.String,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.UIControllerBase\:\ void\ installMessageViewFragment(com.android.email.activity.MessageViewFragment)>=android.permission.ACCESS_NETWORK_STATE
<com.android.camera.VideoCamera\:\ void\ initializeRecorder()>=android.permission.RECORD_AUDIO
<com.android.settings.Settings$WifiSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.ComposeMessageActivity\:\ int\ access$3100(com.android.mms.ui.ComposeMessageActivity,long)>=android.permission.WRITE_SMS
<android.nfc.INfcTag\:\ int\ close(int)>=android.permission.NFC
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ void\ dispatch(android.content.Intent,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.settings.SubSettings\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<android.accounts.IAccountManager$Stub\:\ boolean\ addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.AUTHENTICATE_ACCOUNTS
<android.accounts.IAccountManager$Stub$Proxy\:\ void\ invalidateAuthToken(java.lang.String,java.lang.String)>=android.permission.MANAGE_ACCOUNTS
<com.android.internal.util.StateMachine$SmHandler$HaltingState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.bluetooth.BluetoothGatt\:\ void\ abortReliableWrite(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.statusbar.StatusBarManagerService\:\ void\ setSystemUiVisibility(int,int,java.lang.String)>=android.permission.STATUS_BAR_SERVICE
<com.android.internal.telephony.gsm.SIMRecords\:\ void\ onAllRecordsLoaded()>=android.permission.CHANGE_CONFIGURATION
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ invokeOemRilRequestRaw(byte[],android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiWatchdogStateMachine\:\ boolean\ putSettingsBoolean(android.content.ContentResolver,java.lang.String,boolean)>=android.permission.WRITE_SETTINGS
<com.android.email.GroupMessagingListener\:\ void\ synchronizeMailboxStarted(long,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.ScrollBarView\:\ boolean\ dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.browser.UI\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.browser.UrlInputView\:\ boolean\ onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>=android.permission.GET_ACCOUNTS
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ viewContact(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$SoundSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.phone.BluetoothHandsfree$17\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.settings.Settings$CryptKeeperSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.server.pm.PackageManagerService\:\ void\ freeStorage(long,android.content.IntentSender)>=android.permission.CLEAR_APP_CACHE
<com.android.internal.telephony.ServiceStateTracker\:\ void\ setRadioPower(boolean)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.PasswordUnlockScreen$3\:\ void\ afterTextChanged(android.text.Editable)>=android.permission.WAKE_LOCK
<com.android.calendar.CalendarUtils$TimeZoneUtils\:\ void\ setTimeZone(android.content.Context,java.lang.String)>=android.permission.WRITE_CALENDAR
<com.google.common.io.ByteStreams\:\ java.lang.Object\ readBytes(com.google.common.io.InputSupplier,com.google.common.io.ByteProcessor)>=android.permission.INTERNET
<com.android.calendar.month.MonthWeekEventsView\:\ int\ drawEvent(android.graphics.Canvas,com.android.calendar.Event,int,int,int,boolean,boolean,boolean)>=android.permission.READ_CALENDAR
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta\:\ com.android.contacts.list.CustomContactListFilterActivity$GroupDelta\ fromSettings(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean)>=android.permission.WRITE_CONTACTS
<com.android.email.activity.MessageViewFragmentBase$ControllerResults\:\ void\ updateMailboxCallback(com.android.emailcommon.mail.MessagingException,long,long,int,int,java.util.ArrayList)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.sip.SipEditor\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ImageSlicer\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ java.lang.String[]\ getTetheredIfaces()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ hasUserSetupCompleted()>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.telephony.SubscriptionController\:\ void\ setSubscriptionProperty(int,java.lang.String,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<android.provider.Contacts$ContactMethods\:\ void\ addPostalLocation(android.content.Context,long,double,double)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.util.ContactLoaderUtils\:\ android.net.Uri\ ensureIsContactUri(android.content.ContentResolver,android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.LocationSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<android.test.IsolatedContext\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<android.server.BluetoothA2dpService\:\ boolean\ allowIncomingConnect(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.LockSettingsService\:\ void\ setBoolean(java.lang.String,boolean,int)>=android.permission.ACCESS_KEYGUARD_SECURE_STORAGE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setForceEphemeralUsers(android.content.ComponentName,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.DeviceStorageMonitorService\:\ void\ sendNotification()>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ isActivityAndEnergyReportingSupported()>=android.permission.BLUETOOTH_PRIVILEGED
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ notifyDataConnection(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.contacts.voicemail.VoicemailPlaybackPresenter\:\ void\ onDestroy()>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setPasswordMinimumLength(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.bluetooth.IBluetooth\:\ boolean\ setTrust(java.lang.String,boolean)>=android.permission.BLUETOOTH
<com.android.contacts.editor.ContactEditorFragment\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConsumerIrService\:\ void\ transmit(java.lang.String,int,[int)>=android.permission.TRANSMIT_IR
<com.android.server.accessibility.AccessibilityManagerService$Service\:\ float\ getMagnificationCenterY()>=android.permission.INTERACT_ACROSS_USERS
<com.android.server.pm.PackageManagerService\:\ int\ getApplicationEnabledSetting(java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.MobileNetworkSettings\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WAKE_LOCK
<android.accounts.AccountManager\:\ java.lang.String\ getPassword(android.accounts.Account)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.mms.ui.AudioAttachmentView\:\ void\ stopAudio()>=android.permission.WAKE_LOCK
<com.android.server.hdmi.HdmiControlService$BinderService\:\ java.util.List\ getInputDevices()>=android.permission.HDMI_CEC
<android.server.BluetoothService\:\ boolean\ connectPanDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.providers.downloads.StorageManager$1\:\ void\ run()>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.internal.app.LocalePicker\:\ void\ onListItemClick(android.widget.ListView,android.view.View,int,long)>=android.permission.CHANGE_CONFIGURATION
<com.android.internal.telephony.RIL\:\ void\ switchToRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.DownUpDetector$DownUpListener\:\ void\ onDown(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.internal.telephony.IccSmsInterfaceManager\:\ java.util.List\ getAllMessagesFromIccEf()>=android.permission.WAKE_LOCK
<com.android.phone.PhoneApp\:\ void\ handleSetTTYModeResponse(android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiWatchdogStateMachine\:\ android.net.wifi.WifiWatchdogStateMachine\ makeWifiWatchdogStateMachine(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.Settings$DeviceInfoSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.contacts.editor.SelectAccountDialogFragment\:\ void\ onAccountSelected(com.android.contacts.model.AccountWithDataSet)>=android.permission.READ_SYNC_SETTINGS
<com.android.bluetooth.opp.BluetoothOppTransferActivity$BluetoothTransferContentObserver\:\ void\ onChange(boolean)>=android.permission.BLUETOOTH
<android.app.IActivityManager\:\ void\ setAlwaysFinish(boolean)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ setDataRoamingEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.phone.SipBroadcastReceiver$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.contacts.activities.DialtactsActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.detail.ContactDetailFragment$MakeLocalCopyQuickFix\:\ void\ execute()>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary\:\ void\ loadDictionaryAsync()>=android.permission.READ_USER_DICTIONARY
<com.android.bluetooth.a2dp.A2dpService$BluetoothA2dpBinder\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.server.wm.WindowManagerService\:\ android.os.IBinder\ prepareDragSurface(android.view.IWindow,android.view.SurfaceSession,int,int,int,android.view.Surface)>=android.permission.WAKE_LOCK
<com.android.contacts.model.AccountTypeWithDataSet\:\ boolean\ hasData(android.content.Context)>=android.permission.WRITE_CONTACTS
<com.android.providers.calendar.CalendarProvider2\:\ int\ updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>=android.permission.READ_CALENDAR
<com.android.settings.Settings$AdvancedWifiSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.phone.BluetoothHeadsetService$6\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ supplyIccPuk2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.widget.multiwaveview.MultiWaveView$1\:\ void\ onAnimationEnd(android.animation.Animator)>=android.permission.VIBRATE
<android.widget.VideoView\:\ void\ suspend()>=android.permission.WAKE_LOCK
<com.android.settings.deviceinfo.Memory\:\ void\ doUnmount()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.phone.BluetoothHandsfree$16\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<android.accounts.IAccountManager\:\ void\ addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>=android.permission.MANAGE_ACCOUNTS
<android.webkit.WebViewProvider\:\ void\ init(java.util.Map,boolean)>=android.permission.INTERNET
<com.android.quicksearchbox.google.GoogleSuggestClient\:\ boolean\ isNetworkConnected()>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ setPhonebookAccessPermission(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH_PRIVILEGED
<android.preference.VolumePreference$SeekBarVolumizer\:\ void\ stop()>=android.permission.WAKE_LOCK
<com.android.server.LocationManagerService\:\ android.os.Bundle\ getProviderInfo(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<android.filterpacks.imageproc.CropRectFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub\:\ int\ tether(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.BluetoothHandsfree$SignalScoCloseThread\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.mms.util.RateController\:\ boolean\ isLimitSurpassed()>=android.permission.READ_SMS
<com.android.mms.util.Recycler\:\ boolean\ checkForThreadsOverLimit(android.content.Context)>=android.permission.RECEIVE_SMS
<com.android.contacts.activities.GroupDetailActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.filterpacks.videosrc.MediaSource\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.view.IWindowSession\:\ int\ addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)>=android.permission.SYSTEM_ALERT_WINDOW
<android.bluetooth.BluetoothDeviceProfileState$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.app.backup.BackupAgentHelper\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.settings.Settings$ApplicationSettingsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.server.BackupManagerService\:\ java.lang.String\ selectBackupTransport(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.server.WifiService\:\ void\ handleAirplaneModeToggled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.server.statusbar.StatusBarManagerService\:\ void\ onNotificationVisibilityChanged([com.android.internal.statusbar.NotificationVisibility,[com.android.internal.statusbar.NotificationVisibility)>=android.permission.STATUS_BAR_SERVICE
<com.android.server.InputMethodManagerService$SettingsObserver\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.emailcommon.service.IEmailServiceCallback\:\ void\ syncMailboxListStatus(long,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.contacts.VoicemailContentProvider\:\ com.android.providers.contacts.VoicemailContentProvider$UriData\ checkPermissionsAndCreateUriData(android.net.Uri,android.content.ContentValues[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneItemAdapter\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ getCdmaSubscriptionSource(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.activity.UIControllerSearchTwoPane\:\ void\ switchAccount(long,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.WifiStateMachine$VerifyingLinkState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BROADCAST_STICKY
<com.android.phone.DTMFTwelveKeyDialer\:\ void\ closeDialer(boolean)>=android.permission.BLUETOOTH
<android.os.storage.IMountService$Stub$Proxy\:\ void\ finishMediaUpdate()>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.settings.OwnerInfoSettings\:\ void\ saveToDb()>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ setInputDevicePriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<android.server.BluetoothA2dpService\:\ void\ access$000(android.server.BluetoothA2dpService)>=android.permission.BLUETOOTH
<com.android.server.sip.SipSessionGroup$SipSessionImpl\:\ boolean\ process(java.util.EventObject)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onRecordsLoaded()>=android.permission.BROADCAST_STICKY
<com.android.gallery3d.ui.PhotoView\:\ void\ removeOneComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker\:\ void\ getSubscriptionInfoAndStartPollingThreads()>=android.permission.WAKE_LOCK
<com.android.internal.widget.PasswordEntryKeyboardView\:\ boolean\ onTouchEvent(android.view.MotionEvent)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.media.IRingtonePlayer\:\ void\ stop(android.os.IBinder)>=android.permission.WAKE_LOCK
<com.android.phone.OutgoingCallBroadcaster$OutgoingCallReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.bluetooth.avrcp.AvrcpControllerService$BluetoothAvrcpControllerBinder\:\ android.media.MediaMetadata\ getMetadata(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.am.ActivityManagerService\:\ android.content.ComponentName\ startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int)>=android.permission.WAKE_LOCK
<com.android.server.net.NetworkStatsService\:\ android.net.DataUsageRequest\ registerUsageCallback(java.lang.String,android.net.DataUsageRequest,android.os.Messenger,android.os.IBinder)>=android.permission.PACKAGE_USAGE_STATS, android.permission.READ_NETWORK_USAGE_HISTORY
<android.accounts.AccountManager$Future2Task\:\ android.accounts.AccountManager$Future2Task\ start()>=android.permission.GET_ACCOUNTS
<com.android.mms.data.Conversation\:\ void\ access$800(android.content.Context)>=android.permission.RECEIVE_SMS
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.WAKE_LOCK
<com.android.internal.statusbar.IStatusBarService$Stub\:\ void\ expand()>=android.permission.EXPAND_STATUS_BAR
<com.android.contacts.list.EmailAddressListAdapter\:\ android.view.View\ getView(int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.emailcommon.service.PolicyServiceProxy$2\:\ void\ run()>=android.permission.VIBRATE
<android.nfc.INfcAdapter\:\ void\ setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>=android.permission.NFC
<com.android.email.mail.store.ServiceStore\:\ android.os.Bundle\ checkSettings()>=android.permission.READ_CALENDAR
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ hideSearchPanel()>=android.permission.VIBRATE
<com.android.settings.bluetooth.BluetoothEventManager\:\ boolean\ readPairedDevices()>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker\:\ void\ onRestartRadio()>=android.permission.WAKE_LOCK
<android.filterpacks.videosrc.MediaSource\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.test.mock.MockContentResolver\:\ boolean\ isSyncActive(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ android.os.UserHandle\ createAndManageUser(android.content.ComponentName,java.lang.String,android.content.ComponentName,android.os.PersistableBundle,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_DEVICE_ADMINS, android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS, android.permission.MANAGE_USERS
<com.android.calendar.alerts.AlertReceiver\:\ com.android.calendar.alerts.AlertService$NotificationWrapper\ makeBasicNotification(android.content.Context,java.lang.String,java.lang.String,long,long,long,int,boolean)>=android.permission.READ_CALENDAR
<com.android.settings.Settings$LocalePickerActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.contacts.editor.ContactEditorFragment$3\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageListFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ getSmscAddress(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.IIccPhoneBook\:\ java.util.List\ getAdnRecordsInEf(int)>=android.permission.READ_CONTACTS
<com.android.internal.telephony.ServiceStateTracker\:\ void\ handlePollStateResult(int,android.os.AsyncResult)>=android.permission.SET_TIME_ZONE
<android.bluetooth.BluetoothPan\:\ boolean\ isEnabled()>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ sendEnvelopeWithStatus(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipPhone$SipConnection\:\ void\ hangup()>=android.permission.WAKE_LOCK
<com.android.exchange.EasSyncService\:\ boolean\ tryProvision(com.android.exchange.EasSyncService)>=android.permission.WAKE_LOCK
<com.android.exchange.adapter.Parser\:\ boolean\ parse()>=android.permission.READ_SYNC_SETTINGS
<android.net.IConnectivityManager$Stub\:\ int\ untether(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ exitEmergencyCallbackMode()>=android.permission.WAKE_LOCK
<android.nfc.INfcTag$Stub\:\ int\ ndefWrite(int,android.nfc.NdefMessage)>=android.permission.NFC
<com.android.server.wm.WindowManagerService\:\ void\ <init>=android.permission.WAKE_LOCK
<android.nfc.NfcAdapter\:\ void\ disableForegroundNdefPush(android.app.Activity)>=android.permission.NFC
<com.android.server.wm.WindowManagerService\:\ boolean\ setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.os.IBinder,boolean)>=android.permission.MANAGE_APP_TOKENS
<com.android.settings.inputmethod.UserDictionaryAddWordContents\:\ boolean\ hasWord(java.lang.String,android.content.Context)>=android.permission.READ_USER_DICTIONARY
<android.bluetooth.BluetoothGatt\:\ boolean\ readCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>=android.permission.BLUETOOTH
<com.android.browser.DataController$DataControllerHandler\:\ void\ handleMessage(com.android.browser.DataController$DCMessage)>=android.permission.GET_ACCOUNTS
<com.android.nfc.P2pLinkManager\:\ void\ onLlcpActivated()>=android.permission.VIBRATE
<com.android.phone.BluetoothHandsfree$26\:\ android.bluetooth.AtCommandResult\ handleReadCommand()>=android.permission.READ_CALL_LOG
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ disable()>=android.permission.BLUETOOTH_ADMIN
<com.android.phone.BluetoothHandsfree\:\ void\ access$3200(com.android.phone.BluetoothHandsfree)>=android.permission.BLUETOOTH
<com.android.voicedialer.VoiceDialerActivity\:\ void\ access$2200(com.android.voicedialer.VoiceDialerActivity,boolean)>=android.permission.BLUETOOTH
<com.android.browser.GoogleAccountLogin\:\ void\ run(android.accounts.AccountManagerFuture)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ onEnableApn(int,int)>=android.permission.BROADCAST_STICKY
<com.android.server.content.ContentService\:\ void\ removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>=android.permission.WRITE_SYNC_SETTINGS
<android.net.wifi.WifiStateMachine$ConnectedState\:\ void\ exit()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DockService$5\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService$SettingsObserver\:\ void\ observe(android.content.Context)>=android.permission.WRITE_SETTINGS
<android.content.Context\:\ void\ sendStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.settings.DateTimeSettingsSetupWizard\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.SET_TIME_ZONE
<android.filterfw.core.FilterFunction\:\ void\ tearDown()>=android.permission.WAKE_LOCK
<com.android.internal.app.IBatteryStats\:\ long\ getAwakeTimePlugged()>=android.permission.BATTERY_STATS
<android.media.effect.effects.TintEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.development.Connectivity\:\ void\ onStartDelayedCycle()>=android.permission.WAKE_LOCK
<com.android.contacts.ContactSaveService\:\ void\ joinContacts(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask\:\ void\ callOnCancelledForTest(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.sip.SipService\:\ android.net.sip.ISipSession\ createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>=android.permission.USE_SIP
<com.android.calendar.CalendarSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.READ_SYNC_SETTINGS
<android.media.AudioService\:\ void\ reloadAudioSettings()>=android.permission.WRITE_SETTINGS
<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl\:\ java.lang.Object\ next()>=android.permission.READ_CALENDAR
<android.accounts.AccountManager$1\:\ void\ startTask()>=android.permission.GET_ACCOUNTS
<com.android.soundrecorder.SoundRecorder\:\ void\ onStop()>=android.permission.WAKE_LOCK
<com.android.server.webkit.WebViewUpdateService$BinderService\:\ java.lang.String\ changeProviderAndSetting(java.lang.String)>=android.permission.WRITE_SECURE_SETTINGS
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask\:\ long\ queryForContactId(android.content.ContentResolver,long)>=android.permission.WRITE_CONTACTS
<android.filterpacks.imageproc.ToGrayFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.am.PendingIntentRecord\:\ void\ send(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>=android.permission.BROADCAST_STICKY, android.permission.READ_EXTERNAL_STORAGE, android.permission.START_ANY_ACTIVITY, android.permission.START_TASKS_FROM_RECENTS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ android.os.ParcelUuid[]\ getUuids()>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ dispose()>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService$MyPackageMonitor\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.gallery3d.util.ReverseGeocoder\:\ java.lang.String\ computeAddress(com.android.gallery3d.util.ReverseGeocoder$SetLatLong)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.LocalBluetoothProfile\:\ int\ getConnectionStatus(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.net.sip.ISipService$Stub\:\ boolean\ isRegistered(java.lang.String)>=android.permission.USE_SIP
<com.android.server.MountService\:\ int\ changeEncryptionPassword(int,java.lang.String)>=android.permission.CRYPT_KEEPER
<android.bluetooth.IBluetooth\:\ void\ setBluetoothTethering(boolean)>=android.permission.BLUETOOTH
<com.android.settings.DataUsageSummary$12\:\ void\ onWarningChanged()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.connectivity.Vpn$LegacyVpnRunner\:\ void\ run()>=android.permission.BROADCAST_STICKY
<android.filterpacks.base.GLTextureSource\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.soundrecorder.Recorder\:\ void\ startRecording(int,java.lang.String,android.content.Context)>=android.permission.RECORD_AUDIO
<com.android.launcher2.AppsCustomizePagedView\:\ void\ handleTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setBandMode(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.NetworkStateTracker\:\ boolean\ teardown()>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.KeyguardScreenCallback\:\ void\ keyguardDone(boolean)>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.app.CropImage\:\ void\ onResume()>=android.permission.RECORD_AUDIO
<com.android.server.MountService\:\ int\ unmountSecureContainer(java.lang.String,boolean)>=android.permission.ASEC_MOUNT_UNMOUNT
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetoothA2dp$Stub\:\ boolean\ setPriority(android.bluetooth.BluetoothDevice,int)>=android.permission.WRITE_SETTINGS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ access$700(com.android.internal.policy.impl.KeyguardViewMediator)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.DeviceListPreferenceFragment\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.BLUETOOTH
<com.android.gallery3d.gadget.MediaSetSource\:\ void\ reload()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.Phone\:\ void\ queryAvailableBandMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.list.PhoneFavoriteFragment\:\ void\ onStart()>=android.permission.WRITE_SETTINGS
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ showSearchPanel()>=android.permission.VIBRATE
<android.nfc.INfcTag$Stub\:\ int\ connect(int,int)>=android.permission.NFC
<com.android.mms.ui.SlideViewInterface\:\ void\ pauseVideo()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ getCdmaBroadcastConfig(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.music.AudioPreview$PreviewPlayer\:\ void\ setWakeMode(android.content.Context,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmDataConnection\:\ void\ tearDownData(java.lang.Object)>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ void\ sendUuidIntent(java.lang.String)>=android.permission.BLUETOOTH
<com.android.browser.BrowserActivity\:\ boolean\ onContextItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.server.location.GpsLocationProvider\:\ void\ requestSetID(int)>=android.permission.READ_PHONE_STATE
<com.android.settings.Settings$AccountSyncSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<android.net.sip.SipAudioCall$1\:\ void\ onCallEnded(android.net.sip.SipSession)>=android.permission.WAKE_LOCK
<android.media.IAudioService$Stub$Proxy\:\ int\ setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ isCaCertApproved(java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_USERS
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ stopVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<com.android.settings.wifi.WifiApEnabler\:\ void\ access$100(com.android.settings.wifi.WifiApEnabler,java.lang.Object[],java.lang.Object[],java.lang.Object[])>=android.permission.ACCESS_WIFI_STATE
<com.android.settings.users.UserDetailsSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.calendar.agenda.AgendaFragment\:\ void\ onResume()>=android.permission.WRITE_CALENDAR
<com.android.settings.DevelopmentSettings\:\ boolean\ isPermissionEnforced(android.content.Context,java.lang.String)>=android.permission.READ_EXTERNAL_STORAGE
<android.telephony.TelephonyManager\:\ void\ listen(android.telephony.PhoneStateListener,int)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.READ_PHONE_STATE
<android.media.AudioService$AudioHandler\:\ void\ persistVolume(android.media.AudioService$VolumeStreamState,int,int)>=android.permission.WRITE_SETTINGS
<com.android.inputmethod.latin.LatinIME\:\ void\ onStartInputViewInternal(android.view.inputmethod.EditorInfo,boolean)>=android.permission.WRITE_CONTACTS
<com.android.soundrecorder.SoundRecorder\:\ void\ onClick(android.view.View)>=android.permission.RECORD_AUDIO
<com.android.nfc.NfcService$NfcAdapterService\:\ void\ dispatch(android.nfc.Tag)>=android.permission.BLUETOOTH
<android.location.ILocationManager$Stub$Proxy\:\ java.lang.String\ getBestProvider(android.location.Criteria,boolean)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.server.location.LocationProviderInterface\:\ void\ enableLocationTracking(boolean)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.ToPackedGrayFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.calendar.month.SimpleWeeksAdapter\:\ void\ <init>=android.permission.READ_CALENDAR
<android.nfc.INfcTag$Stub$Proxy\:\ int[]\ getTechList(int)>=android.permission.NFC
<com.android.inputmethod.latin.ExpandableBinaryDictionary\:\ void\ loadDictionaryAsync()>=android.permission.WRITE_CONTACTS
<com.android.server.ConnectivityService\:\ void\ reportInetCondition(int,int)>=android.permission.ACCESS_NETWORK_STATE, android.permission.INTERNET
<android.net.wifi.IWifiManager$Stub$Proxy\:\ int\ addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<android.filterfw.core.AsyncRunner$AsyncRunnerTask\:\ android.filterfw.core.AsyncRunner$RunnerResult\ doInBackground(android.filterfw.core.SyncRunner[])>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ revertToNitzTimeZone()>=android.permission.SET_TIME_ZONE
<com.android.calendar.Utils\:\ int\ getWeekNumberFromTime(long,android.content.Context)>=android.permission.READ_CALENDAR
<com.android.mms.transaction.Transaction\:\ byte[]\ sendPdu(byte[])>=android.permission.CHANGE_NETWORK_STATE
<com.android.calendar.event.EditEventFragment\:\ boolean\ onActionBarItemSelected(int)>=android.permission.WRITE_CALENDAR
<com.android.calendar.AsyncQueryService\:\ void\ onQueryComplete(int,java.lang.Object,android.database.Cursor)>=android.permission.READ_CALENDAR
<android.filterpacks.numeric.SinWaveFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.phone.CallNotifier\:\ void\ onCdmaCallWaiting(android.os.AsyncResult)>=android.permission.BLUETOOTH
<com.android.common.contacts.DataUsageStatUpdater\:\ boolean\ updateWithAddress(java.util.Collection)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothEventLoop\:\ boolean\ onAgentOutOfBandDataAvailable(java.lang.String)>=android.permission.BLUETOOTH
<com.android.camera.VideoCamera\:\ void\ createCameraScreenNail(boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.net.NetworkPolicyManager\:\ void\ setNetworkPolicies(android.net.NetworkPolicy[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.PhoneInterfaceManager\:\ boolean\ isIdleForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.server.LocationManagerService\:\ android.location.Location\ _getLastKnownLocationLocked(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver$1\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.server.usb.UsbDeviceManager$UsbHandler\:\ void\ updateAdbNotification()>=android.permission.VIBRATE
<com.android.contacts.preference.DisplayOrderPreference\:\ boolean\ persistString(java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ getDataCallList(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ void\ loadMessageContent()>=android.permission.WRITE_SMS
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1\:\ boolean\ performAction(int,int,android.os.Bundle)>=android.permission.WRITE_CONTACTS
<android.bluetooth.BluetoothHeadset\:\ boolean\ isAudioConnected(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.mms.ui.MessageListItem\:\ void\ bind(com.android.mms.ui.MessageItem,boolean,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.ComposeMessageActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.list.ContactListAdapter\:\ android.net.Uri\ getContactUri(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.AppOpsService\:\ void\ setUserRestriction(int,boolean,android.os.IBinder,int,[java.lang.String)>=android.permission.INTERACT_ACROSS_USERS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_APP_OPS_RESTRICTIONS
<android.view.IWindowManager$Stub\:\ void\ reenableKeyguard(android.os.IBinder)>=android.permission.DISABLE_KEYGUARD
<com.android.calendar.month.SimpleDayPickerFragment\:\ boolean\ goTo(long,boolean,boolean,boolean)>=android.permission.WRITE_CALENDAR
<android.bluetooth.IBluetooth$Stub\:\ android.os.ParcelUuid[]\ getUuids()>=android.permission.BLUETOOTH
<com.android.internal.telephony.ISms$Stub\:\ boolean\ enableCellBroadcast(int)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.TintFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.telephony.SmsManager\:\ void\ sendDataMessage(java.lang.String,java.lang.String,short,[byte,android.app.PendingIntent,android.app.PendingIntent)>=android.permission.ACCESS_NETWORK_STATE, android.permission.READ_EXTERNAL_STORAGE, android.permission.SEND_SMS
<com.android.internal.telephony.IccSmsInterfaceManagerProxy\:\ boolean\ disableCellBroadcastRange(int,int)>=android.permission.WAKE_LOCK
<com.android.internal.content.PackageMonitor\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<android.media.AudioService$4\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager\:\ java.lang.String[]\ getTetherableWifiRegexs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.inputmethod.KeyboardLayoutPickerFragment\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.browser.BaseUi\:\ void\ <init>=android.permission.GET_ACCOUNTS
<com.android.gallery3d.ui.DetailsAddressResolver$AddressLookupJob\:\ android.location.Address\ run(com.android.gallery3d.util.ThreadPool$JobContext)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<android.view.IWindowManager$Stub$Proxy\:\ void\ exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>=android.permission.GET_ACCOUNTS
<com.android.settings.Settings$LocationSettingsActivity\:\ void\ onAccountsUpdated(android.accounts.Account[])>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.PosterizeFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.development.AccountsTester\:\ boolean\ onContextItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.sip.SipPhoneBase\:\ void\ setPropertiesByCarrier()>=android.permission.CHANGE_CONFIGURATION
<com.android.deskclock.SetAlarm\:\ void\ access$300(com.android.deskclock.SetAlarm)>=android.permission.WRITE_SETTINGS
<com.android.browser.Tab$2\:\ void\ doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.ResizeFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.location.ILocationManager$Stub$Proxy\:\ void\ clearTestProviderEnabled(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<com.android.server.WiredAccessoryObserver\:\ void\ update(java.lang.String,int)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.NotificationPlayer\:\ void\ releaseWakeLock()>=android.permission.WAKE_LOCK
<android.net.sip.SipManager\:\ android.net.sip.SipAudioCall\ makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall$Listener,int)>=android.permission.USE_SIP
<com.android.server.statusbar.StatusBarManagerService\:\ void\ setIconVisibility(java.lang.String,boolean)>=android.permission.STATUS_BAR
<android.net.IConnectivityManager$Stub\:\ boolean\ isTetheringSupported()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.ui.ComposeMessageActivity\:\ void\ addCallAndContactMenuItems(android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.dialpad.DialpadFragment\:\ void\ onClick(android.view.View)>=android.permission.READ_PHONE_STATE
<com.android.email.activity.MessageFileViewFragment\:\ void\ access$1900(com.android.email.activity.MessageViewFragmentBase,com.android.emailcommon.provider.EmailContent$Attachment)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.WifiService$NotificationEnabledSettingObserver\:\ void\ register()>=android.permission.WRITE_SETTINGS
<com.android.settings.deviceinfo.UsbSettings\:\ void\ onPause()>=android.permission.BLUETOOTH
<com.android.server.TelephonyRegistry\:\ void\ listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>=android.permission.ACCESS_COARSE_LOCATION, android.permission.READ_PHONE_STATE, android.permission.READ_PRECISE_PHONE_STATE, android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.gallery3d.app.PhotoDataAdapter$UpdateContent\:\ java.lang.Void\ call()>=android.permission.VIBRATE
<com.android.camera.EffectsRecorder\:\ void\ setPreviewSurfaceTexture(android.graphics.SurfaceTexture,int,int)>=android.permission.RECORD_AUDIO
<com.android.deskclock.SetAlarm$1\:\ void\ onClick(android.view.View)>=android.permission.WRITE_SETTINGS
<android.filterfw.core.Filter\:\ void\ transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.String[]\ setPackagesSuspended(android.content.ComponentName,[java.lang.String,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.PhoneApp\:\ void\ setBeginningCall(boolean)>=android.permission.BLUETOOTH
<com.android.settings.DisplaySettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<com.android.settings.RingerVolumePreference\:\ void\ onSampleStarting(android.preference.VolumePreference$SeekBarVolumizer)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue\:\ void\ releaseAllPointersOlderThan(com.android.inputmethod.keyboard.PointerTracker,long)>=android.permission.WRITE_CONTACTS
<android.filterpacks.imageproc.RotateFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.MasterClear\:\ void\ establishInitialState()>=android.permission.GET_ACCOUNTS
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ registerForNotification(int,java.lang.String,int,boolean)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_PRIVILEGED
<com.android.contacts.model.EntityDeltaList\:\ void\ buildSplitContactDiff(java.util.ArrayList,int,int,int[])>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ disconnectInputDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.media.projection.MediaProjectionManagerService$BinderService\:\ void\ stopActiveProjection()>=android.permission.MANAGE_MEDIA_PROJECTION
<com.android.gallery3d.ui.PhotoView\:\ void\ switchFocus()>=android.permission.VIBRATE
<com.android.mms.data.WorkingMessage\:\ void\ saveDraft(boolean)>=android.permission.WRITE_SMS
<android.media.effect.effects.RedEyeEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.settings.quicklaunch.QuickLaunchSettings\:\ void\ updateShortcut(char,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler\:\ com.android.contacts.model.EntityDeltaList\ getDeltaForAttachingPhotoToContact()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ void\ reRegisterNetwork(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.list.AccountFilterActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.am.ActivityManagerService\:\ void\ appNotRespondingViaProvider(android.os.IBinder)>=android.permission.REMOVE_TASKS
<android.content.SyncManager$SyncHandler\:\ void\ onBootCompleted()>=android.permission.GET_ACCOUNTS
<com.android.phone.CarrierConfigLoader\:\ android.os.PersistableBundle\ getConfigForSubId(int)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.exchange.ExchangeService$1\:\ void\ loadAttachmentStatus(long,long,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.DownloadTouchIcon\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.GET_ACCOUNTS
<com.android.email.activity.MessageCompose$LoadMessageTask\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.editor.TextFieldsEditorView$1\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.BluetoothHandsfree$16\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ getGsmBroadcastConfig(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.browser.ActivityController\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.server.WifiService\:\ boolean\ disableNetwork(int)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.ConnectivityService\:\ boolean\ requestBandwidthUpdate(android.net.Network)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.ConnectivityService\:\ void\ handleConnectivityChange(int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.CommandsInterface\:\ void\ getPreferredVoicePrivacy(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AlbumPage$2\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.exchange.adapter.AttachmentLoader\:\ void\ doStatusCallback(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.systemui.statusbar.policy.AutoRotateController\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.WRITE_SETTINGS
<android.os.IVibratorService\:\ void\ vibratePattern(long[],int,android.os.IBinder)>=android.permission.VIBRATE
<com.android.server.pm.PackageManagerService\:\ boolean\ setDefaultBrowserPackageName(java.lang.String,int)>=android.permission.GRANT_RUNTIME_PERMISSIONS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.REVOKE_RUNTIME_PERMISSIONS, android.permission.SET_PREFERRED_APPLICATIONS
<com.android.settings.Settings$ManageApplicationsActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.contacts.activities.DialtactsActivity\:\ void\ onNewIntent(android.content.Intent)>=android.permission.READ_PHONE_STATE
<com.android.settings.DataUsageSummary\:\ void\ updateBody()>=android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$22\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.PhotoView\:\ boolean\ switchWithCaptureAnimationLocked(int)>=android.permission.VIBRATE
<com.android.settings.Settings$DataUsageSummaryActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.server.accessibility.AccessibilityManagerService$1\:\ boolean\ onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ access$5600(com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.pm.PackageManagerService$7\:\ void\ run()>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ boolean\ isDiscovering()>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager\:\ void\ setFrequencyBand(int,boolean)>=android.permission.WRITE_SETTINGS
<com.google.common.io.MultiInputStream\:\ void\ <init>=android.permission.INTERNET
<com.android.phone.InCallScreen\:\ void\ onOpenCloseDialpad()>=android.permission.BLUETOOTH
<com.android.exchange.ExchangeService\:\ void\ shutdown()>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary\:\ void\ blockingReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.sip.SipPhone\:\ void\ getSmscAddress(android.os.Message)>=android.permission.WAKE_LOCK
<android.server.BluetoothInputProfileHandler\:\ boolean\ disconnectInputDeviceInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary\:\ void\ asyncReloadDictionaryIfRequired()>=android.permission.WRITE_CONTACTS
<com.android.settings.SettingsPreferenceFragment\:\ void\ onPause()>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ int\ getBluetoothState()>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.SimUnlockScreen\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ startAppFreezingScreen(android.os.IBinder,int)>=android.permission.MANAGE_APP_TOKENS
<com.android.internal.telephony.CommandsInterface\:\ void\ resetRadio(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ sendEmergencyCallbackModeChange()>=android.permission.BROADCAST_STICKY
<com.android.server.WifiService\:\ void\ setFrequencyBand(int,boolean)>=android.permission.WRITE_SETTINGS
<com.android.phone.BluetoothAtPhonebook$2\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.READ_CALL_LOG
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker\:\ int\ getTriState(android.content.Context)>=android.permission.BLUETOOTH
<com.android.internal.telephony.IccProvider\:\ android.net.Uri\ insert(android.net.Uri,android.content.ContentValues)>=android.permission.WRITE_CONTACTS
<android.filterpacks.text.ToUpperCase\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.server.input.InputManagerService\:\ int\ interceptMotionBeforeQueueingWhenScreenOff(int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ updateDataStallInfo()>=android.permission.WRITE_SETTINGS
<com.android.contacts.editor.AggregationSuggestionView\:\ boolean\ handleItemClickEvent()>=android.permission.READ_SYNC_SETTINGS
<com.android.music.IMediaPlaybackService\:\ void\ setShuffleMode(int)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ startFreezingDisplayLocked(boolean)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.CommandsInterface\:\ void\ queryCdmaRoamingPreference(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary\:\ void\ generateBinaryDictionary()>=android.permission.WRITE_CONTACTS
<android.server.BluetoothEventLoop\:\ void\ onHealthDeviceChannelChanged(java.lang.String,java.lang.String,boolean)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.ToRGBFilter\:\ void\ fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactBrowseListFragment\:\ void\ setSelectedContactUri(android.net.Uri,boolean,boolean,boolean,boolean)>=android.permission.READ_SYNC_SETTINGS
<android.media.IRingtonePlayer$Stub\:\ void\ stopAsync()>=android.permission.WAKE_LOCK
<com.android.mms.data.WorkingMessage$5\:\ void\ run()>=android.permission.WRITE_SMS
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ setBtClass(android.bluetooth.BluetoothClass)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothAdapter\:\ int\ getDiscoverableTimeout()>=android.permission.BLUETOOTH
<com.android.server.NetworkManagementService\:\ void\ setNetworkPermission(int,java.lang.String)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.ISms$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.speech.tts.TextToSpeech\:\ int\ setVoice(android.speech.tts.Voice)>=android.permission.BROADCAST_STICKY
<com.android.calendar.agenda.AgendaFragment$1\:\ void\ run()>=android.permission.READ_CALENDAR
<com.android.browser.TabControl\:\ android.webkit.WebView\ createNewWebView(boolean)>=android.permission.INTERNET
<com.android.music.MediaPlaybackService\:\ int\ removeTracksInternal(int,int)>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ void\ startScanning(boolean)>=android.permission.BLUETOOTH
<com.android.browser.WebStorageSizeManager\:\ void\ scheduleOutOfSpaceNotification()>=android.permission.VIBRATE
<com.google.android.mms.util.PduCache\:\ boolean\ put(android.net.Uri,com.google.android.mms.util.PduCacheEntry)>=android.permission.WRITE_SMS
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ disableSingleLocationUpdate()>=android.permission.WAKE_LOCK
<com.android.systemui.statusbar.CommandQueue$Callbacks\:\ void\ topAppWindowChanged(boolean)>=android.permission.VIBRATE
<android.filterpacks.imageproc.ToGrayFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.bluetooth.CachedBluetoothDeviceManager\:\ void\ onDeviceNameUpdated(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.bluetooth.LocalBluetoothProfile\:\ int\ getPreferred(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.PhoneSubInfoController\:\ java.lang.String\ getSubscriberIdForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.internal.widget.SlidingTab\:\ boolean\ onInterceptTouchEvent(android.view.MotionEvent)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.ContactsProvider2\:\ java.lang.String\ getType(android.net.Uri)>=android.permission.INTERACT_ACROSS_USERS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ long\ getMaximumTimeToLock(android.content.ComponentName,int,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.email.GroupMessagingListener\:\ void\ synchronizeMailboxFinished(long,long,int,int,java.util.ArrayList)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ removeRestrictBackgroundWhitelistedUid(int)>=android.permission.MANAGE_NETWORK_POLICY
<android.provider.Telephony$Sms$Draft\:\ android.net.Uri\ addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>=android.permission.RECEIVE_SMS
<com.android.settings.Settings$CryptKeeperSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.email.activity.MessageListFragment$4\:\ void\ onLoadFinished(android.content.Loader,android.database.Cursor)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.NavigationBarPhone\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<com.android.server.appwidget.AppWidgetServiceImpl\:\ void\ updateAppWidgetOptions(java.lang.String,int,android.os.Bundle)>=android.permission.BIND_APPWIDGET
<com.android.email.activity.ContactStatusLoader\:\ java.lang.Object\ loadInBackground()>=android.permission.READ_SYNC_SETTINGS
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ParceledListSlice\ queryIntentServices(android.content.Intent,java.lang.String,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.DevicePolicyManagerService\:\ void\ saveGlobalProxyLocked(java.lang.String,java.lang.String)>=android.permission.WRITE_SETTINGS
<android.hardware.ISerialManager\:\ android.os.ParcelFileDescriptor\ openSerialPort(java.lang.String)>=android.permission.SERIAL_PORT
<android.nfc.NfcActivityManager\:\ void\ setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage)>=android.permission.NFC
<com.android.gallery3d.app.PhotoDataAdapter\:\ void\ resume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.transaction.RetrieveTransaction\:\ byte[]\ sendPdu(byte[])>=android.permission.CHANGE_NETWORK_STATE
<android.bluetooth.IBluetooth\:\ int\ getDiscoverableTimeout()>=android.permission.BLUETOOTH
<android.webkit.HTML5VideoFullScreen\:\ void\ prepareDataAndDisplayMode(android.webkit.HTML5VideoViewProxy)>=android.permission.WAKE_LOCK
<com.android.calendar.DayFragment$1\:\ void\ run()>=android.permission.READ_CALENDAR
<android.filterpacks.imageproc.SaturateFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateMachine$ConnectModeState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.webkit.HTML5VideoFullScreen\:\ void\ start()>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactPickerFragment\:\ void\ onItemClick(int,long)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.WifiStateMachine$ConnectModeState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BROADCAST_STICKY
<android.server.BluetoothA2dpService\:\ void\ <init>=android.permission.BLUETOOTH
<android.os.storage.IMountService\:\ int[]\ getStorageUsers(java.lang.String)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<android.filterpacks.videosrc.MediaSource\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.CommandsInterface\:\ void\ deleteSmsOnSim(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ void\ dumpAclConnectedDevices(java.io.PrintWriter)>=android.permission.BLUETOOTH
<android.hardware.location.ActivityRecognitionHardware\:\ boolean\ unregisterSink(android.hardware.location.IActivityRecognitionHardwareSink)>=android.permission.LOCATION_HARDWARE
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ getCallWaiting(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.calendar.SearchActivity\:\ void\ deleteEvent(long,long,long)>=android.permission.READ_CALENDAR
<com.android.calendar.event.AttendeesView\:\ void\ addOneAttendee(com.android.calendar.CalendarEventModel$Attendee)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.SubscriptionController\:\ int\ clearSubInfo()>=android.permission.MODIFY_PHONE_STATE
<com.android.server.wm.WindowManagerService\:\ void\ stopAppFreezingScreen(android.os.IBinder,boolean)>=android.permission.MANAGE_APP_TOKENS
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState\:\ void\ access$4300(com.android.phone.BluetoothHandsfree$BluetoothPhoneState)>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.SIMRecords\:\ void\ onRefresh(boolean,int[])>=android.permission.WAKE_LOCK
<com.android.phone.AccelerometerListener\:\ void\ setOrientation(int)>=android.permission.BLUETOOTH
<android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl\:\ boolean\ isActiveNetworkMetered(android.net.ConnectivityManager)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.ToRGBFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser\:\ void\ changeParser(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations)>=android.permission.WRITE_CALENDAR
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ getPermissionPolicy(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ void\ access$800(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.IccCard\:\ void\ setIccFdnEnabled(boolean,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.exchange.ExchangeService$1$4\:\ void\ call(com.android.emailcommon.service.IEmailServiceCallback)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneApp\:\ void\ access$900(com.android.phone.PhoneApp,android.os.Message)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub$Proxy\:\ int\ addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)>=android.permission.BLUETOOTH
<android.media.Ringtone\:\ void\ setAudioAttributes(android.media.AudioAttributes)>=android.permission.WAKE_LOCK
<com.android.bluetooth.opp.BluetoothOppService\:\ void\ insertShare(android.database.Cursor,int)>=android.permission.BLUETOOTH
<com.android.deskclock.AlarmKlaxon$3\:\ boolean\ onError(android.media.MediaPlayer,int,int)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.PhoneFactory\:\ void\ makeDefaultPhone(android.content.Context)>=android.permission.WAKE_LOCK
<com.android.inputmethod.keyboard.KeyboardActionListener\:\ void\ onCodeInput(int,int,int)>=android.permission.WRITE_CONTACTS
<android.filterpacks.imageproc.RedEyeFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ setPreferredNetworkType(int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.util.DownloadManager$4\:\ void\ run()>=android.permission.WRITE_SMS
<com.android.systemui.media.RingtonePlayer$1\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.view.IWindowManager$Stub\:\ void\ thawRotation()>=android.permission.WRITE_SETTINGS
<com.android.settings.wifi.WifiStatusTest\:\ void\ access$200(com.android.settings.wifi.WifiStatusTest)>=android.permission.ACCESS_WIFI_STATE
<com.android.mms.ui.SlideEditorActivity\:\ void\ access$400(com.android.mms.ui.SlideEditorActivity)>=android.permission.WAKE_LOCK
<com.android.settings.Settings$DeviceInfoSettingsActivity\:\ void\ setListAdapter(android.widget.ListAdapter)>=android.permission.BLUETOOTH
<com.android.calendar.EventInfoFragment\:\ void\ showContactInfo(com.android.calendar.CalendarEventModel$Attendee,android.graphics.Rect)>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.keyboard.LatinKeyboardView\:\ boolean\ onLongPress(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>=android.permission.WRITE_CONTACTS
<com.android.browser.WebStorageSizeManager\:\ void\ onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)>=android.permission.VIBRATE
<com.android.internal.telephony.ISms$Stub\:\ void\ sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>=android.permission.SEND_SMS
<com.android.phone.BluetoothHandsfree$6\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<android.service.voice.VoiceInteractionService\:\ boolean\ stopService(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.internal.widget.RotarySelector\:\ void\ dispatchTriggerEvent(int)>=android.permission.VIBRATE
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ boolean\ terminateCall(android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN
<android.bluetooth.IBluetoothA2dp$Stub\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ handlePollStateResult(int,android.os.AsyncResult)>=android.permission.SET_TIME_ZONE
<com.android.server.NetworkManagementService\:\ java.lang.String[]\ getDnsForwarders()>=android.permission.CONNECTIVITY_INTERNAL
<com.android.browser.Controller\:\ void\ doUpdateVisitedHistory(com.android.browser.Tab,boolean)>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.SharpenFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ProviderStatusWatcher\:\ void\ access$600(com.android.contacts.list.ProviderStatusWatcher)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.BluetoothCallback\:\ void\ onDeviceAdded(com.android.settings.bluetooth.CachedBluetoothDevice)>=android.permission.BLUETOOTH
<com.android.phone.DefaultRingtonePreference\:\ void\ onSaveRingtone(android.net.Uri)>=android.permission.WRITE_SETTINGS
<com.android.settings.Settings$DataUsageSummaryActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<android.location.ILocationManager$Stub$Proxy\:\ android.location.Location\ getLastKnownLocation(java.lang.String)>=android.permission.ACCESS_COARSE_LOCATION
<android.service.dreams.DreamService\:\ boolean\ dispatchKeyShortcutEvent(android.view.KeyEvent)>=android.permission.BROADCAST_STICKY
<android.nfc.tech.NfcB\:\ byte[]\ transceive(byte[],boolean)>=android.permission.NFC
<com.android.internal.telephony.sip.SipPhone$SipConnection$1\:\ void\ onError(com.android.internal.telephony.Connection$DisconnectCause)>=android.permission.WAKE_LOCK
<com.android.browser.provider.BrowserProvider2\:\ int\ deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[],boolean)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<android.filterpacks.imageproc.CropRectFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.phone.BluetoothAtPhonebook$3\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<android.view.ContextThemeWrapper\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.phone.PhoneInterfaceManager\:\ int\ getLteOnCdmaModeForSubscriber(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ refreshSelectedContactUri()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.statusbar.IStatusBarService\:\ void\ expand()>=android.permission.EXPAND_STATUS_BAR
<android.net.IConnectivityManager\:\ android.net.LinkProperties\ getLinkProperties(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.ConnectivityService\:\ void\ sendProxyBroadcast(android.net.ProxyProperties)>=android.permission.BROADCAST_STICKY
<android.net.wifi.WifiStateMachine$VerifyingLinkState\:\ void\ enter()>=android.permission.BROADCAST_STICKY
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ void\ vibrate()>=android.permission.WAKE_LOCK
<com.android.settings.DataUsageSummary\:\ java.lang.String\ getActiveSubscriberId(android.content.Context)>=android.permission.READ_PHONE_STATE
<com.android.browser.NavScreen\:\ void\ close(int,boolean)>=android.permission.GET_ACCOUNTS
<com.android.server.ConnectivityService\:\ boolean\ requestRouteToHostAddress(int,byte[])>=android.permission.CHANGE_NETWORK_STATE
<com.android.server.MountService\:\ I[]\ getStorageUsers(java.lang.String)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.systemui.statusbar.policy.BrightnessController\:\ void\ onChanged(com.android.systemui.statusbar.policy.ToggleSlider,boolean,boolean,int)>=android.permission.WRITE_SETTINGS
<android.net.wifi.IWifiManager\:\ int\ getFrequencyBand()>=android.permission.ACCESS_WIFI_STATE
<com.android.contacts.list.LegacyPhoneNumberListAdapter\:\ void\ bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ int\ processCdmaWapPdu(byte[],int,java.lang.String)>=android.permission.WAKE_LOCK
<android.filterpacks.base.FrameStore\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.speech.SpeechRecognizer\:\ void\ destroy()>=android.permission.BROADCAST_STICKY
<com.android.exchange.EasSyncService\:\ com.android.exchange.adapter.ProvisionParser\ canProvision(com.android.exchange.EasSyncService)>=android.permission.WAKE_LOCK
<android.widget.QuickContactBadge\:\ void\ assignContactFromEmail(java.lang.String,boolean)>=android.permission.WRITE_CONTACTS
<com.android.browser.IntentHandler\:\ void\ onNewIntent(android.content.Intent)>=android.permission.GET_ACCOUNTS
<com.android.server.wm.WindowManagerService\:\ void\ addAppToken(int,android.view.IApplicationToken,int,int,int,boolean,boolean,int,int,boolean,boolean,android.graphics.Rect,android.content.res.Configuration,int,boolean,boolean,int,int)>=android.permission.MANAGE_APP_TOKENS
<com.android.mms.ui.MmsThumbnailPresenter\:\ void\ present(com.android.mms.util.ItemLoadedCallback)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.NotificationPlayer\:\ void\ stop()>=android.permission.WAKE_LOCK
<com.android.calendar.month.MonthByWeekFragment\:\ boolean\ goTo(long,boolean,boolean,boolean)>=android.permission.WRITE_CALENDAR
<com.android.music.AudioPreview\:\ void\ onDestroy()>=android.permission.WAKE_LOCK
<com.android.server.InputMethodManagerService\:\ com.android.internal.view.InputBindResult\ startInputOrWindowGainedFocus(int,com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.gallery3d.app.MovieActivity$1\:\ void\ access$1000(com.android.gallery3d.app.MoviePlayer)>=android.permission.WAKE_LOCK
<com.android.browser.PieControl\:\ void\ buildTabs()>=android.permission.GET_ACCOUNTS
<com.android.calendar.DayView\:\ void\ access$4600(com.android.calendar.DayView,android.view.MotionEvent)>=android.permission.READ_CALENDAR
<android.app.AliasActivity\:\ void\ removeStickyBroadcast(android.content.Intent)>=android.permission.BROADCAST_STICKY
<com.android.calendar.DayView\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.WRITE_CALENDAR
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker$1\:\ java.lang.Void\ doInBackground(java.lang.Void[])>=android.permission.ACCESS_WIFI_STATE
<com.android.exchange.ExchangeService$1\:\ void\ broadcastCallback(com.android.exchange.ExchangeService$ServiceCallbackWrapper)>=android.permission.READ_SYNC_SETTINGS
<android.telephony.TelephonyManager\:\ java.lang.String\ getLine1Number()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.TetherSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory\:\ android.widget.RemoteViews\ getViewAt(int)>=android.permission.READ_CALENDAR
<android.net.wifi.WifiStateMachine$InitialState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.test.SyncBaseInstrumentation\:\ void\ syncProvider(android.net.Uri,java.lang.String,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.settings.Settings$WifiP2pSettingsActivity\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.settings.Settings$ApplicationSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.ComposeMessageActivity$BackgroundQueryHandler\:\ void\ onDeleteComplete(int,java.lang.Object,int)>=android.permission.RECEIVE_SMS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ setNetworkTemplateEnabled(android.net.NetworkTemplate,boolean)>=android.permission.READ_PHONE_STATE
<com.android.contacts.interactions.ContactDeletionInteraction\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.CallNotifier$EmergencyTonePlayerVibrator\:\ void\ start()>=android.permission.VIBRATE
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ finalize()>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub$Proxy\:\ java.lang.String[]\ getTetherableWifiRegexs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.hid.HidService$BluetoothInputDeviceBinder\:\ int\ getPriority(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<com.android.mms.ui.MessageItem$PduLoadedCallback\:\ void\ onPduLoaded(com.android.mms.ui.MessageItem)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.BluetoothA2dp\:\ boolean\ suspendSink(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaSMSDispatcher\:\ void\ dispatchBroadcastMessage(android.telephony.SmsCbMessage)>=android.permission.WAKE_LOCK
<com.android.mms.ui.SlideViewInterface\:\ void\ startVideo()>=android.permission.WAKE_LOCK
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ setDeviceOwner(android.content.ComponentName,java.lang.String,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
<com.android.phone.InCallScreen\:\ boolean\ isBluetoothAvailable()>=android.permission.BLUETOOTH
<com.android.music.MediaPlaybackService$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<android.net.INetworkPolicyManager\:\ void\ setNetworkPolicies(android.net.NetworkPolicy[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ void\ crashApplication(com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo)>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.CallLogFragment\:\ void\ updateOnTransition(boolean)>=android.permission.WRITE_CALL_LOG
<android.server.BluetoothService\:\ android.os.ParcelUuid[]\ getUuids()>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.GestureRecognizer$Listener\:\ boolean\ onFling(float,float)>=android.permission.VIBRATE
<com.android.internal.telephony.gsm.GsmSMSDispatcher\:\ void\ acknowledgeLastIncomingSms(boolean,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiApConfigStore$InactiveState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHeadsetService\:\ void\ access$2000(com.android.phone.BluetoothHeadsetService,android.bluetooth.BluetoothDevice,int)>=android.permission.BLUETOOTH
<com.android.internal.app.IBatteryStats$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<android.provider.Settings$Secure\:\ boolean\ putString(android.content.ContentResolver,java.lang.String,java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ doKeyguardLocked()>=android.permission.WAKE_LOCK
<com.android.exchange.adapter.EmailSyncAdapter\:\ java.lang.String\ getSyncKey()>=android.permission.READ_SYNC_SETTINGS
<android.location.LocationManager\:\ void\ clearTestProviderLocation(java.lang.String)>=android.permission.ACCESS_MOCK_LOCATION
<android.content.SyncManager$8\:\ void\ onServiceChanged(android.content.SyncAdapterType,boolean)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.CrossProcessFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.email.Controller$Result\:\ void\ updateMailboxCallback(com.android.emailcommon.mail.MessagingException,long,long,int,int,java.util.ArrayList)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.wifi.WifiServiceImpl\:\ java.lang.String\ getWpsNfcConfigurationToken(int)>=android.permission.CONNECTIVITY_INTERNAL
<com.android.internal.telephony.RIL\:\ void\ setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.AlphaBlendFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.inputmethod.latin.LatinIME\:\ void\ handleCharacter(int,int,int,int)>=android.permission.WRITE_CONTACTS
<com.android.server.WifiService\:\ boolean\ enableNetwork(int,boolean)>=android.permission.CHANGE_WIFI_STATE
<com.android.exchange.EasSyncService\:\ void\ sync(com.android.exchange.adapter.AbstractSyncAdapter)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.net.NetworkStatsService\:\ android.net.NetworkStats\ getNetworkStatsUidDetail()>=android.permission.ACCESS_NETWORK_STATE
<android.net.wifi.WifiWatchdogStateMachine$DefaultState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.calendar.EventInfoFragment$1\:\ void\ run()>=android.permission.READ_CALENDAR
<com.android.server.net.NetworkPolicyManagerService\:\ void\ access$1000(com.android.server.net.NetworkPolicyManagerService,android.net.NetworkPolicy)>=android.permission.ACCESS_NETWORK_STATE
<com.android.phone.BluetoothHandsfree$21\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<android.app.ActivityManagerNative\:\ void\ unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>=android.permission.BROADCAST_STICKY
<com.android.server.content.ContentService\:\ android.content.SyncAdapterType[]\ getSyncAdapterTypesAsUser(int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.phone.PhoneUtils\:\ java.lang.Boolean\ restoreMuteState()>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.settings.quicklaunch.QuickLaunchSettings\:\ void\ onActivityResult(int,int,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.calendar.alerts.DismissAlarmsService\:\ void\ onHandleIntent(android.content.Intent)>=android.permission.WRITE_CALENDAR
<com.android.mms.ui.ComposeMessageActivity\:\ void\ editMessageItem(com.android.mms.ui.MessageItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.CommandsInterface\:\ void\ getPDPContextList(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.ContactsDictionary\:\ void\ loadDictionaryAsync()>=android.permission.WRITE_CONTACTS
<com.android.internal.policy.impl.PhoneWindowManager$1\:\ void\ onUEvent(android.os.UEventObserver$UEvent)>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.pbap.BluetoothPbapObexServer\:\ int\ pullVcardListing(byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.HeaderSet,javax.obex.Operation)>=android.permission.READ_CALL_LOG
<com.android.email.activity.ActionBarController$3\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.deviceinfo.Status\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<android.net.sip.ISipService$Stub$Proxy\:\ android.net.sip.SipProfile[]\ getListOfProfiles()>=android.permission.USE_SIP
<com.android.gallery3d.app.MoviePlayer$9\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ int\ setUsbTethering(boolean)>=android.permission.ACCESS_NETWORK_STATE, android.permission.TETHER_PRIVILEGED
<com.android.settings.Settings$ManageAccountsSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ com.android.mms.ui.MessageItem\ getMessageItem(java.lang.String,long,boolean)>=android.permission.READ_SYNC_SETTINGS
<android.filterfw.core.SyncRunner\:\ void\ processFilterNode(android.filterfw.core.Filter)>=android.permission.RECORD_AUDIO
<com.android.email.service.EasTestAuthenticatorService$EasAuthenticator\:\ android.os.Bundle\ addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.systemui.statusbar.BaseStatusBar$4$1\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.VIBRATE
<com.android.settings.Settings$RunningServicesActivity\:\ void\ updateHeaderList(java.util.List)>=android.permission.GET_ACCOUNTS
<android.filterpacks.imageproc.ToRGBAFilter\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.music.AudioPreview\:\ void\ onPrepared(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<com.android.mms.data.WorkingMessage$1\:\ android.util.Pair\ doInBackground(java.lang.Void[])>=android.permission.RECEIVE_SMS
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$SpeakerphoneListener\:\ void\ onClick(android.view.View)>=android.permission.MODIFY_AUDIO_SETTINGS
<com.android.quicksearchbox.util.JavaNetHttpHelper\:\ java.lang.String\ get(com.android.quicksearchbox.util.HttpHelper$GetRequest)>=android.permission.INTERNET
<com.android.internal.telephony.CommandsInterface\:\ void\ reportSmsMemoryStatus(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.MovieActivity$1\:\ void\ playVideo()>=android.permission.WAKE_LOCK
<com.android.providers.calendar.CalendarAlarmManager\:\ void\ rescheduleMissedAlarms(android.content.ContentResolver)>=android.permission.READ_CALENDAR
<com.android.exchange.adapter.Search\:\ int\ searchMessages(android.content.Context,long,com.android.emailcommon.service.SearchParams,long)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.contacts.VoicemailStatusTable\:\ android.net.Uri\ insert(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues)>=com.android.voicemail.permission.ADD_VOICEMAIL
<android.nfc.tech.NdefFormatable\:\ void\ formatReadOnly(android.nfc.NdefMessage)>=android.permission.NFC
<com.android.contacts.list.ContactEntryListAdapter\:\ void\ bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.ConfirmAddDetailActivity\:\ void\ access$1200(com.android.contacts.activities.ConfirmAddDetailActivity)>=android.permission.WRITE_CONTACTS
<com.android.settings.bluetooth.BluetoothEventManager$Handler\:\ void\ onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ boolean\ setBondState(java.lang.String,int,int)>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.SharpenFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ onDialerClose(boolean)>=android.permission.BLUETOOTH
<com.android.mms.ui.SlideshowEditActivity\:\ void\ initSlideList()>=android.permission.WRITE_SMS
<com.android.server.pm.PackageManagerService\:\ void\ clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>=android.permission.CLEAR_APP_USER_DATA, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.nfc.NfcService\:\ void\ onLlcpLinkDeactivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>=android.permission.BLUETOOTH
<com.android.internal.telephony.IccFileHandler\:\ void\ loadEFTransparent(int,android.os.Message)>=android.permission.WAKE_LOCK
<android.media.IAudioService$Stub$Proxy\:\ void\ startBluetoothSco(android.os.IBinder)>=android.permission.BLUETOOTH
<android.bluetooth.le.BluetoothLeAdvertiser\:\ void\ stopAdvertising(android.bluetooth.le.AdvertiseCallback)>=android.permission.BLUETOOTH_ADMIN
<android.net.wifi.WifiStateMachine$DriverStartingState\:\ boolean\ processMessage(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.contacts.list.ContactPickerFragment\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ int\ setStorageEncryption(android.content.ComponentName,boolean)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.email.activity.setup.MailboxSettings$2\:\ void\ onCancelled(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.app.StateManager\:\ void\ finishState(com.android.gallery3d.app.ActivityState)>=android.permission.ACCESS_NETWORK_STATE
<android.media.IAudioService\:\ void\ dispatchMediaKeyEventUnderWakelock(android.view.KeyEvent)>=android.permission.WAKE_LOCK
<com.android.common.widget.GroupingListAdapter\:\ void\ onContentChanged()>=android.permission.READ_CALL_LOG
<android.app.WallpaperManager\:\ int\ setStream(java.io.InputStream,android.graphics.Rect,boolean)>=android.permission.SET_WALLPAPER
<com.android.server.ConnectivityService\:\ void\ access$1600(com.android.server.ConnectivityService,int,int)>=android.permission.BROADCAST_STICKY
<android.filterpacks.base.FrameFetch\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.DocumentaryFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.bluetooth.opp.BluetoothOppTransferActivity\:\ android.view.View\ createView()>=android.permission.BLUETOOTH
<com.android.settings.BrightnessPreference\:\ void\ onProgressChanged(android.widget.SeekBar,int,boolean)>=android.permission.WRITE_SETTINGS
<android.test.IsolatedContext$MockAccountManager\:\ android.accounts.AccountManagerFuture\ getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<android.net.ConnectivityManager\:\ int\ getLastTetherError(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.performance.ThroughputFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.phone.EmergencyCallbackModeService\:\ void\ showNotification(long)>=android.permission.VIBRATE
<com.android.internal.telephony.CommandsInterface\:\ void\ queryFacilityLock(java.lang.String,java.lang.String,int,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.MmsServiceBroker$BinderService\:\ void\ downloadMessage(int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>=android.permission.RECEIVE_MMS
<android.app.IWallpaperManager\:\ android.os.ParcelFileDescriptor\ setWallpaper(java.lang.String)>=android.permission.SET_WALLPAPER
<android.mtp.MtpDatabase\:\ void\ endSendObject(java.lang.String,int,int,boolean)>=android.permission.WRITE_SETTINGS
<android.net.wifi.WifiStateMachine$SoftApStoppingState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.server.NetworkManagementService\:\ void\ createVirtualNetwork(int,boolean,boolean)>=android.permission.CONNECTIVITY_INTERNAL
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisabledState\:\ void\ exit()>=android.permission.BLUETOOTH
<android.nfc.INfcAdapter$Stub\:\ boolean\ enableNdefPush()>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ java.lang.String\ getProfileOwnerName(int)>=android.permission.MANAGE_USERS
<com.android.deskclock.AlarmClock\:\ boolean\ onContextItemSelected(android.view.MenuItem)>=android.permission.WRITE_SETTINGS
<com.android.contacts.editor.EventFieldEditorView\:\ void\ onOptionalFieldVisibilityChange()>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.DataController$DataControllerHandler\:\ void\ doUpdateVisitedHistory(java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.KeyguardStatusViewManager\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.gallery3d.gadget.WidgetService$PhotoRVFactory\:\ android.widget.RemoteViews\ getViewAt(int)>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.pbapclient.PbapClientService$BluetoothPbapClientBinder\:\ boolean\ connect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH_ADMIN
<android.media.effect.effects.CropEffect\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ getLastDataCallFailCause(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ launchHomeFromHotKey()>=android.permission.WAKE_LOCK
<com.android.gallery3d.ui.CropView\:\ boolean\ removeComponent(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.providers.contacts.GlobalSearchSupport\:\ android.database.Cursor\ handleSearchSuggestionsQuery(android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String[],java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.PeopleActivity\:\ void\ configureContactListFragment()>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.cat.CommandParamsFactory\:\ boolean\ processLaunchBrowser(com.android.internal.telephony.cat.CommandDetails,java.util.List)>=android.permission.WAKE_LOCK
<com.android.server.pm.PackageManagerService\:\ boolean\ setApplicationHiddenSettingAsUser(java.lang.String,boolean,int)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.MANAGE_USERS
<com.android.server.input.InputManagerService$Callbacks\:\ int\ interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>=android.permission.WAKE_LOCK
<android.provider.ContactsContract$SyncState\:\ byte[]\ get(android.content.ContentProviderClient,android.accounts.Account)>=android.permission.WRITE_CONTACTS
<com.android.exchange.adapter.Search$SearchParser\:\ boolean\ parseStore()>=android.permission.READ_CALENDAR
<android.bluetooth.BluetoothHeadset\:\ java.util.List\ getDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.deskclock.SetAlarm\:\ long\ saveAlarm(com.android.deskclock.Alarm)>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetooth$Stub\:\ boolean\ disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>=android.permission.BLUETOOTH
<com.android.inputmethod.keyboard.LatinKeyboardView\:\ boolean\ processMotionEvent(android.view.MotionEvent)>=android.permission.WRITE_CONTACTS
<com.android.internal.app.AlertActivity\:\ void\ onPause()>=android.permission.WAKE_LOCK
<com.android.email.RefreshManager$SendPendingMessagesForAllAccountsImpl\:\ void\ onPostExecute(java.lang.Long[])>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ void\ <init>=android.permission.WRITE_SETTINGS
<com.android.mms.transaction.SmsReceiverService\:\ void\ handleSendMessage()>=android.permission.RECEIVE_SMS
<com.android.bluetooth.pbap.BluetoothPbapService$2\:\ boolean\ isConnected(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.mms.ui.ComposeMessageActivity$RecipientsMenuClickListener\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.MobileNetworkSettings$MyHandler\:\ void\ handleGetPreferredNetworkTypeResponse(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewManager\:\ void\ onScreenTurnedOn(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>=android.permission.GET_ACCOUNTS
<com.android.phone.PhoneUtils\:\ void\ turnOnNoiseSuppression(android.content.Context,boolean,boolean)>=android.permission.MODIFY_AUDIO_SETTINGS
<android.content.ISyncAdapter\:\ void\ initialize(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<android.bluetooth.IBluetooth$Stub$Proxy\:\ boolean\ connectPanDevice(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.exchange.EasOutboxService\:\ void\ sendMeetingResponse(com.android.exchange.MeetingResponseRequest)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ enableLocationUpdates()>=android.permission.WAKE_LOCK
<android.app.Service\:\ void\ stopSelf(int)>=android.permission.BROADCAST_STICKY
<com.android.bluetooth.hfpclient.HeadsetClientService$BluetoothHeadsetClientBinder\:\ int\ getConnectionState(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.net.wifi.IWifiManager$Stub$Proxy\:\ java.util.List\ getScanResults()>=android.permission.ACCESS_WIFI_STATE
<com.android.server.usb.UsbService\:\ android.hardware.usb.UsbPort[]\ getPorts()>=android.permission.MANAGE_USB
<com.android.inputmethod.latin.WhitelistDictionary\:\ void\ getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>=android.permission.WRITE_CONTACTS
<com.android.inputmethod.latin.spellcheck.DictionaryPool\:\ java.lang.Object\ take()>=android.permission.WRITE_CONTACTS
<com.android.contacts.ContactsListActivity\:\ android.net.Uri\ getUriToQuery()>=android.permission.WRITE_CONTACTS
<com.android.camera.Camera\:\ void\ onSharedPreferenceChanged()>=android.permission.ACCESS_COARSE_LOCATION
<com.android.settings.ActivityPicker\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.gallery3d.app.StateManager\:\ boolean\ itemSelected(android.view.MenuItem)>=android.permission.ACCESS_NETWORK_STATE
<android.content.IContentService$Stub$Proxy\:\ boolean\ isSyncPending(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_STATS
<com.android.settings.wifi.AdvancedWifiSettings\:\ void\ refreshWifiInfo()>=android.permission.ACCESS_NETWORK_STATE
<com.android.emailcommon.service.IEmailServiceCallback\:\ void\ syncMailboxStatus(long,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.ui.ComposeMessageActivity\:\ void\ onStop()>=android.permission.RECEIVE_SMS
<com.android.internal.telephony.sip.SipPhone$SipConnection\:\ void\ separate()>=android.permission.WAKE_LOCK
<com.android.settings.bluetooth.RequestPermissionHelperActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<com.android.email.activity.MessageOrderManager\:\ void\ onCursorOpenDone(android.database.Cursor)>=android.permission.ACCESS_NETWORK_STATE
<com.android.contacts.detail.ContactDetailLayoutController\:\ void\ setContactData(com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.MountService\:\ void\ setField(java.lang.String,java.lang.String)>=android.permission.STORAGE_INTERNAL
<com.android.internal.widget.multiwaveview.GlowPadView$OnTriggerListener\:\ void\ onGrabbedStateChange(android.view.View,int)>=android.permission.BLUETOOTH
<com.android.server.audio.AudioService\:\ int\ setFocusPropertiesForPolicy(int,android.media.audiopolicy.IAudioPolicyCallback)>=android.permission.MODIFY_AUDIO_ROUTING
<com.android.contacts.datepicker.DatePickerDialog$OnDateSetListener\:\ void\ onDateSet(com.android.contacts.datepicker.DatePicker,int,int,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.nfc.snep.SnepServer$ConnectionThread\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.phone.BluetoothHandsfree$22\:\ android.bluetooth.AtCommandResult\ handleSetCommand(java.lang.Object[])>=android.permission.BLUETOOTH
<com.android.contacts.calllog.CallLogQueryHandler\:\ void\ fetchVoicemailStatus()>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.providers.contacts.VoicemailStatusTable\:\ int\ update(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.android.server.DeviceIdleController$BinderService\:\ void\ addPowerSaveTempWhitelistApp(java.lang.String,long,int,java.lang.String)>=android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST
<com.android.phone.BluetoothHandsfree\:\ boolean\ stopVoiceRecognition()>=android.permission.BLUETOOTH
<com.android.settings.DateTimeSettingsSetupWizard\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.WRITE_SETTINGS
<com.android.music.MusicPicker\:\ void\ stopMediaPlayer()>=android.permission.WAKE_LOCK
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatedState\:\ boolean\ processMessage(android.os.Message)>=android.permission.BROADCAST_STICKY
<com.android.quicksearchbox.google.GoogleSuggestClient\:\ com.android.quicksearchbox.SourceResult\ getSuggestions(java.lang.String,int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.DockService\:\ void\ processMessage(android.os.Message)>=android.permission.BLUETOOTH
<com.android.deskclock.AlarmAlertFullScreen$2\:\ void\ onClick(android.view.View)>=android.permission.WRITE_SETTINGS
<com.android.email.RefreshManager$SendPendingMessagesForAllAccountsImpl\:\ void\ performAction(long)>=android.permission.READ_SYNC_SETTINGS
<android.server.BluetoothService\:\ void\ removeServiceRecord(int)>=android.permission.BLUETOOTH
<com.android.systemui.power.PowerUI\:\ void\ onConfigurationChanged(android.content.res.Configuration)>=android.permission.VIBRATE
<com.android.contacts.quickcontact.QuickContactActivity$5\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy\:\ boolean\ updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.server.BackupManagerService$BackupRestoreTask\:\ void\ execute()>=android.permission.WAKE_LOCK
<com.android.server.BatteryService\:\ void\ update()>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.GsmServiceStateTracker\:\ boolean\ processPendingRadioPowerOffAfterDataOff()>=android.permission.WAKE_LOCK
<com.android.settings.RadioInfo$20\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.contacts.list.JoinContactListFragment\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.telephony.RIL$RILReceiver\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy\:\ void\ expand()>=android.permission.EXPAND_STATUS_BAR
<com.android.internal.policy.impl.KeyguardUpdateMonitor\:\ void\ registerSimStateCallback(com.android.internal.policy.impl.KeyguardUpdateMonitor$SimStateCallback)>=android.permission.WAKE_LOCK
<com.android.server.wifi.WifiServiceImpl\:\ int\ addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.LocationManagerService$Receiver\:\ boolean\ callProviderEnabledLocked(java.lang.String,boolean)>=android.permission.WAKE_LOCK
<com.android.exchange.EasOutboxService\:\ java.lang.String\ acknowledgeProvisionImpl(com.android.exchange.EasSyncService,java.lang.String,java.lang.String,boolean)>=android.permission.WAKE_LOCK
<android.net.VpnService\:\ void\ setWallpaper(java.io.InputStream)>=android.permission.SET_WALLPAPER
<com.android.internal.telephony.RIL\:\ void\ setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>=android.permission.WAKE_LOCK
<android.net.IConnectivityManager$Stub\:\ void\ setGlobalProxy(android.net.ProxyProperties)>=android.permission.WRITE_SETTINGS
<com.android.music.IMediaPlaybackService\:\ void\ play()>=android.permission.WAKE_LOCK
<android.media.AudioService$ScoClient\:\ void\ requestScoState(int)>=android.permission.BLUETOOTH
<com.android.providers.contacts.LegacyApiSupport\:\ java.lang.String\ getContactMethodType(android.net.Uri)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.InCallScreen\:\ void\ onHoldClick()>=android.permission.BLUETOOTH
<android.server.BluetoothService\:\ boolean\ enableNoAutoConnect()>=android.permission.BLUETOOTH_ADMIN
<com.android.nfc.handover.HandoverManager$1\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.VIBRATE
<com.android.emailcommon.service.IEmailServiceCallback$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.vcard.ExportProcessor\:\ void\ doFinishNotification(java.lang.String,java.lang.String)>=android.permission.VIBRATE
<com.android.settings.wifi.WifiEnabler\:\ void\ onCheckedChanged(android.widget.CompoundButton,boolean)>=android.permission.ACCESS_WIFI_STATE
<com.android.email.mail.store.ExchangeStore\:\ android.os.Bundle\ checkSettings()>=android.permission.READ_CALENDAR
<android.bluetooth.IBluetooth$Stub\:\ boolean\ enable()>=android.permission.BLUETOOTH_ADMIN
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ fillData()>=android.permission.BLUETOOTH
<android.os.IHardwareService\:\ void\ setFlashlightEnabled(boolean)>=android.permission.FLASHLIGHT
<android.content.ContentService\:\ void\ setMasterSyncAutomatically(boolean)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.server.location.GpsLocationProvider\:\ void\ setEngineCapabilities(int)>=android.permission.WAKE_LOCK
<android.nfc.INfcTag$Stub\:\ void\ resetTimeouts()>=android.permission.NFC
<com.android.calendar.month.MonthByWeekFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_CALENDAR
<com.android.server.NsdService\:\ void\ access$700(com.android.server.NsdService,boolean)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ restoreSavedNetworkSelection(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothAtPhonebook$2\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.internal.telephony.UiccPhoneBookController\:\ boolean\ updateAdnRecordsInEfBySearchForSubscriber(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.PhoneSubInfoProxy\:\ java.lang.String\ getDeviceSvn()>=android.permission.READ_PHONE_STATE
<com.android.server.am.BatteryStatsService\:\ void\ noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)>=android.permission.UPDATE_DEVICE_STATS
<com.android.phone.BluetoothHandsfree$25\:\ android.bluetooth.AtCommandResult\ handleActionCommand()>=android.permission.BLUETOOTH
<android.telephony.SmsManager\:\ java.util.ArrayList\ divideMessage(java.lang.String)>=android.permission.ACCESS_NETWORK_STATE
<android.bluetooth.BluetoothPbap\:\ int\ getState()>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setKeepUninstalledPackages(android.content.ComponentName,java.util.List)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.mms.ui.ComposeMessageActivityNoLockScreen\:\ int\ access$3100(com.android.mms.ui.ComposeMessageActivity,long)>=android.permission.WRITE_SMS
<com.android.server.ConnectivityService\:\ int\ getNetworkPreference()>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.base.GLTextureTarget\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth$Stub\:\ int\ getDiscoverableTimeout()>=android.permission.BLUETOOTH
<com.android.internal.widget.multiwaveview.MultiWaveView\:\ void\ switchToState(int,float,float)>=android.permission.VIBRATE
<com.android.settings.inputmethod.InputMethodAndLanguageSettings\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.WRITE_SETTINGS
<android.bluetooth.IBluetoothHeadset\:\ boolean\ connectHeadsetInternal(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub\:\ int\ updateKeyphraseSoundModel(android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel)>=android.permission.MANAGE_VOICE_KEYPHRASES
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ onDisconnect(com.android.internal.telephony.Connection$DisconnectCause)>=android.permission.WAKE_LOCK
<com.android.contacts.calllog.ContactInfoHelper\:\ com.android.contacts.calllog.ContactInfo\ lookupNumber(java.lang.String,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<android.nfc.tech.NfcV\:\ void\ reconnect()>=android.permission.NFC
<android.webkit.HTML5Audio\:\ boolean\ onError(android.media.MediaPlayer,int,int)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityManagerService\:\ boolean\ killPackageProcessesLocked(java.lang.String,int,int,boolean,boolean,boolean,boolean,java.lang.String)>=android.permission.WAKE_LOCK
<com.android.settings.deviceinfo.Memory\:\ boolean\ onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.server.usb.UsbService\:\ void\ grantDevicePermission(android.hardware.usb.UsbDevice,int)>=android.permission.MANAGE_USB
<com.android.server.pm.PackageManagerService\:\ void\ updatePermissionFlags(java.lang.String,java.lang.String,int,int,int)>=android.permission.GRANT_RUNTIME_PERMISSIONS, android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.REVOKE_RUNTIME_PERMISSIONS
<com.android.internal.telephony.PhoneFactory\:\ com.android.internal.telephony.Phone\ getGsmPhone()>=android.permission.CHANGE_CONFIGURATION
<android.filterpacks.imageproc.FillLightFilter\:\ void\ performTearDown(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.media.AudioService\:\ void\ resetBluetoothSco()>=android.permission.BLUETOOTH
<com.android.server.NsdService$NsdStateMachine\:\ void\ <init>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.RotateFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.server.wifi.WifiServiceImpl\:\ android.net.wifi.WifiInfo\ getConnectionInfo()>=android.permission.ACCESS_WIFI_STATE
<android.service.dreams.IDreamManager$Stub\:\ void\ setDreamComponent(android.content.ComponentName)>=android.permission.WRITE_SETTINGS
<com.android.phone.CallerInfoCache$CacheAsyncTask\:\ void\ onCancelled(java.lang.Void)>=android.permission.WAKE_LOCK
<com.android.mms.util.DraftCache$1\:\ void\ run()>=android.permission.READ_SMS
<com.android.nfc.NfcService$EnableDisableTask\:\ void\ executeEeWipe()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.RotateFilter\:\ void\ performClose(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.calendar.DayView\:\ void\ doScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>=android.permission.READ_CALENDAR
<com.android.browser.AddBookmarkPage\:\ void\ setAccount(java.lang.String,java.lang.String)>=android.permission.GET_ACCOUNTS
<com.android.internal.policy.impl.LockPatternKeyguardView$3\:\ void\ takeEmergencyCallAction()>=android.permission.WAKE_LOCK
<android.server.BluetoothService\:\ java.lang.String[]\ getKnownDevices()>=android.permission.BLUETOOTH
<com.android.calendar.month.SimpleDayPickerFragment$2\:\ void\ onChanged()>=android.permission.WRITE_CALENDAR
<android.view.IApplicationToken\:\ void\ windowsVisible()>=android.permission.WAKE_LOCK
<android.filterpacks.videosrc.MediaSource\:\ void\ process(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.app.ActivityManagerNative\:\ void\ startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>=android.permission.WRITE_SETTINGS
<com.android.server.AppOpsService\:\ void\ resetAllModes(int,java.lang.String)>=android.permission.UPDATE_APP_OPS_STATS
<com.android.server.pm.PackageManagerService\:\ int\ deletePackageX(java.lang.String,boolean,boolean,int)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ prepareAppTransition(int,boolean)>=android.permission.MANAGE_APP_TOKENS
<android.accounts.AccountAuthenticatorActivity\:\ void\ setWallpaper(android.graphics.Bitmap)>=android.permission.SET_WALLPAPER
<com.android.gallery3d.ui.PhotoView\:\ void\ access$3300(com.android.gallery3d.ui.PhotoView,int,int)>=android.permission.VIBRATE
<com.android.server.content.ContentService\:\ android.content.SyncStatusInfo\ getSyncStatus(android.accounts.Account,java.lang.String,android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL, android.permission.READ_SYNC_STATS
<com.android.camera.EffectsRecorder$4\:\ void\ onRunnerDone(int)>=android.permission.RECORD_AUDIO
<android.provider.Telephony$Sms$Inbox\:\ android.net.Uri\ addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean)>=android.permission.RECEIVE_SMS
<com.android.settings.bluetooth.LocalBluetoothAdapter\:\ void\ setDiscoverableTimeout(int)>=android.permission.BLUETOOTH
<com.android.mms.transaction.MessagingNotification\:\ void\ blockingUpdateAllNotifications(android.content.Context)>=android.permission.READ_SMS
<com.android.server.display.DisplayManagerService$BinderService\:\ void\ resumeWifiDisplay()>=android.permission.CONFIGURE_WIFI_DISPLAY
<android.nfc.tech.IsoDep\:\ byte[]\ transceive(byte[])>=android.permission.NFC
<com.android.phone.PhoneUtils\:\ boolean\ handleHeadsetHook(com.android.internal.telephony.Phone,android.view.KeyEvent)>=android.permission.BLUETOOTH
<com.android.server.ConnectivityService\:\ android.net.NetworkInfo\ getActiveNetworkInfo()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.bluetooth.HidProfile\:\ int\ getConnectionStatus(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.quicksearchbox.util.HttpHelper\:\ java.lang.String\ post(java.lang.String,java.util.Map,java.lang.String)>=android.permission.INTERNET
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setSmscAddress(java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<android.nfc.tech.NfcF\:\ byte[]\ transceive(byte[])>=android.permission.NFC
<com.android.contacts.util.AccountSelectionUtil\:\ android.app.Dialog\ getSelectAccountDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.UndoBarView\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread\:\ void\ loadThumbnails(boolean)>=android.permission.WRITE_CONTACTS
<com.android.contacts.ContactSaveService\:\ void\ setSuperPrimary(android.content.Intent)>=android.permission.READ_SYNC_SETTINGS
<android.location.ILocationManager$Stub$Proxy\:\ void\ addProximityAlert(double,double,float,long,android.app.PendingIntent)>=android.permission.ACCESS_COARSE_LOCATION
<com.android.internal.telephony.SubscriptionController\:\ android.telephony.SubscriptionInfo\ getActiveSubscriptionInfo(int,java.lang.String)>=android.permission.READ_PRIVILEGED_PHONE_STATE
<android.webkit.WebViewCore\:\ void\ <init>=android.permission.INTERNET
<android.filterpacks.imageproc.ImageSlicer\:\ void\ close(android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ onStart()>=android.permission.WRITE_SETTINGS
<com.android.systemui.statusbar.BaseStatusBar\:\ void\ updateNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>=android.permission.VIBRATE
<com.android.exchange.EasOutboxService\:\ android.os.Bundle\ validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)>=android.permission.WAKE_LOCK
<com.android.settings.SubSettings\:\ void\ onResume()>=android.permission.BLUETOOTH
<com.android.mms.data.Conversation\:\ void\ startDeleteAll(com.android.mms.data.Conversation$ConversationQueryHandler,int,boolean)>=android.permission.WRITE_SMS
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.READ_SYNC_SETTINGS
<android.net.wifi.IWifiManager$Stub$Proxy\:\ void\ addToBlacklist(java.lang.String)>=android.permission.CHANGE_WIFI_STATE
<com.android.internal.policy.impl.PhoneWindowManager\:\ void\ init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs,android.os.LocalPowerManager)>=android.permission.WAKE_LOCK
<com.android.server.hdmi.HdmiControlService$BinderService\:\ void\ sendVendorCommand(int,int,[byte,boolean)>=android.permission.HDMI_CEC
<com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper\:\ void\ authenticate(android.os.IBinder,long,int,android.hardware.fingerprint.IFingerprintServiceReceiver,int,java.lang.String)>=android.permission.MANAGE_FINGERPRINT, android.permission.USE_FINGERPRINT
<android.media.effect.effects.SaturateEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.email.Controller\:\ com.android.emailcommon.service.IEmailService\ getServiceForMessage(long)>=android.permission.READ_PHONE_STATE
<com.android.email.service.PolicyService$1\:\ void\ setAccountPolicy(long,com.android.emailcommon.provider.Policy,java.lang.String)>=android.permission.VIBRATE
<android.net.ConnectivityManager\:\ void\ registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)>=android.permission.ACCESS_NETWORK_STATE, android.permission.ACCESS_WIFI_STATE, android.permission.CHANGE_NETWORK_STATE
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ removeService(int,int,int,android.os.ParcelUuid)>=android.permission.BLUETOOTH
<com.android.internal.policy.impl.AccountUnlockScreen$2\:\ void\ run(android.accounts.AccountManagerFuture)>=android.permission.WAKE_LOCK
<com.android.systemui.recent.RecentsPanelView\:\ void\ handleSwipe(android.view.View)>=android.permission.VIBRATE
<com.android.server.am.BatteryStatsService\:\ void\ noteWakeUp(java.lang.String,int)>=android.permission.UPDATE_DEVICE_STATS
<com.android.mms.ui.ConversationList$ModeCallback\:\ boolean\ onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>=android.permission.READ_SMS
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager\:\ void\ sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>=android.permission.SEND_SMS
<android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree\:\ void\ enter()>=android.permission.BLUETOOTH
<com.android.inputmethod.keyboard.PointerTracker\:\ void\ onUpEvent(int,int,long)>=android.permission.WRITE_CONTACTS
<com.android.mms.ui.AudioAttachmentView\:\ void\ onPlaybackError()>=android.permission.WAKE_LOCK
<android.content.IContentService\:\ void\ setMasterSyncAutomatically(boolean)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ getSmscAddress(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.deskclock.AlarmKlaxon\:\ void\ onDestroy()>=android.permission.WAKE_LOCK
<com.android.server.power.PowerManagerService$BinderService\:\ void\ userActivity(long,int,int)>=android.permission.DEVICE_POWER
<com.android.browser.DataController$DataControllerHandler\:\ void\ doQueryBookmarkStatus(java.lang.String,java.lang.Object)>=android.permission.GET_ACCOUNTS
<android.accounts.AccountManager$7\:\ android.accounts.AccountManagerFuture\ start()>=android.permission.GET_ACCOUNTS
<android.view.IWindowManager$Stub\:\ void\ setNewConfiguration(android.content.res.Configuration)>=android.permission.WAKE_LOCK
<com.android.email.activity.setup.AccountSetupBasics\:\ void\ onCreate(android.os.Bundle)>=android.permission.READ_PHONE_STATE
<com.android.phone.BluetoothHandsfree$16\:\ android.bluetooth.AtCommandResult\ handleBasicCommand(java.lang.String)>=android.permission.BLUETOOTH
<com.android.gallery3d.ui.PhotoView$ScreenNailPicture\:\ void\ draw(com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)>=android.permission.RECORD_AUDIO
<com.android.email.EmailConnectivityManager\:\ int\ getActiveNetworkType(android.content.Context)>=android.permission.ACCESS_NETWORK_STATE
<android.media.effect.SingleFilterEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer\:\ void\ start()>=android.permission.GET_ACCOUNTS
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1\:\ void\ onTextInput(java.lang.CharSequence)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.RIL\:\ void\ getMute(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.email.provider.DBHelper$DatabaseHelper\:\ void\ onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>=android.permission.GET_ACCOUNTS
<com.android.contacts.activities.GroupBrowserActivity\:\ void\ onStart()>=android.permission.READ_SYNC_SETTINGS
<com.android.wallpaper.nexus.NexusRS\:\ void\ start()>=android.permission.ACCESS_COARSE_LOCATION
<android.test.IsolatedContext$MockAccountManager\:\ android.accounts.AccountManagerFuture\ getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.calendar.AllInOneActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.WRITE_CALENDAR
<com.android.server.backup.Trampoline\:\ void\ fullBackup(android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,boolean,boolean,boolean,[java.lang.String)>=android.permission.BACKUP
<android.view.IWindowManager\:\ void\ prepareAppTransition(int,boolean)>=android.permission.WAKE_LOCK
<com.android.server.TelephonyRegistry\:\ void\ notifyCellLocation(android.os.Bundle)>=android.permission.MODIFY_PHONE_STATE
<com.android.phone.CallNotifier\:\ void\ showMissedCallNotification(com.android.internal.telephony.Connection,long)>=android.permission.WRITE_CONTACTS
<com.android.music.IMediaPlaybackService$Stub\:\ void\ setRepeatMode(int)>=android.permission.WAKE_LOCK
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ onAttach(android.app.Activity)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.PhoneInterfaceManager\:\ boolean\ enableDataConnectivity()>=android.permission.MODIFY_PHONE_STATE
<com.android.music.MediaPlaybackService$ServiceStub\:\ void\ openFile(java.lang.String)>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ handleTimeout(int)>=android.permission.WAKE_LOCK
<com.android.server.ConnectivityService\:\ com.android.internal.net.LegacyVpnInfo\ getLegacyVpnInfo(int)>=android.permission.CONTROL_VPN, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.contacts.list.DefaultContactListAdapter\:\ void\ bindView(android.view.View,int,android.database.Cursor,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.OtaUtils\:\ void\ setSpeaker(boolean)>=android.permission.BLUETOOTH
<com.android.internal.telephony.sip.SipPhone\:\ void\ exitEmergencyCallbackMode()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.PhotoDataAdapter\:\ void\ fireDataChange()>=android.permission.VIBRATE
<com.android.contacts.editor.StructuredNameEditorView\:\ void\ onLabelRebuilt()>=android.permission.READ_SYNC_SETTINGS
<android.content.ContentService\:\ void\ addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>=android.permission.WRITE_SYNC_SETTINGS
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<com.android.email.mail.store.ExchangeStore\:\ android.os.Bundle\ autoDiscover(android.content.Context,java.lang.String,java.lang.String)>=android.permission.READ_PHONE_STATE
<android.app.INotificationManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.VIBRATE
<android.net.wifi.WifiStateMachine$DriverLoadedState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.browser.SuggestionsAdapter$SlowFilterTask\:\ java.util.List\ doInBackground(java.lang.CharSequence[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.commands.am.Am\:\ void\ run(java.lang.String[])>=android.permission.WAKE_LOCK
<com.android.camera.EffectsRecorder$EffectsListener\:\ void\ onEffectsUpdate(int,int)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ startDtmf(char)>=android.permission.WAKE_LOCK
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker\:\ void\ setCurrentState(android.content.Context,int)>=android.permission.READ_SYNC_SETTINGS
<com.android.contacts.activities.PeopleActivity\:\ void\ showEmptyStateForTab(int)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.UrlInputView\:\ boolean\ onKeyDown(int,android.view.KeyEvent)>=android.permission.GET_ACCOUNTS
<com.android.contacts.model.AccountTypeManagerImpl$FindInvitablesTask\:\ java.util.Map\ doInBackground(java.lang.Void[])>=android.permission.WRITE_CONTACTS
<com.android.calendar.month.MonthByWeekFragment\:\ android.net.Uri\ access$500(com.android.calendar.month.MonthByWeekFragment)>=android.permission.WRITE_CALENDAR
<android.telephony.gsm.SmsManager\:\ void\ sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>=android.permission.READ_EXTERNAL_STORAGE, android.permission.SEND_SMS
<com.android.server.WifiService$NotificationEnabledSettingObserver\:\ void\ onChange(boolean)>=android.permission.VIBRATE
<com.android.contacts.group.GroupEditorFragment\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.pm.PackageManagerService\:\ android.content.pm.PackageParser$Package\ scanPackageLI(android.content.pm.PackageParser$Package,int,int,long)>=android.permission.WAKE_LOCK
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState\:\ void\ chooseUpstreamType(boolean)>=android.permission.BLUETOOTH
<com.android.contacts.socialwidget.SocialWidgetProvider\:\ void\ bindRemoteViews(android.content.Context,int,android.appwidget.AppWidgetManager,com.android.contacts.ContactLoader$Result)>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.GLRootView\:\ void\ setContentPane(com.android.gallery3d.ui.GLView)>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.sip.SipCallBase\:\ void\ hangupIfAlive()>=android.permission.WAKE_LOCK
<com.android.gallery3d.app.AbstractGalleryActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.RECORD_AUDIO
<com.android.gallery3d.app.AlbumSetPage\:\ void\ onResume()>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.ConnectivityService\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ queryAvailableBandMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.RIL\:\ void\ getNetworkSelectionMode(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.AppOpsService\:\ int\ checkAudioOperation(int,int,int,java.lang.String)>=android.permission.UPDATE_APP_OPS_STATS
<com.android.bluetooth.hfp.HeadsetService$BluetoothHeadsetBinder\:\ boolean\ isAudioOn()>=android.permission.BLUETOOTH
<com.android.internal.telephony.CommandsInterface\:\ void\ changeIccPin2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.RuimFileHandler\:\ void\ updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.systemui.recent.RecentsHorizontalScrollView$3\:\ void\ onClick(android.view.View)>=android.permission.REORDER_TASKS
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory\:\ android.net.Uri\ access$200(com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory)>=android.permission.WRITE_CALENDAR
<com.android.contacts.GroupMetaDataLoader\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.SuggestionsAdapter$SlowFilterTask\:\ java.lang.Object\ doInBackground(java.lang.Object[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.RIL\:\ void\ conference(android.os.Message)>=android.permission.WAKE_LOCK
<com.android.server.AlarmManagerService$AlarmThread\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.calendar.agenda.AgendaWindowAdapter$1\:\ void\ run()>=android.permission.READ_CALENDAR
<com.android.contacts.ContactsActivity\:\ void\ onBackPressed()>=android.permission.READ_SYNC_SETTINGS
<com.android.inputmethod.keyboard.LatinKeyboardView\:\ boolean\ openMoreKeysPanel(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>=android.permission.WRITE_CONTACTS
<com.android.settings.tts.TextToSpeechSettings\:\ void\ onActivityCreated(android.os.Bundle)>=android.permission.READ_SYNC_SETTINGS
<android.service.dreams.DreamService\:\ void\ unbindService(android.content.ServiceConnection)>=android.permission.BROADCAST_STICKY
<com.android.exchange.EasAccountService\:\ android.os.Bundle\ validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)>=android.permission.WAKE_LOCK
<com.android.contacts.group.GroupEditorFragment\:\ void\ selectAccountAndCreateGroup()>=android.permission.READ_SYNC_SETTINGS
<com.android.email.MessagingController\:\ void\ synchronizeMailbox(com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox,com.android.email.MessagingListener)>=android.permission.READ_SYNC_SETTINGS
<com.android.providers.contacts.DbModifierWithNotification\:\ int\ delete(java.lang.String,java.lang.String,java.lang.String[])>=com.android.voicemail.permission.ADD_VOICEMAIL
<com.google.common.io.MultiInputStream\:\ int\ read(byte[],int,int)>=android.permission.INTERNET
<com.android.mms.transaction.MessagingNotification\:\ void\ updateDownloadFailedNotification(android.content.Context)>=android.permission.READ_SMS
<com.android.contacts.vcard.NotificationImportExportListener\:\ void\ onImportCanceled(com.android.contacts.vcard.ImportRequest,int)>=android.permission.VIBRATE
<com.android.server.am.ActivityManagerService\:\ java.util.List\ getTasks(int,int,android.app.IThumbnailReceiver)>=android.permission.GET_TASKS
<android.net.wifi.WifiManager\:\ java.util.List\ getConfiguredNetworks()>=android.permission.ACCESS_WIFI_STATE
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$3\:\ void\ onPostExecute(java.lang.Exception)>=android.permission.WAKE_LOCK
<com.android.videoeditor.VideoEditorActivity$23\:\ void\ onStart()>=android.permission.WAKE_LOCK
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ setPasskey(android.bluetooth.BluetoothDevice,boolean,int,[byte)>=android.permission.BLUETOOTH
<android.media.AsyncPlayer\:\ void\ access$500(android.media.AsyncPlayer)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiWatchdogStateMachine\:\ void\ registerForWatchdogToggle()>=android.permission.WRITE_SETTINGS
<com.android.server.DevicePolicyManagerService$MyPackageMonitor\:\ void\ onPackageRemoved(java.lang.String,int)>=android.permission.WRITE_SETTINGS
<com.android.phone.BluetoothHeadsetService$6\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.exchange.EasAccountService\:\ com.android.exchange.adapter.ProvisionParser\ canProvision(com.android.exchange.EasSyncService)>=android.permission.WAKE_LOCK
<com.android.quicksearchbox.util.JavaNetHttpHelper\:\ java.net.HttpURLConnection\ createConnection(java.lang.String,java.util.Map)>=android.permission.INTERNET
<com.android.server.sip.SipService\:\ boolean\ isOpened(java.lang.String)>=android.permission.USE_SIP
<com.android.internal.policy.impl.GlobalActions$Action\:\ boolean\ onLongPress()>=android.permission.WAKE_LOCK
<android.net.ConnectivityManager\:\ android.net.NetworkInfo\ getNetworkInfo(android.net.Network)>=android.permission.ACCESS_NETWORK_STATE
<android.app.ActivityManagerNative\:\ void\ updateConfiguration(android.content.res.Configuration)>=android.permission.WAKE_LOCK
<com.android.exchange.ExchangeService\:\ void\ reloadFolderListFailed(long)>=android.permission.READ_SYNC_SETTINGS
<android.app.IWallpaperManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.SET_WALLPAPER_HINTS
<com.android.server.content.ContentService\:\ java.util.List\ getPeriodicSyncs(android.accounts.Account,java.lang.String,android.content.ComponentName)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler\:\ boolean\ onPreferenceClick(android.preference.Preference)>=android.permission.BLUETOOTH
<com.android.bluetooth.gatt.GattService$BluetoothGattBinder\:\ void\ serverDisconnect(int,java.lang.String)>=android.permission.BLUETOOTH
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.server.VibratorService\:\ void\ doVibratorOff()>=android.permission.VIBRATE
<com.android.mms.transaction.TransactionService\:\ void\ access$200(com.android.mms.transaction.TransactionService)>=android.permission.BLUETOOTH
<com.android.music.MusicPicker\:\ void\ onCompletion(android.media.MediaPlayer)>=android.permission.WAKE_LOCK
<android.net.wifi.IWifiManager\:\ void\ reconnect()>=android.permission.CHANGE_WIFI_STATE
<android.bluetooth.IBluetoothA2dp\:\ java.util.List\ getConnectedDevices()>=android.permission.BLUETOOTH
<android.app.IAlarmManager$Stub\:\ void\ setTimeZone(java.lang.String)>=android.permission.SET_TIME_ZONE
<android.net.wifi.p2p.WifiP2pService\:\ void\ enforceAccessPermission()>=android.permission.ACCESS_WIFI_STATE
<com.android.email.activity.MessageViewFragment\:\ void\ addAttachment(com.android.emailcommon.provider.EmailContent$Attachment)>=android.permission.ACCESS_NETWORK_STATE
<com.android.deskclock.AlarmAlertFullScreen\:\ void\ access$000(com.android.deskclock.AlarmAlertFullScreen)>=android.permission.WRITE_SETTINGS
<com.android.server.tv.TvInputManagerService$BinderService\:\ android.media.tv.ITvInputHardware\ acquireTvInputHardware(int,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,int)>=android.permission.TV_INPUT_HARDWARE
<com.android.mms.ui.ComposeMessageActivity\:\ void\ startMsgListQuery(int)>=android.permission.WRITE_SMS
<android.app.backup.IBackupManager$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.app.ContextImpl$ApplicationContentResolver\:\ int\ getIsSyncable(android.accounts.Account,java.lang.String)>=android.permission.READ_SYNC_SETTINGS
<com.android.camera.ui.IndicatorControlBarContainer\:\ void\ onSettingChanged()>=android.permission.RECORD_AUDIO
<com.android.internal.policy.impl.KeyguardViewMediator\:\ void\ <init>=android.permission.WAKE_LOCK
<com.android.internal.telephony.cdma.CdmaCallTracker\:\ void\ flashAndSetGenericTrue()>=android.permission.WAKE_LOCK
<com.android.inputmethod.latin.UserDictionary\:\ void\ getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>=android.permission.WRITE_CONTACTS
<com.android.internal.widget.multiwaveview.GlowPadView\:\ void\ setGrabbedState(int)>=android.permission.BLUETOOTH
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser\:\ boolean\ parse()>=android.permission.READ_SYNC_SETTINGS
<android.media.effect.effects.AutoFixEffect\:\ void\ apply(int,int,int,int)>=android.permission.RECORD_AUDIO
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser\:\ boolean\ parse()>=android.permission.READ_SYNC_SETTINGS
<com.android.phone.BluetoothHandsfree$IncomingScoAcceptThread\:\ void\ run()>=android.permission.BLUETOOTH
<com.android.server.WifiService\:\ void\ resetNotification()>=android.permission.VIBRATE
<com.android.contacts.group.GroupBrowseListFragment$3\:\ void\ onLoadFinished(android.content.Loader,java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.MountService\:\ void\ unmountVolume(java.lang.String,boolean,boolean)>=android.permission.MOUNT_UNMOUNT_FILESYSTEMS
<com.android.server.BackupManagerService\:\ void\ setAutoRestore(boolean)>=android.permission.WRITE_SETTINGS
<com.android.email.activity.UIControllerSearchTwoPane\:\ boolean\ onOptionsItemSelected(android.view.MenuItem)>=android.permission.READ_SYNC_SETTINGS
<android.app.TabActivity\:\ void\ clearWallpaper()>=android.permission.SET_WALLPAPER
<com.android.server.TelephonyRegistry\:\ void\ notifyDataConnectionFailedForSubscriber(int,java.lang.String,java.lang.String)>=android.permission.MODIFY_PHONE_STATE
<com.android.nfc.handover.BluetoothHeadsetHandover\:\ void\ nextStepDisconnect()>=android.permission.BLUETOOTH
<com.android.inputmethod.keyboard.KeyboardSwitcher\:\ void\ startLongPressTimer(int)>=android.permission.WRITE_CONTACTS
<android.filterpacks.imageproc.BrightnessFilter\:\ void\ performOpen(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.internal.telephony.gsm.GsmCallTracker\:\ com.android.internal.telephony.Connection\ dial(java.lang.String,int,com.android.internal.telephony.UUSInfo)>=android.permission.WAKE_LOCK
<com.android.nfc.P2pEventManager\:\ void\ onP2pSendComplete()>=android.permission.VIBRATE
<com.android.settings.SoundSettings\:\ boolean\ onPreferenceChange(android.preference.Preference,java.lang.Object)>=android.permission.WRITE_SETTINGS
<com.android.browser.ActivityController\:\ boolean\ onContextItemSelected(android.view.MenuItem)>=android.permission.GET_ACCOUNTS
<com.android.vcard.VCardComposer\:\ boolean\ init(java.lang.String,java.lang.String[])>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CDMALTEPhone\:\ void\ notifyDataConnection(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.phone.BluetoothHandsfree\:\ void\ expectVoiceRecognition()>=android.permission.WAKE_LOCK
<com.android.server.sip.SipService$IntervalMeasurementProcess\:\ void\ stop()>=android.permission.WAKE_LOCK
<com.android.settings.inputmethod.InputMethodAndLanguageSettings\:\ void\ onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>=android.permission.BLUETOOTH
<android.bluetooth.BluetoothA2dp\:\ boolean\ isA2dpPlaying(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.os.IVibratorService\:\ void\ vibrate(long,android.os.IBinder)>=android.permission.WAKE_LOCK
<com.android.mms.transaction.SmsReceiver\:\ void\ onReceiveWithPrivilege(android.content.Context,android.content.Intent,boolean)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ boolean\ disconnect(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<android.media.IMediaScannerListener$Stub\:\ void\ scanCompleted(java.lang.String,android.net.Uri)>=android.permission.WRITE_EXTERNAL_STORAGE
<android.net.IConnectivityManager$Stub\:\ java.lang.String[]\ getTetherableBluetoothRegexs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.mms.data.WorkingMessage\:\ java.lang.String\ access$000(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation)>=android.permission.RECEIVE_SMS
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy\:\ void\ collapse()>=android.permission.EXPAND_STATUS_BAR
<com.android.server.WallpaperManagerService\:\ android.os.ParcelFileDescriptor\ setWallpaper(java.lang.String)>=android.permission.SET_WALLPAPER
<com.android.server.AlarmManagerService\:\ void\ setTimeZone(java.lang.String)>=android.permission.SET_TIME_ZONE
<com.android.musicfx.ActivityMusic\:\ void\ onCreate(android.os.Bundle)>=android.permission.WAKE_LOCK
<com.android.server.am.ActivityStack\:\ void\ moveHomeToFrontLocked()>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHeadsetService$2\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.BLUETOOTH
<com.android.email.EmailConnectivityManager\:\ int\ getActiveNetworkType(android.net.ConnectivityManager)>=android.permission.ACCESS_NETWORK_STATE
<com.android.server.am.ActivityManagerService\:\ void\ trimApplications()>=android.permission.WAKE_LOCK
<android.media.IMediaScannerListener$Stub\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WRITE_EXTERNAL_STORAGE
<com.android.server.WifiService\:\ void\ addToBlacklist(java.lang.String)>=android.permission.CHANGE_WIFI_STATE
<com.android.server.pm.PackageManagerService\:\ android.content.pm.ResolveInfo\ resolveService(android.content.Intent,java.lang.String,int,int)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.commands.bmgr.Bmgr\:\ void\ doTransport()>=android.permission.WRITE_SETTINGS
<com.android.systemui.media.NotificationPlayer\:\ void\ access$500(com.android.systemui.media.NotificationPlayer,com.android.systemui.media.NotificationPlayer$Command)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetooth\:\ java.util.List\ getPanDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager\:\ int[]\ getAdnRecordsSize(int)>=android.permission.WAKE_LOCK
<com.android.email.Controller$ServiceCallbackWrapper\:\ void\ call(com.android.emailcommon.service.IEmailServiceCallback)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.bluetooth.CachedBluetoothDevice\:\ void\ connectAutoConnectableProfiles()>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.AutoFixFilter\:\ void\ open(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<android.filterpacks.imageproc.ImageEncoder\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.net.sip.ISipService$Stub\:\ void\ open(android.net.sip.SipProfile)>=android.permission.USE_SIP
<android.server.BluetoothInputProfileHandler\:\ boolean\ connectInputDevice(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothDeviceProfileState)>=android.permission.BLUETOOTH
<com.android.mms.data.Conversation\:\ void\ access$700(android.content.Context)>=android.permission.READ_SMS
<com.android.providers.downloads.DownloadThread\:\ void\ checkConnectivity()>=android.permission.ACCESS_NETWORK_STATE
<android.provider.Settings$System\:\ boolean\ putFloat(android.content.ContentResolver,java.lang.String,float)>=android.permission.WRITE_SETTINGS
<android.filterpacks.imageproc.FisheyeFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.mms.data.Contact$ContactsCache\:\ com.android.mms.data.Contact\ getContactInfoForPhoneNumber(java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.internal.telephony.cdma.CDMAPhone\:\ void\ notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.Phone$DataState)>=android.permission.BROADCAST_STICKY
<android.net.INetworkPolicyManager$Stub$Proxy\:\ void\ setNetworkPolicies(android.net.NetworkPolicy[])>=android.permission.ACCESS_NETWORK_STATE
<android.view.IWindowManager\:\ void\ clearForcedDisplaySize()>=android.permission.WAKE_LOCK
<com.android.settings.Settings$TextToSpeechSettingsActivity\:\ void\ onBuildHeaders(java.util.List)>=android.permission.GET_ACCOUNTS
<com.android.contacts.ContactLoader$Result\:\ boolean\ isWritableContact(android.content.Context)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.pm.PackageManagerService\:\ void\ deleteApplicationCacheFilesAsUser(java.lang.String,int,android.content.pm.IPackageDataObserver)>=android.permission.DELETE_CACHE_FILES, android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.email.activity.MessageViewFragmentBase$ReloadMessageTask\:\ void\ onSuccess(java.lang.Object)>=android.permission.ACCESS_NETWORK_STATE
<android.filterpacks.imageproc.NegativeFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<com.android.nfc.P2pEventListener\:\ void\ onP2pReceiveComplete(boolean)>=android.permission.VIBRATE
<com.android.nfc.NfcService\:\ void\ onSeApduReceived(byte[])>=android.permission.BLUETOOTH
<com.android.phone.CallCard\:\ void\ updateAlreadyDisconnected(com.android.internal.telephony.CallManager)>=android.permission.WRITE_CONTACTS
<android.net.IConnectivityManager\:\ boolean\ requestRouteToHost(int,int)>=android.permission.CHANGE_NETWORK_STATE
<com.android.launcher2.AppsCustomizePagedView\:\ boolean\ onInterceptTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<android.provider.BrowserContract$Settings\:\ boolean\ isSyncEnabled(android.content.Context)>=com.android.browser.permission.READ_HISTORY_BOOKMARKS
<android.filterpacks.imageproc.CropFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.mms.transaction.NotificationPlayer$CmdThread\:\ void\ run()>=android.permission.WAKE_LOCK
<com.android.internal.telephony.sip.SipCommandInterface\:\ void\ setCurrentPreferredNetworkType()>=android.permission.WAKE_LOCK
<com.android.deskclock.SetAlarm$6\:\ void\ onClick(android.content.DialogInterface,int)>=android.permission.WRITE_SETTINGS
<com.android.settings.bluetooth.LocalBluetoothProfile\:\ void\ setPreferred(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH
<com.android.server.VibratorService\:\ void\ startVibrationLocked(com.android.server.VibratorService$Vibration)>=android.permission.WAKE_LOCK
<com.android.mms.ui.AudioAttachmentView\:\ void\ cleanupMediaPlayer()>=android.permission.WAKE_LOCK
<com.android.settings.Settings$KeyboardLayoutPickerActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<com.android.providers.contacts.ContactsProvider2\:\ int\ updateData(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState\:\ void\ exit()>=android.permission.BLUETOOTH
<com.android.internal.telephony.CallerInfo\:\ java.lang.String\ getCallerId(android.content.Context,java.lang.String)>=android.permission.WRITE_CONTACTS
<com.android.mms.data.Conversation\:\ void\ startQueryHaveLockedMessages(android.content.AsyncQueryHandler,java.util.Collection,int)>=android.permission.READ_SMS
<android.view.IWindowManager$Stub$Proxy\:\ void\ dismissKeyguard()>=android.permission.DISABLE_KEYGUARD
<com.android.mms.ui.ConversationList\:\ void\ onNewIntent(android.content.Intent)>=android.permission.READ_SMS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ boolean\ getCrossProfileCallerIdDisabled(android.content.ComponentName)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.email.activity.UIControllerBase\:\ void\ onMessageSetUnread()>=android.permission.ACCESS_NETWORK_STATE
<android.accounts.IAccountManager\:\ void\ clearPassword(android.accounts.Account)>=android.permission.MANAGE_ACCOUNTS
<com.android.contacts.list.LegacyContactListAdapter\:\ android.view.View\ getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>=android.permission.READ_SYNC_SETTINGS
<com.android.mms.transaction.MessagingNotification\:\ com.android.mms.transaction.MessagingNotification$MmsSmsDeliveryInfo\ getSmsNewDeliveryInfo(android.content.Context)>=android.permission.RECEIVE_SMS
<com.android.systemui.statusbar.phone.PhoneStatusBar\:\ boolean\ interceptTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.inputmethod.latin.UserBinaryDictionary\:\ void\ syncReloadDictionaryInternal()>=android.permission.WRITE_CONTACTS
<com.android.email.MessagingListener\:\ void\ checkMailStarted(android.content.Context,long,long)>=android.permission.READ_SYNC_SETTINGS
<java.net.URL\:\ java.lang.Object\ getContent()>=android.permission.INTERNET
<com.android.providers.contacts.LegacyApiSupport\:\ int\ updateSettings(android.content.ContentValues)>=android.permission.READ_SYNC_SETTINGS
<com.android.internal.policy.impl.AccountUnlockScreen\:\ void\ onClick(android.view.View)>=android.permission.WAKE_LOCK
<com.android.providers.contacts.ContactsProvider2\:\ android.database.Cursor\ query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.Controller\:\ com.android.browser.Tab\ openTab(com.android.browser.IntentHandler$UrlData)>=android.permission.GET_ACCOUNTS
<android.content.MutableContextWrapper\:\ void\ removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>=android.permission.BROADCAST_STICKY
<com.android.mms.ui.ConversationList$ThreadListQueryHandler\:\ void\ onDeleteComplete(int,java.lang.Object,int)>=android.permission.RECEIVE_SMS
<com.android.phone.BluetoothHeadsetService$6\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.BLUETOOTH
<com.android.phone.InCallScreen\:\ void\ internalSilenceRinger()>=android.permission.BLUETOOTH
<com.android.settings.Settings$DeviceAdminSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<android.bluetooth.IBluetooth\:\ boolean\ setPairingConfirmation(java.lang.String,boolean)>=android.permission.BLUETOOTH_ADMIN
<com.android.internal.policy.impl.KeyguardViewCallback\:\ void\ pokeWakelock(int)>=android.permission.WAKE_LOCK
<android.bluetooth.IBluetoothHeadset$Stub$Proxy\:\ boolean\ stopVoiceRecognition(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.settings.DataUsageSummary$8\:\ void\ onItemClick(android.widget.AdapterView,android.view.View,int,long)>=android.permission.ACCESS_NETWORK_STATE
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ setPairingConfirmation(android.bluetooth.BluetoothDevice,boolean)>=android.permission.BLUETOOTH_PRIVILEGED
<com.android.settings.DataUsageSummary\:\ void\ updateTabs()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.RIL\:\ void\ writeSmsToRuim(int,java.lang.String,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.mms.ui.ComposeMessageActivity\:\ void\ onMaxPendingMessagesReached()>=android.permission.RECEIVE_SMS
<com.android.phone.BluetoothHandsfree\:\ void\ <init>=android.permission.BLUETOOTH
<com.android.internal.telephony.cdma.CdmaConnection\:\ void\ processNextPostDialChar()>=android.permission.WAKE_LOCK
<com.android.email.NotificationController\:\ android.app.Notification\ createNewMessageNotification(long,long,android.database.Cursor,long,int,int)>=android.permission.READ_SYNC_SETTINGS
<android.accounts.AccountManager\:\ android.accounts.AccountManagerFuture\ confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.CommandsInterface\:\ void\ setPreferredVoicePrivacy(boolean,android.os.Message)>=android.permission.WAKE_LOCK
<com.android.settings.DevelopmentSettings\:\ void\ writeShowAllANRsOptions()>=android.permission.WRITE_SETTINGS
<com.android.browser.AutologinBar\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.sip.SipPhone\:\ void\ notifyDataConnection(java.lang.String)>=android.permission.BROADCAST_STICKY
<com.android.internal.telephony.sip.SipPhone$SipConnection$1\:\ void\ onCallEnded(android.net.sip.SipAudioCall)>=android.permission.WAKE_LOCK
<com.android.email.activity.setup.DebugFragment\:\ void\ clearWebViewCache()>=android.permission.INTERNET
<android.app.IActivityManager\:\ boolean\ bindBackupAgent(android.content.pm.ApplicationInfo,int)>=android.permission.WAKE_LOCK
<com.android.phone.BluetoothHeadsetService$6\:\ java.util.List\ getDevicesMatchingConnectionStates(int[])>=android.permission.BLUETOOTH
<android.filterpacks.imageproc.DocumentaryFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.camera.VideoCamera\:\ void\ onInfo(android.media.MediaRecorder,int,int)>=android.permission.RECORD_AUDIO
<com.android.camera.ui.InLineSettingKnob$1\:\ void\ run()>=android.permission.RECORD_AUDIO
<com.android.settings.RadioInfo$12\:\ boolean\ onMenuItemClick(android.view.MenuItem)>=android.permission.CHANGE_NETWORK_STATE
<com.android.gallery3d.ui.PhotoView\:\ void\ render(com.android.gallery3d.ui.GLCanvas)>=android.permission.RECORD_AUDIO
<android.nfc.tech.MifareClassic\:\ void\ writeBlock(int,byte[])>=android.permission.NFC
<com.android.email.activity.setup.AccountSetupNames$2\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.settings.Settings$TetherSettingsActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.GET_ACCOUNTS
<com.android.server.am.ActivityManagerService\:\ void\ setHasTopUi(boolean)>=android.permission.INTERNAL_SYSTEM_WINDOW
<com.android.mms.ui.ConversationList\:\ void\ onListItemClick(android.widget.ListView,android.view.View,int,long)>=android.permission.WRITE_SMS
<com.android.quicksearchbox.SingleSourceCorpus\:\ com.android.quicksearchbox.SuggestionCursor\ getSuggestions(java.lang.String,int,boolean)>=android.permission.ACCESS_NETWORK_STATE
<android.media.AudioService\:\ void\ onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>=android.permission.WAKE_LOCK
<android.os.PowerManager$WakeLock\:\ void\ release()>=android.permission.WAKE_LOCK
<com.android.camera.VideoCamera\:\ void\ keepScreenOnAwhile()>=android.permission.RECORD_AUDIO
<com.android.internal.policy.impl.PasswordUnlockScreen\:\ void\ onResume()>=android.permission.WAKE_LOCK
<com.android.phone.InCallScreen\:\ void\ handleOtaCallEnd()>=android.permission.BLUETOOTH
<com.android.browser.BrowserBookmarksPage$LookupBookmarkCount\:\ java.lang.Integer\ doInBackground(java.lang.Long[])>=android.permission.GET_ACCOUNTS
<android.filterpacks.base.CallbackFilter\:\ void\ notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>=android.permission.WAKE_LOCK
<android.server.BluetoothEventLoop\:\ void\ addDevice(java.lang.String,java.lang.String[])>=android.permission.BLUETOOTH
<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder\:\ boolean\ removeBond(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH, android.permission.BLUETOOTH_ADMIN, android.permission.BLUETOOTH_PRIVILEGED
<com.android.email.activity.setup.AccountSettingsEditQuickResponsesFragment$QuickResponseFinder\:\ void\ callOnPostExecuteForTest(java.lang.Object)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.net.NetworkPolicyManagerService\:\ void\ dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>=android.permission.ACCESS_NETWORK_STATE
<com.android.gallery3d.app.PhotoPage$1\:\ void\ renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>=android.permission.RECORD_AUDIO
<android.telephony.TelephonyManager\:\ int\ getPhoneCount()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.IccPhoneBookInterfaceManager\:\ boolean\ onTransact(int,android.os.Parcel,android.os.Parcel,int)>=android.permission.WAKE_LOCK
<android.net.wifi.WifiStateTracker\:\ boolean\ reconnect()>=android.permission.CHANGE_WIFI_STATE
<com.android.deskclock.AlarmInitReceiver\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WAKE_LOCK
<com.android.server.wm.WindowManagerService\:\ void\ registerShortcutKey(long,com.android.internal.policy.IShortcutService)>=android.permission.REGISTER_WINDOW_MANAGER_LISTENERS
<com.android.contacts.list.DefaultContactBrowseListFragment\:\ void\ selectDefaultContact()>=android.permission.READ_SYNC_SETTINGS
<com.android.gallery3d.ui.DownUpDetector\:\ void\ onTouchEvent(android.view.MotionEvent)>=android.permission.VIBRATE
<com.android.mms.ui.ComposeMessageActivity\:\ void\ addVideo(android.net.Uri,boolean)>=android.permission.READ_SYNC_SETTINGS
<com.android.server.ConnectivityService\:\ java.lang.String[]\ getTetheringErroredIfaces()>=android.permission.ACCESS_NETWORK_STATE
<com.android.internal.telephony.gsm.GsmDataConnectionTracker\:\ void\ initApnContextsAndDataConnection()>=android.permission.BROADCAST_STICKY
<com.android.exchange.ExchangeService\:\ void\ stopServiceThreads()>=android.permission.WAKE_LOCK
<com.android.internal.policy.impl.GlobalActions$5\:\ void\ onReceive(android.content.Context,android.content.Intent)>=android.permission.WRITE_SETTINGS
<com.android.internal.view.RotationPolicy\:\ void\ registerRotationPolicyListener(android.content.Context,com.android.internal.view.RotationPolicy$RotationPolicyListener)>=android.permission.WRITE_SETTINGS
<com.android.exchange.ExchangeService$AccountObserver$2\:\ void\ run()>=android.permission.WAKE_LOCK
<android.filterpacks.imageproc.BlendFilter\:\ void\ performProcess(android.filterfw.core.FilterContext)>=android.permission.RECORD_AUDIO
<com.android.settings.Settings$LocationSettingsActivity\:\ int\ insertAccountsHeaders(java.util.List,int)>=android.permission.GET_ACCOUNTS
<android.accounts.AccountManagerService\:\ void\ setPassword(android.accounts.Account,java.lang.String)>=android.permission.AUTHENTICATE_ACCOUNTS
<com.android.mms.data.Conversation\:\ long\ getOrCreateThreadId(android.content.Context,com.android.mms.data.ContactList)>=android.permission.READ_SMS
<com.android.deskclock.AlarmAlertWakeLock\:\ void\ releaseCpuLock()>=android.permission.WAKE_LOCK
<com.android.music.IMediaPlaybackService\:\ void\ next()>=android.permission.WAKE_LOCK
<android.net.sip.ISipService\:\ void\ setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>=android.permission.USE_SIP
<com.android.development.AccountsTester$ButtonClickListener\:\ void\ onClick(android.view.View)>=android.permission.GET_ACCOUNTS
<android.net.wifi.WifiManager\:\ boolean\ isEnhancedPowerReportingSupported()>=android.permission.ACCESS_WIFI_STATE
<com.android.contacts.group.GroupEditorFragment$Member\:\ void\ <init>=android.permission.READ_SYNC_SETTINGS
<android.net.IConnectivityManager\:\ boolean\ isActiveNetworkMetered()>=android.permission.ACCESS_NETWORK_STATE
<com.android.settings.wifi.WifiApEnabler\:\ void\ setSoftapEnabled(boolean)>=android.permission.WRITE_SETTINGS
<com.android.settings.bluetooth.BluetoothDeviceFilter$ClassUuidFilter\:\ boolean\ matches(android.bluetooth.BluetoothDevice)>=android.permission.BLUETOOTH
<com.android.internal.view.RotationPolicy$2\:\ void\ run()>=android.permission.WRITE_SETTINGS
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler\:\ void\ onClick(android.view.View)>=android.permission.READ_SYNC_SETTINGS
<com.android.browser.PhoneUi\:\ void\ showNavScreen()>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.cdma.CdmaServiceStateTracker\:\ void\ disableLocationUpdates()>=android.permission.WAKE_LOCK
<com.android.contacts.model.EntityModifier\:\ void\ migrateStructuredName(android.content.Context,com.android.contacts.model.EntityDelta,com.android.contacts.model.EntityDelta,com.android.contacts.model.DataKind)>=android.permission.WRITE_CONTACTS
<com.android.server.devicepolicy.DevicePolicyManagerService\:\ void\ setOrganizationName(android.content.ComponentName,java.lang.CharSequence)>=android.permission.INTERACT_ACROSS_USERS_FULL
<com.android.internal.policy.impl.GlobalActions$SinglePressAction\:\ void\ onPress()>=android.permission.WAKE_LOCK
<com.android.settings.SettingsSafetyLegalActivity\:\ void\ onCreate(android.os.Bundle)>=android.permission.BLUETOOTH
<android.accounts.AccountManager\:\ android.accounts.AccountManagerFuture\ removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>=android.permission.GET_ACCOUNTS
<com.android.internal.telephony.gsm.GSMPhone\:\ void\ setCdmaSubscription(int,android.os.Message)>=android.permission.WAKE_LOCK
